// Copyright 2025 John L Chmura

var uZ=Object.create;var F4=Object.defineProperty;var fZ=Object.getOwnPropertyDescriptor;var pZ=Object.getOwnPropertyNames;var dZ=Object.getPrototypeOf,_Z=Object.prototype.hasOwnProperty;var mZ=(e,n,r)=>n in e?F4(e,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[n]=r;var $3=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports);var gZ=(e,n,r,s)=>{if(n&&typeof n=="object"||typeof n=="function")for(let a of pZ(n))!_Z.call(e,a)&&a!==r&&F4(e,a,{get:()=>n[a],enumerable:!(s=fZ(n,a))||s.enumerable});return e};var H3=(e,n,r)=>(r=e!=null?uZ(dZ(e)):{},gZ(n||!e||!e.__esModule?F4(r,"default",{value:e,enumerable:!0}):r,e));var r_=(e,n,r)=>mZ(e,typeof n!="symbol"?n+"":n,r);var G3=$3((O1,R4)=>{(function(e,n){if(typeof O1=="object"&&typeof R4=="object")R4.exports=n();else if(typeof define=="function"&&define.amd)define([],n);else{var r=n();for(var s in r)(typeof O1=="object"?O1:e)[s]=r[s]}})(O1,()=>(()=>{"use strict";var e={975:a=>{function l(_){if(typeof _!="string")throw new TypeError("Path must be a string. Received "+JSON.stringify(_))}function u(_,y){for(var h,v="",b=0,T=-1,E=0,g=0;g<=_.length;++g){if(g<_.length)h=_.charCodeAt(g);else{if(h===47)break;h=47}if(h===47){if(!(T===g-1||E===1))if(T!==g-1&&E===2){if(v.length<2||b!==2||v.charCodeAt(v.length-1)!==46||v.charCodeAt(v.length-2)!==46){if(v.length>2){var M=v.lastIndexOf("/");if(M!==v.length-1){M===-1?(v="",b=0):b=(v=v.slice(0,M)).length-1-v.lastIndexOf("/"),T=g,E=0;continue}}else if(v.length===2||v.length===1){v="",b=0,T=g,E=0;continue}}y&&(v.length>0?v+="/..":v="..",b=2)}else v.length>0?v+="/"+_.slice(T+1,g):v=_.slice(T+1,g),b=g-T-1;T=g,E=0}else h===46&&E!==-1?++E:E=-1}return v}var d={resolve:function(){for(var _,y="",h=!1,v=arguments.length-1;v>=-1&&!h;v--){var b;v>=0?b=arguments[v]:(_===void 0&&(_=process.cwd()),b=_),l(b),b.length!==0&&(y=b+"/"+y,h=b.charCodeAt(0)===47)}return y=u(y,!h),h?y.length>0?"/"+y:"/":y.length>0?y:"."},normalize:function(_){if(l(_),_.length===0)return".";var y=_.charCodeAt(0)===47,h=_.charCodeAt(_.length-1)===47;return(_=u(_,!y)).length!==0||y||(_="."),_.length>0&&h&&(_+="/"),y?"/"+_:_},isAbsolute:function(_){return l(_),_.length>0&&_.charCodeAt(0)===47},join:function(){if(arguments.length===0)return".";for(var _,y=0;y<arguments.length;++y){var h=arguments[y];l(h),h.length>0&&(_===void 0?_=h:_+="/"+h)}return _===void 0?".":d.normalize(_)},relative:function(_,y){if(l(_),l(y),_===y||(_=d.resolve(_))===(y=d.resolve(y)))return"";for(var h=1;h<_.length&&_.charCodeAt(h)===47;++h);for(var v=_.length,b=v-h,T=1;T<y.length&&y.charCodeAt(T)===47;++T);for(var E=y.length-T,g=b<E?b:E,M=-1,N=0;N<=g;++N){if(N===g){if(E>g){if(y.charCodeAt(T+N)===47)return y.slice(T+N+1);if(N===0)return y.slice(T+N)}else b>g&&(_.charCodeAt(h+N)===47?M=N:N===0&&(M=0));break}var z=_.charCodeAt(h+N);if(z!==y.charCodeAt(T+N))break;z===47&&(M=N)}var X="";for(N=h+M+1;N<=v;++N)N!==v&&_.charCodeAt(N)!==47||(X.length===0?X+="..":X+="/..");return X.length>0?X+y.slice(T+M):(T+=M,y.charCodeAt(T)===47&&++T,y.slice(T))},_makeLong:function(_){return _},dirname:function(_){if(l(_),_.length===0)return".";for(var y=_.charCodeAt(0),h=y===47,v=-1,b=!0,T=_.length-1;T>=1;--T)if((y=_.charCodeAt(T))===47){if(!b){v=T;break}}else b=!1;return v===-1?h?"/":".":h&&v===1?"//":_.slice(0,v)},basename:function(_,y){if(y!==void 0&&typeof y!="string")throw new TypeError('"ext" argument must be a string');l(_);var h,v=0,b=-1,T=!0;if(y!==void 0&&y.length>0&&y.length<=_.length){if(y.length===_.length&&y===_)return"";var E=y.length-1,g=-1;for(h=_.length-1;h>=0;--h){var M=_.charCodeAt(h);if(M===47){if(!T){v=h+1;break}}else g===-1&&(T=!1,g=h+1),E>=0&&(M===y.charCodeAt(E)?--E==-1&&(b=h):(E=-1,b=g))}return v===b?b=g:b===-1&&(b=_.length),_.slice(v,b)}for(h=_.length-1;h>=0;--h)if(_.charCodeAt(h)===47){if(!T){v=h+1;break}}else b===-1&&(T=!1,b=h+1);return b===-1?"":_.slice(v,b)},extname:function(_){l(_);for(var y=-1,h=0,v=-1,b=!0,T=0,E=_.length-1;E>=0;--E){var g=_.charCodeAt(E);if(g!==47)v===-1&&(b=!1,v=E+1),g===46?y===-1?y=E:T!==1&&(T=1):y!==-1&&(T=-1);else if(!b){h=E+1;break}}return y===-1||v===-1||T===0||T===1&&y===v-1&&y===h+1?"":_.slice(y,v)},format:function(_){if(_===null||typeof _!="object")throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof _);return function(y,h){var v=h.dir||h.root,b=h.base||(h.name||"")+(h.ext||"");return v?v===h.root?v+b:v+"/"+b:b}(0,_)},parse:function(_){l(_);var y={root:"",dir:"",base:"",ext:"",name:""};if(_.length===0)return y;var h,v=_.charCodeAt(0),b=v===47;b?(y.root="/",h=1):h=0;for(var T=-1,E=0,g=-1,M=!0,N=_.length-1,z=0;N>=h;--N)if((v=_.charCodeAt(N))!==47)g===-1&&(M=!1,g=N+1),v===46?T===-1?T=N:z!==1&&(z=1):T!==-1&&(z=-1);else if(!M){E=N+1;break}return T===-1||g===-1||z===0||z===1&&T===g-1&&T===E+1?g!==-1&&(y.base=y.name=E===0&&b?_.slice(1,g):_.slice(E,g)):(E===0&&b?(y.name=_.slice(1,T),y.base=_.slice(1,g)):(y.name=_.slice(E,T),y.base=_.slice(E,g)),y.ext=_.slice(T,g)),E>0?y.dir=_.slice(0,E-1):b&&(y.dir="/"),y},sep:"/",delimiter:":",win32:null,posix:null};d.posix=d,a.exports=d},70:(a,l)=>{if(Object.defineProperty(l,"__esModule",{value:!0}),l.isWindows=void 0,typeof process=="object")l.isWindows=process.platform==="win32";else if(typeof navigator=="object"){let u=navigator.userAgent;l.isWindows=u.indexOf("Windows")>=0}},231:(a,l,u)=>{Object.defineProperty(l,"__esModule",{value:!0}),l.uriToFsPath=l.URI=void 0;let d=u(70),_=/^\w[\w\d+.-]*$/,y=/^\//,h=/^\/\//;function v(he,oe){if(!he.scheme&&oe)throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${he.authority}", path: "${he.path}", query: "${he.query}", fragment: "${he.fragment}"}`);if(he.scheme&&!_.test(he.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(he.path){if(he.authority){if(!y.test(he.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(h.test(he.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}}let b="",T="/",E=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class g{constructor(oe,ie,Y,_e,G,ke=!1){r_(this,"scheme");r_(this,"authority");r_(this,"path");r_(this,"query");r_(this,"fragment");typeof oe=="object"?(this.scheme=oe.scheme||b,this.authority=oe.authority||b,this.path=oe.path||b,this.query=oe.query||b,this.fragment=oe.fragment||b):(this.scheme=function(re,be){return re||be?re:"file"}(oe,ke),this.authority=ie||b,this.path=function(re,be){switch(re){case"https":case"http":case"file":be?be[0]!==T&&(be=T+be):be=T}return be}(this.scheme,Y||b),this.query=_e||b,this.fragment=G||b,v(this,ke))}static isUri(oe){return oe instanceof g||!!oe&&typeof oe.authority=="string"&&typeof oe.fragment=="string"&&typeof oe.path=="string"&&typeof oe.query=="string"&&typeof oe.scheme=="string"&&typeof oe.fsPath=="string"&&typeof oe.with=="function"&&typeof oe.toString=="function"}get fsPath(){return Z(this,!1)}with(oe){if(!oe)return this;let{scheme:ie,authority:Y,path:_e,query:G,fragment:ke}=oe;return ie===void 0?ie=this.scheme:ie===null&&(ie=b),Y===void 0?Y=this.authority:Y===null&&(Y=b),_e===void 0?_e=this.path:_e===null&&(_e=b),G===void 0?G=this.query:G===null&&(G=b),ke===void 0?ke=this.fragment:ke===null&&(ke=b),ie===this.scheme&&Y===this.authority&&_e===this.path&&G===this.query&&ke===this.fragment?this:new N(ie,Y,_e,G,ke)}static parse(oe,ie=!1){let Y=E.exec(oe);return Y?new N(Y[2]||b,ye(Y[4]||b),ye(Y[5]||b),ye(Y[7]||b),ye(Y[9]||b),ie):new N(b,b,b,b,b)}static file(oe){let ie=b;if(d.isWindows&&(oe=oe.replace(/\\/g,T)),oe[0]===T&&oe[1]===T){let Y=oe.indexOf(T,2);Y===-1?(ie=oe.substring(2),oe=T):(ie=oe.substring(2,Y),oe=oe.substring(Y)||T)}return new N("file",ie,oe,b,b)}static from(oe){let ie=new N(oe.scheme,oe.authority,oe.path,oe.query,oe.fragment);return v(ie,!0),ie}toString(oe=!1){return le(this,oe)}toJSON(){return this}static revive(oe){if(oe){if(oe instanceof g)return oe;{let ie=new N(oe);return ie._formatted=oe.external,ie._fsPath=oe._sep===M?oe.fsPath:null,ie}}return oe}}l.URI=g;let M=d.isWindows?1:void 0;class N extends g{constructor(){super(...arguments);r_(this,"_formatted",null);r_(this,"_fsPath",null)}get fsPath(){return this._fsPath||(this._fsPath=Z(this,!1)),this._fsPath}toString(ie=!1){return ie?le(this,!0):(this._formatted||(this._formatted=le(this,!1)),this._formatted)}toJSON(){let ie={$mid:1};return this._fsPath&&(ie.fsPath=this._fsPath,ie._sep=M),this._formatted&&(ie.external=this._formatted),this.path&&(ie.path=this.path),this.scheme&&(ie.scheme=this.scheme),this.authority&&(ie.authority=this.authority),this.query&&(ie.query=this.query),this.fragment&&(ie.fragment=this.fragment),ie}}let z={58:"%3A",47:"%2F",63:"%3F",35:"%23",91:"%5B",93:"%5D",64:"%40",33:"%21",36:"%24",38:"%26",39:"%27",40:"%28",41:"%29",42:"%2A",43:"%2B",44:"%2C",59:"%3B",61:"%3D",32:"%20"};function X(he,oe,ie){let Y,_e=-1;for(let G=0;G<he.length;G++){let ke=he.charCodeAt(G);if(ke>=97&&ke<=122||ke>=65&&ke<=90||ke>=48&&ke<=57||ke===45||ke===46||ke===95||ke===126||oe&&ke===47||ie&&ke===91||ie&&ke===93||ie&&ke===58)_e!==-1&&(Y+=encodeURIComponent(he.substring(_e,G)),_e=-1),Y!==void 0&&(Y+=he.charAt(G));else{Y===void 0&&(Y=he.substr(0,G));let re=z[ke];re!==void 0?(_e!==-1&&(Y+=encodeURIComponent(he.substring(_e,G)),_e=-1),Y+=re):_e===-1&&(_e=G)}}return _e!==-1&&(Y+=encodeURIComponent(he.substring(_e))),Y!==void 0?Y:he}function j(he){let oe;for(let ie=0;ie<he.length;ie++){let Y=he.charCodeAt(ie);Y===35||Y===63?(oe===void 0&&(oe=he.substr(0,ie)),oe+=z[Y]):oe!==void 0&&(oe+=he[ie])}return oe!==void 0?oe:he}function Z(he,oe){let ie;return ie=he.authority&&he.path.length>1&&he.scheme==="file"?`//${he.authority}${he.path}`:he.path.charCodeAt(0)===47&&(he.path.charCodeAt(1)>=65&&he.path.charCodeAt(1)<=90||he.path.charCodeAt(1)>=97&&he.path.charCodeAt(1)<=122)&&he.path.charCodeAt(2)===58?oe?he.path.substr(1):he.path[1].toLowerCase()+he.path.substr(2):he.path,d.isWindows&&(ie=ie.replace(/\//g,"\\")),ie}function le(he,oe){let ie=oe?j:X,Y="",{scheme:_e,authority:G,path:ke,query:re,fragment:be}=he;if(_e&&(Y+=_e,Y+=":"),(G||_e==="file")&&(Y+=T,Y+=T),G){let rt=G.indexOf("@");if(rt!==-1){let qt=G.substr(0,rt);G=G.substr(rt+1),rt=qt.lastIndexOf(":"),rt===-1?Y+=ie(qt,!1,!1):(Y+=ie(qt.substr(0,rt),!1,!1),Y+=":",Y+=ie(qt.substr(rt+1),!1,!0)),Y+="@"}G=G.toLowerCase(),rt=G.lastIndexOf(":"),rt===-1?Y+=ie(G,!1,!0):(Y+=ie(G.substr(0,rt),!1,!0),Y+=G.substr(rt))}if(ke){if(ke.length>=3&&ke.charCodeAt(0)===47&&ke.charCodeAt(2)===58){let rt=ke.charCodeAt(1);rt>=65&&rt<=90&&(ke=`/${String.fromCharCode(rt+32)}:${ke.substr(3)}`)}else if(ke.length>=2&&ke.charCodeAt(1)===58){let rt=ke.charCodeAt(0);rt>=65&&rt<=90&&(ke=`${String.fromCharCode(rt+32)}:${ke.substr(2)}`)}Y+=ie(ke,!0,!1)}return re&&(Y+="?",Y+=ie(re,!1,!1)),be&&(Y+="#",Y+=oe?be:X(be,!1,!1)),Y}function de(he){try{return decodeURIComponent(he)}catch{return he.length>3?he.substr(0,3)+de(he.substr(3)):he}}l.uriToFsPath=Z;let se=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function ye(he){return he.match(se)?he.replace(se,oe=>de(oe)):he}},552:function(a,l,u){var d=this&&this.__createBinding||(Object.create?function(E,g,M,N){N===void 0&&(N=M);var z=Object.getOwnPropertyDescriptor(g,M);z&&!("get"in z?!g.__esModule:z.writable||z.configurable)||(z={enumerable:!0,get:function(){return g[M]}}),Object.defineProperty(E,N,z)}:function(E,g,M,N){N===void 0&&(N=M),E[N]=g[M]}),_=this&&this.__setModuleDefault||(Object.create?function(E,g){Object.defineProperty(E,"default",{enumerable:!0,value:g})}:function(E,g){E.default=g}),y=this&&this.__importStar||function(E){if(E&&E.__esModule)return E;var g={};if(E!=null)for(var M in E)M!=="default"&&Object.prototype.hasOwnProperty.call(E,M)&&d(g,E,M);return _(g,E),g};Object.defineProperty(l,"__esModule",{value:!0}),l.Utils=void 0;let h=y(u(975)),v=h.posix||h,b="/";var T;(function(E){E.joinPath=function(g,...M){return g.with({path:v.join(g.path,...M)})},E.resolvePath=function(g,...M){let N=g.path,z=!1;N[0]!==b&&(N=b+N,z=!0);let X=v.resolve(N,...M);return z&&X[0]===b&&!g.authority&&(X=X.substring(1)),g.with({path:X})},E.dirname=function(g){if(g.path.length===0||g.path===b)return g;let M=v.dirname(g.path);return M.length===1&&M.charCodeAt(0)===46&&(M=""),g.with({path:M})},E.basename=function(g){return v.basename(g.path)},E.extname=function(g){return v.extname(g.path)}})(T||(l.Utils=T={}))}},n={};function r(a){var l=n[a];if(l!==void 0)return l.exports;var u=n[a]={exports:{}};return e[a].call(u.exports,u,u.exports,r),u.exports}var s={};return(()=>{var a=s;Object.defineProperty(a,"__esModule",{value:!0}),a.Utils=a.URI=void 0;let l=r(231);Object.defineProperty(a,"URI",{enumerable:!0,get:function(){return l.URI}});let u=r(552);Object.defineProperty(a,"Utils",{enumerable:!0,get:function(){return u.Utils}})})(),s})())});var fz=$3((qae,uz)=>{var hZ=Object.create,N2=Object.defineProperty,yZ=Object.getOwnPropertyDescriptor,vZ=Object.getOwnPropertyNames,TZ=Object.getPrototypeOf,SZ=Object.prototype.hasOwnProperty,lc=(e,n)=>{for(var r in n)N2(e,r,{get:n[r],enumerable:!0})},OO=(e,n,r,s)=>{if(n&&typeof n=="object"||typeof n=="function")for(let a of vZ(n))!SZ.call(e,a)&&a!==r&&N2(e,a,{get:()=>n[a],enumerable:!(s=yZ(n,a))||s.enumerable});return e},bZ=(e,n,r)=>(r=e!=null?hZ(TZ(e)):{},OO(n||!e||!e.__esModule?N2(r,"default",{value:e,enumerable:!0}):r,e)),kZ=e=>OO(N2({},"__esModule",{value:!0}),e),LO={};lc(LO,{AccessFlags:()=>a7,AssertionLevel:()=>jO,AssignmentDeclarationKind:()=>SL,AssignmentKind:()=>fF,Associativity:()=>NF,CharacterCodes:()=>CL,CheckFlags:()=>NL,CheckMode:()=>HM,CommentDirectiveType:()=>s7,Comparison:()=>MO,CompletionInfoFlags:()=>hB,CompletionTriggerCharacterArray:()=>yne,CompletionTriggerKind:()=>yB,Completions:()=>dg,ContainerFlags:()=>VM,ContextFlags:()=>KL,Debug:()=>w,DiagnosticCategory:()=>iD,Diagnostics:()=>P,DriverTypeMap:()=>RL,ElementFlags:()=>TL,EmitFlags:()=>vL,EmitHint:()=>ZL,EndOfLineState:()=>vB,ExecuteCommandMsgType:()=>uB,ExitStatus:()=>u7,ExportKind:()=>lw,Extension:()=>LL,FileIncludeKind:()=>Kx,FilePreprocessingDiagnosticsKind:()=>VL,FileSystemEntryKind:()=>Pj,FileWatcherEventKind:()=>Tj,FindAllReferences:()=>Dl,FlowFlags:()=>sD,ForegroundColorEscapeSequences:()=>Uj,FunctionFlags:()=>_F,GeneratedIdentifierFlags:()=>F2,GetLiteralTextFlags:()=>U9,GoToDefinition:()=>Vk,ImportKind:()=>wW,IndentStyle:()=>ZW,IndexFlags:()=>xL,IndexKind:()=>jL,InferenceFlags:()=>t7,InferencePriority:()=>e7,InternalEmitFlags:()=>YL,InternalSymbolName:()=>EL,IntersectionFlags:()=>i7,JSDocParsingMode:()=>ML,JsDoc:()=>pf,LanguageServiceMode:()=>gB,LanguageVariant:()=>FL,LexicalEnvironmentFlags:()=>r7,ListFormat:()=>XL,LogLevel:()=>mL,LpcParser:()=>r0,ModifierFlags:()=>rD,ModuleKind:()=>HL,ModuleResolutionKind:()=>fD,NavigationBar:()=>xw,NewLineKind:()=>BL,NodeBuilderFlags:()=>GL,NodeCheckFlags:()=>lD,NodeFactoryFlags:()=>gR,NodeFlags:()=>nD,NodeResolutionFeatures:()=>iM,ObjectFlags:()=>aD,OperationCanceledException:()=>Sv,OperatorPrecedence:()=>EF,OuterExpressionKinds:()=>kL,PollingInterval:()=>AE,PollingWatchKind:()=>JL,PragmaKindFlags:()=>l7,ProgramUpdateLevel:()=>pj,QuotePreference:()=>UB,RelationComparisonResult:()=>OL,Rename:()=>y2,ScriptElementKind:()=>_B,ScriptElementKindModifier:()=>mB,ScriptKind:()=>qL,ScriptSnapshot:()=>s2,ScriptTarget:()=>$L,SemanticMeaning:()=>CB,SemicolonPreference:()=>YW,SignatureCheckMode:()=>qM,SignatureFlags:()=>cD,SignatureHelp:()=>Kv,SignatureKind:()=>hL,SnippetKind:()=>o7,StatisticType:()=>fB,StructureIsReused:()=>uD,SymbolAccessibility:()=>n7,SymbolDisplay:()=>du,SymbolDisplayPartKind:()=>Nk,SymbolFlags:()=>oD,SymbolFormatFlags:()=>IL,SyntaxKind:()=>eD,Ternary:()=>QL,ThrottledCancellationToken:()=>QW,TokenClass:()=>TB,TokenFlags:()=>PL,TransformFlags:()=>bL,TypeFacts:()=>GM,TypeFlags:()=>tD,TypeFormatFlags:()=>yL,TypeMapKind:()=>DL,TypePredicateKind:()=>c7,UnionReduction:()=>AL,VarianceFlags:()=>wL,WatchDirectoryFlags:()=>zL,WatchDirectoryKind:()=>UL,WatchFileKind:()=>WL,WatchLogLevel:()=>gj,WatchType:()=>nd,addEmitFlags:()=>vR,addNodeFactoryPatcher:()=>MK,addObjectAllocatorPatcher:()=>sK,addRange:()=>Is,addRelatedInfo:()=>Rs,addSyntheticLeadingComment:()=>ib,addToSeen:()=>lg,altDirectorySeparator:()=>YM,and:()=>LZ,append:()=>ei,appendIfUnique:()=>o_,arrayFrom:()=>as,arrayIsEqualTo:()=>eu,arrayIsHomogeneous:()=>jF,arrayOf:()=>aL,arrayReverseIterator:()=>$O,arrayToMap:()=>rL,arrayToMultiMap:()=>tL,arraysEqual:()=>Gx,assertType:()=>jZ,assign:()=>yy,attachFileToDiagnostics:()=>dh,base64decode:()=>s9,binarySearch:()=>up,binarySearchKey:()=>Wh,bindSourceFile:()=>zM,buildLinkParts:()=>HB,buildOpts:()=>zR,canHaveFlowNode:()=>ZS,canHaveIllegalModifiers:()=>$K,canHaveIllegalTypeParameters:()=>eR,canHaveJSDoc:()=>Ov,canHaveLocals:()=>xl,canHaveModifiers:()=>uk,canHaveSymbol:()=>T_,canIncludeBindAndCheckDiagnostics:()=>pF,canIncludeBindAndCheckDiagnsotics:()=>$9,canJsonReportNoInputFiles:()=>cE,canUsePropertyAccess:()=>PF,canWatchDirectoryOrFile:()=>ux,cartesianProduct:()=>cL,cast:()=>aa,chainDiagnosticMessages:()=>pi,changeAnyExtension:()=>yte,changesAffectLibCompilation:()=>ck,changesAffectModuleResolution:()=>G9,changesAffectingProgramStructure:()=>X9,classicNameResolver:()=>aM,clear:()=>Sh,clearMap:()=>n0,clearSharedExtendedConfigFileWatcher:()=>yj,climbPastPropertyAccess:()=>VE,closeFileWatcher:()=>$m,closeFileWatcherOf:()=>M_,codefix:()=>Xv,collapseTextChangeRangesAcrossMultipleVersions:()=>E7,combinePaths:()=>ii,commentPragmas:()=>pD,commonOptionsWithBuild:()=>nE,compareDataObjects:()=>R8,compareDiagnostics:()=>Oy,compareEmitHelpers:()=>J8,compareNumberOfDirectorySeparators:()=>P9,comparePaths:()=>Pk,comparePathsCaseInsensitive:()=>Tte,comparePathsCaseSensitive:()=>vte,compareStringsCaseInsensitive:()=>A2,compareStringsCaseInsensitiveEslintCompatible:()=>DZ,compareStringsCaseSensitive:()=>Dc,compareStringsCaseSensitiveUI:()=>Tb,compareTextSpans:()=>dP,compareValues:()=>vs,compileOnSaveCommandLineOption:()=>Gb,compilerOptionsDidYouMeanDiagnostics:()=>sE,computeCommonSourceDirectoryOfFilenames:()=>Lj,computeLineAndCharacterOfPosition:()=>m0,computeLineOfPosition:()=>qh,computeLineStarts:()=>_0,computePositionOfLineAndCharacter:()=>M2,computedOptions:()=>GF,concatenate:()=>ri,concatenateDiagnosticMessageChains:()=>VF,configDirTemplateSubstitutionOptions:()=>KR,contains:()=>ki,containsParseError:()=>Iy,containsPath:()=>ug,convertJsonOption:()=>fd,convertToJson:()=>Yb,convertToObject:()=>MR,convertToRelativePath:()=>xk,copyEntries:()=>MF,couldStartTrivia:()=>cX,countWhere:()=>Kf,createBaseNodeFactory:()=>dR,createBinaryExpressionTrampoline:()=>Uv,createCacheWithRedirects:()=>pE,createCacheableExportInfoMap:()=>uw,createCachedDirectoryStructureHost:()=>sx,createCommentDirectivesMap:()=>fR,createCompilerDiagnostic:()=>ac,createCompilerDiagnosticFromMessageChain:()=>z9,createCompilerHost:()=>RE,createCompilerHostWorker:()=>wj,createDetachedDiagnostic:()=>ph,createDiagnosticCollection:()=>Nb,createDiagnosticForFileFromMessageChain:()=>NP,createDiagnosticForNode:()=>fi,createDiagnosticForNodeArray:()=>V1,createDiagnosticForNodeArrayFromMessageChain:()=>z1,createDiagnosticForNodeFromMessageChain:()=>s_,createDiagnosticForNodeInSourceFile:()=>Gc,createDiagnosticForRange:()=>uR,createDiagnosticMessageChainFromDiagnostic:()=>HF,createDiagnosticReporter:()=>ix,createDocumentPositionMapper:()=>aj,createDocumentRegistry:()=>OW,createDocumentRegistryInternal:()=>fw,createEvaluator:()=>E9,createFileDiagnostic:()=>Iu,createFileDiagnosticFromMessageChain:()=>Z2,createFlowNode:()=>Hc,createGetCanonicalFileName:()=>ca,createGetSourceFile:()=>Nj,createJsPrinter:()=>iB,createLanguageService:()=>HW,createLanguageServiceSourceFile:()=>Wk,createLpcFileHandler:()=>Jv,createMasterApplyGetIncludePathVm:()=>J9,createModeAwareCache:()=>Yy,createModeAwareCacheKey:()=>Qy,createModuleResolutionCache:()=>fE,createModuleResolutionLoader:()=>Mj,createModuleResolutionLoaderUsingGlobalCache:()=>cB,createModuleSpecifierResolutionHost:()=>rw,createMultiMap:()=>Rl,createNameResolver:()=>DP,createNodeFactory:()=>Wv,createOptionNameMap:()=>tE,createParenthesizerRules:()=>_R,createPrinter:()=>yd,createPrinterWithDefaults:()=>Yj,createPrinterWithRemoveComments:()=>pg,createPrinterWithRemoveCommentsNeverAsciiEscape:()=>Zj,createPrinterWithRemoveCommentsOmitTrailingSemicolon:()=>Xj,createProgram:()=>FE,createQueue:()=>YO,createRange:()=>Zf,createResolutionCache:()=>sB,createScanner:()=>Cv,createSet:()=>KO,createSolutionBuilderHost:()=>ane,createSortedArray:()=>L2,createSourceFile:()=>fk,createSourceMapGenerator:()=>Pte,createSymbolTable:()=>bi,createSyntacticTypeNodeBuilder:()=>dB,createSystemWatchFunctions:()=>Dj,createTextChange:()=>hx,createTextChangeRange:()=>V2,createTextRangeFromSpan:()=>YB,createTextSpan:()=>Ju,createTextSpanFromBounds:()=>Ml,createTextSpanFromNode:()=>Sp,createTextSpanFromRange:()=>cv,createTextSpanFromStringLiteralLikeContent:()=>cw,createTextWriter:()=>S0,createTypeChecker:()=>$M,createVmHelperContext:()=>T7,createWriteFileMeasuringIO:()=>Ij,declarationNameToString:()=>sa,decodeMappings:()=>DE,decodedTextSpanIntersectsWith:()=>M7,defaultIncludeSpec:()=>X8,defaultMaximumTruncationLength:()=>Eb,diagnosticCategoryName:()=>od,diagnosticPrefix:()=>RO,diagnosticToString:()=>VB,diagnosticsEqualityComparer:()=>Lb,directoryProbablyExists:()=>Ay,directorySeparator:()=>As,displayPart:()=>Qo,displayPartsToString:()=>pb,disposeEmitNodes:()=>HP,documentSpansEqual:()=>XE,driverTypeToLanguageVariant:()=>q9,dumpTracingLegend:()=>XZ,emitComments:()=>W9,emitDetachedComments:()=>I8,emitNewLineBeforeLeadingCommentOfPosition:()=>A8,emitNewLineBeforeLeadingComments:()=>j9,emitNewLineBeforeLeadingCommentsOfPosition:()=>B9,emitNodeAsJsText:()=>rB,emptyArray:()=>Oe,emptyFileSystemEntries:()=>zD,emptyMap:()=>Z1,emptyOptions:()=>Um,endsWith:()=>Ec,ensurePathIsNonModuleName:()=>XM,ensureScriptKind:()=>VD,ensureTrailingDirectorySeparator:()=>of,entityNameToString:()=>nu,enumerateInsertsAndDeletes:()=>VO,equalOwnProperties:()=>HO,equateStringsCaseInsensitive:()=>gp,equateStringsCaseSensitive:()=>gg,equateValues:()=>j_,escapeNonAsciiString:()=>ak,escapeSnippetText:()=>p8,escapeString:()=>W_,evaluatorResult:()=>Xs,every:()=>Ti,executeCommandLine:()=>cne,explainFiles:()=>cj,explainIfFileIsRedirectAndImpliedFormat:()=>EE,extend:()=>iL,extensionIsLPC:()=>w8,factory:()=>Ve,fileExtensionIs:()=>el,fileExtensionIsOneOf:()=>kk,fileIncludeReasonToDiagnostics:()=>IE,filter:()=>Yr,filterMutate:()=>Hx,filterSemanticDiagnostics:()=>Oj,find:()=>Zr,findAncestor:()=>Xn,findArgument:()=>VP,findChildOfKind:()=>cu,findConfigFile:()=>qj,findIndex:()=>Pl,findLast:()=>JO,findLastIndex:()=>Sb,findNextToken:()=>mw,findPrecedingMatchingToken:()=>fb,findPrecedingToken:()=>Ma,findTokenOnLeftOfPosition:()=>CW,first:()=>qs,firstDefined:()=>Ya,firstDefinedIterator:()=>hb,firstIterator:()=>XO,firstOrUndefined:()=>Fa,firstOrUndefinedIterator:()=>oL,flatMap:()=>ao,flatMapToMutable:()=>_y,flatten:()=>kp,flattenDiagnosticMessageText:()=>Uu,forEach:()=>Jt,forEachAncestor:()=>v9,forEachAncestorDirectory:()=>Ek,forEachChild:()=>Ns,forEachChildRecursively:()=>Hy,forEachEntry:()=>Qc,forEachExternalModuleToImportFrom:()=>IW,forEachKey:()=>o8,forEachLeadingCommentRange:()=>by,forEachLpcConfigPropArray:()=>Bv,forEachPropertyAssignment:()=>Vy,forEachResolvedProjectReference:()=>jE,forEachReturnStatement:()=>k_,forEachTrailingCommentRange:()=>lX,forEachUnique:()=>ew,formatColorAndReset:()=>_p,formatDiagnostic:()=>Wj,formatDiagnosticsWithColorAndContext:()=>$j,formatGeneratedName:()=>su,formatGeneratedNamePart:()=>cf,formatLocation:()=>lx,formatMessage:()=>jD,formatStringFromArgs:()=>vg,formatting:()=>Za,generateDjb2Hash:()=>vj,getAdjustedReferenceLocation:()=>GE,getAdjustedRenameLocation:()=>Lk,getAllJSDocTags:()=>CD,getAllSuperTypeNodes:()=>Jb,getAncestor:()=>p_,getAnyExtensionFromPath:()=>c0,getAssignedName:()=>b7,getAssignmentDeclarationKind:()=>Oa,getAssignmentDeclarationPropertyAccessKind:()=>LP,getAssignmentTargetKind:()=>Hf,getBaseFileName:()=>wc,getBinaryOperatorPrecedence:()=>ny,getCanonicalDiagnostic:()=>aF,getCheckFlags:()=>Es,getClassExtendsHeritageElement:()=>wK,getClassLikeDeclarationOfSymbol:()=>$1,getCombinedLocalAndExportSymbolFlags:()=>ag,getCombinedModifierFlags:()=>Pv,getCombinedNodeFlags:()=>ig,getCombinedNodeFlagsAlwaysIncludeJSDoc:()=>vD,getCommentRange:()=>$y,getCommonSourceDirectory:()=>tB,getCompilerOptionValue:()=>Wb,getContainerFlags:()=>CE,getContainerNode:()=>u0,getContainingFunction:()=>_h,getContainingFunctionOrClassStaticBlock:()=>RF,getContainingNodeArray:()=>P8,getContainingObjectLiteralElement:()=>hre,getContextualTypeFromParent:()=>Ok,getContextualTypeFromParentOrAncestorTypeNode:()=>f2,getDeclarationDiagnostics:()=>Gj,getDeclarationEmitExtensionForPath:()=>a9,getDeclarationEmitOutputFilePathWorker:()=>o9,getDeclarationFileExtension:()=>CR,getDeclarationFromName:()=>Rv,getDeclarationModifierFlagsFromSymbol:()=>Sl,getDeclarationOfKind:()=>sf,getDefaultCompilerOptions:()=>$W,getDefaultFormatCodeSettings:()=>XW,getDefaultLibFileName:()=>SD,getDefaultLibFolder:()=>TD,getDefaultLikeExportInfo:()=>AW,getDefaultLikeExportNameFromDeclaration:()=>yW,getDiagnosticText:()=>wee,getDirectoryPath:()=>li,getDocumentPositionMapper:()=>FW,getDocumentSpansEqualityComparer:()=>LB,getDriverType:()=>yK,getEffectiveBaseTypeNode:()=>sy,getEffectiveConstraintOfTypeParameter:()=>B1,getEffectiveContainerForJSDocTemplateTag:()=>Q2,getEffectiveImplementsTypeNodes:()=>L9,getEffectiveInitializer:()=>eb,getEffectiveJSDocHost:()=>Bb,getEffectiveModifierFlags:()=>ld,getEffectiveModifierFlagsAlwaysIncludeJSDoc:()=>qF,getEffectiveModifierFlagsNoCache:()=>H7,getEffectiveReturnTypeNode:()=>$c,getEffectiveTypeAnnotationNode:()=>Ta,getEffectiveTypeParameterDeclarations:()=>fh,getElementOrPropertyAccessArgumentExpressionOrName:()=>LF,getElementOrPropertyAccessName:()=>t0,getEmitFlags:()=>is,getEmitHelpers:()=>V8,getEmitScriptTarget:()=>au,getEnclosingBlockScopeContainer:()=>Rm,getEnclosingContainer:()=>Vb,getEnclosingLocalsContainer:()=>lF,getErrorSpanForNode:()=>H2,getErrorSummaryText:()=>fj,getEscapedTextOfIdentifierOrLiteral:()=>u8,getExportInfoMap:()=>NW,getExpressionAssociativity:()=>IF,getExpressionPrecedence:()=>KS,getFallbackOptions:()=>G1,getFileMatcherPatterns:()=>XF,getFileNamesFromConfigSpecs:()=>_k,getFileWatcherEventKind:()=>bj,getFilesInErrorForSummary:()=>uj,getFirstIdentifier:()=>Gp,getFirstNonSpaceCharacterPosition:()=>ZB,getFormatCodeSettingsForWriting:()=>d2,getFullWidth:()=>Iv,getFunctionFlags:()=>Sc,getHostSignatureFromJSDoc:()=>T0,getIdentifierTypeArguments:()=>Ym,getImmediatelyInvokedFunctionExpression:()=>Yp,getImpliedNodeFormatForFile:()=>jj,getIncludeDirectiveFilename:()=>BP,getIndentString:()=>ek,getInferredLibraryNameResolveFrom:()=>cx,getInternalEmitFlags:()=>Ly,getInvokedExpression:()=>K2,getJSDocClassTag:()=>SP,getJSDocCommentRanges:()=>d8,getJSDocCommentsAndTags:()=>WD,getJSDocDeprecatedTag:()=>hP,getJSDocHost:()=>wy,getJSDocImplementsTags:()=>R7,getJSDocOverloadTags:()=>rR,getJSDocParameterTags:()=>wv,getJSDocParameterTagsNoCache:()=>I7,getJSDocReturnTag:()=>j7,getJSDocReturnType:()=>B7,getJSDocRoot:()=>Av,getJSDocSatisfiesExpressionType:()=>sR,getJSDocSatisfiesTag:()=>xD,getJSDocTags:()=>yg,getJSDocThisTag:()=>QS,getJSDocThrowsTag:()=>vX,getJSDocType:()=>Nv,getJSDocTypeAliasName:()=>qK,getJSDocTypeAssertionType:()=>xh,getJSDocTypeParameterDeclarations:()=>tR,getJSDocTypeParameterTags:()=>L7,getJSDocTypeParameterTagsNoCache:()=>O7,getJSDocTypeTag:()=>Fm,getKeyForCompilerOptions:()=>rM,getLastChild:()=>k9,getLeadingCommentRanges:()=>Wu,getLeadingCommentRangesOfNode:()=>d9,getLeftmostAccessExpression:()=>S9,getLeftmostExpression:()=>U1,getLibRootedFileName:()=>Mm,getLibraryNameFromLibFileName:()=>ax,getLineAndCharacterOfPosition:()=>$s,getLineInfo:()=>xE,getLineOfLocalPosition:()=>Lh,getLineOfLocalPositionFromLineMap:()=>ed,getLineStartPositionForPosition:()=>Il,getLineStarts:()=>Xc,getLinesBetweenPositionAndNextNonWhitespaceCharacter:()=>D8,getLinesBetweenPositionAndPrecedingNonWhitespaceCharacter:()=>C8,getLinesBetweenPositions:()=>bv,getLinesBetweenRangeEndAndRangeStart:()=>Fy,getLiteralText:()=>O8,getLocalSymbolForExportDefault:()=>G2,getLocaleSpecificMessage:()=>ad,getLpcConfigObjectLiteralExpression:()=>M8,getLpcConfigPropArrayElementValue:()=>zP,getMappedContextSpan:()=>YE,getMappedDocumentSpan:()=>l2,getMappedLocation:()=>f0,getMatchedFileSpec:()=>wE,getMatchedIncludeSpec:()=>NE,getMeaningFromDeclaration:()=>c2,getMeaningFromLocation:()=>ov,getMembersOfDeclaration:()=>xF,getModeForUsageLocation:()=>Rj,getModifiedTime:()=>wk,getModifiers:()=>F7,getModuleNameStringLiteralAt:()=>Bj,getModuleSpecifierResolverHost:()=>_W,getNameFromIndexInfo:()=>JF,getNameFromPropertyName:()=>SB,getNameOfDeclaration:()=>hi,getNameOfScriptTarget:()=>L8,getNameOrArgument:()=>PK,getNameTable:()=>_w,getNamesForExportedSymbol:()=>hW,getNewLineCharacter:()=>ud,getNewLineKind:()=>Yv,getNewLineOrDefaultFromHost:()=>w0,getNextJSDocCommentLocation:()=>l8,getNodeChildren:()=>U8,getNodeForGeneratedName:()=>q8,getNodeId:()=>Sa,getNodeKind:()=>av,getNodeModifiers:()=>Ak,getNonAssignedNameOfDeclaration:()=>B2,getNormalizedAbsolutePath:()=>Wi,getNormalizedAbsolutePathWithoutRoot:()=>nx,getNormalizedModuleName:()=>jP,getNormalizedPathComponents:()=>Hv,getObjectFlags:()=>$t,getOperatorAssociativity:()=>$D,getOperatorPrecedence:()=>ty,getOptionsNameMap:()=>GR,getOrCreateEmitNode:()=>U_,getOrUpdate:()=>gy,getOriginalNode:()=>ka,getOwnKeys:()=>qx,getParameterSymbolFromJSDoc:()=>JP,getParseTreeNode:()=>_s,getParsedCommandLineOfConfigFile:()=>Nee,getPathComponents:()=>pu,getPathFromPathComponents:()=>x0,getPatternFromSpec:()=>V9,getPositionOfLineAndCharacter:()=>Sy,getPossibleGenericSignatures:()=>PW,getPossibleTypeArgumentsInfo:()=>TW,getPreEmitDiagnostics:()=>zj,getPrecedingNonSpaceCharacterPosition:()=>rW,getPropertyArrayElementValue:()=>H9,getPropertyNameForPropertyNameNode:()=>Hm,getPropertyNameFromType:()=>Gf,getQuoteFromPreference:()=>JB,getQuotePreference:()=>E0,getRangesWhere:()=>fL,getReferencedFileLocation:()=>Rh,getRegexFromPattern:()=>Gm,getRegularExpressionForWildcard:()=>Oh,getRegularExpressionsForWildcards:()=>r8,getRelativePathFromDirectory:()=>Gv,getRelativePathFromFile:()=>bte,getRelativePathToDirectoryOrUrl:()=>Dk,getReplacementSpanForContextToken:()=>aw,getResolutionDiagnostic:()=>BE,getRightMostAssignedExpression:()=>kF,getRootDeclaration:()=>NX,getRootDirectoryOfResolutionCache:()=>oB,getRootLength:()=>fu,getScriptKind:()=>QE,getScriptKindFromFileName:()=>T9,getSelectedEffectiveModifierFlags:()=>Mb,getSelectedSyntacticModifierFlags:()=>Z7,getSetExternalModuleIndicator:()=>l9,getShebang:()=>kv,getSingleInitializerOfVariableStatementOrPropertyDeclaration:()=>c8,getSingleVariableOfVariableStatement:()=>By,getSnapshotText:()=>Sg,getSnippetElement:()=>TR,getSourceFileOfNode:()=>$n,getSourceFileOrIncludeOfNode:()=>kc,getSourceFilePathInNewDirWorker:()=>a8,getSourceFilesToEmit:()=>n9,getSourceMapper:()=>LW,getSourceTextOfNodeFromSourceFile:()=>cd,getSourceTextOfRangeFromSourceFile:()=>EX,getSpanOfTokenAtPosition:()=>qm,getSpellingSuggestion:()=>Uh,getStartPositionOfLine:()=>zb,getStartPositionOfRange:()=>e0,getStartsOnNewLine:()=>Qm,getStrictOptionValue:()=>rb,getStringComparer:()=>I2,getSubPatternFromSpec:()=>tk,getSuperContainer:()=>MP,getSupportedExtensions:()=>e9,getSwitchedType:()=>KE,getSymbolId:()=>Yi,getSymbolNameForPrivateIdentifier:()=>OK,getSymbolParentOrFail:()=>yx,getSymbolTarget:()=>$B,getSyntacticModifierFlags:()=>AD,getSyntacticModifierFlagsNoCache:()=>wD,getSynthesizedDeepClone:()=>Bk,getSynthesizedDeepCloneWithReplacements:()=>ow,getSynthesizedDeepClones:()=>dW,getSynthesizedDeepClonesWithReplacements:()=>pW,getSyntheticLeadingComments:()=>lk,getTargetLabel:()=>dx,getTextOfIdentifierOrLiteral:()=>Zh,getTextOfNode:()=>wl,getTextOfNodeFromSourceText:()=>G7,getTextOfPropertyName:()=>E8,getTextOfRangeFromSourceText:()=>Q7,getThisContainer:()=>yh,getTokenAtPosition:()=>bp,getTokenPosOfNode:()=>og,getTouchingPropertyName:()=>ju,getTouchingToken:()=>Fk,getTrailingCommentRanges:()=>B_,getTrailingSemicolonDeferringWriter:()=>ok,getTypeParameterFromJsDoc:()=>K9,getUILocale:()=>GO,getWatchFactory:()=>hj,group:()=>nL,guessIndentation:()=>yD,hasAccessorModifier:()=>w9,hasChangesInResolutions:()=>Y9,hasChildOfKind:()=>Q1,hasContextSensitiveParameters:()=>XS,hasDecorators:()=>xK,hasDocComment:()=>cW,hasDynamicName:()=>qb,hasEffectiveModifier:()=>b_,hasExtension:()=>P0,hasIndexSignature:()=>SW,hasInferredType:()=>I9,hasInitializer:()=>P_,hasJSDocNodes:()=>Kc,hasJSDocParameterTags:()=>W7,hasLPCFileExtension:()=>XD,hasOnlyExpressionInitializer:()=>uh,hasProperty:()=>Go,hasRecordedExternalHelpers:()=>$8,hasRestParameter:()=>D7,hasSyntacticModifier:()=>Nu,hasTabstop:()=>O9,hasTrailingDirectorySeparator:()=>Ck,hasType:()=>$2,hostGetCanonicalFileName:()=>c9,hostUsesCaseSensitiveFileNames:()=>jy,idText:()=>go,identifierIsThisKeyword:()=>F9,identifierToKeywordKind:()=>W2,identity:()=>Gi,identitySourceMapConsumer:()=>rx,ignoredPaths:()=>LE,importFromModuleSpecifier:()=>m9,indexOfAnyCharCode:()=>qO,indexOfNode:()=>My,indicesOf:()=>WO,insertSorted:()=>sd,intersperse:()=>Qx,introducesArgumentsExoticObject:()=>y9,isAccessExpression:()=>ia,isAliasableExpression:()=>sF,isAnyDirectorySeparator:()=>ZM,isAnyImportSyntax:()=>EK,isArgumentExpressionOfElementAccess:()=>bB,isArray:()=>Gr,isArrayBindingElement:()=>_X,isArrayBindingPattern:()=>Xy,isArrayLiteralExpression:()=>qv,isArrayLiteralOrObjectLiteralDestructuringPattern:()=>Ik,isArrayTypeNode:()=>lp,isArrowFunction:()=>hd,isAssertionExpression:()=>Db,isAssignmentDeclaration:()=>CP,isAssignmentExpression:()=>pp,isAssignmentOperator:()=>mf,isAssignmentTarget:()=>wu,isBinaryExpression:()=>Ur,isBinaryLogicalOperator:()=>LD,isBinaryOperatorToken:()=>nK,isBindingElement:()=>ms,isBindingElementOfBareOrAccessedRequire:()=>FF,isBindingPattern:()=>ds,isBlock:()=>uu,isBlockOrCatchScoped:()=>ID,isBlockScope:()=>uF,isBreakOrContinueStatement:()=>z2,isCallChain:()=>HS,isCallExpression:()=>hs,isCallExpressionTarget:()=>kW,isCallLikeExpression:()=>v_,isCallLikeOrFunctionLikeExpression:()=>TP,isCallOrNewExpression:()=>op,isCallOrNewExpressionTarget:()=>kB,isCallSignatureDeclaration:()=>LM,isCaseBlock:()=>xM,isCaseClause:()=>yE,isCaseKeyword:()=>DM,isCatchClauseVariableDeclarationOrBindingElement:()=>Y7,isCatchStatement:()=>JM,isClassDeclaration:()=>Ky,isClassElement:()=>Hh,isClassExpression:()=>Sk,isClassLike:()=>ho,isClassMemberModifier:()=>w7,isClassOrTypeElement:()=>kD,isCloneObjectExpression:()=>_M,isCommaExpression:()=>ry,isCommaListExpression:()=>AF,isCommaSequence:()=>W1,isComputedNonLiteralName:()=>y8,isComputedPropertyName:()=>Ia,isConciseBody:()=>yX,isConditionalTypeNode:()=>Zb,isConstructorDeclaration:()=>jm,isContextualKeyword:()=>g8,isDeclaration:()=>hp,isDeclarationFileName:()=>i0,isDeclarationName:()=>Ru,isDecorator:()=>Qee,isDefaultClause:()=>hk,isDefineDirective:()=>s0,isDeprecatedDeclaration:()=>a2,isDiskPathRoot:()=>bk,isDocumentRegistryEntry:()=>Y1,isDottedName:()=>Ey,isDynamicName:()=>M9,isElementAccessExpression:()=>Ha,isEmptyStatement:()=>FM,isEntityName:()=>Am,isEntityNameExpression:()=>va,isEnumDeclaration:()=>MM,isEqualityOperatorKind:()=>p2,isExcludedFile:()=>FR,isExportAssignment:()=>WM,isExpression:()=>xc,isExpressionNode:()=>ep,isExpressionStatement:()=>gk,isExpressionWithTypeArguments:()=>AM,isExternalModule:()=>H8,isExternalModuleNameRelative:()=>df,isExternalOrCommonJsModule:()=>BD,isFalsyLiteral:()=>X7,isFileLevelUniqueName:()=>YD,isFirstDeclarationOfSymbolParameter:()=>JE,isFloatLiteral:()=>o0,isForEachStatement:()=>zm,isForStatement:()=>XP,isFullSourceFile:()=>_9,isFunctionBlock:()=>Yh,isFunctionDeclaration:()=>Yc,isFunctionExpression:()=>Zc,isFunctionExpressionOrArrowFunction:()=>Ub,isFunctionExpressionOrInlineClosure:()=>gh,isFunctionLike:()=>Qi,isFunctionLikeDeclaration:()=>tu,isFunctionLikeKind:()=>$h,isFunctionLikeOrClassStaticBlockDeclaration:()=>Y2,isFunctionOrModuleBlock:()=>yP,isFunctionTypeNode:()=>k0,isGeneratedIdentifier:()=>F_,isGlobalSourceFile:()=>h9,isIdentifier:()=>Tt,isIdentifierName:()=>gF,isIdentifierPart:()=>Kl,isIdentifierStart:()=>bc,isIdentifierText:()=>y_,isIdentifierTypePredicate:()=>N9,isIdentifierTypeReference:()=>BF,isIfStatement:()=>ZP,isIgnoredFileFromWildCardWatching:()=>mj,isImplicitGlob:()=>n8,isImportOrExportSpecifierName:()=>zB,isInCallExpression:()=>AB,isInComment:()=>D0,isInCompoundLikeAssignment:()=>wP,isInExpressionContext:()=>cF,isInExternalFileContext:()=>Lv,isInIncludeContext:()=>Rb,isInJSDoc:()=>jb,isInJSFile:()=>Nr,isInMacroContext:()=>dF,isInNonReferenceComment:()=>RB,isInReferenceComment:()=>One,isInString:()=>bg,isInTemplateString:()=>aW,isInTypeQuery:()=>$b,isIncludeDirective:()=>zv,isIndexedAccessTypeNode:()=>l_,isInfinityOrNaNString:()=>T8,isInheritDeclaration:()=>_E,isInitializedProperty:()=>C9,isInlineClosureExpression:()=>Au,isIntLiteral:()=>ff,isInterfaceDeclaration:()=>UM,isIntersectionTypeNode:()=>mM,isIterationStatement:()=>$S,isJSDoc:()=>Ol,isJSDocAllType:()=>NM,isJSDocClassTag:()=>RM,isJSDocCommentContainingNode:()=>hD,isJSDocDeprecatedTag:()=>hM,isJSDocFunctionType:()=>bE,isJSDocImplementsTag:()=>wM,isJSDocImportTag:()=>PM,isJSDocIndexSignature:()=>UP,isJSDocLikeText:()=>pk,isJSDocLink:()=>bM,isJSDocLinkCode:()=>kM,isJSDocLinkLike:()=>kb,isJSDocLinkPlain:()=>Yee,isJSDocMemberName:()=>BM,isJSDocNameReference:()=>jM,isJSDocNode:()=>Fv,isJSDocOptionalParameter:()=>b8,isJSDocOptionalType:()=>Zee,isJSDocOverloadTag:()=>C0,isJSDocParameterTag:()=>Pc,isJSDocPropertyLikeTag:()=>v0,isJSDocPropertyTag:()=>OM,isJSDocReturnTag:()=>Tk,isJSDocSatisfiesExpression:()=>iR,isJSDocSatisfiesTag:()=>TE,isJSDocSignature:()=>ip,isJSDocTag:()=>y0,isJSDocTemplateTag:()=>Ll,isJSDocText:()=>CM,isJSDocThisTag:()=>SE,isJSDocThrowsTag:()=>EM,isJSDocTypeAlias:()=>pd,isJSDocTypeAssertion:()=>d_,isJSDocTypeExpression:()=>c_,isJSDocTypeLiteral:()=>R_,isJSDocTypeTag:()=>Vv,isJSDocTypedefTag:()=>vM,isJSDocUnknownType:()=>IM,isJSDocVariableTag:()=>KP,isJSDocVariadicType:()=>tx,isJsonEqual:()=>nk,isJsonSourceFile:()=>cg,isJumpStatementTarget:()=>px,isKeyword:()=>ou,isKeywordOrPunctuation:()=>tb,isKnownSymbol:()=>Fh,isLabelOfLabeledStatement:()=>IB,isLabeledStatement:()=>gE,isLateVisibilityPaintedStatement:()=>WF,isLeftHandSideExpression:()=>fp,isLeftSideOfPropertyAccess:()=>TF,isLet:()=>f9,isLineBreak:()=>Mo,isLiteralComputedPropertyDeclarationName:()=>rk,isLiteralExpression:()=>Dv,isLiteralExpressionOfObject:()=>vP,isLiteralKind:()=>Nh,isLiteralLike:()=>xy,isLiteralTypeNode:()=>dp,isLocalName:()=>bR,isLogicalOrCoalescingAssignmentExpression:()=>K7,isLogicalOrCoalescingAssignmentOperator:()=>Dy,isLogicalOrCoalescingBinaryExpression:()=>K1,isLogicalOrCoalescingBinaryOperator:()=>FD,isMemberName:()=>g0,isMethodDeclaration:()=>ev,isModifier:()=>S_,isModifierKind:()=>Lm,isModuleBlock:()=>SM,isNameOfFunctionDeclaration:()=>$E,isNamedDeclaration:()=>El,isNamedImportsOrExports:()=>b9,isNewExpression:()=>Tg,isNewExpressionTarget:()=>HE,isNoSubstitutionTemplateLiteral:()=>hE,isNodeArray:()=>kh,isNodeDescendantOf:()=>iy,isNodeKind:()=>J2,isNodeLikeSystem:()=>zx,isNodeModulesDirectory:()=>Kb,isNonContextualKeyword:()=>x9,isNonNullAccess:()=>zF,isNumber:()=>wZ,isNumericLiteral:()=>Tp,isNumericLiteralName:()=>Hp,isObjectLiteralExpression:()=>Qa,isObjectLiteralMethod:()=>hh,isObjectLiteralOrClassExpressionMethodOrAccessor:()=>v8,isObjectOrMixedType:()=>AP,isOctalDigit:()=>VS,isOmittedExpression:()=>Bm,isOptionalDeclaration:()=>A9,isOptionalJSDocPropertyLikeTag:()=>S8,isOuterExpression:()=>eF,isParameter:()=>gs,isParameterPropertyModifier:()=>Pb,isParenthesizedExpression:()=>yp,isParenthesizedTypeNode:()=>vk,isParseTreeNode:()=>ky,isPartOfParameterDeclaration:()=>xm,isPartOfTypeNode:()=>Zp,isPartiallyEmittedExpression:()=>rv,isPinnedComment:()=>jv,isPrefixUnaryExpression:()=>yk,isPrimitiveLiteralValue:()=>WP,isPrivateIdentifier:()=>Cc,isProgramUptoDate:()=>Vj,isPrologueDirective:()=>sk,isPropertyAccessEntityNameExpression:()=>MD,isPropertyAccessExpression:()=>Ii,isPropertyAccessOrQualifiedName:()=>GS,isPropertyAssignment:()=>af,isPropertyDeclaration:()=>Cl,isPropertyName:()=>h0,isPropertyNameLiteral:()=>Qh,isPropertySignature:()=>Kp,isPunctuation:()=>h8,isQualifiedName:()=>iu,isRawSourceMap:()=>ij,isReferenceFileLocation:()=>Xm,isReferencedFile:()=>tp,isRestParameter:()=>X1,isRightSideOfAccessExpression:()=>SF,isRightSideOfPropertyAccess:()=>Qv,isRightSideOfQualifiedNameOrPropertyAccess:()=>IP,isRightSideOfQualifiedNameOrPropertyAccessOrJSDocMemberName:()=>bF,isRootedDiskPath:()=>sc,isSameEntityName:()=>GD,isShebangTrivia:()=>_D,isShiftOperatorOrHigher:()=>UD,isShorthandPropertyAssignment:()=>vp,isSignedNumericLiteral:()=>HD,isSingleOrDoubleQuote:()=>qD,isSourceFile:()=>ti,isSourceFileNotJson:()=>i9,isSourceMapping:()=>oj,isSpreadAssignment:()=>Zy,isSpreadElement:()=>vE,isStatement:()=>Vm,isStatementButNotDeclaration:()=>xb,isStatic:()=>Wy,isString:()=>Li,isStringANonContextualKeyword:()=>D9,isStringAndEmptyAnonymousObjectIntersection:()=>Nne,isStringDoubleQuoted:()=>f8,isStringLiteral:()=>ss,isStringLiteralLike:()=>_f,isStringLiteralOrTemplate:()=>mW,isStringOrNumericLiteralLike:()=>_u,isStringTextContainingNode:()=>bD,isStructDeclaration:()=>gM,isStructTypeNode:()=>YP,isSuperAccessExpression:()=>kE,isSuperCall:()=>nR,isSupportedSourceFileName:()=>t9,isSwitchStatement:()=>yM,isSyntaxList:()=>tv,isTagName:()=>FB,isThisIdentifier:()=>R9,isThisInitializedDeclaration:()=>DF,isThisObjectExpression:()=>pR,isThisTypeNode:()=>ex,isToken:()=>xv,isTokenKind:()=>U2,isTraceEnabled:()=>td,isTransientSymbol:()=>D_,isTrivia:()=>DK,isTruthyLiteral:()=>PP,isTupleTypeNode:()=>Xee,isTypeAlias:()=>J1,isTypeAliasDeclaration:()=>nv,isTypeDeclaration:()=>q1,isTypeElement:()=>Ev,isTypeKeyword:()=>u2,isTypeLiteralNode:()=>ap,isTypeNode:()=>Vs,isTypeNodeKind:()=>iF,isTypeOperatorNode:()=>Kee,isTypeParameterDeclaration:()=>ru,isTypePredicateNode:()=>u_,isTypeReferenceNode:()=>sp,isTypeReferenceType:()=>U7,isTypeUsableAsPropertyName:()=>Qf,isUnaryExpression:()=>Py,isUnicodeIdentifierStart:()=>m7,isUnionTypeNode:()=>mk,isUrl:()=>pte,isValidTypeOnlyAliasUseSite:()=>Fb,isValueSignatureDeclaration:()=>k8,isVarConst:()=>u9,isVariableDeclaration:()=>Cs,isVariableDeclarationInitializedToBareOrAccessedRequire:()=>Ny,isVariableDeclarationInitializedToRequire:()=>g9,isVariableDeclarationList:()=>mE,isVariableLike:()=>Ry,isVariableStatement:()=>lf,isVoidExpression:()=>TM,isWhiteSpaceLike:()=>Bu,isWhiteSpaceSingleLine:()=>Ou,isWriteAccess:()=>ey,isWriteOnlyAccess:()=>YS,keywordPart:()=>ly,last:()=>jo,lastOrUndefined:()=>wo,length:()=>Pr,libEntries:()=>wR,libs:()=>sb,lineBreakPart:()=>l0,linkNamePart:()=>qB,linkPart:()=>gx,linkTextPart:()=>ub,loadModuleFromGlobalCache:()=>dM,loadWithModeAwareCache:()=>Fj,map:()=>Xt,mapDefined:()=>Vi,mapDefinedEntries:()=>ZO,mapDefinedIterator:()=>zh,mapIterator:()=>fP,mapToDisplayParts:()=>yf,matchFiles:()=>i8,matchesExclude:()=>RR,maxBy:()=>UO,maybeBind:()=>mo,memoize:()=>Fl,memoizeOne:()=>wh,minAndMax:()=>$F,missingFileModifiedTime:()=>ba,modifierToFlag:()=>Gh,modifiersToFlags:()=>ND,moduleResolutionIsEqualTo:()=>Z9,moduleResolutionNameAndModeGetter:()=>WE,moduleResolutionOptionDeclarations:()=>iE,moduleSpecifierToValidIdentifier:()=>vW,moduleSpecifiers:()=>i2,moduleSymbolToValidIdentifier:()=>vx,mutateMap:()=>s8,mutateMapSkippingNewValues:()=>KF,newCaseClauseTracker:()=>jk,noEmitNotification:()=>fg,noEmitSubstitution:()=>A_,noTruncationMaximumTruncationLength:()=>J7,nodeIsMissing:()=>Eo,nodeIsPresent:()=>x_,nodeIsSynthesized:()=>qi,nodeModulesPathPart:()=>sM,nodeSeenTracker:()=>lv,nodeStartsNewLexicalEnvironment:()=>EP,noop:()=>ys,noopFileWatcher:()=>iv,normalizePath:()=>di,normalizeSlashes:()=>cc,not:()=>FZ,notImplemented:()=>Xp,nullParenthesizerRules:()=>mR,nullTransformationContext:()=>cy,objectAllocator:()=>Ks,operatorPart:()=>PB,optionDeclarations:()=>gd,optionsAffectingProgramStructure:()=>eM,optionsForBuild:()=>JR,optionsForWatch:()=>rE,optionsHaveChanges:()=>X2,optionsHaveModuleResolutionChanges:()=>Q9,or:()=>$x,orderedRemoveItem:()=>O2,orderedRemoveItemAt:()=>Qp,packageIdToPackageName:()=>yF,packageIdToString:()=>Xh,parameterNamePart:()=>xB,parseBaseNodeFactory:()=>kR,parseJsonSourceFileConfigFileContent:()=>uE,parseJsonText:()=>dk,parseLpcSourceFileConfigFileContent:()=>Q8,parseNodeFactory:()=>H1,parsePackageName:()=>pM,patchWriteFileEnsuringDirectory:()=>Ej,pathContainsNodeModules:()=>oM,pathIsAbsolute:()=>a0,pathIsBareSpecifier:()=>dte,pathIsRelative:()=>N_,perfLogger:()=>h_,performance:()=>ci,positionBelongsToNode:()=>gW,positionIsASICandidate:()=>KB,positionIsSynthesized:()=>La,positionsAreOnSameLine:()=>lu,probablyUsesSemicolons:()=>XB,processCommentPragmas:()=>xR,processPragmasIntoFields:()=>DR,projectReferenceIsEqualTo:()=>F8,propertyNamePart:()=>DB,punctuationPart:()=>Ga,pushIfUnique:()=>Tl,quote:()=>nw,quotePreferenceFromString:()=>Cne,rangeContainsPosition:()=>Rk,rangeContainsPositionExclusive:()=>uv,rangeContainsRangeExclusive:()=>iW,rangeContainsStartEnd:()=>oW,rangeEndIsOnSameLineAsRangeStart:()=>Ah,rangeEndPositionsAreOnSameLine:()=>x8,rangeEquals:()=>uP,rangeIsOnSingleLine:()=>cp,rangeOfNode:()=>_8,rangeOfTypeParameters:()=>m8,rangeStartIsOnSameLineAsRangeEnd:()=>OF,rangeStartPositionsAreOnSameLine:()=>Kh,reduceEachLeadingCommentRange:()=>h7,reduceEachTrailingCommentRange:()=>y7,reduceLeft:()=>Tc,reduceLeftIterator:()=>pL,reducePathComponents:()=>dd,removeExtension:()=>JD,removeFileExtension:()=>md,removeIgnoredPath:()=>UE,removePrefix:()=>lP,removeSuffix:()=>Jh,removeTrailingDirectorySeparator:()=>J_,replaceElement:()=>uL,resolutionExtensionIsTSOrJson:()=>N8,resolveConfigFileProjectName:()=>lB,resolveModuleName:()=>dE,resolvePath:()=>I_,resolveProjectReferencePath:()=>sv,resolveTripleslashReference:()=>ox,resolvingEmptyArray:()=>kP,returnFalse:()=>Lu,returnNoopFileWatcher:()=>e2,returnTrue:()=>Vx,returnUndefined:()=>Nm,sameMap:()=>xo,sameMapping:()=>Ete,scanShebangTrivia:()=>mD,scanTokenAtPosition:()=>lR,scanner:()=>bl,server:()=>lz,setConfigFileInOptions:()=>oE,setEmitFlags:()=>oa,setIdentifierAutoGenerate:()=>SR,setIdentifierTypeArguments:()=>Ph,setNodeChildren:()=>hR,setNodeFlags:()=>Ch,setObjectAllocator:()=>hF,setOriginalNode:()=>uf,setParent:()=>ic,setParentRecursive:()=>E_,setSnippetElement:()=>z8,setStackTraceLimit:()=>Mte,setSyntheticLeadingComments:()=>yR,setSys:()=>$te,setSysLog:()=>Cj,setTextRange:()=>Ho,setTextRangeEnd:()=>V7,setTextRangePos:()=>DD,setTextRangePosEnd:()=>Aa,setTextRangePosWidth:()=>q7,setUILocale:()=>QO,setValueDeclaration:()=>wb,signatureHasRestParameter:()=>$a,signatureToDisplayParts:()=>EB,signatureTypeToDisplayParts:()=>wB,singleElementArray:()=>my,singleIterator:()=>sL,singleOrUndefined:()=>Tv,skipAlias:()=>hf,skipConstraint:()=>bW,skipOuterExpressions:()=>sg,skipParentParenthesis:()=>tF,skipParentheses:()=>ws,skipPartiallyEmittedExpressions:()=>kl,skipTrivia:()=>ts,skipTypeChecking:()=>qy,skipTypeParentheses:()=>nb,sliceAfter:()=>aR,some:()=>kt,sort:()=>yb,sortAndDeduplicate:()=>hy,sortAndDeduplicateDiagnostics:()=>Om,sourceFileAffectingCompilerOptions:()=>qR,sourceFileMayBeEmitted:()=>r9,sourceMapCommentRegExp:()=>tj,sourceMapCommentRegExpDontCareLineStart:()=>xte,spacePart:()=>Do,stableSort:()=>L_,startTracing:()=>ZZ,startsWith:()=>no,startsWithDirectory:()=>Ste,stringContainsAt:()=>sW,stringToToken:()=>hg,stripQuotes:()=>gf,supportedDeclarationExtensions:()=>vF,supportedLocaleDirectories:()=>bP,supportedTSExtensionsFlat:()=>ZD,suppressLeadingAndTrailingTrivia:()=>iw,suppressLeadingTrivia:()=>lW,suppressTrailingTrivia:()=>uW,symbolName:()=>ya,symbolToDisplayParts:()=>Mh,syntaxMayBeASICandidate:()=>nW,syntaxRequiresTrailingSemicolonOrASI:()=>Mk,sys:()=>Ms,sysLog:()=>ay,textChanges:()=>np,textOrKeywordPart:()=>fx,textPart:()=>oc,textRangeContainsPositionInclusive:()=>x7,textSpanEnd:()=>Fu,textSpanIntersectsWith:()=>PD,textSpansEqual:()=>OB,textToDirectiveObj:()=>f7,textToKeywordObj:()=>R2,thisObjectPragmaToStringLiteral:()=>j8,timestamp:()=>Zi,toArray:()=>_P,toFileNameLowerCase:()=>eg,toPath:()=>Ra,tokenIsIdentifierOrKeyword:()=>qc,tokenIsIdentifierOrKeywordOrGreaterThan:()=>KZ,tokenToString:()=>Mi,trace:()=>eo,tracing:()=>Dt,tracingEnabled:()=>Ty,transformNodes:()=>Hj,trimQuotes:()=>kK,trimStart:()=>RP,tryAddToSet:()=>Im,tryCast:()=>to,tryGetImportFromModuleSpecifier:()=>ik,tryGetJSDocSatisfiesTypeNode:()=>B8,tryGetLocalizedLibPath:()=>W8,tryGetNativePerformanceHooks:()=>_L,tryGetPropertyAccessOrIdentifierToString:()=>Jy,tryGetSourceMappingURL:()=>rj,tryGetTextOfPropertyName:()=>Uy,tryParseRawSourceMap:()=>sj,tryReadFile:()=>G8,tryRemoveExtension:()=>mF,tryRemoveSuffix:()=>eL,typeAcquisitionDeclarations:()=>tM,typeAliasNamePart:()=>GB,typeKeywords:()=>ZE,typeParameterNamePart:()=>QB,typeToDisplayParts:()=>o2,unchangedPollThresholds:()=>r2,unchangedTextChangeRange:()=>q2,unorderedRemoveItem:()=>vv,unreachableCodeIsError:()=>oR,updateErrorForNoInputFiles:()=>nM,updateLanguageServiceSourceFile:()=>dw,updateMissingFilePathsWatch:()=>dj,updateResolutionField:()=>Zm,updateSourceFile:()=>PR,updateWatchingWildcardDirectories:()=>_j,usingSingleLineStringWriter:()=>OP,utf16EncodeAsString:()=>gP,validateLocaleAndSetLanguage:()=>TX,version:()=>FO,versionMajorMinor:()=>CZ,visitArray:()=>kte,visitEachChild:()=>Wm,visitNode:()=>Na,visitNodes:()=>__,walkUpBindingElementsAndPatterns:()=>Cb,walkUpParenthesizedExpressions:()=>Mv,walkUpParenthesizedTypes:()=>QD,walkUpParenthesizedTypesAndGetParentAndChild:()=>cR,whitespaceOrMapCommentRegExp:()=>nj,writeCommentRange:()=>zy,writeFileEnsuringDirectories:()=>ME,zipWith:()=>cP});uz.exports=kZ(LO);var CZ="1.1",FO="1.1.18",RO="LPC",MO=(e=>(e[e.LessThan=-1]="LessThan",e[e.EqualTo=0]="EqualTo",e[e.GreaterThan=1]="GreaterThan",e))(MO||{});function Fl(e){let n;return()=>(e&&(n=e(),e=void 0),n)}function wh(e){let n=new Map;return r=>{let s=`${typeof r}:${r}`,a=n.get(s);return a===void 0&&!n.has(s)&&(a=e(r),n.set(s,a)),a}}function Gi(e){return e}function Is(e,n,r,s){if(n===void 0||n.length===0)return e;if(e===void 0)return n.slice(r,s);r=r===void 0?0:Q3(n,r),s=s===void 0?n.length:Q3(n,s);for(let a=r;a<s&&a<n.length;a++)n[a]!==void 0&&e.push(n[a]);return e}function Q3(e,n){return n<0?e.length+n:n}var Oe=[],Z1=new Map;function Pr(e){return e!==void 0?e.length:0}var g_=Object.prototype.hasOwnProperty;function Go(e,n){return g_.call(e,n)}var jO=(e=>(e[e.None=0]="None",e[e.Normal=1]="Normal",e[e.Aggressive=2]="Aggressive",e[e.VeryAggressive=3]="VeryAggressive",e))(jO||{});function BO(e,n){return e===n?0:e===void 0?-1:n===void 0?1:e<n?-1:1}function vs(e,n){return BO(e,n)}function PZ(e,n,r){n.sort((s,a)=>r(e[s],e[a])||vs(s,a))}function L_(e,n){let r=WO(e);return PZ(e,r,n),r.map(s=>e[s])}function xZ(e,n){return n}function WO(e){return e.map(xZ)}function wo(e){return e===void 0||e.length===0?void 0:e[e.length-1]}function kt(e,n){if(e!==void 0)if(n!==void 0){for(let r=0;r<e.length;r++)if(n(e[r]))return!0}else return e.length>0;return!1}function UO(e,n,r){for(let s=0;s<e.length;s++)n=Math.max(n,r(e[s]));return n}function cP(e,n,r){let s=[];w.assertEqual(e.length,n.length);for(let a=0;a<e.length;a++)s.push(r(e[a],n[a],a));return s}function Xt(e,n){let r;if(e!==void 0){r=[];for(let s=0;s<e.length;s++)r.push(n(e[s],s))}return r}function zx(){return typeof process<"u"&&!!process.nextTick&&!process.browser&&typeof require<"u"}function ys(e){}function Ec(e,n,r){let s=e.length-n.length;return s>=0&&(r?gp(e.slice(s),n):e.indexOf(n,s)===s)}function gp(e,n){return e===n||e!==void 0&&n!==void 0&&e.toUpperCase()===n.toUpperCase()}function I2(e){return e?A2:Dc}function DZ(e,n){return e===n?0:e===void 0?-1:n===void 0?1:(e=e.toLowerCase(),n=n.toLowerCase(),e<n?-1:e>n?1:0)}function Dc(e,n){return BO(e,n)}function A2(e,n){return e===n?0:e===void 0?-1:n===void 0?1:(e=e.toUpperCase(),n=n.toUpperCase(),e<n?-1:e>n?1:0)}function gg(e,n){return j_(e,n)}function j_(e,n){return e===n}function ca(e){return e?Gi:eg}function EZ(e){return e.toLowerCase()}var Y3=/[^\u0130\u0131\u00DFa-z0-9\\/:\-_. ]+/g,Z3=new Map;function eg(e){let n=Z3.get(e);return n===void 0&&(n=Y3.test(e)?e.replace(Y3,EZ):e,Z3.set(e,n)),n}function no(e,n,r){return r?gp(e.slice(0,n.length),n):e.lastIndexOf(n,0)===0}function Jt(e,n){if(e!==void 0)for(let r=0;r<e.length;r++){let s=n(e[r],r);if(s)return s}}function ki(e,n,r=j_){if(e!==void 0){for(let s=0;s<e.length;s++)if(r(e[s],n))return!0}return!1}function o_(e,n,r){return e!==void 0?(Tl(e,n,r),e):[n]}function Tl(e,n,r){return ki(e,n,r)?!1:(e.push(n),!0)}function Tc(e,n,r,s,a){if(e&&e.length>0){let l=e.length;if(l>0){let u=s===void 0||s<0?0:s,d=a===void 0||u+a>l-1?l-1:u+a,_;for(arguments.length<=2?(_=e[u],u++):_=r;u<=d;)_=n(_,e[u],u),u++;return _}}return r}function up(e,n,r,s,a){return Wh(e,r(n),r,s,a)}function Wh(e,n,r,s,a){if(!kt(e))return-1;let l=a??0,u=e.length-1;for(;l<=u;){let d=l+(u-l>>1),_=r(e[d],d);switch(s(_,n)){case-1:l=d+1;break;case 0:return d;case 1:u=d-1;break}}return~l}function sd(e,n,r,s,a){if(e.length===0)return e.push(n),!0;let l=up(e,n,Gi,r);if(l<0){if(s&&!a){let u=~l;if(u>0&&s(n,e[u-1]))return!1;if(u<e.length&&s(n,e[u]))return e.splice(u,1,n),!0}return e.splice(~l,0,n),!0}return a?(e.splice(l,0,n),!0):!1}function Gr(e){return Array.isArray(e)}function _y(e,n){let r=[];if(e!==void 0)for(let s=0;s<e.length;s++){let a=n(e[s],s);a&&(Gr(a)?Is(r,a):r.push(a))}return r}function ri(e,n){return n===void 0||n.length===0?e:e===void 0||e.length===0?n:[...e,...n]}function Sh(e){e.length=0}function Zr(e,n,r){if(e!==void 0)for(let s=r??0;s<e.length;s++){let a=e[s];if(n(a,s))return a}}function Nm(){}function Lu(){return!1}function Vx(){return!0}function Li(e){return typeof e=="string"}function wZ(e){return typeof e=="number"}function JO(e,n,r){if(e!==void 0)for(let s=r??e.length-1;s>=0;s--){let a=e[s];if(n(a,s))return a}}function Vi(e,n){let r=[];if(e!==void 0)for(let s=0;s<e.length;s++){let a=n(e[s],s);a!==void 0&&r.push(a)}return r}function as(e,n){let r=[];for(let s of e)r.push(n?n(s):s);return r}function Uh(e,n,r){let s=Math.max(2,Math.floor(e.length*.34)),a=Math.floor(e.length*.4)+1,l;for(let u of n){let d=r(u);if(d!==void 0&&Math.abs(d.length-e.length)<=s){if(d===e||d.length<3&&d.toLowerCase()!==e.toLowerCase())continue;let _=NZ(e,d,a-.1);if(_===void 0)continue;w.assert(_<a),a=_,l=u}}return l}function NZ(e,n,r){let s=new Array(n.length+1),a=new Array(n.length+1),l=r+.01;for(let d=0;d<=n.length;d++)s[d]=d;for(let d=1;d<=e.length;d++){let _=e.charCodeAt(d-1),y=Math.ceil(d>r?d-r:1),h=Math.floor(n.length>r+d?r+d:n.length);a[0]=d;let v=d;for(let T=1;T<y;T++)a[T]=l;for(let T=y;T<=h;T++){let E=e[d-1].toLowerCase()===n[T-1].toLowerCase()?s[T-1]+.1:s[T-1]+2,g=_===n.charCodeAt(T-1)?s[T-1]:Math.min(s[T]+1,a[T-1]+1,E);a[T]=g,v=Math.min(v,g)}for(let T=h+1;T<=n.length;T++)a[T]=l;if(v>r)return;let b=s;s=a,a=b}let u=s[n.length];return u>r?void 0:u}function Ti(e,n){if(e!==void 0){for(let r=0;r<e.length;r++)if(!n(e[r],r))return!1}return!0}function ao(e,n){let r;if(e!==void 0)for(let s=0;s<e.length;s++){let a=n(e[s],s);a&&(Gr(a)?r=Is(r,a):r=ei(r,a))}return r??Oe}function ei(e,n){return n===void 0?e:e===void 0?[n]:(e.push(n),e)}function to(e,n){return e!==void 0&&n(e)?e:void 0}function qs(e){return w.assert(e.length!==0),e[0]}function aa(e,n){return e!==void 0&&n(e)?e:w.fail(`Invalid cast. The supplied value ${e} did not pass the test '${w.getFunctionName(n)}'.`)}function xo(e,n){if(e!==void 0)for(let r=0;r<e.length;r++){let s=e[r],a=n(s,r);if(s!==a){let l=e.slice(0,r);for(l.push(a),r++;r<e.length;r++)l.push(n(e[r],r));return l}}return e}function Fa(e){return e===void 0||e.length===0?void 0:e[0]}function eu(e,n,r=j_){if(e===void 0||n===void 0)return e===n;if(e.length!==n.length)return!1;for(let s=0;s<e.length;s++)if(!r(e[s],n[s],s))return!1;return!0}function Rl(){let e=new Map;return e.add=IZ,e.remove=AZ,e}function IZ(e,n){let r=this.get(e);return r!==void 0?r.push(n):this.set(e,r=[n]),r}function AZ(e,n){let r=this.get(e);r!==void 0&&(vv(r,n),r.length||this.delete(e))}function vv(e,n){return OZ(e,r=>r===n)}function OZ(e,n){for(let r=0;r<e.length;r++)if(n(e[r]))return zO(e,r),!0;return!1}function zO(e,n){e[n]=e[e.length-1],e.pop()}function my(e){return e===void 0?void 0:[e]}function mo(e,n){return n?.bind(e)}function O2(e,n){for(let r=0;r<e.length;r++)if(e[r]===n)return Qp(e,r),!0;return!1}function Qp(e,n){for(let r=n;r<e.length-1;r++)e[r]=e[r+1];e.pop()}function VO(e,n,r,s,a,l){l??(l=ys);let u=0,d=0,_=e.length,y=n.length,h=!1;for(;u<_&&d<y;){let v=e[u],b=n[d],T=r(v,b);T===-1?(s(v),u++,h=!0):T===1?(a(b),d++,h=!0):(l(b,v),u++,d++)}for(;u<_;)s(e[u++]),h=!0;for(;d<y;)a(n[d++]),h=!0;return h}function qx(e){let n=[];for(let r in e)g_.call(e,r)&&n.push(r);return n}function Jh(e,n){return Ec(e,n)?e.slice(0,e.length-n.length):e}function lP(e,n){return no(e,n)?e.substr(n.length):e}function gy(e,n,r){if(e.has(n))return e.get(n);let s=r();return e.set(n,s),s}function hb(e,n){for(let r of e){let s=n(r);if(s!==void 0)return s}}function Yr(e,n){if(e!==void 0){let r=e.length,s=0;for(;s<r&&n(e[s]);)s++;if(s<r){let a=e.slice(0,s);for(s++;s<r;){let l=e[s];n(l)&&a.push(l),s++}return a}}return e}function LZ(e,n){return r=>e(r)&&n(r)}function $x(...e){return(...n)=>{let r;for(let s of e)if(r=s(...n),r)return r;return r}}function FZ(e){return(...n)=>!e(...n)}function jo(e){return w.assert(e.length!==0),e[e.length-1]}function Ya(e,n){if(e!==void 0)for(let r=0;r<e.length;r++){let s=n(e[r],r);if(s!==void 0)return s}}function Tv(e){return e!==void 0&&e.length===1?e[0]:void 0}function Kf(e,n){let r=0;if(e!==void 0)for(let s=0;s<e.length;s++){let a=e[s];n(a,s)&&r++}return r}function Xp(){throw new Error("Not implemented")}function Pl(e,n,r){if(e===void 0)return-1;for(let s=r??0;s<e.length;s++)if(n(e[s],s))return s;return-1}function uP(e,n,r,s){for(;r<s;){if(e[r]!==n[r])return!1;r++}return!0}function kp(e){let n=[];for(let r=0;r<e.length;r++){let s=e[r];s&&(Gr(s)?Is(n,s):n.push(s))}return n}function qO(e,n,r){for(let s=r??0;s<e.length;s++)if(ki(n,e.charCodeAt(s)))return s;return-1}function yb(e,n){return e.length===0?e:e.slice().sort(n)}function*fP(e,n){for(let r of e)yield n(r)}function*zh(e,n){for(let r of e){let s=n(r);s!==void 0&&(yield s)}}function*$O(e){for(let n=e.length-1;n>=0;n--)yield e[n]}function Im(e,n){return e.has(n)?!1:(e.add(n),!0)}function RZ(e,n){if(e.length===0)return Oe;let r=e[0],s=[r];for(let a=1;a<e.length;a++){let l=e[a];switch(n(l,r)){case!0:case 0:continue;case-1:return w.fail("Array is unsorted.")}s.push(r=l)}return s}function hy(e,n,r){return RZ(yb(e,n),r||n||Dc)}function HO(e,n,r=j_){if(e===n)return!0;if(!e||!n)return!1;for(let s in e)if(g_.call(e,s)&&(!g_.call(n,s)||!r(e[s],n[s])))return!1;for(let s in n)if(g_.call(n,s)&&!g_.call(e,s))return!1;return!0}var MZ=(()=>{return n;function e(r,s,a){if(r===s)return 0;if(r===void 0)return-1;if(s===void 0)return 1;let l=a(r,s);return l<0?-1:l>0?1:0}function n(r){let s=new Intl.Collator(r,{usage:"sort",sensitivity:"variant",numeric:!0}).compare;return(a,l)=>e(a,l,s)}})(),pP,vb;function GO(){return vb}function QO(e){vb!==e&&(vb=e,pP=void 0)}function Tb(e,n){return(pP||(pP=MZ(vb)))(e,n)}function jZ(e){}function Hx(e,n){let r=0;for(let s=0;s<e.length;s++)n(e[s],s,e)&&(e[r]=e[s],r++);e.length=r}function YO(e){let n=e?.slice()||[],r=0;function s(){return r===n.length}function a(...u){n.push(...u)}function l(){if(s())throw new Error("Queue is empty");let u=n[r];if(n[r]=void 0,r++,r>100&&r>n.length>>1){let d=n.length-r;n.copyWithin(0,r),n.length=d,r=0}return u}return{enqueue:a,dequeue:l,isEmpty:s}}function ZO(e,n){if(!e)return;let r=new Map;return e.forEach((s,a)=>{let l=n(a,s);if(l!==void 0){let[u,d]=l;u!==void 0&&d!==void 0&&r.set(u,d)}}),r}function XO(e){for(let n of e)return n;w.fail("iterator is empty")}function KO(e,n){let r=new Map,s=0;function*a(){for(let u of r.values())Gr(u)?yield*u:yield u}let l={has(u){let d=e(u);if(!r.has(d))return!1;let _=r.get(d);if(!Gr(_))return n(_,u);for(let y of _)if(n(y,u))return!0;return!1},add(u){let d=e(u);if(r.has(d)){let _=r.get(d);if(Gr(_))ki(_,u,n)||(_.push(u),s++);else{let y=_;n(y,u)||(r.set(d,[y,u]),s++)}}else r.set(d,u),s++;return this},delete(u){let d=e(u);if(!r.has(d))return!1;let _=r.get(d);if(Gr(_)){for(let y=0;y<_.length;y++)if(n(_[y],u))return _.length===1?r.delete(d):_.length===2?r.set(d,_[1-y]):zO(_,y),s--,!0}else if(n(_,u))return r.delete(d),s--,!0;return!1},clear(){r.clear(),s=0},get size(){return s},forEach(u){for(let d of as(r.values()))if(Gr(d))for(let _ of d)u(_,_,l);else{let _=d;u(_,_,l)}},keys(){return a()},values(){return a()},*entries(){for(let u of a())yield[u,u]},[Symbol.iterator]:()=>a(),[Symbol.toStringTag]:r[Symbol.toStringTag]};return l}function eL(e,n){return Ec(e,n)?e.slice(0,e.length-n.length):void 0}function Gx(e,n,r=j_){return e.length===n.length&&e.every((s,a)=>r(s,n[a]))}function Qx(e,n){if(e.length<=1)return e;let r=[];for(let s=0,a=e.length;s<a;s++)s&&r.push(n),r.push(e[s]);return r}function Sb(e,n,r){if(e===void 0)return-1;for(let s=r??e.length-1;s>=0;s--)if(n(e[s],s))return s;return-1}function tL(e,n,r=Gi){let s=Rl();for(let a of e)s.add(n(a),r(a));return s}function nL(e,n,r=Gi){return as(tL(e,n).values(),r)}function dP(e,n){return vs(e?.start,n?.start)||vs(e?.length,n?.length)}function L2(){return[]}function rL(e,n,r=Gi){let s=new Map;for(let a of e){let l=n(a);l!==void 0&&s.set(l,r(a))}return s}function yy(e,...n){for(let r of n)if(r!==void 0)for(let s in r)Go(r,s)&&(e[s]=r[s]);return e}function _P(e){return Gr(e)?e:[e]}function iL(e,n){let r={};for(let s in n)g_.call(n,s)&&(r[s]=n[s]);for(let s in e)g_.call(e,s)&&(r[s]=e[s]);return r}function*sL(e){yield e}function oL(e){if(e)for(let n of e)return n}function aL(e,n){let r=new Array(e);for(let s=0;s<e;s++)r[s]=n(s);return r}function cL(e){let n=[];return lL(e,n,void 0,0),n}function lL(e,n,r,s){for(let a of e[s]){let l;r?(l=r.slice(),l.push(a)):l=[a],s===e.length-1?n.push(l):lL(e,n,l,s+1)}}function uL(e,n,r){let s=e.slice(0);return s[n]=r,s}function fL(e,n,r){let s;for(let a=0;a<e.length;a++)n(e[a])?s=s===void 0?a:s:s!==void 0&&(r(s,a),s=void 0);s!==void 0&&r(s,e.length)}function pL(e,n,r){let s=r;if(e){let a=0;for(let l of e)s=n(s,l,a),a++}return s}function BZ(){if(zx())try{let{performance:e}=require("perf_hooks");return{shouldWriteNativeEvents:!1,performance:e}}catch{}if(typeof performance=="object")return{shouldWriteNativeEvents:!0,performance}}function WZ(){let e=BZ();if(!e)return;let{shouldWriteNativeEvents:n,performance:r}=e,s={shouldWriteNativeEvents:n,performance:void 0,performanceTime:void 0};return typeof r.timeOrigin=="number"&&typeof r.now=="function"&&(s.performanceTime=r),s.performanceTime&&typeof r.mark=="function"&&typeof r.measure=="function"&&typeof r.clearMarks=="function"&&typeof r.clearMeasures=="function"&&(s.performance=r),s}var dL=WZ(),X3=dL?.performanceTime;function _L(){return dL}var Zi=X3?()=>X3.now()??Date.now():Date.now,bb;try{let e=process.env.TS_ETW_MODULE_PATH??"./node_modules/@microsoft/typescript-etw";bb=require(e)}catch{bb=void 0}var h_=bb?.logEvent?bb:void 0,mL=(e=>(e[e.Off=0]="Off",e[e.Error=1]="Error",e[e.Warning=2]="Warning",e[e.Info=3]="Info",e[e.Verbose=4]="Verbose",e))(mL||{}),w;(e=>{let n=!1,r=0;e.currentLogLevel=2,e.isDebugging=!1;let s;function a(ue){n&&(typeof Object.setPrototypeOf=="function"?(s||(s=Object.create(Array.prototype),u(s)),Object.setPrototypeOf(ue,s)):u(ue))}e.attachNodeArrayDebugInfo=a;function l(ue){let Ze=ue&7,Ct=Ze===0?"in out":Ze===3?"[bivariant]":Ze===2?"in":Ze===1?"out":Ze===4?"[independent]":"";return ue&8?Ct+=" (unmeasurable)":ue&16&&(Ct+=" (unreliable)"),Ct}e.formatVariance=l;function u(ue){"__lpcDebuggerDisplay"in ue||Object.defineProperties(ue,{__lpcDebuggerDisplay:{value(Ze){return Ze=String(Ze).replace(/(?:,[\s\w\d_]+:[^,]+)+\]$/,"]"),`NodeArray ${Ze}`}}})}function d(ue){return b(ue,lD,!0)}e.formatNodeCheckFlags=d;function _(ue,Ze){debugger;let Ct=new Error(ue?`Debug Failure. ${ue}`:"Debug Failure.");throw Error.captureStackTrace&&Error.captureStackTrace(Ct,Ze||_),Ct}e.fail=_;function y(ue,Ze,Ct,on){ue>=Ze&&_(`Expected ${ue} < ${Ze}. ${Ct||""}`,on||y)}e.assertLessThan=y;function h(ue,Ze,Ct){ue==null&&_(Ze,Ct||h)}e.assertIsDefined=h;function v(ue,Ze,Ct){return _(`${Ze||"Unexpected node."}\r
Node ${he(ue.kind)} was unexpected.`,Ct||v)}e.failBadSyntaxKind=v;function b(ue=0,Ze,Ct){let on=E(Ze);if(ue===0)return on.length>0&&on[0][0]===0?on[0][1]:"0";if(Ct){let Vr=[],Vn=ue;for(let[_i,xr]of on){if(_i>ue)break;_i!==0&&_i&ue&&(Vr.push(xr),Vn&=~_i)}if(Vn===0)return Vr.join("|")}else for(let[Vr,Vn]of on)if(Vr===ue)return Vn;return ue.toString()}e.formatEnum=b;let T=new Map;function E(ue){let Ze=T.get(ue);if(Ze)return Ze;let Ct=[];for(let Vr in ue){let Vn=ue[Vr];typeof Vn=="number"&&Ct.push([Vn,Vr])}let on=L_(Ct,(Vr,Vn)=>vs(Vr[0],Vn[0]));return T.set(ue,on),on}function g(ue){return b(ue,oD,!0)}e.formatSymbolFlags=g;function M(ue){return b(ue,aD,!0)}e.formatObjectFlags=M;function N(ue){return b(ue,cD,!0)}e.formatSignatureFlags=N;function z(ue){return b(ue,tD,!0)}e.formatTypeFlags=z;function X(ue,Ze,Ct){for(let on of ue)h(on,Ze,Ct||X)}e.assertEachIsDefined=X;function j(ue,Ze,Ct){return X(ue,Ze,Ct||j),ue}e.checkEachDefined=j;function Z(){if(n)return;let ue=new WeakMap,Ze=new WeakMap;Object.defineProperties(Ks.getSymbolConstructor().prototype,{__lpcDebuggerDisplay:{value(){let on=this.flags&33554432?"TransientSymbol":"Symbol",Vr=this.flags&-33554433;return`${on} '${ya(this)}'${Vr?` (${g(Vr)})`:""}`}},__debugFlags:{get(){return g(this.flags)}}}),Object.defineProperties(Ks.getTypeConstructor().prototype,{__lpcDebuggerDisplay:{value(){let on=this.flags&98304?"NullableType":this.flags&384?`LiteralType ${JSON.stringify(this.value)}`:this.flags&1048576?"UnionType":this.flags&4194304?"IndexType":this.flags&8388608?"IndexedAccessType":this.flags&16777216?"ConditionalType":this.flags&33554432?"SubstitutionType":this.flags&262144?"TypeParameter":this.flags&524288?this.objectFlags&3?"InterfaceType":this.objectFlags&4?"TypeReference":this.objectFlags&8?"TupleType":this.objectFlags&16?"AnonymousType":this.objectFlags&32?"MappedType":this.objectFlags&1024?"ReverseMappedType":this.objectFlags&256?"EvolvingArrayType":"ObjectType":"Type",Vr=this.flags&524288?this.objectFlags&-1344:0;return`${on}${this.symbol?` '${ya(this.symbol)}'`:""}${Vr?` (${M(Vr)})`:""}`}},__debugFlags:{get(){return z(this.flags)}},__debugObjectFlags:{get(){return this.flags&524288?M(this.objectFlags):""}},__debugTypeToString:{value(){let on=ue.get(this);return on===void 0&&(on=this.checker.typeToString(this),ue.set(this,on)),on}}}),Object.defineProperties(Ks.getSignatureConstructor().prototype,{__debugFlags:{get(){return N(this.flags)}},__debugSignatureToString:{value(){return this.checker?.signatureToString(this)}}});let Ct=[Ks.getNodeConstructor(),Ks.getIdentifierConstructor(),Ks.getTokenConstructor(),Ks.getSourceFileConstructor()];for(let on of Ct)Go(on.prototype,"__debugKind")||Object.defineProperties(on.prototype,{__lpcDebuggerDisplay:{value(){return`${Tt(this)?`Identifier '${go(this)}'`:ss(this)?`StringLiteral ${JSON.stringify(this.text.length<10?this.text:this.text.slice(10)+"...")}`:ff(this)?`NumericLiteral ${this.text}`:o0(this)?`FloatLiteral ${this.text}`:gs(this)?"ParameterDeclaration":lp(this)?"ArrayTypeNode":mk(this)?"UnionTypeNode":vk(this)?"ParenthesizedTypeNode":l_(this)?"IndexedAccessTypeNode":dp(this)?"LiteralTypeNode":he(this.kind)}${this.flags?` (${oe(this.flags)})`:""}`}},__debugKind:{get(){return he(this.kind)}},__debugNodeFlags:{get(){return oe(this.flags)}},__debugModifierFlags:{get(){return ie(H7(this))}},__debugIsParseTreeNode:{get(){return ky(this)}},__debugGetText:{value(Vr){if(qi(this))return"";let Vn=Ze.get(this);if(Vn===void 0){let _i=_s(this),xr=_i&&$n(_i);Vn=xr?cd(xr,_i,Vr):"",Ze.set(this,Vn)}return Vn}}});n=!0}e.enableDebugInfo=Z;function le(ue,Ze,Ct,on,Vr){if(ue!==Ze){let Vn=Ct?on?`${Ct} ${on}`:Ct:"";_(`Expected ${ue} === ${Ze}. ${Vn}`,Vr||le)}}e.assertEqual=le;function de(ue,Ze,Ct){ue<Ze&&_(`Expected ${ue} >= ${Ze}`,Ct||de)}e.assertGreaterThanOrEqual=de;function se(ue,Ze,Ct){ue>Ze&&_(`Expected ${ue} <= ${Ze}`,Ct||se)}e.assertLessThanOrEqual=se;function ye(ue,Ze,Ct){return h(ue,Ze,Ct||ye),ue}e.checkDefined=ye;function he(ue){return b(ue,eD,!1)}e.formatSyntaxKind=he;function oe(ue){return b(ue,nD,!0)}e.formatNodeFlags=oe;function ie(ue){return b(ue,rD,!0)}e.formatModifierFlags=ie;function Y(ue,Ze,Ct,on){ue||(Ze=Ze?`False expression: ${Ze}`:"False expression.",Ct&&(Ze+=`\r
Verbose Debug Information: `+(typeof Ct=="string"?Ct:Ct())),_(Ze,on||Y))}e.assert=Y;function _e(ue){return b(ue,sD,!0)}e.formatFlowFlags=_e;let G,ke;function re(ue){}function be(ue){n&&typeof Object.setPrototypeOf=="function"&&(ke||(ke=Object.create(Object.prototype),rt(ke)),Object.setPrototypeOf(ue,ke))}e.attachMacroDebugInfo=be;function rt(ue){"__debugMacroText"in ue||Object.defineProperties(ue,{__lpcDebuggerDisplay:{value(){return this.getText().substring(ue.range.pos,ue.range.end)}},__debugToString:{value(){return`${this.name}: ${qt(this)}`}}})}function qt(ue){return ue.getText().substring(ue.range.pos,ue.range.end)}function fe(ue){return n&&(typeof Object.setPrototypeOf=="function"?(G||(G=Object.create(Object.prototype),void 0),Object.setPrototypeOf(ue,G)):void 0),ue}e.attachFlowNodeDebugInfo=fe;function pt(ue){let Ze=-1;function Ct(Te){return Te.id||(Te.id=Ze,Ze--),Te.id}let on;(Te=>{Te.lr="\u2500",Te.ud="\u2502",Te.dr="\u256D",Te.dl="\u256E",Te.ul="\u256F",Te.ur="\u2570",Te.udr="\u251C",Te.udl="\u2524",Te.dlr="\u252C",Te.ulr="\u2534",Te.udlr="\u256B"})(on||(on={}));let Vr;(Te=>{Te[Te.None=0]="None",Te[Te.Up=1]="Up",Te[Te.Down=2]="Down",Te[Te.Left=4]="Left",Te[Te.Right=8]="Right",Te[Te.UpDown=3]="UpDown",Te[Te.LeftRight=12]="LeftRight",Te[Te.UpLeft=5]="UpLeft",Te[Te.UpRight=9]="UpRight",Te[Te.DownLeft=6]="DownLeft",Te[Te.DownRight=10]="DownRight",Te[Te.UpDownLeft=7]="UpDownLeft",Te[Te.UpDownRight=11]="UpDownRight",Te[Te.UpLeftRight=13]="UpLeftRight",Te[Te.DownLeftRight=14]="DownLeftRight",Te[Te.UpDownLeftRight=15]="UpDownLeftRight",Te[Te.NoChildren=16]="NoChildren"})(Vr||(Vr={}));let Vn=2032,_i=882,xr=Object.create(null),si=[],xi=[],Se=H(ue,new Set);for(let Te of si)Te.text=cs(Te.flowNode,Te.circular),Zt(Te);let De=sn(Se),Ne=mn(De);return Kt(Se,0),Xi();function $e(Te){return!!(Te.flags&128)}function we(Te){return!!(Te.flags&12)&&!!Te.antecedent}function Je(Te){return!!(Te.flags&Vn)}function ze(Te){return!!(Te.flags&_i)}function it(Te){let yt=[];for(let Gt of Te.edges)Gt.source===Te&&yt.push(Gt.target);return yt}function Re(Te){let yt=[];for(let Gt of Te.edges)Gt.target===Te&&yt.push(Gt.source);return yt}function H(Te,yt){let Gt=Ct(Te),yn=xr[Gt];if(yn&&yt.has(Te))return yn.circular=!0,yn={id:-1,flowNode:Te,edges:[],text:"",lane:-1,endLane:-1,level:-1,circular:"circularity"},si.push(yn),yn;if(yt.add(Te),!yn)if(xr[Gt]=yn={id:Gt,flowNode:Te,edges:[],text:"",lane:-1,endLane:-1,level:-1,circular:!1},si.push(yn),we(Te))for(let Rn of Te.antecedent)Sn(yn,Rn,yt);else Je(Te)&&Sn(yn,Te.antecedent,yt);return yt.delete(Te),yn}function Sn(Te,yt,Gt){let yn=H(yt,Gt),Rn={source:Te,target:yn};xi.push(Rn),Te.edges.push(Rn),yn.edges.push(Rn)}function Zt(Te){if(Te.level!==-1)return Te.level;let yt=0;for(let Gt of Re(Te))yt=Math.max(yt,Zt(Gt)+1);return Te.level=yt}function sn(Te){let yt=0;for(let Gt of it(Te))yt=Math.max(yt,sn(Gt));return yt+1}function mn(Te){let yt=$i(Array(Te),0);for(let Gt of si)yt[Gt.level]=Math.max(yt[Gt.level],Gt.text.length);return yt}function Kt(Te,yt){if(Te.lane===-1){Te.lane=yt,Te.endLane=yt;let Gt=it(Te);for(let yn=0;yn<Gt.length;yn++){yn>0&&yt++;let Rn=Gt[yn];Kt(Rn,yt),Rn.endLane>Te.endLane&&(yt=Rn.endLane)}Te.endLane=yt}}function gr(Te){if(Te&2)return"Start";if(Te&4)return"Branch";if(Te&8)return"Loop";if(Te&16)return"Assignment";if(Te&32)return"True";if(Te&64)return"False";if(Te&128)return"SwitchClause";if(Te&256)return"ArrayMutation";if(Te&512)return"Call";if(Te&1024)return"ReduceLabel";if(Te&1)return"Unreachable";throw new Error}function Xr(Te){let yt=$n(Te);return cd(yt,Te,!1)}function cs(Te,yt){let Gt=gr(Te.flags);if(yt&&(Gt=`${Gt}#${Ct(Te)}`),$e(Te)){let yn=[],{switchStatement:Rn,clauseStart:Rr,clauseEnd:bn}=Te.node;for(let Kn=Rr;Kn<bn;Kn++){let ur=Rn.caseBlock.clauses[Kn];hk(ur)?yn.push("default"):yn.push(Xr(ur.expression))}Gt+=` (${yn.join(", ")})`}else ze(Te)&&Te.node&&(Gt+=` (${Xr(Te.node)})`);return yt==="circularity"?`Circular(${Gt})`:Gt}function Xi(){let Te=Ne.length,yt=UO(si,0,bn=>bn.lane)+1,Gt=$i(Array(yt),""),yn=Ne.map(()=>Array(yt)),Rn=Ne.map(()=>$i(Array(yt),0));for(let bn of si){yn[bn.level][bn.lane]=bn;let Kn=it(bn);for(let _r=0;_r<Kn.length;_r++){let Le=Kn[_r],He=8;Le.lane===bn.lane&&(He|=4),_r>0&&(He|=1),_r<Kn.length-1&&(He|=2),Rn[bn.level][Le.lane]|=He}Kn.length===0&&(Rn[bn.level][bn.lane]|=16);let ur=Re(bn);for(let _r=0;_r<ur.length;_r++){let Le=ur[_r],He=4;_r>0&&(He|=1),_r<ur.length-1&&(He|=2),Rn[bn.level-1][Le.lane]|=He}}for(let bn=0;bn<Te;bn++)for(let Kn=0;Kn<yt;Kn++){let ur=bn>0?Rn[bn-1][Kn]:0,_r=Kn>0?Rn[bn][Kn-1]:0,Le=Rn[bn][Kn];Le||(ur&8&&(Le|=12),_r&2&&(Le|=3),Rn[bn][Kn]=Le)}for(let bn=0;bn<Te;bn++)for(let Kn=0;Kn<Gt.length;Kn++){let ur=Rn[bn][Kn],_r=ur&4?"\u2500":" ",Le=yn[bn][Kn];Le?(Rr(Kn,Le.text),bn<Te-1&&(Rr(Kn," "),Rr(Kn,Ie(_r,Ne[bn]-Le.text.length)))):bn<Te-1&&Rr(Kn,Ie(_r,Ne[bn]+1)),Rr(Kn,ro(ur)),Rr(Kn,ur&8&&bn<Te-1&&!yn[bn+1][Kn]?"\u2500":" ")}return`
${Gt.join(`
`)}
`;function Rr(bn,Kn){Gt[bn]+=Kn}}function ro(Te){switch(Te){case 3:return"\u2502";case 12:return"\u2500";case 5:return"\u256F";case 9:return"\u2570";case 6:return"\u256E";case 10:return"\u256D";case 7:return"\u2524";case 11:return"\u251C";case 13:return"\u2534";case 14:return"\u252C";case 15:return"\u256B"}return" "}function $i(Te,yt){if(Te.fill)Te.fill(yt);else for(let Gt=0;Gt<Te.length;Gt++)Te[Gt]=yt;return Te}function Ie(Te,yt){if(Te.repeat)return yt>0?Te.repeat(yt):"";let Gt="";for(;Gt.length<yt;)Gt+=Te;return Gt}}e.formatControlFlowGraph=pt;function je(ue){}e.type=je;class Mt{__debugToString(){switch(this.kind){case 3:return this.debugInfo?.()||"(function mapper)";case 0:return`${this.source.__debugTypeToString()} -> ${this.target.__debugTypeToString()}`;case 1:return cP(this.sources,this.targets||Xt(this.sources,()=>"any"),(Ze,Ct)=>`${Ze.__debugTypeToString()} -> ${typeof Ct=="string"?Ct:Ct.__debugTypeToString()}`).join(", ");case 2:return cP(this.sources,this.targets,(Ze,Ct)=>`${Ze.__debugTypeToString()} -> ${Ct().__debugTypeToString()}`).join(", ");case 5:case 4:return`m1: ${this.mapper1.__debugToString().split(`
`).join(`
    `)}
m2: ${this.mapper2.__debugToString().split(`
`).join(`
    `)}`;default:return Yt(this)}}}e.DebugTypeMapper=Mt;function Yt(ue,Ze="Illegal value:",Ct){let on=typeof ue=="object"&&Go(ue,"kind")&&Go(ue,"pos")?"SyntaxKind: "+he(ue.kind):JSON.stringify(ue);return _(`${Ze} ${on}`,Ct||Yt)}e.assertNever=Yt;function Bt(ue){return e.isDebugging?Object.setPrototypeOf(ue,Mt.prototype):ue}e.attachDebugPrototypeIfDebug=Bt;let Me={};function tt(ue,Ze){return me(ue)?!0:(Me[Ze]={level:ue,assertion:e[Ze]},e[Ze]=ys,!1)}function me(ue){return r>=ue}e.shouldAssert=me;function dt(ue){if(typeof ue!="function")return"";if(Go(ue,"name"))return ue.name;{let Ze=Function.prototype.toString.call(ue),Ct=/^function\s+([\w$]+)\s*\(/.exec(Ze);return Ct?Ct[1]:""}}e.getFunctionName=dt;function Lt(ue,Ze,Ct,on){tt(1,"assertNode")&&Y(ue!==void 0&&(Ze===void 0||Ze(ue)),Ct||"Unexpected node.",()=>`Node ${he(ue?.kind)} did not pass test '${dt(Ze)}'.`,on||Lt)}e.assertNode=Lt;function Vt(ue){let Ze=r;if(r=ue,ue>Ze)for(let Ct of qx(Me)){let on=Me[Ct];on!==void 0&&e[Ct]!==on.assertion&&ue>=on.level&&(e[Ct]=on,Me[Ct]=void 0)}}e.setAssertionLevel=Vt;function _n(ue){return`{ name: ${ue.name}; flags: ${g(ue.flags)}; declarations: ${Xt(ue.declarations,Ze=>he(Ze.kind))} }`}e.formatSymbol=_n;function hn(ue,Ze,Ct,on){tt(1,"assertEachNode")&&Y(Ze===void 0||Ti(ue,Ze),Ct||"Unexpected node.",()=>`Node array did not pass test '${dt(Ze)}'.`,on||hn)}e.assertEachNode=hn;function kn(ue,Ze,Ct,on){tt(1,"assertOptionalNode")&&Y(Ze===void 0||ue===void 0||Ze(ue),Ct||"Unexpected node.",()=>`Node ${he(ue?.kind)} did not pass test '${dt(Ze)}'.`,on||kn)}e.assertOptionalNode=kn})(w||(w={}));var ci={};lc(ci,{clearMarks:()=>HZ,clearMeasures:()=>$Z,createTimer:()=>Yx,createTimerIf:()=>UZ,disable:()=>YZ,enable:()=>QZ,forEachMark:()=>qZ,forEachMeasure:()=>VZ,getCount:()=>JZ,getDuration:()=>zZ,isEnabled:()=>GZ,mark:()=>vy,measure:()=>Xx,nullTimer:()=>Zx});var oh,d0;function UZ(e,n,r,s){return e?Yx(n,r,s):Zx}function Yx(e,n,r){let s=0;return{enter:a,exit:l};function a(){++s===1&&vy(n)}function l(){--s===0?(vy(r),Xx(e,n,r)):s<0&&w.fail("enter/exit count does not match.")}}var Zx={enter:ys,exit:ys},tg=!1,gL=Zi(),ng=new Map,Vh=new Map,rg=new Map;function vy(e){if(tg){let n=Vh.get(e)??0;Vh.set(e,n+1),ng.set(e,Zi()),d0?.mark(e),typeof onProfilerEvent=="function"&&onProfilerEvent(e)}}function Xx(e,n,r){if(tg){let s=(r!==void 0?ng.get(r):void 0)??Zi(),a=(n!==void 0?ng.get(n):void 0)??gL,l=rg.get(e)||0;rg.set(e,l+(s-a)),d0?.measure(e,n,r)}}function JZ(e){return Vh.get(e)||0}function zZ(e){return rg.get(e)||0}function VZ(e){rg.forEach((n,r)=>e(r,n))}function qZ(e){ng.forEach((n,r)=>e(r))}function $Z(e){e!==void 0?rg.delete(e):rg.clear(),d0?.clearMeasures(e)}function HZ(e){e!==void 0?(Vh.delete(e),ng.delete(e)):(Vh.clear(),ng.clear()),d0?.clearMarks(e)}function GZ(){return tg}function QZ(e=Ms){return tg||(tg=!0,oh||(oh=_L()),oh?.performance&&(gL=oh.performance.timeOrigin,(oh.shouldWriteNativeEvents||e?.cpuProfilingEnabled?.()||e?.debugMode)&&(d0=oh.performance))),!0}function YZ(){tg&&(ng.clear(),Vh.clear(),rg.clear(),d0=void 0,tg=!1)}var Dt,Ty;(e=>{let n,r,s=0,a=0,l=[],u,d=[],_;(j=>{j.Parse="parse",j.Program="program",j.Bind="bind",j.Check="check",j.CheckTypes="checkTypes",j.Emit="emit",j.Session="session"})(_=e.Phase||(e.Phase={}));let y=[];function h(j,Z,le,de=!1){}e.push=h;function v(j){w.assert(y.length>0),E(y.length-1,1e3*Zi(),j),y.length--}e.pop=v;function b(){let j=1e3*Zi();for(let Z=y.length-1;Z>=0;Z--)E(Z,j);y.length=0}e.popAll=b;let T=1e3*10;function E(j,Z,le){let{phase:de,name:se,args:ye,time:he,separateBeginAndEnd:oe}=y[j];oe?(w.assert(!le,"`results` are not supported for events with `separateBeginAndEnd`"),g("E",de,se,ye,void 0,Z)):T-he%T<=Z-he&&g("X",de,se,{...ye,results:le},`"dur":${Z-he}`,he)}function g(j,Z,le,de,se,ye=1e3*Zi()){n==="server"&&Z==="checkTypes"||(vy("beginTracing"),r.writeSync(a,`,
{"pid":1,"tid":1,"ph":"${j}","cat":"${Z}","ts":${ye},"name":"${le}"`),se&&r.writeSync(a,`,${se}`),de&&r.writeSync(a,`,"args":${JSON.stringify(de)}`),r.writeSync(a,"}"),vy("endTracing"),Xx("Tracing","beginTracing","endTracing"))}function M(j,Z,le){if(w.assert(!Dt,"Tracing already started"),r===void 0)try{r=require("fs")}catch(oe){throw new Error(`tracing requires having fs
(original error: ${oe.message||oe})`)}n=j,l.length=0,u===void 0&&(u=ii(Z,"legend.json")),r.existsSync(Z)||r.mkdirSync(Z,{recursive:!0});let de=n==="build"?`.${process.pid}-${++s}`:n==="server"?`.${process.pid}`:"",se=ii(Z,`trace${de}.json`),ye=ii(Z,`types${de}.json`);d.push({configFilePath:le,tracePath:se,typesPath:ye}),a=r.openSync(se,"w"),Dt=e;let he={cat:"__metadata",ph:"M",ts:1e3*Zi(),pid:1,tid:1};r.writeSync(a,`[
`+[{name:"process_name",args:{name:"tsc"},...he},{name:"thread_name",args:{name:"Main"},...he},{name:"TracingStartedInBrowser",...he,cat:"disabled-by-default-devtools.timeline"}].map(oe=>JSON.stringify(oe)).join(`,
`))}e.startTracing=M;function N(){u&&r.writeFileSync(u,JSON.stringify(d))}e.dumpLegend=N;function z(j){n!=="server"&&l.push(j)}e.recordType=z;function X(j,Z,le){g("I",j,Z,le,'"s":"g"')}e.instant=X})(Ty||(Ty={}));var ZZ=Ty.startTracing,XZ=Ty.dumpLegend,Kx=(e=>(e[e.RootFile=0]="RootFile",e[e.MasterFile=1]="MasterFile",e[e.SourceFromProjectReference=2]="SourceFromProjectReference",e[e.OutputFromProjectReference=3]="OutputFromProjectReference",e[e.Import=4]="Import",e[e.ReferenceFile=5]="ReferenceFile",e[e.TypeReferenceDirective=6]="TypeReferenceDirective",e[e.LibFile=7]="LibFile",e[e.LibReferenceDirective=8]="LibReferenceDirective",e[e.AutomaticTypeDirectiveFile=9]="AutomaticTypeDirectiveFile",e))(Kx||{}),hL=(e=>(e[e.Call=0]="Call",e[e.Construct=1]="Construct",e))(hL||{}),eD=(e=>(e[e.Unknown=0]="Unknown",e[e.EndOfFileToken=1]="EndOfFileToken",e[e.SingleLineCommentTrivia=2]="SingleLineCommentTrivia",e[e.MultiLineCommentTrivia=3]="MultiLineCommentTrivia",e[e.NewLineTrivia=4]="NewLineTrivia",e[e.WhitespaceTrivia=5]="WhitespaceTrivia",e[e.ConflictMarkerTrivia=6]="ConflictMarkerTrivia",e[e.MacroIdentifierTrivia=7]="MacroIdentifierTrivia",e[e.ShebangTrivia=8]="ShebangTrivia",e[e.NonTextFileMarkerTrivia=9]="NonTextFileMarkerTrivia",e[e.NumericLiteral=10]="NumericLiteral",e[e.IntLiteral=11]="IntLiteral",e[e.CharLiteral=12]="CharLiteral",e[e.FloatLiteral=13]="FloatLiteral",e[e.BytesLiteral=14]="BytesLiteral",e[e.StringArrayLiteral=15]="StringArrayLiteral",e[e.StringLiteral=16]="StringLiteral",e[e.OpenBraceToken=17]="OpenBraceToken",e[e.BacktickToken=18]="BacktickToken",e[e.CloseBraceToken=19]="CloseBraceToken",e[e.OpenParenToken=20]="OpenParenToken",e[e.CloseParenToken=21]="CloseParenToken",e[e.OpenBracketToken=22]="OpenBracketToken",e[e.CloseBracketToken=23]="CloseBracketToken",e[e.DotToken=24]="DotToken",e[e.DotDotDotToken=25]="DotDotDotToken",e[e.SemicolonToken=26]="SemicolonToken",e[e.CommaToken=27]="CommaToken",e[e.QuestionDotToken=28]="QuestionDotToken",e[e.LessThanToken=29]="LessThanToken",e[e.LessThanSlashToken=30]="LessThanSlashToken",e[e.LessThanDotDotToken=31]="LessThanDotDotToken",e[e.GreaterThanToken=32]="GreaterThanToken",e[e.LessThanEqualsToken=33]="LessThanEqualsToken",e[e.GreaterThanEqualsToken=34]="GreaterThanEqualsToken",e[e.EqualsEqualsToken=35]="EqualsEqualsToken",e[e.ExclamationEqualsToken=36]="ExclamationEqualsToken",e[e.EqualsEqualsEqualsToken=37]="EqualsEqualsEqualsToken",e[e.ExclamationEqualsEqualsToken=38]="ExclamationEqualsEqualsToken",e[e.EqualsGreaterThanToken=39]="EqualsGreaterThanToken",e[e.MinusGreaterThanToken=40]="MinusGreaterThanToken",e[e.PlusToken=41]="PlusToken",e[e.MinusToken=42]="MinusToken",e[e.AsteriskToken=43]="AsteriskToken",e[e.AsteriskAsteriskToken=44]="AsteriskAsteriskToken",e[e.SlashToken=45]="SlashToken",e[e.PercentToken=46]="PercentToken",e[e.PlusPlusToken=47]="PlusPlusToken",e[e.MinusMinusToken=48]="MinusMinusToken",e[e.LessThanLessThanToken=49]="LessThanLessThanToken",e[e.GreaterThanGreaterThanToken=50]="GreaterThanGreaterThanToken",e[e.GreaterThanGreaterThanGreaterThanToken=51]="GreaterThanGreaterThanGreaterThanToken",e[e.AmpersandToken=52]="AmpersandToken",e[e.BarToken=53]="BarToken",e[e.CaretToken=54]="CaretToken",e[e.ExclamationToken=55]="ExclamationToken",e[e.DoubleExclamationToken=56]="DoubleExclamationToken",e[e.TildeToken=57]="TildeToken",e[e.AmpersandAmpersandToken=58]="AmpersandAmpersandToken",e[e.BarBarToken=59]="BarBarToken",e[e.QuestionToken=60]="QuestionToken",e[e.ColonToken=61]="ColonToken",e[e.AtToken=62]="AtToken",e[e.AtAtToken=63]="AtAtToken",e[e.QuestionQuestionToken=64]="QuestionQuestionToken",e[e.HashToken=65]="HashToken",e[e.OpenParenColonToken=66]="OpenParenColonToken",e[e.ColonCloseParenToken=67]="ColonCloseParenToken",e[e.OpenParenBracketToken=68]="OpenParenBracketToken",e[e.OpenParenBraceToken=69]="OpenParenBraceToken",e[e.OpenParenAsteriskToken=70]="OpenParenAsteriskToken",e[e.ColonColonToken=71]="ColonColonToken",e[e.LambdaToken=72]="LambdaToken",e[e.DotDotToken=73]="DotDotToken",e[e.EqualsToken=74]="EqualsToken",e[e.PlusEqualsToken=75]="PlusEqualsToken",e[e.MinusEqualsToken=76]="MinusEqualsToken",e[e.AsteriskEqualsToken=77]="AsteriskEqualsToken",e[e.AsteriskAsteriskEqualsToken=78]="AsteriskAsteriskEqualsToken",e[e.SlashEqualsToken=79]="SlashEqualsToken",e[e.PercentEqualsToken=80]="PercentEqualsToken",e[e.LessThanLessThanEqualsToken=81]="LessThanLessThanEqualsToken",e[e.GreaterThanGreaterThanEqualsToken=82]="GreaterThanGreaterThanEqualsToken",e[e.GreaterThanGreaterThanGreaterThanEqualsToken=83]="GreaterThanGreaterThanGreaterThanEqualsToken",e[e.AmpersandEqualsToken=84]="AmpersandEqualsToken",e[e.BarEqualsToken=85]="BarEqualsToken",e[e.BarBarEqualsToken=86]="BarBarEqualsToken",e[e.QuestionQuestionEqualsToken=87]="QuestionQuestionEqualsToken",e[e.CaretEqualsToken=88]="CaretEqualsToken",e[e.Identifier=89]="Identifier",e[e.StringizedIdentifier=90]="StringizedIdentifier",e[e.JSDocCommentTextToken=91]="JSDocCommentTextToken",e[e.IntKeyword=92]="IntKeyword",e[e.FloatKeyword=93]="FloatKeyword",e[e.StringKeyword=94]="StringKeyword",e[e.LwObjectKeyword=95]="LwObjectKeyword",e[e.UndefinedKeyword=96]="UndefinedKeyword",e[e.AnyKeyword=97]="AnyKeyword",e[e.ClosureKeyword=98]="ClosureKeyword",e[e.StructKeyword=99]="StructKeyword",e[e.CatchKeyword=100]="CatchKeyword",e[e.MixedKeyword=101]="MixedKeyword",e[e.UnknownKeyword=102]="UnknownKeyword",e[e.InKeyword=103]="InKeyword",e[e.MappingKeyword=104]="MappingKeyword",e[e.VoidKeyword=105]="VoidKeyword",e[e.BreakKeyword=106]="BreakKeyword",e[e.BytesKeyword=107]="BytesKeyword",e[e.BufferKeyword=108]="BufferKeyword",e[e.DoKeyword=109]="DoKeyword",e[e.ElseKeyword=110]="ElseKeyword",e[e.ForKeyword=111]="ForKeyword",e[e.ForEachKeyword=112]="ForEachKeyword",e[e.CaseKeyword=113]="CaseKeyword",e[e.DefaultKeyword=114]="DefaultKeyword",e[e.IfKeyword=115]="IfKeyword",e[e.ReturnKeyword=116]="ReturnKeyword",e[e.SwitchKeyword=117]="SwitchKeyword",e[e.WhileKeyword=118]="WhileKeyword",e[e.AsyncKeyword=119]="AsyncKeyword",e[e.InheritKeyword=120]="InheritKeyword",e[e.ContinueKeyword=121]="ContinueKeyword",e[e.PrivateKeyword=122]="PrivateKeyword",e[e.ProtectedKeyword=123]="ProtectedKeyword",e[e.PublicKeyword=124]="PublicKeyword",e[e.StaticKeyword=125]="StaticKeyword",e[e.VisibleKeyword=126]="VisibleKeyword",e[e.NoSaveKeyword=127]="NoSaveKeyword",e[e.NoShadowKeyword=128]="NoShadowKeyword",e[e.IntrinsicKeyword=129]="IntrinsicKeyword",e[e.NoMaskKeyword=130]="NoMaskKeyword",e[e.VarArgsKeyword=131]="VarArgsKeyword",e[e.DeprecatedKeyword=132]="DeprecatedKeyword",e[e.ClassKeyword=133]="ClassKeyword",e[e.StatusKeyword=134]="StatusKeyword",e[e.FalseKeyword=135]="FalseKeyword",e[e.TrueKeyword=136]="TrueKeyword",e[e.NullKeyword=137]="NullKeyword",e[e.FunctionKeyword=138]="FunctionKeyword",e[e.SymbolKeyword=139]="SymbolKeyword",e[e.ObjectKeyword=140]="ObjectKeyword",e[e.RefKeyword=141]="RefKeyword",e[e.IsKeyword=142]="IsKeyword",e[e.FunctionsKeyword=143]="FunctionsKeyword",e[e.VirtualKeyword=144]="VirtualKeyword",e[e.NewKeyword=145]="NewKeyword",e[e.QualifiedName=146]="QualifiedName",e[e.ComputedPropertyName=147]="ComputedPropertyName",e[e.TypeParameter=148]="TypeParameter",e[e.Parameter=149]="Parameter",e[e.IndexSignature=150]="IndexSignature",e[e.CallSignature=151]="CallSignature",e[e.PropertyDeclaration=152]="PropertyDeclaration",e[e.PropertySignature=153]="PropertySignature",e[e.MethodDeclaration=154]="MethodDeclaration",e[e.InterfaceDeclaration=155]="InterfaceDeclaration",e[e.MethodSignature=156]="MethodSignature",e[e.UnionType=157]="UnionType",e[e.FunctionType=158]="FunctionType",e[e.IntersectionType=159]="IntersectionType",e[e.RestType=160]="RestType",e[e.ArrayType=161]="ArrayType",e[e.TupleType=162]="TupleType",e[e.TypeLiteral=163]="TypeLiteral",e[e.TypeQuery=164]="TypeQuery",e[e.ParenthesizedType=165]="ParenthesizedType",e[e.TypeReference=166]="TypeReference",e[e.TypePredicate=167]="TypePredicate",e[e.ConditionalType=168]="ConditionalType",e[e.FunctionDeclaration=169]="FunctionDeclaration",e[e.ClassDeclaration=170]="ClassDeclaration",e[e.ExportSpecifier=171]="ExportSpecifier",e[e.ExportDeclaration=172]="ExportDeclaration",e[e.MissingDeclaration=173]="MissingDeclaration",e[e.PropertyAssignment=174]="PropertyAssignment",e[e.ShorthandPropertyAssignment=175]="ShorthandPropertyAssignment",e[e.SourceFile=176]="SourceFile",e[e.Bundle=177]="Bundle",e[e.IncludeDirective=178]="IncludeDirective",e[e.DefineDirective=179]="DefineDirective",e[e.UndefDirective=180]="UndefDirective",e[e.IfDirective=181]="IfDirective",e[e.IfDefDirective=182]="IfDefDirective",e[e.IfNDefDirective=183]="IfNDefDirective",e[e.ElseDirective=184]="ElseDirective",e[e.ElseIfDirective=185]="ElseIfDirective",e[e.EndIfDirective=186]="EndIfDirective",e[e.PragmaDirective=187]="PragmaDirective",e[e.JSDocTypeExpression=188]="JSDocTypeExpression",e[e.JSDocNameReference=189]="JSDocNameReference",e[e.JSDocMemberName=190]="JSDocMemberName",e[e.JSDocAllType=191]="JSDocAllType",e[e.JSDocUnknownType=192]="JSDocUnknownType",e[e.JSDocNullableType=193]="JSDocNullableType",e[e.JSDocNonNullableType=194]="JSDocNonNullableType",e[e.JSDocOptionalType=195]="JSDocOptionalType",e[e.JSDocFunctionType=196]="JSDocFunctionType",e[e.JSDocVariadicType=197]="JSDocVariadicType",e[e.JSDocNamepathType=198]="JSDocNamepathType",e[e.JSDoc=199]="JSDoc",e[e.JSDocComment=199]="JSDocComment",e[e.JSDocText=200]="JSDocText",e[e.JSDocTypeLiteral=201]="JSDocTypeLiteral",e[e.JSDocSignature=202]="JSDocSignature",e[e.JSDocLink=203]="JSDocLink",e[e.JSDocLinkCode=204]="JSDocLinkCode",e[e.JSDocLinkPlain=205]="JSDocLinkPlain",e[e.JSDocTag=206]="JSDocTag",e[e.JSDocAugmentsTag=207]="JSDocAugmentsTag",e[e.JSDocImplementsTag=208]="JSDocImplementsTag",e[e.JSDocAuthorTag=209]="JSDocAuthorTag",e[e.JSDocDeprecatedTag=210]="JSDocDeprecatedTag",e[e.JSDocClassTag=211]="JSDocClassTag",e[e.JSDocPublicTag=212]="JSDocPublicTag",e[e.JSDocPrivateTag=213]="JSDocPrivateTag",e[e.JSDocProtectedTag=214]="JSDocProtectedTag",e[e.JSDocReadonlyTag=215]="JSDocReadonlyTag",e[e.JSDocOverrideTag=216]="JSDocOverrideTag",e[e.JSDocCallbackTag=217]="JSDocCallbackTag",e[e.JSDocOverloadTag=218]="JSDocOverloadTag",e[e.JSDocEnumTag=219]="JSDocEnumTag",e[e.JSDocParameterTag=220]="JSDocParameterTag",e[e.JSDocReturnTag=221]="JSDocReturnTag",e[e.JSDocThisTag=222]="JSDocThisTag",e[e.JSDocTypeTag=223]="JSDocTypeTag",e[e.JSDocTemplateTag=224]="JSDocTemplateTag",e[e.JSDocTypedefTag=225]="JSDocTypedefTag",e[e.JSDocSeeTag=226]="JSDocSeeTag",e[e.JSDocPropertyTag=227]="JSDocPropertyTag",e[e.JSDocVariableTag=228]="JSDocVariableTag",e[e.JSDocThrowsTag=229]="JSDocThrowsTag",e[e.JSDocSatisfiesTag=230]="JSDocSatisfiesTag",e[e.JSDocImportTag=231]="JSDocImportTag",e[e.SyntaxList=232]="SyntaxList",e[e.NotEmittedStatement=233]="NotEmittedStatement",e[e.PartiallyEmittedExpression=234]="PartiallyEmittedExpression",e[e.CommaListExpression=235]="CommaListExpression",e[e.Block=236]="Block",e[e.VariableDeclaration=237]="VariableDeclaration",e[e.VariableDeclarationList=238]="VariableDeclarationList",e[e.TypeAliasDeclaration=239]="TypeAliasDeclaration",e[e.CaseBlock=240]="CaseBlock",e[e.StructDeclaration=241]="StructDeclaration",e[e.VariableStatement=242]="VariableStatement",e[e.ForStatement=243]="ForStatement",e[e.ForEachStatement=244]="ForEachStatement",e[e.DoWhileStatement=245]="DoWhileStatement",e[e.WhileStatement=246]="WhileStatement",e[e.ExpressionStatement=247]="ExpressionStatement",e[e.ReturnStatement=248]="ReturnStatement",e[e.LabeledStatement=249]="LabeledStatement",e[e.BreakStatement=250]="BreakStatement",e[e.ContinueStatement=251]="ContinueStatement",e[e.InheritDeclaration=252]="InheritDeclaration",e[e.IfStatement=253]="IfStatement",e[e.EmptyStatement=254]="EmptyStatement",e[e.CatchStatement=255]="CatchStatement",e[e.SwitchStatement=256]="SwitchStatement",e[e.LiteralType=257]="LiteralType",e[e.StructType=258]="StructType",e[e.InferType=259]="InferType",e[e.ThisType=260]="ThisType",e[e.IndexedAccessType=261]="IndexedAccessType",e[e.NamedTupleMember=262]="NamedTupleMember",e[e.TypeOperator=263]="TypeOperator",e[e.MappedType=264]="MappedType",e[e.ArrayBindingPattern=265]="ArrayBindingPattern",e[e.BindingElement=266]="BindingElement",e[e.ConditionalExpression=267]="ConditionalExpression",e[e.CatchExpression=268]="CatchExpression",e[e.BinaryExpression=269]="BinaryExpression",e[e.FunctionExpression=270]="FunctionExpression",e[e.ArrowFunction=271]="ArrowFunction",e[e.CallExpression=272]="CallExpression",e[e.CloneObjectExpression=273]="CloneObjectExpression",e[e.ClassExpression=274]="ClassExpression",e[e.SyntheticExpression=275]="SyntheticExpression",e[e.NewExpression=276]="NewExpression",e[e.NewStructExpression=277]="NewStructExpression",e[e.EvaluateExpression=278]="EvaluateExpression",e[e.TypeAssertionExpression=279]="TypeAssertionExpression",e[e.ExpressionWithTypeArguments=280]="ExpressionWithTypeArguments",e[e.ElementAccessExpression=281]="ElementAccessExpression",e[e.RangeExpression=282]="RangeExpression",e[e.InlineClosureExpression=283]="InlineClosureExpression",e[e.LambdaIdentifierExpression=284]="LambdaIdentifierExpression",e[e.LambdaOperatorExpression=285]="LambdaOperatorExpression",e[e.PropertyAccessExpression=286]="PropertyAccessExpression",e[e.SuperAccessExpression=287]="SuperAccessExpression",e[e.PostfixUnaryExpression=288]="PostfixUnaryExpression",e[e.ParenthesizedExpression=289]="ParenthesizedExpression",e[e.ArrayLiteralExpression=290]="ArrayLiteralExpression",e[e.MappingLiteralExpression=291]="MappingLiteralExpression",e[e.MappingEntryExpression=292]="MappingEntryExpression",e[e.ObjectLiteralExpression=293]="ObjectLiteralExpression",e[e.SpreadElement=294]="SpreadElement",e[e.ByRefElement=295]="ByRefElement",e[e.CastExpression=296]="CastExpression",e[e.OmittedExpression=297]="OmittedExpression",e[e.PrefixUnaryExpression=298]="PrefixUnaryExpression",e[e.CaseClause=299]="CaseClause",e[e.HeritageClause=300]="HeritageClause",e[e.DefaultClause=301]="DefaultClause",e[e.Count=302]="Count",e[e.FirstReservedWord=92]="FirstReservedWord",e[e.LastReservedWord=132]="LastReservedWord",e[e.FirstKeyword=92]="FirstKeyword",e[e.LastKeyword=145]="LastKeyword",e[e.FirstToken=0]="FirstToken",e[e.LastToken=145]="LastToken",e[e.FirstStatement=242]="FirstStatement",e[e.LastStatement=256]="LastStatement",e[e.FirstAssignment=74]="FirstAssignment",e[e.LastAssignment=88]="LastAssignment",e[e.SuperKeyword=71]="SuperKeyword",e[e.FirstTypeNode=157]="FirstTypeNode",e[e.LastTypeNode=168]="LastTypeNode",e[e.FirstNode=146]="FirstNode",e[e.FirstFutureReservedWord=92]="FirstFutureReservedWord",e[e.LastFutureReservedWord=145]="LastFutureReservedWord",e[e.FirstJSDocNode=188]="FirstJSDocNode",e[e.LastJSDocNode=231]="LastJSDocNode",e[e.FirstLiteralToken=11]="FirstLiteralToken",e[e.LastLiteralToken=16]="LastLiteralToken",e[e.FirstJSDocTagNode=188]="FirstJSDocTagNode",e[e.LastJSDocTagNode=231]="LastJSDocTagNode",e[e.FirstTriviaToken=2]="FirstTriviaToken",e[e.LastTriviaToken=8]="LastTriviaToken",e[e.FirstBinaryOperator=29]="FirstBinaryOperator",e[e.LastBinaryOperator=88]="LastBinaryOperator",e[e.FirstPunctuation=17]="FirstPunctuation",e[e.LastPunctuation=73]="LastPunctuation",e[e.FirstContextualKeyword=92]="FirstContextualKeyword",e[e.LastContextualKeyword=121]="LastContextualKeyword",e))(eD||{}),tD=(e=>(e[e.Any=1]="Any",e[e.Unknown=2]="Unknown",e[e.String=4]="String",e[e.Number=8]="Number",e[e.Boolean=16]="Boolean",e[e.Enum=32]="Enum",e[e.Float=64]="Float",e[e.StringLiteral=128]="StringLiteral",e[e.IntLiteral=256]="IntLiteral",e[e.BooleanLiteral=512]="BooleanLiteral",e[e.EnumLiteral=1024]="EnumLiteral",e[e.FloatLiteral=2048]="FloatLiteral",e[e.Bytes=4096]="Bytes",e[e.BytesLiteral=8192]="BytesLiteral",e[e.Void=16384]="Void",e[e.Undefined=32768]="Undefined",e[e.Null=65536]="Null",e[e.Never=131072]="Never",e[e.TypeParameter=262144]="TypeParameter",e[e.Object=524288]="Object",e[e.Union=1048576]="Union",e[e.Intersection=2097152]="Intersection",e[e.Index=4194304]="Index",e[e.IndexedAccess=8388608]="IndexedAccess",e[e.Conditional=16777216]="Conditional",e[e.Substitution=33554432]="Substitution",e[e.NonPrimitive=67108864]="NonPrimitive",e[e.TemplateLiteral=134217728]="TemplateLiteral",e[e.StringMapping=268435456]="StringMapping",e[e.Reserved1=536870912]="Reserved1",e[e.Reserved2=1073741824]="Reserved2",e[e.LpcDocVariable=-2147483648]="LpcDocVariable",e[e.AnyOrUnknown=3]="AnyOrUnknown",e[e.Nullable=98304]="Nullable",e[e.Literal=2944]="Literal",e[e.Unit=101280]="Unit",e[e.Freshable=2976]="Freshable",e[e.StringOrNumberLiteral=384]="StringOrNumberLiteral",e[e.StringOrNumberLiteralOrUnique=384]="StringOrNumberLiteralOrUnique",e[e.DefinitelyFalsy=117632]="DefinitelyFalsy",e[e.PossiblyFalsy=121820]="PossiblyFalsy",e[e.Intrinsic=67359327]="Intrinsic",e[e.StringLike=402653316]="StringLike",e[e.NumberLike=2344]="NumberLike",e[e.BooleanLike=528]="BooleanLike",e[e.EnumLike=1056]="EnumLike",e[e.VoidLike=49152]="VoidLike",e[e.BytesLike=12288]="BytesLike",e[e.Primitive=402784188]="Primitive",e[e.DefinitelyNonNullable=470302652]="DefinitelyNonNullable",e[e.DisjointDomains=469892028]="DisjointDomains",e[e.UnionOrIntersection=3145728]="UnionOrIntersection",e[e.StructuredType=3670016]="StructuredType",e[e.TypeVariable=8650752]="TypeVariable",e[e.InstantiableNonPrimitive=58982400]="InstantiableNonPrimitive",e[e.InstantiablePrimitive=406847488]="InstantiablePrimitive",e[e.Instantiable=465829888]="Instantiable",e[e.StructuredOrInstantiable=469499904]="StructuredOrInstantiable",e[e.ObjectFlagsType=3899393]="ObjectFlagsType",e[e.Simplifiable=25165824]="Simplifiable",e[e.Singleton=67358815]="Singleton",e[e.Narrowable=536624063]="Narrowable",e[e.IncludesMask=473694143]="IncludesMask",e[e.IncludesMissingType=262144]="IncludesMissingType",e[e.IncludesNonWideningType=4194304]="IncludesNonWideningType",e[e.IncludesWildcard=8388608]="IncludesWildcard",e[e.IncludesEmptyObject=16777216]="IncludesEmptyObject",e[e.IncludesInstantiable=33554432]="IncludesInstantiable",e[e.IncludesConstrainedTypeVariable=536870912]="IncludesConstrainedTypeVariable",e[e.IncludesError=1073741824]="IncludesError",e[e.NotPrimitiveUnion=36323331]="NotPrimitiveUnion",e))(tD||{}),yL=(e=>(e[e.None=0]="None",e[e.NoTruncation=1]="NoTruncation",e[e.WriteArrayAsGenericType=2]="WriteArrayAsGenericType",e[e.GenerateNamesForShadowedTypeParams=4]="GenerateNamesForShadowedTypeParams",e[e.UseStructuralFallback=8]="UseStructuralFallback",e[e.WriteTypeArgumentsOfSignature=32]="WriteTypeArgumentsOfSignature",e[e.UseFullyQualifiedType=64]="UseFullyQualifiedType",e[e.SuppressAnyReturnType=256]="SuppressAnyReturnType",e[e.MultilineObjectLiterals=1024]="MultilineObjectLiterals",e[e.WriteClassExpressionAsTypeLiteral=2048]="WriteClassExpressionAsTypeLiteral",e[e.UseTypeOfFunction=4096]="UseTypeOfFunction",e[e.OmitParameterModifiers=8192]="OmitParameterModifiers",e[e.UseAliasDefinedOutsideCurrentScope=16384]="UseAliasDefinedOutsideCurrentScope",e[e.UseSingleQuotesForStringLiteralType=268435456]="UseSingleQuotesForStringLiteralType",e[e.NoTypeReduction=536870912]="NoTypeReduction",e[e.OmitThisParameter=33554432]="OmitThisParameter",e[e.AllowUniqueESSymbolType=1048576]="AllowUniqueESSymbolType",e[e.AddUndefined=131072]="AddUndefined",e[e.WriteArrowStyleSignature=262144]="WriteArrowStyleSignature",e[e.InArrayType=524288]="InArrayType",e[e.InElementType=2097152]="InElementType",e[e.InFirstTypeArgument=4194304]="InFirstTypeArgument",e[e.InTypeAlias=8388608]="InTypeAlias",e[e.NodeBuilderFlagsMask=848330095]="NodeBuilderFlagsMask",e))(yL||{}),nD=(e=>(e[e.None=0]="None",e[e.Variable=1]="Variable",e[e.ExternalFile=4]="ExternalFile",e[e.Synthesized=16]="Synthesized",e[e.IncludeContext=32]="IncludeContext",e[e.MacroContext=64]="MacroContext",e[e.ExportContext=128]="ExportContext",e[e.HasImplicitReturn=512]="HasImplicitReturn",e[e.HasExplicitReturn=1024]="HasExplicitReturn",e[e.HasAsyncFunctions=4096]="HasAsyncFunctions",e[e.DisallowInContext=8192]="DisallowInContext",e[e.YieldContext=16384]="YieldContext",e[e.DisallowTypes=32768]="DisallowTypes",e[e.AwaitContext=65536]="AwaitContext",e[e.DisallowCommaContext=131072]="DisallowCommaContext",e[e.ThisNodeHasError=262144]="ThisNodeHasError",e[e.DisallowConditionalTypesContext=524288]="DisallowConditionalTypesContext",e[e.ThisNodeOrAnySubNodesHasError=1048576]="ThisNodeOrAnySubNodesHasError",e[e.HasAggregatedChildData=2097152]="HasAggregatedChildData",e[e.OptionalChain=4194304]="OptionalChain",e[e.JSDoc=16777216]="JSDoc",e[e.Ambient=33554432]="Ambient",e[e.TypeCached=268435456]="TypeCached",e[e.Deprecated=536870912]="Deprecated",e[e.ReachabilityCheckFlags=1536]="ReachabilityCheckFlags",e[e.ReachabilityAndEmitFlags=1536]="ReachabilityAndEmitFlags",e[e.ContextFlags=34332768]="ContextFlags",e[e.BlockScoped=1]="BlockScoped",e[e.IdentifierHasExtendedUnicodeEscape=256]="IdentifierHasExtendedUnicodeEscape",e[e.IdentifierIsInJSDocNamespace=4096]="IdentifierIsInJSDocNamespace",e[e.IncludeOrMacro=96]="IncludeOrMacro",e))(nD||{}),vL=(e=>(e[e.None=0]="None",e[e.SingleLine=1]="SingleLine",e[e.MultiLine=2]="MultiLine",e[e.AdviseOnEmitNode=4]="AdviseOnEmitNode",e[e.NoSubstitution=8]="NoSubstitution",e[e.CapturesThis=16]="CapturesThis",e[e.NoLeadingSourceMap=32]="NoLeadingSourceMap",e[e.NoTrailingSourceMap=64]="NoTrailingSourceMap",e[e.NoSourceMap=96]="NoSourceMap",e[e.NoNestedSourceMaps=128]="NoNestedSourceMaps",e[e.NoTokenLeadingSourceMaps=256]="NoTokenLeadingSourceMaps",e[e.NoTokenTrailingSourceMaps=512]="NoTokenTrailingSourceMaps",e[e.NoTokenSourceMaps=768]="NoTokenSourceMaps",e[e.NoLeadingComments=1024]="NoLeadingComments",e[e.NoTrailingComments=2048]="NoTrailingComments",e[e.NoComments=3072]="NoComments",e[e.NoNestedComments=4096]="NoNestedComments",e[e.HelperName=8192]="HelperName",e[e.ExportName=16384]="ExportName",e[e.LocalName=32768]="LocalName",e[e.InternalName=65536]="InternalName",e[e.Indented=131072]="Indented",e[e.NoIndentation=262144]="NoIndentation",e[e.AsyncFunctionBody=524288]="AsyncFunctionBody",e[e.ReuseTempVariableScope=1048576]="ReuseTempVariableScope",e[e.CustomPrologue=2097152]="CustomPrologue",e[e.NoHoisting=4194304]="NoHoisting",e[e.Iterator=8388608]="Iterator",e[e.NoAsciiEscaping=16777216]="NoAsciiEscaping",e))(vL||{}),rD=(e=>(e[e.None=0]="None",e[e.Public=1]="Public",e[e.Private=2]="Private",e[e.Protected=4]="Protected",e[e.NoMask=32]="NoMask",e[e.NoShadow=64]="NoShadow",e[e.NoSave=128]="NoSave",e[e.Static=256]="Static",e[e.VarArgs=512]="VarArgs",e[e.Visible=1024]="Visible",e[e.Export=2048]="Export",e[e.Ambient=4096]="Ambient",e[e.Readonly=8192]="Readonly",e[e.In=16384]="In",e[e.Out=32768]="Out",e[e.Deprecated=65536]="Deprecated",e[e.JSDocPublic=8388608]="JSDocPublic",e[e.JSDocPrivate=16777216]="JSDocPrivate",e[e.JSDocProtected=33554432]="JSDocProtected",e[e.JSDocReadonly=67108864]="JSDocReadonly",e[e.JSDocOverride=134217728]="JSDocOverride",e[e.SyntacticOrJSDocModifiers=7]="SyntacticOrJSDocModifiers",e[e.SyntacticOnlyModifiers=2016]="SyntacticOnlyModifiers",e[e.SyntacticModifiers=2023]="SyntacticModifiers",e[e.JSDocCacheOnlyModifiers=260046848]="JSDocCacheOnlyModifiers",e[e.JSDocOnlyModifiers=65536]="JSDocOnlyModifiers",e[e.NonCacheOnlyModifiers=67559]="NonCacheOnlyModifiers",e[e.HasComputedJSDocModifiers=268435456]="HasComputedJSDocModifiers",e[e.HasComputedFlags=536870912]="HasComputedFlags",e[e.AccessibilityModifier=7]="AccessibilityModifier",e[e.ParameterPropertyModifier=167]="ParameterPropertyModifier",e[e.NonPublicAccessibilityModifier=6]="NonPublicAccessibilityModifier",e[e.All=67559]="All",e[e.Modifier=67559]="Modifier",e))(rD||{}),TL=(e=>(e[e.Required=1]="Required",e[e.Optional=2]="Optional",e[e.Rest=4]="Rest",e[e.Variadic=8]="Variadic",e[e.Fixed=3]="Fixed",e[e.Variable=12]="Variable",e[e.NonRequired=14]="NonRequired",e[e.NonRest=11]="NonRest",e))(TL||{}),SL=(e=>(e[e.None=0]="None",e[e.ExportsProperty=1]="ExportsProperty",e[e.ModuleExports=2]="ModuleExports",e[e.PrototypeProperty=3]="PrototypeProperty",e[e.ThisProperty=4]="ThisProperty",e[e.Property=5]="Property",e[e.Prototype=6]="Prototype",e[e.ObjectDefinePropertyValue=7]="ObjectDefinePropertyValue",e[e.ObjectDefinePropertyExports=8]="ObjectDefinePropertyExports",e[e.ObjectDefinePrototypeProperty=9]="ObjectDefinePrototypeProperty",e))(SL||{}),bL=(e=>(e[e.None=0]="None",e[e.ContainsRestOrSpread=1]="ContainsRestOrSpread",e[e.ContainsFluffOS=2]="ContainsFluffOS",e[e.ContainsLDMud=3]="ContainsLDMud",e[e.ContainsHoistedDeclarationOrCompletion=4]="ContainsHoistedDeclarationOrCompletion",e[e.ContainsUpdateExpressionForIdentifier=5]="ContainsUpdateExpressionForIdentifier",e))(bL||{}),kL=(e=>(e[e.Parentheses=1]="Parentheses",e[e.TypeAssertions=2]="TypeAssertions",e[e.NonNullAssertions=4]="NonNullAssertions",e[e.PartiallyEmittedExpressions=8]="PartiallyEmittedExpressions",e[e.Assertions=6]="Assertions",e[e.All=15]="All",e[e.ExcludeJSDocTypeAssertion=16]="ExcludeJSDocTypeAssertion",e))(kL||{}),iD=(e=>(e[e.Warning=0]="Warning",e[e.Error=1]="Error",e[e.Suggestion=2]="Suggestion",e[e.Message=3]="Message",e))(iD||{});function od(e,n=!0){let r=iD[e.category];return n?r.toLowerCase():r}var sD=(e=>(e[e.Unreachable=1]="Unreachable",e[e.Start=2]="Start",e[e.BranchLabel=4]="BranchLabel",e[e.LoopLabel=8]="LoopLabel",e[e.Assignment=16]="Assignment",e[e.TrueCondition=32]="TrueCondition",e[e.FalseCondition=64]="FalseCondition",e[e.SwitchClause=128]="SwitchClause",e[e.ArrayMutation=256]="ArrayMutation",e[e.Call=512]="Call",e[e.ReduceLabel=1024]="ReduceLabel",e[e.Referenced=2048]="Referenced",e[e.Shared=4096]="Shared",e[e.Label=12]="Label",e[e.Condition=96]="Condition",e))(sD||{}),CL=(e=>(e[e.EOF=-1]="EOF",e[e.nullCharacter=0]="nullCharacter",e[e.maxAsciiCharacter=127]="maxAsciiCharacter",e[e.lineFeed=10]="lineFeed",e[e.carriageReturn=13]="carriageReturn",e[e.lineSeparator=8232]="lineSeparator",e[e.paragraphSeparator=8233]="paragraphSeparator",e[e.nextLine=133]="nextLine",e[e.space=32]="space",e[e.nonBreakingSpace=160]="nonBreakingSpace",e[e.enQuad=8192]="enQuad",e[e.emQuad=8193]="emQuad",e[e.enSpace=8194]="enSpace",e[e.emSpace=8195]="emSpace",e[e.threePerEmSpace=8196]="threePerEmSpace",e[e.fourPerEmSpace=8197]="fourPerEmSpace",e[e.sixPerEmSpace=8198]="sixPerEmSpace",e[e.figureSpace=8199]="figureSpace",e[e.punctuationSpace=8200]="punctuationSpace",e[e.thinSpace=8201]="thinSpace",e[e.hairSpace=8202]="hairSpace",e[e.zeroWidthSpace=8203]="zeroWidthSpace",e[e.narrowNoBreakSpace=8239]="narrowNoBreakSpace",e[e.ideographicSpace=12288]="ideographicSpace",e[e.mathematicalSpace=8287]="mathematicalSpace",e[e.ogham=5760]="ogham",e[e.replacementCharacter=65533]="replacementCharacter",e[e._=95]="_",e[e.$=36]="$",e[e._0=48]="_0",e[e._1=49]="_1",e[e._2=50]="_2",e[e._3=51]="_3",e[e._4=52]="_4",e[e._5=53]="_5",e[e._6=54]="_6",e[e._7=55]="_7",e[e._8=56]="_8",e[e._9=57]="_9",e[e.a=97]="a",e[e.b=98]="b",e[e.c=99]="c",e[e.d=100]="d",e[e.e=101]="e",e[e.f=102]="f",e[e.g=103]="g",e[e.h=104]="h",e[e.i=105]="i",e[e.j=106]="j",e[e.k=107]="k",e[e.l=108]="l",e[e.m=109]="m",e[e.n=110]="n",e[e.o=111]="o",e[e.p=112]="p",e[e.q=113]="q",e[e.r=114]="r",e[e.s=115]="s",e[e.t=116]="t",e[e.u=117]="u",e[e.v=118]="v",e[e.w=119]="w",e[e.x=120]="x",e[e.y=121]="y",e[e.z=122]="z",e[e.A=65]="A",e[e.B=66]="B",e[e.C=67]="C",e[e.D=68]="D",e[e.E=69]="E",e[e.F=70]="F",e[e.G=71]="G",e[e.H=72]="H",e[e.I=73]="I",e[e.J=74]="J",e[e.K=75]="K",e[e.L=76]="L",e[e.M=77]="M",e[e.N=78]="N",e[e.O=79]="O",e[e.P=80]="P",e[e.Q=81]="Q",e[e.R=82]="R",e[e.S=83]="S",e[e.T=84]="T",e[e.U=85]="U",e[e.V=86]="V",e[e.W=87]="W",e[e.X=88]="X",e[e.Y=89]="Y",e[e.Z=90]="Z",e[e.ampersand=38]="ampersand",e[e.asterisk=42]="asterisk",e[e.at=64]="at",e[e.backslash=92]="backslash",e[e.backtick=96]="backtick",e[e.bar=124]="bar",e[e.caret=94]="caret",e[e.closeBrace=125]="closeBrace",e[e.closeBracket=93]="closeBracket",e[e.closeParen=41]="closeParen",e[e.colon=58]="colon",e[e.comma=44]="comma",e[e.dot=46]="dot",e[e.doubleQuote=34]="doubleQuote",e[e.equals=61]="equals",e[e.exclamation=33]="exclamation",e[e.greaterThan=62]="greaterThan",e[e.hash=35]="hash",e[e.lessThan=60]="lessThan",e[e.minus=45]="minus",e[e.openBrace=123]="openBrace",e[e.openBracket=91]="openBracket",e[e.openParen=40]="openParen",e[e.percent=37]="percent",e[e.plus=43]="plus",e[e.question=63]="question",e[e.semicolon=59]="semicolon",e[e.singleQuote=39]="singleQuote",e[e.slash=47]="slash",e[e.tilde=126]="tilde",e[e.backspace=8]="backspace",e[e.formFeed=12]="formFeed",e[e.byteOrderMark=65279]="byteOrderMark",e[e.tab=9]="tab",e[e.verticalTab=11]="verticalTab",e))(CL||{}),PL=(e=>(e[e.None=0]="None",e[e.PrecedingLineBreak=1]="PrecedingLineBreak",e[e.PrecedingJSDocComment=2]="PrecedingJSDocComment",e[e.Unterminated=4]="Unterminated",e[e.ExtendedUnicodeEscape=8]="ExtendedUnicodeEscape",e[e.Scientific=16]="Scientific",e[e.Octal=32]="Octal",e[e.HexSpecifier=64]="HexSpecifier",e[e.BinarySpecifier=128]="BinarySpecifier",e[e.OctalSpecifier=256]="OctalSpecifier",e[e.ContainsSeparator=512]="ContainsSeparator",e[e.UnicodeEscape=1024]="UnicodeEscape",e[e.ContainsInvalidEscape=2048]="ContainsInvalidEscape",e[e.HexEscape=4096]="HexEscape",e[e.ContainsLeadingZero=8192]="ContainsLeadingZero",e[e.ContainsInvalidSeparator=16384]="ContainsInvalidSeparator",e[e.Char=32768]="Char",e[e.BinaryOrOctalSpecifier=384]="BinaryOrOctalSpecifier",e[e.WithSpecifier=448]="WithSpecifier",e[e.StringLiteralFlags=7176]="StringLiteralFlags",e[e.NumericLiteralFlags=58352]="NumericLiteralFlags",e[e.TemplateLiteralLikeFlags=7176]="TemplateLiteralLikeFlags",e[e.IsInvalid=26656]="IsInvalid",e))(PL||{}),oD=(e=>(e[e.None=0]="None",e[e.FunctionScopedVariable=1]="FunctionScopedVariable",e[e.BlockScopedVariable=2]="BlockScopedVariable",e[e.Property=4]="Property",e[e.EnumMember=8]="EnumMember",e[e.Function=16]="Function",e[e.Class=32]="Class",e[e.Interface=64]="Interface",e[e.ConstEnum=128]="ConstEnum",e[e.RegularEnum=256]="RegularEnum",e[e.ValueModule=512]="ValueModule",e[e.NamespaceModule=1024]="NamespaceModule",e[e.TypeLiteral=2048]="TypeLiteral",e[e.ObjectLiteral=4096]="ObjectLiteral",e[e.Method=8192]="Method",e[e.Constructor=16384]="Constructor",e[e.GetAccessor=32768]="GetAccessor",e[e.SetAccessor=65536]="SetAccessor",e[e.Signature=131072]="Signature",e[e.TypeParameter=262144]="TypeParameter",e[e.TypeAlias=524288]="TypeAlias",e[e.ExportValue=1048576]="ExportValue",e[e.Alias=2097152]="Alias",e[e.Prototype=4194304]="Prototype",e[e.FakeGlobal=8388608]="FakeGlobal",e[e.Optional=16777216]="Optional",e[e.Transient=33554432]="Transient",e[e.Assignment=67108864]="Assignment",e[e.ModuleExports=134217728]="ModuleExports",e[e.Define=268435456]="Define",e[e.All=-1]="All",e[e.Enum=384]="Enum",e[e.Variable=3]="Variable",e[e.Value=111551]="Value",e[e.ValueOrDefine=268547007]="ValueOrDefine",e[e.Type=788968]="Type",e[e.Namespace=1920]="Namespace",e[e.Module=1536]="Module",e[e.Accessor=98304]="Accessor",e[e.FunctionScopedVariableExcludes=111550]="FunctionScopedVariableExcludes",e[e.BlockScopedVariableExcludes=268547007]="BlockScopedVariableExcludes",e[e.ParameterExcludes=111551]="ParameterExcludes",e[e.PropertyExcludes=0]="PropertyExcludes",e[e.EnumMemberExcludes=900095]="EnumMemberExcludes",e[e.FunctionExcludes=110991]="FunctionExcludes",e[e.DefineExcludes=111039]="DefineExcludes",e[e.ClassExcludes=899503]="ClassExcludes",e[e.InterfaceExcludes=788872]="InterfaceExcludes",e[e.RegularEnumExcludes=899327]="RegularEnumExcludes",e[e.ConstEnumExcludes=899967]="ConstEnumExcludes",e[e.ValueModuleExcludes=110735]="ValueModuleExcludes",e[e.NamespaceModuleExcludes=0]="NamespaceModuleExcludes",e[e.MethodExcludes=103359]="MethodExcludes",e[e.GetAccessorExcludes=46015]="GetAccessorExcludes",e[e.SetAccessorExcludes=78783]="SetAccessorExcludes",e[e.AccessorExcludes=13247]="AccessorExcludes",e[e.TypeParameterExcludes=526824]="TypeParameterExcludes",e[e.TypeAliasExcludes=788968]="TypeAliasExcludes",e[e.AliasExcludes=2097152]="AliasExcludes",e[e.ModuleMember=2623475]="ModuleMember",e[e.ExportHasLocal=944]="ExportHasLocal",e[e.BlockScoped=418]="BlockScoped",e[e.PropertyOrAccessor=98308]="PropertyOrAccessor",e[e.ClassMember=106500]="ClassMember",e[e.ExportSupportsDefaultModifier=112]="ExportSupportsDefaultModifier",e[e.ExportDoesNotSupportDefaultModifier=-113]="ExportDoesNotSupportDefaultModifier",e[e.Classifiable=2885600]="Classifiable",e[e.LateBindingContainer=6256]="LateBindingContainer",e))(oD||{}),aD=(e=>(e[e.None=0]="None",e[e.Class=1]="Class",e[e.Interface=2]="Interface",e[e.Reference=4]="Reference",e[e.Tuple=8]="Tuple",e[e.Anonymous=16]="Anonymous",e[e.Mapped=32]="Mapped",e[e.Instantiated=64]="Instantiated",e[e.ObjectLiteral=128]="ObjectLiteral",e[e.EvolvingArray=256]="EvolvingArray",e[e.ObjectLiteralPatternWithComputedProperties=512]="ObjectLiteralPatternWithComputedProperties",e[e.ReverseMapped=1024]="ReverseMapped",e[e.MappingLiteral=2048]="MappingLiteral",e[e.JSLiteral=4096]="JSLiteral",e[e.FreshLiteral=8192]="FreshLiteral",e[e.ArrayLiteral=16384]="ArrayLiteral",e[e.PrimitiveUnion=32768]="PrimitiveUnion",e[e.ContainsWideningType=65536]="ContainsWideningType",e[e.ContainsObjectOrArrayLiteral=131072]="ContainsObjectOrArrayLiteral",e[e.NonInferrableType=262144]="NonInferrableType",e[e.CouldContainTypeVariablesComputed=524288]="CouldContainTypeVariablesComputed",e[e.CouldContainTypeVariables=1048576]="CouldContainTypeVariables",e[e.ClassOrInterface=3]="ClassOrInterface",e[e.RequiresWidening=196608]="RequiresWidening",e[e.PropagatingFlags=458752]="PropagatingFlags",e[e.InstantiatedMapped=96]="InstantiatedMapped",e[e.ObjectTypeKindMask=1343]="ObjectTypeKindMask",e[e.ContainsSpread=2097152]="ContainsSpread",e[e.ObjectRestType=4194304]="ObjectRestType",e[e.InstantiationExpressionType=8388608]="InstantiationExpressionType",e[e.SingleSignatureType=134217728]="SingleSignatureType",e[e.IsClassInstanceClone=16777216]="IsClassInstanceClone",e[e.IdenticalBaseTypeCalculated=33554432]="IdenticalBaseTypeCalculated",e[e.IdenticalBaseTypeExists=67108864]="IdenticalBaseTypeExists",e[e.IsGenericTypeComputed=2097152]="IsGenericTypeComputed",e[e.IsGenericObjectType=4194304]="IsGenericObjectType",e[e.IsGenericIndexType=8388608]="IsGenericIndexType",e[e.IsGenericType=12582912]="IsGenericType",e[e.ContainsIntersections=16777216]="ContainsIntersections",e[e.IsUnknownLikeUnionComputed=33554432]="IsUnknownLikeUnionComputed",e[e.IsUnknownLikeUnion=67108864]="IsUnknownLikeUnion",e[e.IsNeverIntersectionComputed=16777216]="IsNeverIntersectionComputed",e[e.IsNeverIntersection=33554432]="IsNeverIntersection",e[e.IsConstrainedTypeVariable=67108864]="IsConstrainedTypeVariable",e))(aD||{}),cD=(e=>(e[e.None=0]="None",e[e.HasRestParameter=1]="HasRestParameter",e[e.HasLiteralTypes=2]="HasLiteralTypes",e[e.Abstract=4]="Abstract",e[e.IsVarArgs=8]="IsVarArgs",e[e.HasJsDoc=16]="HasJsDoc",e[e.IsInnerCallChain=64]="IsInnerCallChain",e[e.IsOuterCallChain=128]="IsOuterCallChain",e[e.IsUntypedSignatureInJSFile=256]="IsUntypedSignatureInJSFile",e[e.IsNonInferrable=512]="IsNonInferrable",e[e.IsSignatureCandidateForOverloadFailure=1024]="IsSignatureCandidateForOverloadFailure",e[e.PropagatingFlags=1295]="PropagatingFlags",e[e.CallChainFlags=192]="CallChainFlags",e))(cD||{}),xL=(e=>(e[e.None=0]="None",e[e.StringsOnly=1]="StringsOnly",e[e.NoIndexSignatures=2]="NoIndexSignatures",e[e.NoReducibleCheck=4]="NoReducibleCheck",e))(xL||{}),DL=(e=>(e[e.Simple=0]="Simple",e[e.Array=1]="Array",e[e.Deferred=2]="Deferred",e[e.Function=3]="Function",e[e.Composite=4]="Composite",e[e.Merged=5]="Merged",e))(DL||{}),EL=(e=>(e.EfunSuperPrefix="efun",e.EfunNamespace="efun::",e.Call="__call",e.Constructor="__constructor",e.New="__new",e.Index="__index",e.ExportStar="__export",e.Global="__global",e.Missing="__missing",e.Type="__type",e.Object="__object",e.Class="__class",e.Function="__function",e.Computed="__computed",e.Resolving="__resolving__",e.ExportEquals="export=",e.Default="default",e.This="this",e.InstantiationExpression="__instantiationExpression",e.ImportAttributes="__importAttributes",e.VarDocTags="__varDocTags",e))(EL||{}),Sv=class{},wL=(e=>(e[e.Invariant=0]="Invariant",e[e.Covariant=1]="Covariant",e[e.Contravariant=2]="Contravariant",e[e.Bivariant=3]="Bivariant",e[e.Independent=4]="Independent",e[e.VarianceMask=7]="VarianceMask",e[e.Unmeasurable=8]="Unmeasurable",e[e.Unreliable=16]="Unreliable",e[e.AllowsStructuralFallback=24]="AllowsStructuralFallback",e))(wL||{}),NL=(e=>(e[e.None=0]="None",e[e.Instantiated=1]="Instantiated",e[e.SyntheticProperty=2]="SyntheticProperty",e[e.SyntheticMethod=4]="SyntheticMethod",e[e.Readonly=8]="Readonly",e[e.ReadPartial=16]="ReadPartial",e[e.WritePartial=32]="WritePartial",e[e.HasNonUniformType=64]="HasNonUniformType",e[e.HasLiteralType=128]="HasLiteralType",e[e.ContainsPublic=256]="ContainsPublic",e[e.ContainsProtected=512]="ContainsProtected",e[e.ContainsPrivate=1024]="ContainsPrivate",e[e.ContainsStatic=2048]="ContainsStatic",e[e.Late=4096]="Late",e[e.ReverseMapped=8192]="ReverseMapped",e[e.OptionalParameter=16384]="OptionalParameter",e[e.RestParameter=32768]="RestParameter",e[e.DeferredType=65536]="DeferredType",e[e.HasNeverType=131072]="HasNeverType",e[e.Mapped=262144]="Mapped",e[e.StripOptional=524288]="StripOptional",e[e.Unresolved=1048576]="Unresolved",e[e.Synthetic=6]="Synthetic",e[e.Discriminant=192]="Discriminant",e[e.Partial=48]="Partial",e))(NL||{}),lD=(e=>(e[e.None=0]="None",e[e.TypeChecked=1]="TypeChecked",e[e.LexicalThis=2]="LexicalThis",e[e.CaptureThis=4]="CaptureThis",e[e.CaptureNewTarget=8]="CaptureNewTarget",e[e.SuperInstance=16]="SuperInstance",e[e.SuperStatic=32]="SuperStatic",e[e.ContextChecked=64]="ContextChecked",e[e.MethodWithSuperPropertyAccessInAsync=128]="MethodWithSuperPropertyAccessInAsync",e[e.MethodWithSuperPropertyAssignmentInAsync=256]="MethodWithSuperPropertyAssignmentInAsync",e[e.CaptureArguments=512]="CaptureArguments",e[e.EnumValuesComputed=1024]="EnumValuesComputed",e[e.LexicalModuleMergesWithClass=2048]="LexicalModuleMergesWithClass",e[e.LoopWithCapturedBlockScopedBinding=4096]="LoopWithCapturedBlockScopedBinding",e[e.ContainsCapturedBlockScopeBinding=8192]="ContainsCapturedBlockScopeBinding",e[e.CapturedBlockScopedBinding=16384]="CapturedBlockScopedBinding",e[e.BlockScopedBindingInLoop=32768]="BlockScopedBindingInLoop",e[e.NeedsLoopOutParameter=65536]="NeedsLoopOutParameter",e[e.AssignmentsMarked=131072]="AssignmentsMarked",e[e.ContainsConstructorReference=262144]="ContainsConstructorReference",e[e.ConstructorReference=536870912]="ConstructorReference",e[e.ContainsClassWithPrivateIdentifiers=1048576]="ContainsClassWithPrivateIdentifiers",e[e.ContainsSuperPropertyInStaticInitializer=2097152]="ContainsSuperPropertyInStaticInitializer",e[e.InCheckIdentifier=4194304]="InCheckIdentifier",e[e.PartiallyTypeChecked=8388608]="PartiallyTypeChecked",e[e.LazyFlags=539358128]="LazyFlags",e))(lD||{}),IL=(e=>(e[e.None=0]="None",e[e.WriteTypeParametersOrArguments=1]="WriteTypeParametersOrArguments",e[e.UseOnlyExternalAliasing=2]="UseOnlyExternalAliasing",e[e.AllowAnyNodeKind=4]="AllowAnyNodeKind",e[e.UseAliasDefinedOutsideCurrentScope=8]="UseAliasDefinedOutsideCurrentScope",e[e.WriteComputedProps=16]="WriteComputedProps",e[e.DoNotIncludeSymbolChain=32]="DoNotIncludeSymbolChain",e))(IL||{}),AL=(e=>(e[e.None=0]="None",e[e.Literal=1]="Literal",e[e.Subtype=2]="Subtype",e))(AL||{}),OL=(e=>(e[e.None=0]="None",e[e.Succeeded=1]="Succeeded",e[e.Failed=2]="Failed",e[e.Reported=4]="Reported",e[e.ReportsUnmeasurable=8]="ReportsUnmeasurable",e[e.ReportsUnreliable=16]="ReportsUnreliable",e[e.ReportsMask=24]="ReportsMask",e[e.ComplexityOverflow=32]="ComplexityOverflow",e[e.StackDepthOverflow=64]="StackDepthOverflow",e[e.Overflow=96]="Overflow",e))(OL||{}),LL=(e=>(e.C=".c",e.Lpc=".lpc",e.H=".h",e.Json=".json",e))(LL||{}),FL=(e=>(e[e.LDMud=0]="LDMud",e[e.FluffOS=1]="FluffOS",e[e.Standard=2]="Standard",e))(FL||{}),RL=["LDMud","FluffOS","Standard"],ML=(e=>(e[e.ParseAll=0]="ParseAll",e[e.ParseNone=1]="ParseNone",e[e.ParseForTypeErrors=2]="ParseForTypeErrors",e[e.ParseForTypeInfo=3]="ParseForTypeInfo",e))(ML||{}),jL=(e=>(e[e.String=0]="String",e[e.Number=1]="Number",e))(jL||{}),BL=(e=>(e[e.CarriageReturnLineFeed=0]="CarriageReturnLineFeed",e[e.LineFeed=1]="LineFeed",e))(BL||{}),WL=(e=>(e[e.FixedPollingInterval=0]="FixedPollingInterval",e[e.PriorityPollingInterval=1]="PriorityPollingInterval",e[e.DynamicPriorityPolling=2]="DynamicPriorityPolling",e[e.FixedChunkSizePolling=3]="FixedChunkSizePolling",e[e.UseFsEvents=4]="UseFsEvents",e[e.UseFsEventsOnParentDirectory=5]="UseFsEventsOnParentDirectory",e))(WL||{}),UL=(e=>(e[e.UseFsEvents=0]="UseFsEvents",e[e.FixedPollingInterval=1]="FixedPollingInterval",e[e.DynamicPriorityPolling=2]="DynamicPriorityPolling",e[e.FixedChunkSizePolling=3]="FixedChunkSizePolling",e))(UL||{}),JL=(e=>(e[e.FixedInterval=0]="FixedInterval",e[e.PriorityInterval=1]="PriorityInterval",e[e.DynamicPriority=2]="DynamicPriority",e[e.FixedChunkSize=3]="FixedChunkSize",e))(JL||{}),zL=(e=>(e[e.None=0]="None",e[e.Recursive=1]="Recursive",e))(zL||{}),uD=(e=>(e[e.Not=0]="Not",e[e.SafeModules=1]="SafeModules",e[e.Completely=2]="Completely",e))(uD||{}),VL=(e=>(e[e.FilePreprocessingLibReferenceDiagnostic=0]="FilePreprocessingLibReferenceDiagnostic",e[e.FilePreprocessingFileExplainingDiagnostic=1]="FilePreprocessingFileExplainingDiagnostic",e[e.ResolutionDiagnostics=2]="ResolutionDiagnostics",e))(VL||{}),qL=(e=>(e[e.Unknown=0]="Unknown",e[e.LPC=1]="LPC",e[e.External=5]="External",e[e.JSON=6]="JSON",e[e.Deferred=7]="Deferred",e))(qL||{}),$L=(e=>(e[e.LPC=1]="LPC",e[e.JavaScript=2]="JavaScript",e[e.JSON=3]="JSON",e[e.Latest=1]="Latest",e))($L||{}),HL=(e=>(e[e.None=0]="None",e[e.LPC=1]="LPC",e))(HL||{}),fD=(e=>(e[e.Classic=1]="Classic",e))(fD||{}),GL=(e=>(e[e.None=0]="None",e[e.NoTruncation=1]="NoTruncation",e[e.WriteArrayAsGenericType=2]="WriteArrayAsGenericType",e[e.GenerateNamesForShadowedTypeParams=4]="GenerateNamesForShadowedTypeParams",e[e.UseStructuralFallback=8]="UseStructuralFallback",e[e.ForbidIndexedAccessSymbolReferences=16]="ForbidIndexedAccessSymbolReferences",e[e.WriteTypeArgumentsOfSignature=32]="WriteTypeArgumentsOfSignature",e[e.UseFullyQualifiedType=64]="UseFullyQualifiedType",e[e.UseOnlyExternalAliasing=128]="UseOnlyExternalAliasing",e[e.SuppressAnyReturnType=256]="SuppressAnyReturnType",e[e.WriteTypeParametersInQualifiedName=512]="WriteTypeParametersInQualifiedName",e[e.MultilineObjectLiterals=1024]="MultilineObjectLiterals",e[e.WriteClassExpressionAsTypeLiteral=2048]="WriteClassExpressionAsTypeLiteral",e[e.UseTypeOfFunction=4096]="UseTypeOfFunction",e[e.OmitParameterModifiers=8192]="OmitParameterModifiers",e[e.UseAliasDefinedOutsideCurrentScope=16384]="UseAliasDefinedOutsideCurrentScope",e[e.UseSingleQuotesForStringLiteralType=268435456]="UseSingleQuotesForStringLiteralType",e[e.NoTypeReduction=536870912]="NoTypeReduction",e[e.OmitThisParameter=33554432]="OmitThisParameter",e[e.AllowThisInObjectLiteral=32768]="AllowThisInObjectLiteral",e[e.AllowQualifiedNameInPlaceOfIdentifier=65536]="AllowQualifiedNameInPlaceOfIdentifier",e[e.AllowAnonymousIdentifier=131072]="AllowAnonymousIdentifier",e[e.AllowEmptyUnionOrIntersection=262144]="AllowEmptyUnionOrIntersection",e[e.AllowEmptyTuple=524288]="AllowEmptyTuple",e[e.AllowUniqueESSymbolType=1048576]="AllowUniqueESSymbolType",e[e.AllowEmptyIndexInfoType=2097152]="AllowEmptyIndexInfoType",e[e.WriteComputedProps=1073741824]="WriteComputedProps",e[e.NoSyntacticPrinter=-2147483648]="NoSyntacticPrinter",e[e.AllowNodeModulesRelativePaths=67108864]="AllowNodeModulesRelativePaths",e[e.DoNotIncludeSymbolChain=134217728]="DoNotIncludeSymbolChain",e[e.AllowUnresolvedNames=1]="AllowUnresolvedNames",e[e.IgnoreErrors=70221824]="IgnoreErrors",e[e.InObjectTypeLiteral=4194304]="InObjectTypeLiteral",e[e.InTypeAlias=8388608]="InTypeAlias",e[e.InInitialEntityName=16777216]="InInitialEntityName",e))(GL||{}),QL=(e=>(e[e.False=0]="False",e[e.Unknown=1]="Unknown",e[e.Maybe=3]="Maybe",e[e.True=-1]="True",e))(QL||{}),YL=(e=>(e[e.None=0]="None",e[e.TypeScriptClassWrapper=1]="TypeScriptClassWrapper",e[e.NeverApplyImportHelper=2]="NeverApplyImportHelper",e[e.IgnoreSourceNewlines=4]="IgnoreSourceNewlines",e[e.Immutable=8]="Immutable",e[e.IndirectCall=16]="IndirectCall",e[e.TransformPrivateStaticElements=32]="TransformPrivateStaticElements",e))(YL||{}),ZL=(e=>(e[e.SourceFile=0]="SourceFile",e[e.Expression=1]="Expression",e[e.IdentifierName=2]="IdentifierName",e[e.MappedTypeParameter=3]="MappedTypeParameter",e[e.Unspecified=4]="Unspecified",e[e.EmbeddedStatement=5]="EmbeddedStatement",e[e.JsxAttributeValue=6]="JsxAttributeValue",e[e.ImportTypeNodeAttributes=7]="ImportTypeNodeAttributes",e))(ZL||{}),XL=(e=>(e[e.None=0]="None",e[e.SingleLine=0]="SingleLine",e[e.MultiLine=1]="MultiLine",e[e.PreserveLines=2]="PreserveLines",e[e.LinesMask=3]="LinesMask",e[e.NotDelimited=0]="NotDelimited",e[e.BarDelimited=4]="BarDelimited",e[e.AmpersandDelimited=8]="AmpersandDelimited",e[e.CommaDelimited=16]="CommaDelimited",e[e.AsteriskDelimited=32]="AsteriskDelimited",e[e.DelimitersMask=60]="DelimitersMask",e[e.AllowTrailingComma=64]="AllowTrailingComma",e[e.Indented=128]="Indented",e[e.SpaceBetweenBraces=256]="SpaceBetweenBraces",e[e.SpaceBetweenSiblings=512]="SpaceBetweenSiblings",e[e.Braces=1024]="Braces",e[e.Parenthesis=2048]="Parenthesis",e[e.AngleBrackets=4096]="AngleBrackets",e[e.SquareBrackets=8192]="SquareBrackets",e[e.ArrayBrackets=4194304]="ArrayBrackets",e[e.BracketsMask=4209664]="BracketsMask",e[e.OptionalIfUndefined=16384]="OptionalIfUndefined",e[e.OptionalIfEmpty=32768]="OptionalIfEmpty",e[e.Optional=49152]="Optional",e[e.PreferNewLine=65536]="PreferNewLine",e[e.NoTrailingNewLine=131072]="NoTrailingNewLine",e[e.NoInterveningComments=262144]="NoInterveningComments",e[e.NoSpaceIfEmpty=524288]="NoSpaceIfEmpty",e[e.SingleElement=1048576]="SingleElement",e[e.SpaceAfterList=2097152]="SpaceAfterList",e[e.Modifiers=2359808]="Modifiers",e[e.HeritageClauses=512]="HeritageClauses",e[e.SingleLineTypeLiteralMembers=768]="SingleLineTypeLiteralMembers",e[e.MultiLineTypeLiteralMembers=32897]="MultiLineTypeLiteralMembers",e[e.SingleLineTupleTypeElements=528]="SingleLineTupleTypeElements",e[e.MultiLineTupleTypeElements=657]="MultiLineTupleTypeElements",e[e.UnionTypeConstituents=516]="UnionTypeConstituents",e[e.IntersectionTypeConstituents=520]="IntersectionTypeConstituents",e[e.ObjectBindingPatternElements=525136]="ObjectBindingPatternElements",e[e.ArrayBindingPatternElements=524880]="ArrayBindingPatternElements",e[e.ObjectLiteralExpressionProperties=526226]="ObjectLiteralExpressionProperties",e[e.ImportAttributes=526226]="ImportAttributes",e[e.ImportClauseEntries=526226]="ImportClauseEntries",e[e.ArrayLiteralExpressionElements=4195026]="ArrayLiteralExpressionElements",e[e.JsArrayLiteralExpressionElements=8914]="JsArrayLiteralExpressionElements",e[e.CommaListElements=528]="CommaListElements",e[e.CallExpressionArguments=2576]="CallExpressionArguments",e[e.NewExpressionArguments=18960]="NewExpressionArguments",e[e.TemplateExpressionSpans=262144]="TemplateExpressionSpans",e[e.SingleLineBlockStatements=768]="SingleLineBlockStatements",e[e.MultiLineBlockStatements=129]="MultiLineBlockStatements",e[e.VariableDeclarationList=528]="VariableDeclarationList",e[e.SingleLineFunctionBodyStatements=768]="SingleLineFunctionBodyStatements",e[e.MultiLineFunctionBodyStatements=1]="MultiLineFunctionBodyStatements",e[e.ClassHeritageClauses=0]="ClassHeritageClauses",e[e.ClassMembers=129]="ClassMembers",e[e.InterfaceMembers=129]="InterfaceMembers",e[e.EnumMembers=145]="EnumMembers",e[e.CaseBlockClauses=129]="CaseBlockClauses",e[e.NamedImportsOrExportsElements=525136]="NamedImportsOrExportsElements",e[e.JsxElementOrFragmentChildren=262144]="JsxElementOrFragmentChildren",e[e.JsxElementAttributes=262656]="JsxElementAttributes",e[e.CaseOrDefaultClauseStatements=163969]="CaseOrDefaultClauseStatements",e[e.HeritageClauseTypes=528]="HeritageClauseTypes",e[e.SourceFileStatements=131073]="SourceFileStatements",e[e.Decorators=2146305]="Decorators",e[e.TypeArguments=53776]="TypeArguments",e[e.TypeParameters=53776]="TypeParameters",e[e.Parameters=2576]="Parameters",e[e.IndexSignatureParameters=8848]="IndexSignatureParameters",e[e.JSDocComment=33]="JSDocComment",e))(XL||{}),KL=(e=>(e[e.None=0]="None",e[e.Signature=1]="Signature",e[e.NoConstraints=2]="NoConstraints",e[e.Completions=4]="Completions",e[e.SkipBindingPatterns=8]="SkipBindingPatterns",e))(KL||{}),e7=(e=>(e[e.None=0]="None",e[e.NakedTypeVariable=1]="NakedTypeVariable",e[e.SpeculativeTuple=2]="SpeculativeTuple",e[e.SubstituteSource=4]="SubstituteSource",e[e.HomomorphicMappedType=8]="HomomorphicMappedType",e[e.PartialHomomorphicMappedType=16]="PartialHomomorphicMappedType",e[e.MappedTypeConstraint=32]="MappedTypeConstraint",e[e.ContravariantConditional=64]="ContravariantConditional",e[e.ReturnType=128]="ReturnType",e[e.LiteralKeyof=256]="LiteralKeyof",e[e.NoConstraints=512]="NoConstraints",e[e.AlwaysStrict=1024]="AlwaysStrict",e[e.MaxValue=2048]="MaxValue",e[e.PriorityImpliesCombination=416]="PriorityImpliesCombination",e[e.Circularity=-1]="Circularity",e))(e7||{}),t7=(e=>(e[e.None=0]="None",e[e.NoDefault=1]="NoDefault",e[e.AnyDefault=2]="AnyDefault",e[e.SkippedGenericFunction=4]="SkippedGenericFunction",e))(t7||{}),n7=(e=>(e[e.Accessible=0]="Accessible",e[e.NotAccessible=1]="NotAccessible",e[e.CannotBeNamed=2]="CannotBeNamed",e[e.NotResolved=3]="NotResolved",e))(n7||{}),r7=(e=>(e[e.None=0]="None",e[e.InParameters=1]="InParameters",e[e.VariablesHoistedInParameters=2]="VariablesHoistedInParameters",e))(r7||{}),F2=(e=>(e[e.None=0]="None",e[e.Auto=1]="Auto",e[e.Loop=2]="Loop",e[e.Unique=3]="Unique",e[e.Node=4]="Node",e[e.KindMask=7]="KindMask",e[e.ReservedInNestedScopes=8]="ReservedInNestedScopes",e[e.Optimistic=16]="Optimistic",e[e.FileLevel=32]="FileLevel",e[e.AllowNameSubstitution=64]="AllowNameSubstitution",e))(F2||{}),i7=(e=>(e[e.None=0]="None",e[e.NoSupertypeReduction=1]="NoSupertypeReduction",e[e.NoConstraintReduction=2]="NoConstraintReduction",e))(i7||{}),s7=(e=>(e[e.ExpectError=0]="ExpectError",e[e.Ignore=1]="Ignore",e))(s7||{}),o7=(e=>(e[e.TabStop=0]="TabStop",e[e.Placeholder=1]="Placeholder",e[e.Choice=2]="Choice",e[e.Variable=3]="Variable",e))(o7||{}),a7=(e=>(e[e.None=0]="None",e[e.IncludeUndefined=1]="IncludeUndefined",e[e.NoIndexSignatures=2]="NoIndexSignatures",e[e.Writing=4]="Writing",e[e.CacheSymbol=8]="CacheSymbol",e[e.NoTupleBoundsCheck=16]="NoTupleBoundsCheck",e[e.ExpressionPosition=32]="ExpressionPosition",e[e.ReportDeprecated=64]="ReportDeprecated",e[e.SuppressNoImplicitAnyError=128]="SuppressNoImplicitAnyError",e[e.Contextual=256]="Contextual",e[e.Persistent=1]="Persistent",e))(a7||{}),c7=(e=>(e[e.This=0]="This",e[e.Identifier=1]="Identifier",e[e.AssertsThis=2]="AssertsThis",e[e.AssertsIdentifier=3]="AssertsIdentifier",e))(c7||{}),l7=(e=>(e[e.None=0]="None",e[e.TripleSlashXML=1]="TripleSlashXML",e[e.SingleLine=2]="SingleLine",e[e.MultiLine=4]="MultiLine",e[e.All=7]="All",e[e.Default=7]="Default",e))(l7||{}),pD={reference:{args:[{name:"types",optional:!0,captureSpan:!0},{name:"lib",optional:!0,captureSpan:!0},{name:"path",optional:!0,captureSpan:!0},{name:"no-default-lib",optional:!0},{name:"resolution-mode",optional:!0},{name:"preserve",optional:!0}],kind:1},"amd-dependency":{args:[{name:"path"},{name:"name",optional:!0}],kind:1},"amd-module":{args:[{name:"name"}],kind:1},"this-object":{args:[{name:"name"}],kind:2},this_object:{args:[{name:"name"}],kind:2},"lpc-check":{kind:2},"lpc-nocheck":{kind:2}},u7=(e=>(e[e.Success=0]="Success",e[e.DiagnosticsPresent_OutputsSkipped=1]="DiagnosticsPresent_OutputsSkipped",e[e.DiagnosticsPresent_OutputsGenerated=2]="DiagnosticsPresent_OutputsGenerated",e[e.InvalidProject_OutputsSkipped=3]="InvalidProject_OutputsSkipped",e[e.ProjectReferenceCycle_OutputsSkipped=4]="ProjectReferenceCycle_OutputsSkipped",e))(u7||{});function W(e,n,r,s,a,l,u){return{code:e,category:n,key:r,message:s,reportsUnnecessary:a,elidedInCompatabilityPyramid:l,reportsDeprecated:u}}var P={Structs_not_supported:W(9001,1,"Structs_not_supported_9001","Structs not supported."),Semicolon_expected:W(9002,1,"Semicolon_expected_9002","Semicolon expected."),Macro_already_defined_0:W(9003,1,"Macro_already_defined_0_9003","Macro already defined '{0}'."),Missing_argument_for_macro_0:W(9004,1,"Missing_argument_for_macro_0_9004","Missing argument for macro '{0}'."),Else_directive_without_if:W(9005,1,"Else_directive_without_if_9005","#else directive without #if."),Elseif_directive_without_if:W(9007,1,"Elseif_directive_without_if_9007","#elseif directive without #if."),Unterminated_directive:W(9006,1,"Unterminated_directive_9006","Unterminated directive."),Expected_newline_after_directive:W(9008,1,"Expected_newline_after_directive_9008","Expected newline after directive."),Pragma_directive_requires_at_least_one_argument:W(9009,1,"Pragma_directive_requires_at_least_one_argument_9009","#pragma directive requires at least one argument."),Unexpected_endIf_directive:W(9010,1,"Unexpected_endIf_directive_9010","Unexpected #endIf directive."),Catch_expression_modifier_expected:W(9011,1,"Catch_expression_modifier_expected_9011","Catch expression modifier expected."),Unterminated_macro_arguments_list:W(9012,1,"Unterminated_macro_arguments_list_9012","Unterminated macro arguments list."),Unmatched_conditional_directive:W(9013,1,"Unmatched_conditional_directive_9013","Unmatched conditional directive."),Identifier_or_string_expected:W(9014,1,"Identifier_or_string_expected_9014","Identifier or string expected."),Character_literal_must_be_one_character:W(9015,1,"Character_literal_must_be_one_character_9015","Character literal must be one character."),Stringized_literal_only_valid_in_macro:W(9016,1,"Stringized_literal_only_valid_in_macro_9016","Stringized literal only valid in macro."),Macro_parameter_0_not_found:W(9017,1,"Macro_parameter_0_not_found_9017","Macro parameter '{0}' not found."),Cannot_find_include_file_0:W(9018,1,"Cannot_find_include_file_0_9018","Cannot find include file '{0}'."),Pragma_option_expected:W(9019,1,"Pragma_option_expected_9019","Pragma option expected."),File_is_master_file_specified_here:W(9020,1,"File_is_master_file_specified_here_9020","File is master file specified here."),Cannot_find_0_Do_you_need_to_change_your_driver_type:W(9021,1,"Cannot_find_0_Do_you_need_to_change_your_driver_type_9021","Cannot find '{0}'. Do you need to change your driver type?"),When_comparing_types_check_that_the_objectStructure_is_compatible_with_the_target_type:W(9022,3,"When_comparing_types_check_that_the_objectStructure_is_compatible_with_the_target_type_6699","When comparing types, check that the object structure is compatible with the target type."),Super_access_can_only_be_used_in_a_file_that_inherits_from_another_file:W(9023,1,"Super_access_can_only_be_used_in_a_file_that_inherits_from_another_file_9023","Super access can only be used in a file that inherits from another file."),LPCDoc_var_tag_should_have_a_type_annotation:W(9024,1,"LPCDoc_var_tag_should_have_a_type_annotation_9024","LPCDoc @var tag should have a type annotation."),Include_file_0_contains_one_or_more_errors:W(9025,1,"Include_file_0_contains_one_or_more_errors_9025","Include file '{0}' contains one or more errors."),LPCDoc_var_tags_must_be_in_their_own_LPCDoc_comment:W(9026,1,"LPCDoc_var_tags_must_be_in_their_own_LPCDoc_comment_9026","LPCDoc @var tags must be in their own LPCDoc comment."),LPCDoc_var_tags_can_only_annotate_inherited_variables_0_is_a_local_variable:W(9027,1,"LPCDoc_var_tags_can_only_annotate_inherited_variables_0_is_a_local_variable_9027","LPCDoc @var tags can only annotate inherited variables. '{0}' is a local variable."),LPCDoc_var_tag_should_provide_a_variable_name:W(9028,1,"LPCDoc_var_tag_should_provide_a_variable_name_9028","LPCDoc @var tag should provide a variable name."),Circular_include_detected_0_to_1:W(9029,1,"Circular_include_detected_0_to_1_9029","Circular include detected '{0}' -> '{1}'."),Locale_0_is_not_supported:W(9030,1,"Locale_0_is_not_supported_9030","Locale '{0}' is not supported."),No_errors:W(9031,3,"No_errors_9031","No errors - That is some happy LPC."),Catch_expression_cannot_also_have_a_block:W(9032,1,"Catch_expression_cannot_also_have_a_block_9032","Catch expression cannot also have a block."),_0_expected:W(1005,1,"_0_expected_1005","'{0}' expected."),c_must_be_followed_by_an_ASCII_letter:W(1512,1,"c_must_be_followed_by_an_ASCII_letter_1512","'\\c' must be followed by an ASCII letter."),Undetermined_character_escape:W(1513,1,"Undetermined_character_escape_1513","Undetermined character escape."),Incomplete_quantifier_Digit_expected:W(1505,1,"Incomplete_quantifier_Digit_expected_1505","Incomplete quantifier. Digit expected."),q_is_only_available_inside_character_class:W(1511,1,"q_is_only_available_inside_character_class_1511","'\\q' is only available inside character class."),Unexpected_0_Did_you_mean_to_escape_it_with_backslash:W(1508,1,"Unexpected_0_Did_you_mean_to_escape_it_with_backslash_1508","Unexpected '{0}'. Did you mean to escape it with backslash?"),Numbers_out_of_order_in_quantifier:W(1506,1,"Numbers_out_of_order_in_quantifier_1506","Numbers out of order in quantifier."),Asterisk_Slash_expected:W(1010,1,"Asterisk_Slash_expected_1010","'*/' expected."),Hexadecimal_digit_expected:W(1125,1,"Hexadecimal_digit_expected_1125","Hexadecimal digit expected."),Invalid_character:W(1127,1,"Invalid_character_1127","Invalid character."),can_only_be_used_at_the_start_of_a_file:W(18026,1,"can_only_be_used_at_the_start_of_a_file_18026","'#!' can only be used at the start of a file."),File_appears_to_be_binary:W(1490,1,"File_appears_to_be_binary_1490","File appears to be binary."),Multiple_consecutive_numeric_separators_are_not_permitted:W(6189,1,"Multiple_consecutive_numeric_separators_are_not_permitted_6189","Multiple consecutive numeric separators are not permitted."),Numeric_separators_are_not_allowed_here:W(6188,1,"Numeric_separators_are_not_allowed_here_6188","Numeric separators are not allowed here."),Unterminated_string_literal:W(1002,1,"Unterminated_string_literal_1002","Unterminated string literal."),An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive:W(1198,1,"An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive_1198","An extended Unicode escape value must be between 0x0 and 0x10FFFF inclusive."),Unexpected_end_of_text:W(1126,1,"Unexpected_end_of_text_1126","Unexpected end of text."),Unterminated_Unicode_escape_sequence:W(1199,1,"Unterminated_Unicode_escape_sequence_1199","Unterminated Unicode escape sequence."),Octal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class_If_this_was_intended_as_an_escape_sequence_use_the_syntax_0_instead:W(1536,1,"Octal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class_If_this_was_intended__1536","Octal escape sequences and backreferences are not allowed in a character class. If this was intended as an escape sequence, use the syntax '{0}' instead."),Octal_escape_sequences_are_not_allowed_Use_the_syntax_0:W(1487,1,"Octal_escape_sequences_are_not_allowed_Use_the_syntax_0_1487","Octal escape sequences are not allowed. Use the syntax '{0}'."),Decimal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class:W(1537,1,"Decimal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class_1537","Decimal escape sequences and backreferences are not allowed in a character class."),Escape_sequence_0_is_not_allowed:W(1488,1,"Escape_sequence_0_is_not_allowed_1488","Escape sequence '{0}' is not allowed."),This_character_cannot_be_escaped_in_a_regular_expression:W(1535,1,"This_character_cannot_be_escaped_in_a_regular_expression_1535","This character cannot be escaped in a regular expression."),Octal_literals_are_not_allowed_Use_the_syntax_0:W(1121,1,"Octal_literals_are_not_allowed_Use_the_syntax_0_1121","Octal literals are not allowed. Use the syntax '{0}'."),Binary_digit_expected:W(1177,1,"Binary_digit_expected_1177","Binary digit expected."),Octal_digit_expected:W(1178,1,"Octal_digit_expected_1178","Octal digit expected."),Digit_expected:W(1124,1,"Digit_expected_1124","Digit expected."),Decimals_with_leading_zeros_are_not_allowed:W(1489,1,"Decimals_with_leading_zeros_are_not_allowed_1489","Decimals with leading zeros are not allowed."),A_bigint_literal_cannot_use_exponential_notation:W(1352,1,"A_bigint_literal_cannot_use_exponential_notation_1352","A bigint literal cannot use exponential notation."),A_bigint_literal_must_be_an_integer:W(1353,1,"A_bigint_literal_must_be_an_integer_1353","A bigint literal must be an integer."),An_identifier_or_keyword_cannot_immediately_follow_a_numeric_literal:W(1351,1,"An_identifier_or_keyword_cannot_immediately_follow_a_numeric_literal_1351","An identifier or keyword cannot immediately follow a numeric literal."),Variable_declaration_not_allowed_at_this_location:W(1440,1,"Variable_declaration_not_allowed_at_this_location_1440","Variable declaration not allowed at this location."),Unknown_keyword_or_identifier_Did_you_mean_0:W(1435,1,"Unknown_keyword_or_identifier_Did_you_mean_0_1435","Unknown keyword or identifier. Did you mean '{0}'?"),Unexpected_keyword_or_identifier:W(1434,1,"Unexpected_keyword_or_identifier_1434","Unexpected keyword or identifier."),Variable_declaration_expected:W(1134,1,"Variable_declaration_expected_1134","Variable declaration expected."),Declaration_expected:W(1146,1,"Declaration_expected_1146","Declaration expected."),Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here:W(1359,1,"Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here_1359","Identifier expected. '{0}' is a reserved word that cannot be used here."),Identifier_expected:W(1003,1,"Identifier_expected_1003","Identifier expected."),An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses:W(17006,1,"An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_ex_17006","An unary expression with the '{0}' operator is not allowed in the left-hand side of an exponentiation expression. Consider enclosing the expression in parentheses."),Unicode_escape_sequence_cannot_appear_here:W(17021,1,"Unicode_escape_sequence_cannot_appear_here_17021","Unicode escape sequence cannot appear here."),The_parser_expected_to_find_a_1_to_match_the_0_token_here:W(1007,1,"The_parser_expected_to_find_a_1_to_match_the_0_token_here_1007","The parser expected to find a '{1}' to match the '{0}' token here."),Keywords_cannot_contain_escape_characters:W(1260,1,"Keywords_cannot_contain_escape_characters_1260","Keywords cannot contain escape characters."),Declaration_or_statement_expected_This_follows_a_block_of_statements_so_if_you_intended_to_write_a_destructuring_assignment_you_might_need_to_wrap_the_whole_assignment_in_parentheses:W(2809,1,"Declaration_or_statement_expected_This_follows_a_block_of_statements_so_if_you_intended_to_write_a_d_2809","Declaration or statement expected. This '=' follows a block of statements, so if you intended to write a destructuring assignment, you might need to wrap the whole assignment in parentheses."),Merge_conflict_marker_encountered:W(1e3,1,"Merge_conflict_marker_encountered_1000","Merge conflict marker encountered."),Expression_expected:W(1001,1,"Expression_expected_1001","Expression expected."),A_default_clause_cannot_appear_more_than_once_in_a_switch_statement:W(1100,1,"A_default_clause_cannot_appear_more_than_once_in_a_switch_statement_1113","A 'default' clause cannot appear more than once in a 'switch' statement."),Cannot_redeclare_block_scoped_variable_0:W(2451,1,"Cannot_redeclare_block_scoped_variable_0_2451","Cannot redeclare block-scoped variable '{0}'."),Duplicate_identifier_0:W(2300,1,"Duplicate_identifier_0_2300","Duplicate identifier '{0}'."),_0_only_refers_to_a_type_but_is_being_used_as_a_value_here:W(2693,1,"_0_only_refers_to_a_type_but_is_being_used_as_a_value_here_2693","'{0}' only refers to a type, but is being used as a value here."),Circular_definition_of_import_alias_0:W(2303,1,"Circular_definition_of_import_alias_0_2303","Circular definition of import alias '{0}'."),_0_refers_to_a_value_but_is_being_used_as_a_type_here_Did_you_mean_typeof_0:W(2749,1,"_0_refers_to_a_value_but_is_being_used_as_a_type_here_Did_you_mean_typeof_0_2749","'{0}' refers to a value, but is being used as a type here. Did you mean 'typeof {0}'?"),Cannot_find_name_0_Did_you_mean_1:W(2552,1,"Cannot_find_name_0_Did_you_mean_1_2552","Cannot find name '{0}'. Did you mean '{1}'?"),_0_is_declared_here:W(2728,3,"_0_is_declared_here_2728","'{0}' is declared here."),No_value_exists_in_scope_for_the_shorthand_property_0_Either_declare_one_or_provide_an_initializer:W(18004,1,"No_value_exists_in_scope_for_the_shorthand_property_0_Either_declare_one_or_provide_an_initializer_18004","No value exists in scope for the shorthand property '{0}'. Either declare one or provide an initializer."),Cannot_find_name_0:W(2304,1,"Cannot_find_name_0_2304","Cannot find name '{0}'."),_0_is_deprecated:W(6385,2,"_0_is_deprecated_6385","'{0}' is deprecated.",void 0,void 0,!0),The_signature_0_of_1_is_deprecated:W(6387,2,"The_signature_0_of_1_is_deprecated_6387","The signature '{0}' of '{1}' is deprecated.",void 0,void 0,!0),The_declaration_was_marked_as_deprecated_here:W(2798,1,"The_declaration_was_marked_as_deprecated_here_2798","The declaration was marked as deprecated here."),Cannot_assign_to_0_because_it_is_a_function:W(2630,1,"Cannot_assign_to_0_because_it_is_a_function_2630","Cannot assign to '{0}' because it is a function."),Cannot_assign_to_0_because_it_is_not_a_variable:W(2539,1,"Cannot_assign_to_0_because_it_is_not_a_variable_2539","Cannot assign to '{0}' because it is not a variable."),Variable_0_is_used_before_being_assigned:W(2454,1,"Variable_0_is_used_before_being_assigned_2454","Variable '{0}' is used before being assigned."),Unreachable_code_detected:W(7027,1,"Unreachable_code_detected_7027","Unreachable code detected.",!0),_0_is_declared_but_its_value_is_never_read:W(6133,1,"_0_is_declared_but_its_value_is_never_read_6133","'{0}' is declared but its value is never read.",!0),All_variables_are_unused:W(6199,1,"All_variables_are_unused_6199","All variables are unused.",!0),A_function_returning_never_cannot_have_a_reachable_end_point:W(2534,1,"A_function_returning_never_cannot_have_a_reachable_end_point_2534","A function returning 'never' cannot have a reachable end point."),A_function_whose_declared_type_is_not_void_must_return_a_value:W(2355,0,"A_function_whose_declared_type_is_not_void_must_return_a_value_2355","A function whose declared type is not 'void' must return a value."),Function_lacks_ending_return_statement_and_return_type_does_not_include_undefined:W(2366,1,"Function_lacks_ending_return_statement_and_return_type_does_not_include_undefined_2366","Function lacks ending return statement and return type does not include 'undefined'."),Not_all_code_paths_return_a_value:W(7030,1,"Not_all_code_paths_return_a_value_7030","Not all code paths return a value."),A_0_parameter_must_be_the_first_parameter:W(2680,1,"A_0_parameter_must_be_the_first_parameter_2680","A '{0}' parameter must be the first parameter."),A_rest_parameter_must_be_of_an_array_type:W(2370,1,"A_rest_parameter_must_be_of_an_array_type_2370","A rest parameter must be of an array type."),File_0_not_found:W(6053,1,"File_0_not_found_6053","File '{0}' not found."),A_file_cannot_have_a_reference_to_itself:W(1006,1,"A_file_cannot_have_a_reference_to_itself_1006","A file cannot have a reference to itself."),Cannot_read_file_0_Colon_1:W(5012,1,"Cannot_read_file_0_Colon_1_5012","Cannot read file '{0}': {1}."),Already_included_file_name_0_differs_from_file_name_1_only_in_casing:W(1261,1,"Already_included_file_name_0_differs_from_file_name_1_only_in_casing_1261","Already included file name '{0}' differs from file name '{1}' only in casing."),File_name_0_differs_from_already_included_file_name_1_only_in_casing:W(1149,1,"File_name_0_differs_from_already_included_file_name_1_only_in_casing_1149","File name '{0}' differs from already included file name '{1}' only in casing."),_0_is_of_type_unknown:W(18046,1,"_0_is_of_type_unknown_18046","'{0}' is of type 'unknown'."),Object_is_of_type_unknown:W(2571,1,"Object_is_of_type_unknown_2571","Object is of type 'unknown'."),Cannot_invoke_an_object_which_is_possibly_null_or_undefined:W(2723,1,"Cannot_invoke_an_object_which_is_possibly_null_or_undefined_2723","Cannot invoke an object which is possibly 'null' or 'undefined'."),Cannot_invoke_an_object_which_is_possibly_null:W(2721,1,"Cannot_invoke_an_object_which_is_possibly_null_2721","Cannot invoke an object which is possibly 'null'."),Cannot_invoke_an_object_which_is_possibly_undefined:W(2722,1,"Cannot_invoke_an_object_which_is_possibly_undefined_2722","Cannot invoke an object which is possibly 'undefined'."),Are_you_missing_a_semicolon:W(2734,1,"Are_you_missing_a_semicolon_2734","Are you missing a semicolon?"),Value_of_type_0_is_not_callable_Did_you_mean_to_include_new:W(2348,1,"Value_of_type_0_is_not_callable_Did_you_mean_to_include_new_2348","Value of type '{0}' is not callable. Did you mean to include 'new'?"),Type_0_has_no_call_signatures:W(2757,1,"Type_0_has_no_call_signatures_2757","Type '{0}' has no call signatures."),Type_0_has_no_construct_signatures:W(2761,1,"Type_0_has_no_construct_signatures_2761","Type '{0}' has no construct signatures."),Not_all_constituents_of_type_0_are_callable:W(2756,1,"Not_all_constituents_of_type_0_are_callable_2756","Not all constituents of type '{0}' are callable."),Not_all_constituents_of_type_0_are_constructable:W(2760,1,"Not_all_constituents_of_type_0_are_constructable_2760","Not all constituents of type '{0}' are constructable."),No_constituent_of_type_0_is_callable:W(2755,1,"No_constituent_of_type_0_is_callable_2755","No constituent of type '{0}' is callable."),No_constituent_of_type_0_is_constructable:W(2759,1,"No_constituent_of_type_0_is_constructable_2759","No constituent of type '{0}' is constructable."),Each_member_of_the_union_type_0_has_signatures_but_none_of_those_signatures_are_compatible_with_each_other:W(2758,1,"Each_member_of_the_union_type_0_has_signatures_but_none_of_those_signatures_are_compatible_with_each_2758","Each member of the union type '{0}' has signatures, but none of those signatures are compatible with each other."),Each_member_of_the_union_type_0_has_construct_signatures_but_none_of_those_signatures_are_compatible_with_each_other:W(2762,1,"Each_member_of_the_union_type_0_has_construct_signatures_but_none_of_those_signatures_are_compatible_2762","Each member of the union type '{0}' has construct signatures, but none of those signatures are compatible with each other."),This_expression_is_not_callable:W(2349,1,"This_expression_is_not_callable_2349","This expression is not callable."),This_expression_is_not_constructable:W(2351,1,"This_expression_is_not_constructable_2351","This expression is not constructable."),An_expression_of_type_void_cannot_be_tested_for_truthiness:W(1345,1,"An_expression_of_type_void_cannot_be_tested_for_truthiness_1345","An expression of type 'void' cannot be tested for truthiness."),This_condition_will_always_return_0:W(2845,1,"This_condition_will_always_return_0_2845","This condition will always return '{0}'."),This_condition_will_always_return_true_since_this_function_is_always_defined_Did_you_mean_to_call_it_instead:W(2774,1,"This_condition_will_always_return_true_since_this_function_is_always_defined_Did_you_mean_to_call_it_2774","This condition will always return true since this function is always defined. Did you mean to call it instead?"),The_0_operator_is_not_allowed_for_boolean_types_Consider_using_1_instead:W(2447,1,"The_0_operator_is_not_allowed_for_boolean_types_Consider_using_1_instead_2447","The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead."),The_left_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type:W(2362,1,"The_left_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type_2362","The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type."),The_right_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type:W(2363,1,"The_right_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type_2363","The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type."),This_condition_will_always_return_0_since_JavaScript_compares_objects_by_reference_not_value:W(2839,1,"This_condition_will_always_return_0_since_JavaScript_compares_objects_by_reference_not_value_2839","This condition will always return '{0}' since JavaScript compares objects by reference, not value."),Left_side_of_comma_operator_is_unused_and_has_no_side_effects:W(2695,1,"Left_side_of_comma_operator_is_unused_and_has_no_side_effects_2695","Left side of comma operator is unused and has no side effects.",!0),The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access:W(2364,1,"The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access_2364","The left-hand side of an assignment expression must be a variable or a property access."),Did_you_mean_to_use_new_with_this_expression:W(6213,3,"Did_you_mean_to_use_new_with_this_expression_6213","Did you mean to use 'new' with this expression?"),Operator_0_cannot_be_applied_to_types_1_and_2:W(2365,1,"Operator_0_cannot_be_applied_to_types_1_and_2_2365","Operator '{0}' cannot be applied to types '{1}' and '{2}'."),This_comparison_appears_to_be_unintentional_because_the_types_0_and_1_have_no_overlap:W(2367,1,"This_comparison_appears_to_be_unintentional_because_the_types_0_and_1_have_no_overlap_2367","This comparison appears to be unintentional because the types '{0}' and '{1}' have no overlap."),Did_you_mean_to_call_this_expression:W(6212,3,"Did_you_mean_to_call_this_expression_6212","Did you mean to call this expression?"),_0_was_also_declared_here:W(6203,3,"_0_was_also_declared_here_6203","'{0}' was also declared here."),and_here:W(6204,3,"and_here_6204","and here."),The_left_hand_side_of_an_assignment_expression_may_not_be_an_optional_property_access:W(2779,1,"The_left_hand_side_of_an_assignment_expression_may_not_be_an_optional_property_access_2779","The left-hand side of an assignment expression may not be an optional property access."),Did_you_mean_0:W(1369,3,"Did_you_mean_0_1369","Did you mean '{0}'?"),An_arithmetic_operand_must_be_of_type_any_number_bigint_or_an_enum_type:W(2356,1,"An_arithmetic_operand_must_be_of_type_any_number_bigint_or_an_enum_type_2356","An arithmetic operand must be of type 'any', 'number', 'bigint' or an enum type."),The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access:W(2357,1,"The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access_2357","The operand of an increment or decrement operator must be a variable or a property access."),The_operand_of_an_increment_or_decrement_operator_may_not_be_an_optional_property_access:W(2777,1,"The_operand_of_an_increment_or_decrement_operator_may_not_be_an_optional_property_access_2777","The operand of an increment or decrement operator may not be an optional property access."),Operator_0_cannot_be_applied_to_type_1:W(2736,1,"Operator_0_cannot_be_applied_to_type_1_2736","Operator '{0}' cannot be applied to type '{1}'."),The_body_of_an_if_statement_cannot_be_the_empty_statement:W(1313,1,"The_body_of_an_if_statement_cannot_be_the_empty_statement_1313","The body of an 'if' statement cannot be the empty statement."),Index_signature_in_type_0_only_permits_reading:W(2542,1,"Index_signature_in_type_0_only_permits_reading_2542","Index signature in type '{0}' only permits reading."),Property_0_is_used_before_being_assigned:W(2565,1,"Property_0_is_used_before_being_assigned_2565","Property '{0}' is used before being assigned."),All_declarations_of_0_must_have_identical_modifiers:W(2687,1,"All_declarations_of_0_must_have_identical_modifiers_2687","All declarations of '{0}' must have identical modifiers."),Cannot_initialize_outer_scoped_variable_0_in_the_same_scope_as_block_scoped_declaration_1:W(2481,1,"Cannot_initialize_outer_scoped_variable_0_in_the_same_scope_as_block_scoped_declaration_1_2481","Cannot initialize outer scoped variable '{0}' in the same scope as block scoped declaration '{1}'."),Subsequent_property_declarations_must_have_the_same_type_Property_0_must_be_of_type_1_but_here_has_type_2:W(2717,1,"Subsequent_property_declarations_must_have_the_same_type_Property_0_must_be_of_type_1_but_here_has_t_2717","Subsequent property declarations must have the same type.  Property '{0}' must be of type '{1}', but here has type '{2}'."),Subsequent_variable_declarations_must_have_the_same_type_Variable_0_must_be_of_type_1_but_here_has_type_2:W(2403,1,"Subsequent_variable_declarations_must_have_the_same_type_Variable_0_must_be_of_type_1_but_here_has_t_2403","Subsequent variable declarations must have the same type.  Variable '{0}' must be of type '{1}', but here has type '{2}'."),Type_instantiation_is_excessively_deep_and_possibly_infinite:W(2589,1,"Type_instantiation_is_excessively_deep_and_possibly_infinite_2589","Type instantiation is excessively deep and possibly infinite."),Object_literal_s_property_0_implicitly_has_an_1_type:W(7018,1,"Object_literal_s_property_0_implicitly_has_an_1_type_7018","Object literal's property '{0}' implicitly has an '{1}' type."),Type_arguments_for_0_circularly_reference_themselves:W(4109,1,"Type_arguments_for_0_circularly_reference_themselves_4109","Type arguments for '{0}' circularly reference themselves."),Tuple_type_arguments_circularly_reference_themselves:W(4110,1,"Tuple_type_arguments_circularly_reference_themselves_4110","Tuple type arguments circularly reference themselves."),A_return_statement_can_only_be_used_within_a_function_body:W(1108,1,"A_return_statement_can_only_be_used_within_a_function_body_1108","A 'return' statement can only be used within a function body."),Return_type_annotation_circularly_references_itself:W(2577,1,"Return_type_annotation_circularly_references_itself_2577","Return type annotation circularly references itself."),_0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions:W(7023,1,"_0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_reference_7023","'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions."),Function_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions:W(7024,1,"Function_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_ref_7024","Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions."),Types_of_property_0_are_incompatible:W(2326,1,"Types_of_property_0_are_incompatible_2326","Types of property '{0}' are incompatible."),Call_signature_return_types_0_and_1_are_incompatible:W(2202,1,"Call_signature_return_types_0_and_1_are_incompatible_2202","Call signature return types '{0}' and '{1}' are incompatible.",void 0,!0),Call_signatures_with_no_arguments_have_incompatible_return_types_0_and_1:W(2204,1,"Call_signatures_with_no_arguments_have_incompatible_return_types_0_and_1_2204","Call signatures with no arguments have incompatible return types '{0}' and '{1}'.",void 0,!0),Type_at_position_0_in_source_is_not_compatible_with_type_at_position_1_in_target:W(2626,1,"Type_at_position_0_in_source_is_not_compatible_with_type_at_position_1_in_target_2626","Type at position {0} in source is not compatible with type at position {1} in target."),Type_at_positions_0_through_1_in_source_is_not_compatible_with_type_at_position_2_in_target:W(2627,1,"Type_at_positions_0_through_1_in_source_is_not_compatible_with_type_at_position_2_in_target_2627","Type at positions {0} through {1} in source is not compatible with type at position {2} in target."),The_types_of_0_are_incompatible_between_these_types:W(2200,1,"The_types_of_0_are_incompatible_between_these_types_2200","The types of '{0}' are incompatible between these types."),The_types_returned_by_0_are_incompatible_between_these_types:W(2201,1,"The_types_returned_by_0_are_incompatible_between_these_types_2201","The types returned by '{0}' are incompatible between these types."),Type_0_is_not_comparable_to_type_1:W(2678,1,"Type_0_is_not_comparable_to_type_1_2678","Type '{0}' is not comparable to type '{1}'."),Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated:W(2719,1,"Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated_2719","Type '{0}' is not assignable to type '{1}'. Two different types with this name exist, but they are unrelated."),Type_0_is_not_assignable_to_type_1_Did_you_mean_2:W(2820,1,"Type_0_is_not_assignable_to_type_1_Did_you_mean_2_2820","Type '{0}' is not assignable to type '{1}'. Did you mean '{2}'?"),Type_0_is_not_assignable_to_type_1:W(2322,1,"Type_0_is_not_assignable_to_type_1_2322","Type '{0}' is not assignable to type '{1}'."),Argument_of_type_0_is_not_assignable_to_parameter_of_type_1:W(2345,1,"Argument_of_type_0_is_not_assignable_to_parameter_of_type_1_2345","Argument of type '{0}' is not assignable to parameter of type '{1}'."),_0_is_a_primitive_but_1_is_a_wrapper_object_Prefer_using_0_when_possible:W(2692,1,"_0_is_a_primitive_but_1_is_a_wrapper_object_Prefer_using_0_when_possible_2692","'{0}' is a primitive, but '{1}' is a wrapper object. Prefer using '{0}' when possible."),The_Object_type_is_assignable_to_very_few_other_types_Did_you_mean_to_use_the_any_type_instead:W(2696,1,"The_Object_type_is_assignable_to_very_few_other_types_Did_you_mean_to_use_the_any_type_instead_2696","The 'Object' type is assignable to very few other types. Did you mean to use the 'any' type instead?"),Value_of_type_0_has_no_properties_in_common_with_type_1_Did_you_mean_to_call_it:W(2560,1,"Value_of_type_0_has_no_properties_in_common_with_type_1_Did_you_mean_to_call_it_2560","Value of type '{0}' has no properties in common with type '{1}'. Did you mean to call it?"),Type_0_has_no_properties_in_common_with_type_1:W(2559,1,"Type_0_has_no_properties_in_common_with_type_1_2559","Type '{0}' has no properties in common with type '{1}'."),Object_literal_may_only_specify_known_properties_but_0_does_not_exist_in_type_1_Did_you_mean_to_write_2:W(2561,1,"Object_literal_may_only_specify_known_properties_but_0_does_not_exist_in_type_1_Did_you_mean_to_writ_2561","Object literal may only specify known properties, but '{0}' does not exist in type '{1}'. Did you mean to write '{2}'?"),Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1:W(2353,1,"Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1_2353","Object literal may only specify known properties, and '{0}' does not exist in type '{1}'."),The_containing_function_or_module_body_is_too_large_for_control_flow_analysis:W(2563,1,"The_containing_function_or_module_body_is_too_large_for_control_flow_analysis_2563","The containing function or module body is too large for control flow analysis."),Expression_produces_a_union_type_that_is_too_complex_to_represent:W(2590,1,"Expression_produces_a_union_type_that_is_too_complex_to_represent_2590","Expression produces a union type that is too complex to represent."),Cannot_find_global_type_0:W(2318,1,"Cannot_find_global_type_0_2318","Cannot find global type '{0}'."),Global_type_0_must_be_a_class_or_interface_type:W(2316,1,"Global_type_0_must_be_a_class_or_interface_type_2316","Global type '{0}' must be a class or interface type."),Global_type_0_must_have_1_type_parameter_s:W(2317,1,"Global_type_0_must_have_1_type_parameter_s_2317","Global type '{0}' must have {1} type parameter(s)."),Excessive_complexity_comparing_types_0_and_1:W(2859,1,"Excessive_complexity_comparing_types_0_and_1_2859","Excessive complexity comparing types '{0}' and '{1}'."),Excessive_stack_depth_comparing_types_0_and_1:W(2321,1,"Excessive_stack_depth_comparing_types_0_and_1_2321","Excessive stack depth comparing types '{0}' and '{1}'."),The_last_overload_gave_the_following_error:W(2770,1,"The_last_overload_gave_the_following_error_2770","The last overload gave the following error."),No_overload_matches_this_call:W(2769,1,"No_overload_matches_this_call_2769","No overload matches this call."),The_last_overload_is_declared_here:W(2771,1,"The_last_overload_is_declared_here_2771","The last overload is declared here."),Overload_0_of_1_2_gave_the_following_error:W(2772,1,"Overload_0_of_1_2_gave_the_following_error_2772","Overload {0} of {1}, '{2}', gave the following error."),A_spread_argument_must_either_have_a_tuple_type_or_be_passed_to_a_rest_parameter:W(2556,1,"A_spread_argument_must_either_have_a_tuple_type_or_be_passed_to_a_rest_parameter_2556","A spread argument must either have a tuple type or be passed to a rest parameter."),Expected_0_arguments_but_got_1:W(2554,1,"Expected_0_arguments_but_got_1_2554","Expected {0} arguments, but got {1}."),Expected_at_least_0_arguments_but_got_1:W(2555,1,"Expected_at_least_0_arguments_but_got_1_2555","Expected at least {0} arguments, but got {1}."),No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments:W(2575,1,"No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments_2575","No overload expects {0} arguments, but overloads do exist that expect either {1} or {2} arguments."),An_argument_for_0_was_not_provided:W(6210,3,"An_argument_for_0_was_not_provided_6210","An argument for '{0}' was not provided."),An_argument_matching_this_binding_pattern_was_not_provided:W(6211,3,"An_argument_matching_this_binding_pattern_was_not_provided_6211","An argument matching this binding pattern was not provided."),Arguments_for_the_rest_parameter_0_were_not_provided:W(6236,1,"Arguments_for_the_rest_parameter_0_were_not_provided_6236","Arguments for the rest parameter '{0}' were not provided."),The_call_would_have_succeeded_against_this_implementation_but_implementation_signatures_of_overloads_are_not_externally_visible:W(2793,1,"The_call_would_have_succeeded_against_this_implementation_but_implementation_signatures_of_overloads_2793","The call would have succeeded against this implementation, but implementation signatures of overloads are not externally visible."),Cannot_read_file_0:W(5083,1,"Cannot_read_file_0_5083","Cannot read file '{0}'."),The_files_list_in_config_file_0_is_empty:W(18002,1,"The_files_list_in_config_file_0_is_empty_18002","The 'files' list in config file '{0}' is empty."),Compiler_option_0_requires_a_value_of_type_1:W(5024,1,"Compiler_option_0_requires_a_value_of_type_1_5024","Compiler option '{0}' requires a value of type {1}."),File_specification_cannot_end_in_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0:W(5010,1,"File_specification_cannot_end_in_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0_5010","File specification cannot end in a recursive directory wildcard ('**'): '{0}'."),File_specification_cannot_contain_a_parent_directory_that_appears_after_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0:W(5065,1,"File_specification_cannot_contain_a_parent_directory_that_appears_after_a_recursive_directory_wildca_5065","File specification cannot contain a parent directory ('..') that appears after a recursive directory wildcard ('**'): '{0}'."),Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2:W(6183,3,"Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_6183","Reusing resolution of module '{0}' from '{1}' of old program, it was successfully resolved to '{2}'."),Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package_ID_3:W(6184,3,"Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package__6184","Reusing resolution of module '{0}' from '{1}' of old program, it was successfully resolved to '{2}' with Package ID '{3}'."),Reusing_resolution_of_module_0_from_1_of_old_program_it_was_not_resolved:W(6389,3,"Reusing_resolution_of_module_0_from_1_of_old_program_it_was_not_resolved_6389","Reusing resolution of module '{0}' from '{1}' of old program, it was not resolved."),Expected_0_type_arguments_but_got_1:W(2558,1,"Expected_0_type_arguments_but_got_1_2558","Expected {0} type arguments, but got {1}."),No_overload_expects_0_type_arguments_but_overloads_do_exist_that_expect_either_1_or_2_type_arguments:W(2743,1,"No_overload_expects_0_type_arguments_but_overloads_do_exist_that_expect_either_1_or_2_type_arguments_2743","No overload expects {0} type arguments, but overloads do exist that expect either {1} or {2} type arguments."),Cannot_find_object_0:W(2307,1,"Cannot_find_object_0_2307","Cannot find object '{0}'."),Module_0_was_resolved_to_1_but_allowArbitraryExtensions_is_not_set:W(6263,1,"Module_0_was_resolved_to_1_but_allowArbitraryExtensions_is_not_set_6263","Module '{0}' was resolved to '{1}', but '--allowArbitraryExtensions' is not set."),File_0_is_not_a_module:W(2306,1,"File_0_is_not_a_module_2306","File '{0}' is not a module."),Clone_object_can_only_accept_an_object_name_and_an_optional_set_of_attributes_as_arguments_1450:W(1450,3,"Clone_object_can_only_accept_an_object_name_and_an_optional_set_of_attributes_as_arguments_1450","Clone object can only accept an object name and an optional set of attributes as arguments"),Clone_object_s_specifier_must_be_of_type_string_but_here_has_type_0:W(7036,1,"Clone_object_s_specifier_must_be_of_type_string_but_here_has_type_0_7036","Clone object's specifier must be of type 'string', but here has type '{0}'."),Module_0_was_resolved_as_ambient_module_declared_in_1_since_this_file_was_not_modified:W(6145,3,"Module_0_was_resolved_as_ambient_module_declared_in_1_since_this_file_was_not_modified_6145","Module '{0}' was resolved as ambient module declared in '{1}' since this file was not modified."),Module_0_was_resolved_as_locally_declared_ambient_module_in_file_1:W(6144,3,"Module_0_was_resolved_as_locally_declared_ambient_module_in_file_1_6144","Module '{0}' was resolved as locally declared ambient module in file '{1}'."),Resolving_module_0_from_1:W(6086,3,"Resolving_module_0_from_1_6086","======== Resolving module '{0}' from '{1}'. ========"),Using_compiler_options_of_project_reference_redirect_0:W(6215,3,"Using_compiler_options_of_project_reference_redirect_0_6215","Using compiler options of project reference redirect '{0}'."),Resolution_for_module_0_was_found_in_cache_from_location_1:W(6147,3,"Resolution_for_module_0_was_found_in_cache_from_location_1_6147","Resolution for module '{0}' was found in cache from location '{1}'."),Module_resolution_kind_is_not_specified_using_0:W(6088,3,"Module_resolution_kind_is_not_specified_using_0_6088","Module resolution kind is not specified, using '{0}'."),Explicitly_specified_module_resolution_kind_Colon_0:W(6087,3,"Explicitly_specified_module_resolution_kind_Colon_0_6087","Explicitly specified module resolution kind: '{0}'."),Module_name_0_was_successfully_resolved_to_1_with_Package_ID_2:W(6218,3,"Module_name_0_was_successfully_resolved_to_1_with_Package_ID_2_6218","======== Module name '{0}' was successfully resolved to '{1}' with Package ID '{2}'. ========"),Module_name_0_was_successfully_resolved_to_1:W(6089,3,"Module_name_0_was_successfully_resolved_to_1_6089","======== Module name '{0}' was successfully resolved to '{1}'. ========"),Module_name_0_was_not_resolved:W(6090,3,"Module_name_0_was_not_resolved_6090","======== Module name '{0}' was not resolved. ========"),Resolving_real_path_for_0_result_1:W(6130,3,"Resolving_real_path_for_0_result_1_6130","Resolving real path for '{0}', result '{1}'."),rootDirs_option_is_set_using_it_to_resolve_relative_module_name_0:W(6107,3,"rootDirs_option_is_set_using_it_to_resolve_relative_module_name_0_6107","'rootDirs' option is set, using it to resolve relative module name '{0}'."),Checking_if_0_is_the_longest_matching_prefix_for_1_2:W(6104,3,"Checking_if_0_is_the_longest_matching_prefix_for_1_2_6104","Checking if '{0}' is the longest matching prefix for '{1}' - '{2}'."),Longest_matching_prefix_for_0_is_1:W(6108,3,"Longest_matching_prefix_for_0_is_1_6108","Longest matching prefix for '{0}' is '{1}'."),Loading_0_from_the_root_dir_1_candidate_location_2:W(6109,3,"Loading_0_from_the_root_dir_1_candidate_location_2_6109","Loading '{0}' from the root dir '{1}', candidate location '{2}'."),Trying_other_entries_in_rootDirs:W(6110,3,"Trying_other_entries_in_rootDirs_6110","Trying other entries in 'rootDirs'."),Module_resolution_using_rootDirs_has_failed:W(6111,3,"Module_resolution_using_rootDirs_has_failed_6111","Module resolution using 'rootDirs' has failed."),File_0_exists_use_it_as_a_name_resolution_result:W(6097,3,"File_0_exists_use_it_as_a_name_resolution_result_6097","File '{0}' exists - use it as a name resolution result."),File_0_does_not_exist:W(6096,3,"File_0_does_not_exist_6096","File '{0}' does not exist."),Searching_all_ancestor_node_modules_directories_for_preferred_extensions_Colon_0:W(6417,3,"Searching_all_ancestor_node_modules_directories_for_preferred_extensions_Colon_0_6417","Searching all ancestor node_modules directories for preferred extensions: {0}."),Searching_all_ancestor_node_modules_directories_for_fallback_extensions_Colon_0:W(6418,3,"Searching_all_ancestor_node_modules_directories_for_fallback_extensions_Colon_0_6418","Searching all ancestor node_modules directories for fallback extensions: {0}."),Directory_0_does_not_exist_skipping_all_lookups_in_it:W(6148,3,"Directory_0_does_not_exist_skipping_all_lookups_in_it_6148","Directory '{0}' does not exist, skipping all lookups in it."),File_name_0_has_a_1_extension_stripping_it:W(6132,3,"File_name_0_has_a_1_extension_stripping_it_6132","File name '{0}' has a '{1}' extension - stripping it."),Module_0_has_already_exported_a_member_named_1_Consider_explicitly_re_exporting_to_resolve_the_ambiguity:W(2308,1,"Module_0_has_already_exported_a_member_named_1_Consider_explicitly_re_exporting_to_resolve_the_ambig_2308","Module {0} has already exported a member named '{1}'. Consider explicitly re-exporting to resolve the ambiguity."),You_cannot_rename_this_element:W(8e3,1,"You_cannot_rename_this_element_8000","You cannot rename this element."),You_cannot_rename_elements_that_are_defined_in_the_standard_TypeScript_library:W(8001,1,"You_cannot_rename_elements_that_are_defined_in_the_standard_TypeScript_library_8001","You cannot rename elements that are defined in the standard TypeScript library."),You_cannot_rename_a_module_via_a_global_import:W(8031,1,"You_cannot_rename_a_module_via_a_global_import_8031","You cannot rename a module via a global import."),Add_missing_comma_for_object_member_completion_0:W(95187,3,"Add_missing_comma_for_object_member_completion_0_95187","Add missing comma for object member completion '{0}'."),Duplicate_index_signature_for_type_0:W(2374,1,"Duplicate_index_signature_for_type_0_2374","Duplicate index signature for type '{0}'."),Type_0_is_not_generic:W(2315,1,"Type_0_is_not_generic_2315","Type '{0}' is not generic."),Conversion_of_type_0_to_type_1_may_be_a_mistake_because_neither_type_sufficiently_overlaps_with_the_other_If_this_was_intentional_convert_the_expression_to_unknown_first:W(2352,1,"Conversion_of_type_0_to_type_1_may_be_a_mistake_because_neither_type_sufficiently_overlaps_with_the__2352","Conversion of type '{0}' to type '{1}' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first."),Type_alias_0_circularly_references_itself:W(2456,1,"Type_alias_0_circularly_references_itself_2456","Type alias '{0}' circularly references itself."),An_element_access_expression_should_take_an_argument:W(1011,1,"An_element_access_expression_should_take_an_argument_1011","An element access expression should take an argument."),Type_0_is_generic_and_can_only_be_indexed_for_reading:W(2862,1,"Type_0_is_generic_and_can_only_be_indexed_for_reading_2862","Type '{0}' is generic and can only be indexed for reading."),Type_0_cannot_be_used_to_index_type_1:W(2536,1,"Type_0_cannot_be_used_to_index_type_1_2536","Type '{0}' cannot be used to index type '{1}'."),Type_0_cannot_be_used_as_an_index_type:W(2538,1,"Type_0_cannot_be_used_as_an_index_type_2538","Type '{0}' cannot be used as an index type."),Property_0_does_not_exist_on_type_1:W(2339,1,"Property_0_does_not_exist_on_type_1_2339","Property '{0}' does not exist on type '{1}'."),Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number:W(7015,1,"Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number_7015","Element implicitly has an 'any' type because index expression is not of type 'number'."),Property_0_does_not_exist_on_type_1_Did_you_mean_2:W(2551,1,"Property_0_does_not_exist_on_type_1_Did_you_mean_2_2551","Property '{0}' does not exist on type '{1}'. Did you mean '{2}'?"),Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature_Did_you_mean_to_call_1:W(7052,1,"Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature_Did_you_mean_to_call_1_7052","Element implicitly has an 'any' type because type '{0}' has no index signature. Did you mean to call '{1}'?"),No_index_signature_with_a_parameter_of_type_0_was_found_on_type_1:W(7054,1,"No_index_signature_with_a_parameter_of_type_0_was_found_on_type_1_7054","No index signature with a parameter of type '{0}' was found on type '{1}'."),Element_implicitly_has_an_any_type_because_expression_of_type_0_can_t_be_used_to_index_type_1:W(7053,1,"Element_implicitly_has_an_any_type_because_expression_of_type_0_can_t_be_used_to_index_type_1_7053","Element implicitly has an 'any' type because expression of type '{0}' can't be used to index type '{1}'."),Type_0_has_no_matching_index_signature_for_type_1:W(2537,1,"Type_0_has_no_matching_index_signature_for_type_1_2537","Type '{0}' has no matching index signature for type '{1}'."),Type_0_is_not_an_array_type_or_a_string_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator:W(2549,1,"Type_0_is_not_an_array_type_or_a_string_type_or_does_not_have_a_Symbol_iterator_method_that_returns__2549","Type '{0}' is not an array type or a string type or does not have a '[Symbol.iterator]()' method that returns an iterator."),Type_0_is_not_an_array_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator:W(2548,1,"Type_0_is_not_an_array_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator_2548","Type '{0}' is not an array type or does not have a '[Symbol.iterator]()' method that returns an iterator."),Type_0_is_not_an_array_type_or_a_string_type:W(2495,1,"Type_0_is_not_an_array_type_or_a_string_type_2495","Type '{0}' is not an array type or a string type."),Type_0_is_not_an_array_type:W(2461,1,"Type_0_is_not_an_array_type_2461","Type '{0}' is not an array type."),A_type_literal_property_cannot_have_an_initializer:W(1247,1,"A_type_literal_property_cannot_have_an_initializer_1247","A type literal property cannot have an initializer."),A_mapped_type_may_not_declare_properties_or_methods:W(7061,1,"A_mapped_type_may_not_declare_properties_or_methods_7061","A mapped type may not declare properties or methods."),Property_0_may_not_exist_on_type_1_Did_you_mean_2:W(2568,1,"Property_0_may_not_exist_on_type_1_Did_you_mean_2_2568","Property '{0}' may not exist on type '{1}'. Did you mean '{2}'?"),A_computed_property_name_must_be_of_type_string_number_symbol_or_any:W(2464,1,"A_computed_property_name_must_be_of_type_string_number_symbol_or_any_2464","A computed property name must be of type 'string', 'number', 'symbol', or 'any'."),Property_0_was_also_declared_here:W(2733,1,"Property_0_was_also_declared_here_2733","Property '{0}' was also declared here."),Duplicate_property_0:W(2718,1,"Duplicate_property_0_2718","Duplicate property '{0}'."),Type_0_may_represent_a_primitive_value_which_is_not_permitted_as_the_right_operand_of_the_in_operator:W(2638,1,"Type_0_may_represent_a_primitive_value_which_is_not_permitted_as_the_right_operand_of_the_in_operato_2638","Type '{0}' may represent a primitive value, which is not permitted as the right operand of the 'in' operator."),Declaration_name_conflicts_with_built_in_global_identifier_0:W(2397,1,"Declaration_name_conflicts_with_built_in_global_identifier_0_2397","Declaration name conflicts with built-in global identifier '{0}'."),The_variable_declaration_of_a_for_in_statement_cannot_have_an_initializer:W(1189,1,"The_variable_declaration_of_a_for_in_statement_cannot_have_an_initializer_1189","The variable declaration of a 'for...in' statement cannot have an initializer."),The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any:W(2405,1,"The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any_2405","The left-hand side of a 'for...in' statement must be of type 'string' or 'any'."),The_left_hand_side_of_a_for_in_statement_must_be_a_variable_or_a_property_access:W(2406,1,"The_left_hand_side_of_a_for_in_statement_must_be_a_variable_or_a_property_access_2406","The left-hand side of a 'for...in' statement must be a variable or a property access."),The_left_hand_side_of_a_for_in_statement_may_not_be_an_optional_property_access:W(2780,1,"The_left_hand_side_of_a_for_in_statement_may_not_be_an_optional_property_access_2780","The left-hand side of a 'for...in' statement may not be an optional property access."),The_right_hand_side_of_a_for_in_statement_must_be_of_type_any_an_object_type_or_a_type_parameter_but_here_has_type_0:W(2407,1,"The_right_hand_side_of_a_for_in_statement_must_be_of_type_any_an_object_type_or_a_type_parameter_but_2407","The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter, but here has type '{0}'."),A_parameter_initializer_is_only_allowed_in_a_function_or_constructor_implementation:W(2371,1,"A_parameter_initializer_is_only_allowed_in_a_function_or_constructor_implementation_2371","A parameter initializer is only allowed in a function or constructor implementation."),The_value_0_cannot_be_used_here:W(18050,1,"The_value_0_cannot_be_used_here_18050","The value '{0}' cannot be used here."),_0_is_possibly_undefined:W(18048,1,"_0_is_possibly_undefined_18048","'{0}' is possibly 'undefined'."),Object_is_possibly_undefined:W(2532,1,"Object_is_possibly_undefined_2532","Object is possibly 'undefined'."),The_expected_type_comes_from_the_return_type_of_this_signature:W(6502,3,"The_expected_type_comes_from_the_return_type_of_this_signature_6502","The expected type comes from the return type of this signature."),_0_needs_an_explicit_type_annotation:W(2782,3,"_0_needs_an_explicit_type_annotation_2782","'{0}' needs an explicit type annotation."),Overload_signatures_must_all_be_public_private_or_protected:W(2385,1,"Overload_signatures_must_all_be_public_private_or_protected_2385","Overload signatures must all be public, private or protected."),Function_overload_must_not_be_static:W(2388,1,"Function_overload_must_not_be_static_2388","Function overload must not be static."),Function_implementation_name_must_be_0:W(2389,1,"Function_implementation_name_must_be_0_2389","Function implementation name must be '{0}'."),Function_implementation_is_missing_or_not_immediately_following_the_declaration:W(2391,1,"Function_implementation_is_missing_or_not_immediately_following_the_declaration_2391","Function implementation is missing or not immediately following the declaration."),Duplicate_function_implementation:W(2393,1,"Duplicate_function_implementation_2393","Duplicate function implementation."),Class_declaration_cannot_implement_overload_list_for_0:W(2813,1,"Class_declaration_cannot_implement_overload_list_for_0_2813","Class declaration cannot implement overload list for '{0}'."),Function_with_bodies_can_only_merge_with_classes_that_are_ambient:W(2814,1,"Function_with_bodies_can_only_merge_with_classes_that_are_ambient_2814","Function with bodies can only merge with classes that are ambient."),This_overload_signature_is_not_compatible_with_its_implementation_signature:W(2394,1,"This_overload_signature_is_not_compatible_with_its_implementation_signature_2394","This overload signature is not compatible with its implementation signature."),The_implementation_signature_is_declared_here:W(2750,1,"The_implementation_signature_is_declared_here_2750","The implementation signature is declared here."),Target_signature_provides_too_few_arguments_Expected_0_or_more_but_got_1:W(2849,1,"Target_signature_provides_too_few_arguments_Expected_0_or_more_but_got_1_2849","Target signature provides too few arguments. Expected {0} or more, but got {1}."),Types_of_parameters_0_and_1_are_incompatible:W(2328,1,"Types_of_parameters_0_and_1_are_incompatible_2328","Types of parameters '{0}' and '{1}' are incompatible."),Signature_0_must_be_a_type_predicate:W(1224,1,"Signature_0_must_be_a_type_predicate_1224","Signature '{0}' must be a type predicate."),_0_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_and_is_referenced_directly_or_indirectly_in_its_own_initializer:W(7022,1,"_0_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_and_is_referenced_directly_or__7022","'{0}' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer."),_0_is_referenced_directly_or_indirectly_in_its_own_type_annotation:W(2502,1,"_0_is_referenced_directly_or_indirectly_in_its_own_type_annotation_2502","'{0}' is referenced directly or indirectly in its own type annotation."),Base_constructor_return_type_0_is_not_an_object_type_or_intersection_of_object_types_with_statically_known_members:W(2509,1,"Base_constructor_return_type_0_is_not_an_object_type_or_intersection_of_object_types_with_statically_2509","Base constructor return type '{0}' is not an object type or intersection of object types with statically known members."),Type_0_recursively_references_itself_as_a_base_type:W(2310,1,"Type_0_recursively_references_itself_as_a_base_type_2310","Type '{0}' recursively references itself as a base type."),_0_is_referenced_directly_or_indirectly_in_its_own_base_expression:W(2506,1,"_0_is_referenced_directly_or_indirectly_in_its_own_base_expression_2506","'{0}' is referenced directly or indirectly in its own base expression."),Type_0_is_not_a_constructor_function_type:W(2507,1,"Type_0_is_not_a_constructor_function_type_2507","Type '{0}' is not a constructor function type."),A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag:W(8039,1,"A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag_8039","A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag"),_0_tag_already_specified:W(1223,1,"_0_tag_already_specified_1223","'{0}' tag already specified."),Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces:W(1069,1,"Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces_1069","Unexpected token. A type parameter name was expected without curly braces."),A_JSDoc_typedef_comment_may_not_contain_multiple_type_tags:W(8033,1,"A_JSDoc_typedef_comment_may_not_contain_multiple_type_tags_8033","A JSDoc '@typedef' comment may not contain multiple '@type' tags."),The_tag_was_first_specified_here:W(8034,1,"The_tag_was_first_specified_here_8034","The tag was first specified here."),Unexpected_token:W(1012,1,"Unexpected_token_1012","Unexpected token."),Circularity_detected_while_resolving_configuration_Colon_0:W(18e3,1,"Circularity_detected_while_resolving_configuration_Colon_0_18000","Circularity detected while resolving configuration: {0}"),String_literal_with_double_quotes_expected:W(1327,1,"String_literal_with_double_quotes_expected_1327","String literal with double quotes expected."),Property_value_can_only_be_string_literal_numeric_literal_true_false_null_object_literal_or_array_literal:W(1328,1,"Property_value_can_only_be_string_literal_numeric_literal_true_false_null_object_literal_or_array_li_1328","Property value can only be string literal, numeric literal, 'true', 'false', 'null', object literal or array literal."),Unknown_option_excludes_Did_you_mean_exclude:W(6114,1,"Unknown_option_excludes_Did_you_mean_exclude_6114","Unknown option 'excludes'. Did you mean 'exclude'?"),Command_line_Options:W(6171,3,"Command_line_Options_6171","Command-line Options"),Type_Checking:W(6248,3,"Type_Checking_6248","Type Checking"),Language_and_Environment:W(6254,3,"Language_and_Environment_6254","Language and Environment"),Disable_including_any_library_files_including_the_default_efun_h:W(6670,3,"Disable_including_any_library_files_including_the_default_efun_h_6670","Disable including any library files, including the default efun.h."),When_assigning_functions_check_to_ensure_parameters_and_the_return_values_are_subtype_compatible:W(6698,3,"When_assigning_functions_check_to_ensure_parameters_and_the_return_values_are_subtype_compatible_6698","When assigning functions, check to ensure parameters and the return values are subtype-compatible."),Enable_verbose_logging:W(6713,3,"Enable_verbose_logging_6713","Enable verbose logging."),Print_this_message:W(6017,3,"Print_this_message_6017","Print this message."),Watch_input_files:W(6005,3,"Watch_input_files_6005","Watch input files."),Output_Formatting:W(6256,3,"Output_Formatting_6256","Output Formatting"),Disable_wiping_the_console_in_watch_mode:W(6684,3,"Disable_wiping_the_console_in_watch_mode_6684","Disable wiping the console in watch mode."),Compiler_Diagnostics:W(6251,3,"Compiler_Diagnostics_6251","Compiler Diagnostics"),Print_all_of_the_files_read_during_the_compilation:W(6653,3,"Print_all_of_the_files_read_during_the_compilation_6653","Print all of the files read during the compilation."),Print_files_read_during_the_compilation_including_why_it_was_included:W(6631,3,"Print_files_read_during_the_compilation_including_why_it_was_included_6631","Print files read during the compilation including why it was included."),Print_the_names_of_emitted_files_after_a_compilation:W(6652,3,"Print_the_names_of_emitted_files_after_a_compilation_6652","Print the names of emitted files after a compilation."),Enable_color_and_formatting_in_TypeScript_s_output_to_make_compiler_errors_easier_to_read:W(6685,3,"Enable_color_and_formatting_in_TypeScript_s_output_to_make_compiler_errors_easier_to_read_6685","Enable color and formatting in TypeScript's output to make compiler errors easier to read."),Log_paths_used_during_the_moduleResolution_process:W(6706,3,"Log_paths_used_during_the_moduleResolution_process_6706","Log paths used during the 'moduleResolution' process."),Output_compiler_performance_information_after_building:W(6615,3,"Output_compiler_performance_information_after_building_6615","Output compiler performance information after building."),Output_more_detailed_compiler_performance_information_after_building:W(6632,3,"Output_more_detailed_compiler_performance_information_after_building_6632","Output more detailed compiler performance information after building."),FILE_OR_DIRECTORY:W(6040,3,"FILE_OR_DIRECTORY_6040","FILE OR DIRECTORY"),KIND:W(6034,3,"KIND_6034","KIND"),FILE:W(6035,3,"FILE_6035","FILE"),VERSION:W(6036,3,"VERSION_6036","VERSION"),LOCATION:W(6037,3,"LOCATION_6037","LOCATION"),DIRECTORY:W(6038,3,"DIRECTORY_6038","DIRECTORY"),STRATEGY:W(6039,3,"STRATEGY_6039","STRATEGY"),Emit_a_v8_CPU_profile_of_the_compiler_run_for_debugging:W(6638,3,"Emit_a_v8_CPU_profile_of_the_compiler_run_for_debugging_6638","Emit a v8 CPU profile of the compiler run for debugging."),Generates_an_event_trace_and_a_list_of_types:W(6237,3,"Generates_an_event_trace_and_a_list_of_types_6237","Generates an event trace and a list of types."),Projects:W(6255,3,"Projects_6255","Projects"),Save_tsbuildinfo_files_to_allow_for_incremental_compilation_of_projects:W(6642,3,"Save_tsbuildinfo_files_to_allow_for_incremental_compilation_of_projects_6642","Save .tsbuildinfo files to allow for incremental compilation of projects."),false_unless_composite_is_set:W(6906,3,"false_unless_composite_is_set_6906","`false`, unless `composite` is set"),Emit:W(6246,3,"Emit_6246","Emit"),Create_source_map_files_for_emitted_JavaScript_files:W(6694,3,"Create_source_map_files_for_emitted_JavaScript_files_6694","Create source map files for emitted JavaScript files."),Include_sourcemap_files_inside_the_emitted_JavaScript:W(6643,3,"Include_sourcemap_files_inside_the_emitted_JavaScript_6643","Include sourcemap files inside the emitted JavaScript."),Watch_and_Build_Modes:W(6250,3,"Watch_and_Build_Modes_6250","Watch and Build Modes"),Have_recompiles_in_projects_that_use_incremental_and_watch_mode_assume_that_changes_within_a_file_will_only_affect_files_directly_depending_on_it:W(6606,3,"Have_recompiles_in_projects_that_use_incremental_and_watch_mode_assume_that_changes_within_a_file_wi_6606","Have recompiles in projects that use 'incremental' and 'watch' mode assume that changes within a file will only affect files directly depending on it."),Set_the_language_of_the_messaging_from_TypeScript_This_does_not_affect_emit:W(6654,3,"Set_the_language_of_the_messaging_from_TypeScript_This_does_not_affect_emit_6654","Set the language of the messaging from TypeScript. This does not affect emit."),Platform_specific:W(6912,3,"Platform_specific_6912","Platform specific"),Property_assignment_expected:W(1136,1,"Property_assignment_expected_1136","Property assignment expected."),Compiler_option_0_may_only_be_used_with_build:W(5093,1,"Compiler_option_0_may_only_be_used_with_build_5093","Compiler option '--{0}' may only be used with '--build'."),Unknown_compiler_option_0:W(5023,1,"Unknown_compiler_option_0_5023","Unknown compiler option '{0}'."),Unknown_compiler_option_0_Did_you_mean_1:W(5025,1,"Unknown_compiler_option_0_Did_you_mean_1_5025","Unknown compiler option '{0}'. Did you mean '{1}'?"),Compiler_option_0_expects_an_argument:W(6044,1,"Compiler_option_0_expects_an_argument_6044","Compiler option '{0}' expects an argument."),Option_0_can_only_be_specified_on_command_line:W(6266,1,"Option_0_can_only_be_specified_on_command_line_6266","Option '{0}' can only be specified on command line."),Compiler_option_0_cannot_be_given_an_empty_string:W(18051,1,"Compiler_option_0_cannot_be_given_an_empty_string_18051","Compiler option '{0}' cannot be given an empty string."),File_Management:W(6245,3,"File_Management_6245","File Management"),if_files_is_specified_otherwise_Asterisk_Asterisk_Slash_Asterisk:W(6908,3,"if_files_is_specified_otherwise_Asterisk_Asterisk_Slash_Asterisk_6908",'`[]` if `files` is specified, otherwise `["**/*"]`'),node_modules_bower_components_jspm_packages_plus_the_value_of_outDir_if_one_is_specified:W(6907,3,"node_modules_bower_components_jspm_packages_plus_the_value_of_outDir_if_one_is_specified_6907",'`["node_modules", "bower_components", "jspm_packages"]`, plus the value of `outDir` if one is specified.'),The_root_value_of_a_0_file_must_be_an_object:W(5092,1,"The_root_value_of_a_0_file_must_be_an_object_5092","The root value of a '{0}' file must be an object."),Argument_for_0_option_must_be_Colon_1:W(6046,1,"Argument_for_0_option_must_be_Colon_1_6046","Argument for '{0}' option must be: {1}."),_0_should_be_set_inside_the_compilerOptions_object_of_the_config_json_file:W(6258,1,"_0_should_be_set_inside_the_compilerOptions_object_of_the_config_json_file_6258","'{0}' should be set inside the 'compilerOptions' object of the config json file"),No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2:W(18003,1,"No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2_18003","No inputs were found in config file '{0}'. Specified 'include' paths were '{1}' and 'exclude' paths were '{2}'."),Untyped_function_calls_may_not_accept_type_arguments:W(2347,1,"Untyped_function_calls_may_not_accept_type_arguments_2347","Untyped function calls may not accept type arguments."),Declaration_or_statement_expected:W(1128,1,"Declaration_or_statement_expected_1128","Declaration or statement expected."),case_or_default_expected:W(1130,1,"case_or_default_expected_1130","'case' or 'default' expected."),Statement_expected:W(1129,1,"Statement_expected_1129","Statement expected."),Property_or_signature_expected:W(1131,1,"Property_or_signature_expected_1131","Property or signature expected."),Unexpected_token_A_constructor_method_accessor_or_property_was_expected:W(1068,1,"Unexpected_token_A_constructor_method_accessor_or_property_was_expected_1068","Unexpected token. A constructor, method, accessor, or property was expected."),_0_is_not_allowed_as_a_variable_declaration_name:W(1389,1,"_0_is_not_allowed_as_a_variable_declaration_name_1389","'{0}' is not allowed as a variable declaration name."),Property_destructuring_pattern_expected:W(1180,1,"Property_destructuring_pattern_expected_1180","Property destructuring pattern expected."),Array_element_destructuring_pattern_expected:W(1181,1,"Array_element_destructuring_pattern_expected_1181","Array element destructuring pattern expected."),Argument_expression_expected:W(1135,1,"Argument_expression_expected_1135","Argument expression expected."),Expression_or_comma_expected:W(1137,1,"Expression_or_comma_expected_1137","Expression or comma expected."),Parameter_declaration_expected:W(1138,1,"Parameter_declaration_expected_1138","Parameter declaration expected."),_0_is_not_allowed_as_a_parameter_name:W(1390,1,"_0_is_not_allowed_as_a_parameter_name_1390","'{0}' is not allowed as a parameter name."),Type_parameter_declaration_expected:W(1139,1,"Type_parameter_declaration_expected_1139","Type parameter declaration expected."),Type_argument_expected:W(1140,1,"Type_argument_expected_1140","Type argument expected."),Type_expected:W(1110,1,"Type_expected_1110","Type expected."),Unexpected_token_expected:W(1179,1,"Unexpected_token_expected_1179","Unexpected token. '{' expected."),Found_1_error_in_0:W(6259,3,"Found_1_error_in_0_6259","Found 1 error in {0}"),Found_1_error:W(6216,3,"Found_1_error_6216","Found 1 error."),Found_0_errors:W(6217,3,"Found_0_errors_6217","Found {0} errors."),Found_0_errors_in_the_same_file_starting_at_Colon_1:W(6260,3,"Found_0_errors_in_the_same_file_starting_at_Colon_1_6260","Found {0} errors in the same file, starting at: {1}"),Found_0_errors_in_1_files:W(6261,3,"Found_0_errors_in_1_files_6261","Found {0} errors in {1} files."),Errors_Files:W(6041,3,"Errors_Files_6041","Errors  Files"),File_is_output_of_project_reference_source_0:W(1428,3,"File_is_output_of_project_reference_source_0_1428","File is output of project reference source '{0}'"),The_file_is_in_the_program_because_Colon:W(1430,3,"The_file_is_in_the_program_because_Colon_1430","The file is in the program because:"),Root_file_specified_for_compilation:W(1427,3,"Root_file_specified_for_compilation_1427","Root file specified for compilation"),Part_of_files_list_in_lpcconfig_json:W(1409,3,"Part_of_files_list_in_lpcconfig_json_1409","Part of 'files' list in lpc-config.json"),Matched_by_include_pattern_0_in_1:W(1407,3,"Matched_by_include_pattern_0_in_1_1407","Matched by include pattern '{0}' in '{1}'"),Matched_by_default_include_pattern_Asterisk_Asterisk_Slash_Asterisk:W(1457,3,"Matched_by_default_include_pattern_Asterisk_Asterisk_Slash_Asterisk_1457","Matched by default include pattern '**/*'"),Output_from_referenced_project_0_included_because_1_specified:W(1411,3,"Output_from_referenced_project_0_included_because_1_specified_1411","Output from referenced project '{0}' included because '{1}' specified"),Source_from_referenced_project_0_included_because_1_specified:W(1414,3,"Source_from_referenced_project_0_included_because_1_specified_1414","Source from referenced project '{0}' included because '{1}' specified"),Output_from_referenced_project_0_included_because_module_is_specified_as_none:W(1412,3,"Output_from_referenced_project_0_included_because_module_is_specified_as_none_1412","Output from referenced project '{0}' included because '--module' is specified as 'none'"),Source_from_referenced_project_0_included_because_module_is_specified_as_none:W(1415,3,"Source_from_referenced_project_0_included_because_module_is_specified_as_none_1415","Source from referenced project '{0}' included because '--module' is specified as 'none'"),Entry_point_of_type_library_0_specified_in_compilerOptions_with_packageId_1:W(1418,3,"Entry_point_of_type_library_0_specified_in_compilerOptions_with_packageId_1_1418","Entry point of type library '{0}' specified in compilerOptions with packageId '{1}'"),Entry_point_of_type_library_0_specified_in_compilerOptions:W(1417,3,"Entry_point_of_type_library_0_specified_in_compilerOptions_1417","Entry point of type library '{0}' specified in compilerOptions"),Entry_point_for_implicit_type_library_0_with_packageId_1:W(1421,3,"Entry_point_for_implicit_type_library_0_with_packageId_1_1421","Entry point for implicit type library '{0}' with packageId '{1}'"),Library_0_specified_in_compilerOptions:W(1422,3,"Library_0_specified_in_compilerOptions_1422","Library '{0}' specified in compilerOptions"),Default_library_for_target_0:W(1425,3,"Default_library_for_target_0_1425","Default library for target '{0}'"),Default_library:W(1424,3,"Default_library_1424","Default library"),File_is_included_via_import_here:W(1399,3,"File_is_included_via_import_here_1399","File is included via import here."),File_is_included_via_reference_here:W(1401,3,"File_is_included_via_reference_here_1401","File is included via reference here."),File_is_included_via_type_library_reference_here:W(1404,3,"File_is_included_via_type_library_reference_here_1404","File is included via type library reference here."),File_is_included_via_library_reference_here:W(1406,3,"File_is_included_via_library_reference_here_1406","File is included via library reference here."),Cannot_find_lib_definition_for_0_Did_you_mean_1:W(2727,1,"Cannot_find_lib_definition_for_0_Did_you_mean_1_2727","Cannot find lib definition for '{0}'. Did you mean '{1}'?"),Cannot_find_lib_definition_for_0:W(2726,1,"Cannot_find_lib_definition_for_0_2726","Cannot find lib definition for '{0}'."),Modifiers_cannot_appear_here:W(1184,1,"Modifiers_cannot_appear_here_1184","Modifiers cannot appear here."),_0_modifier_cannot_appear_on_a_type_member:W(1070,1,"_0_modifier_cannot_appear_on_a_type_member_1070","'{0}' modifier cannot appear on a type member."),_0_modifier_cannot_appear_on_an_index_signature:W(1071,1,"_0_modifier_cannot_appear_on_an_index_signature_1071","'{0}' modifier cannot appear on an index signature."),Accessibility_modifier_already_seen:W(1028,1,"Accessibility_modifier_already_seen_1028","Accessibility modifier already seen."),_0_modifier_already_seen:W(1030,1,"_0_modifier_already_seen_1030","'{0}' modifier already seen."),_0_modifier_cannot_appear_on_a_parameter:W(1090,1,"_0_modifier_cannot_appear_on_a_parameter_1090","'{0}' modifier cannot appear on a parameter."),A_parameter_property_may_not_be_declared_using_a_binding_pattern:W(1187,1,"A_parameter_property_may_not_be_declared_using_a_binding_pattern_1187","A parameter property may not be declared using a binding pattern."),A_parameter_property_cannot_be_declared_using_a_rest_parameter:W(1317,1,"A_parameter_property_cannot_be_declared_using_a_rest_parameter_1317","A parameter property cannot be declared using a rest parameter."),_0_modifier_must_precede_1_modifier:W(1029,1,"_0_modifier_must_precede_1_modifier_1029","'{0}' modifier must precede '{1}' modifier."),JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_It_would_match_arguments_if_it_had_an_array_type:W(8029,1,"JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_It_would_match_arguments_if_it_h_8029","LPCDoc '@param' tag has name '{0}', but there is no parameter with that name. It would match 'arguments' if it had an array type."),Qualified_name_0_is_not_allowed_without_a_leading_param_object_1:W(8032,1,"Qualified_name_0_is_not_allowed_without_a_leading_param_object_1_8032","Qualified name '{0}' is not allowed without a leading '@param {object} {1}'."),JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name:W(8024,1,"JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_8024","LPCDoc '@param' tag has name '{0}', but there is no parameter with that name."),A_rest_parameter_must_be_last_in_a_parameter_list:W(1014,1,"A_rest_parameter_must_be_last_in_a_parameter_list_1014","A rest parameter must be last in a parameter list."),A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma:W(1013,1,"A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma_1013","A rest parameter or binding pattern may not have a trailing comma."),Assertions_require_every_name_in_the_call_target_to_be_declared_with_an_explicit_type_annotation:W(2775,1,"Assertions_require_every_name_in_the_call_target_to_be_declared_with_an_explicit_type_annotation_2775","Assertions require every name in the call target to be declared with an explicit type annotation."),Trailing_comma_not_allowed:W(1009,1,"Trailing_comma_not_allowed_1009","Trailing comma not allowed."),A_rest_parameter_cannot_have_an_initializer:W(1048,1,"A_rest_parameter_cannot_have_an_initializer_1048","A rest parameter cannot have an initializer."),Block_scoped_variable_0_used_before_its_declaration:W(2448,1,"Block_scoped_variable_0_used_before_its_declaration_2448","Block-scoped variable '{0}' used before its declaration."),Class_0_used_before_its_declaration:W(2449,1,"Class_0_used_before_its_declaration_2449","Class '{0}' used before its declaration."),Jump_target_cannot_cross_function_boundary:W(1107,1,"Jump_target_cannot_cross_function_boundary_1107","Jump target cannot cross function boundary."),A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement:W(1115,1,"A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement_1115","A 'continue' statement can only jump to a label of an enclosing iteration statement."),A_break_statement_can_only_jump_to_a_label_of_an_enclosing_statement:W(1116,1,"A_break_statement_can_only_jump_to_a_label_of_an_enclosing_statement_1116","A 'break' statement can only jump to a label of an enclosing statement."),A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement:W(1105,1,"A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement_1105","A 'break' statement can only be used within an enclosing iteration or switch statement."),A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement:W(1104,1,"A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement_1104","A 'continue' statement can only be used within an enclosing iteration statement."),Fallthrough_case_in_switch:W(7029,1,"Fallthrough_case_in_switch_7029","Fallthrough case in switch."),A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods:W(1228,1,"A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods_1228","A type predicate is only allowed in return type position for functions and methods."),A_type_predicate_cannot_reference_a_rest_parameter:W(1229,1,"A_type_predicate_cannot_reference_a_rest_parameter_1229","A type predicate cannot reference a rest parameter."),A_type_predicate_s_type_must_be_assignable_to_its_parameter_s_type:W(2677,1,"A_type_predicate_s_type_must_be_assignable_to_its_parameter_s_type_2677","A type predicate's type must be assignable to its parameter's type."),Cannot_find_parameter_0:W(1225,1,"Cannot_find_parameter_0_1225","Cannot find parameter '{0}'."),A_type_predicate_cannot_reference_element_0_in_a_binding_pattern:W(1230,1,"A_type_predicate_cannot_reference_element_0_in_a_binding_pattern_1230","A type predicate cannot reference element '{0}' in a binding pattern."),The_type_of_a_function_declaration_must_match_the_function_s_signature:W(8030,1,"The_type_of_a_function_declaration_must_match_the_function_s_signature_8030","The type of a function declaration must match the function's signature."),Assertions_require_the_call_target_to_be_an_identifier_or_qualified_name:W(2776,1,"Assertions_require_the_call_target_to_be_an_identifier_or_qualified_name_2776","Assertions require the call target to be an identifier or qualified name."),Specify_the_root_folder_within_your_source_files:W(6690,3,"Specify_the_root_folder_within_your_source_files_6690","Specify the root folder within your source files."),Computed_from_the_list_of_input_files:W(6911,3,"Computed_from_the_list_of_input_files_6911","Computed from the list of input files"),Imported_via_0_from_file_1:W(1393,3,"Imported_via_0_from_file_1_1393","Imported via {0} from file '{1}'"),Imported_via_0_from_file_1_to_import_jsx_and_jsxs_factory_functions:W(1397,3,"Imported_via_0_from_file_1_to_import_jsx_and_jsxs_factory_functions_1397","Imported via {0} from file '{1}' to import 'jsx' and 'jsxs' factory functions"),Referenced_via_0_from_file_1:W(1400,3,"Referenced_via_0_from_file_1_1400","Referenced via '{0}' from file '{1}'"),Library_referenced_via_0_from_file_1:W(1405,3,"Library_referenced_via_0_from_file_1_1405","Library referenced via '{0}' from file '{1}'"),File_is_matched_by_files_list_specified_here:W(1410,3,"File_is_matched_by_files_list_specified_here_1410","File is matched by 'files' list specified here."),File_is_matched_by_include_pattern_specified_here:W(1408,3,"File_is_matched_by_include_pattern_specified_here_1408","File is matched by include pattern specified here."),File_is_output_from_referenced_project_specified_here:W(1413,3,"File_is_output_from_referenced_project_specified_here_1413","File is output from referenced project specified here."),File_is_source_from_referenced_project_specified_here:W(1416,3,"File_is_source_from_referenced_project_specified_here_1416","File is source from referenced project specified here."),File_is_entry_point_of_type_library_specified_here:W(1419,3,"File_is_entry_point_of_type_library_specified_here_1419","File is entry point of type library specified here."),File_is_library_specified_here:W(1423,3,"File_is_library_specified_here_1423","File is library specified here."),File_is_default_library_for_target_specified_here:W(1426,3,"File_is_default_library_for_target_specified_here_1426","File is default library for target specified here."),Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package_ID_3:W(6391,3,"Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved__6391","Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was successfully resolved to '{2}' with Package ID '{3}'."),Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved_to_2:W(6390,3,"Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved__6390","Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was successfully resolved to '{2}'."),Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_not_resolved:W(6392,3,"Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_not_resolved_6392","Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was not resolved."),Auto_discovery_for_typings_is_enabled_in_project_0_Running_extra_resolution_pass_for_module_1_using_cache_location_2:W(6140,1,"Auto_discovery_for_typings_is_enabled_in_project_0_Running_extra_resolution_pass_for_module_1_using__6140","Auto discovery for typings is enabled in project '{0}'. Running extra resolution pass for module '{1}' using cache location '{2}'."),Source_has_0_element_s_but_target_requires_1:W(2618,1,"Source_has_0_element_s_but_target_requires_1_2618","Source has {0} element(s) but target requires {1}."),Source_has_0_element_s_but_target_allows_only_1:W(2619,1,"Source_has_0_element_s_but_target_allows_only_1_2619","Source has {0} element(s) but target allows only {1}."),Target_requires_0_element_s_but_source_may_have_fewer:W(2620,1,"Target_requires_0_element_s_but_source_may_have_fewer_2620","Target requires {0} element(s) but source may have fewer."),Target_allows_only_0_element_s_but_source_may_have_more:W(2621,1,"Target_allows_only_0_element_s_but_source_may_have_more_2621","Target allows only {0} element(s) but source may have more."),Source_provides_no_match_for_variadic_element_at_position_0_in_target:W(2624,1,"Source_provides_no_match_for_variadic_element_at_position_0_in_target_2624","Source provides no match for variadic element at position {0} in target."),Variadic_element_at_position_0_in_source_does_not_match_element_at_position_1_in_target:W(2625,1,"Variadic_element_at_position_0_in_source_does_not_match_element_at_position_1_in_target_2625","Variadic element at position {0} in source does not match element at position {1} in target."),Source_provides_no_match_for_required_element_at_position_0_in_target:W(2623,1,"Source_provides_no_match_for_required_element_at_position_0_in_target_2623","Source provides no match for required element at position {0} in target."),Property_0_in_type_1_refers_to_a_different_member_that_cannot_be_accessed_from_within_type_2:W(18015,1,"Property_0_in_type_1_refers_to_a_different_member_that_cannot_be_accessed_from_within_type_2_18015","Property '{0}' in type '{1}' refers to a different member that cannot be accessed from within type '{2}'."),Class_0_incorrectly_implements_interface_1:W(2420,1,"Class_0_incorrectly_implements_interface_1_2420","Class '{0}' incorrectly implements interface '{1}'."),Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclass:W(2720,1,"Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclas_2720","Class '{0}' incorrectly implements class '{1}'. Did you mean to extend '{1}' and inherit its members as a subclass?"),Property_0_is_missing_in_type_1_but_required_in_type_2:W(2741,1,"Property_0_is_missing_in_type_1_but_required_in_type_2_2741","Property '{0}' is missing in type '{1}' but required in type '{2}'."),Type_0_is_missing_the_following_properties_from_type_1_Colon_2_and_3_more:W(2740,1,"Type_0_is_missing_the_following_properties_from_type_1_Colon_2_and_3_more_2740","Type '{0}' is missing the following properties from type '{1}': {2}, and {3} more."),Type_0_is_missing_the_following_properties_from_type_1_Colon_2:W(2739,1,"Type_0_is_missing_the_following_properties_from_type_1_Colon_2_2739","Type '{0}' is missing the following properties from type '{1}': {2}"),Types_have_separate_declarations_of_a_private_property_0:W(2442,1,"Types_have_separate_declarations_of_a_private_property_0_2442","Types have separate declarations of a private property '{0}'."),Property_0_is_private_in_type_1_but_not_in_type_2:W(2325,1,"Property_0_is_private_in_type_1_but_not_in_type_2_2325","Property '{0}' is private in type '{1}' but not in type '{2}'."),Property_0_is_protected_but_type_1_is_not_a_class_derived_from_2:W(2443,1,"Property_0_is_protected_but_type_1_is_not_a_class_derived_from_2_2443","Property '{0}' is protected but type '{1}' is not a class derived from '{2}'."),Property_0_is_protected_in_type_1_but_public_in_type_2:W(2444,1,"Property_0_is_protected_in_type_1_but_public_in_type_2_2444","Property '{0}' is protected in type '{1}' but public in type '{2}'."),Property_0_is_optional_in_type_1_but_required_in_type_2:W(2327,1,"Property_0_is_optional_in_type_1_but_required_in_type_2_2327","Property '{0}' is optional in type '{1}' but required in type '{2}'."),Index_signature_for_type_0_is_missing_in_type_1:W(2329,1,"Index_signature_for_type_0_is_missing_in_type_1_2329","Index signature for type '{0}' is missing in type '{1}'."),_0_index_signatures_are_incompatible:W(2634,1,"_0_index_signatures_are_incompatible_2634","'{0}' index signatures are incompatible."),_0_and_1_index_signatures_are_incompatible:W(2330,1,"_0_and_1_index_signatures_are_incompatible_2330","'{0}' and '{1}' index signatures are incompatible."),Property_0_is_incompatible_with_index_signature:W(2530,1,"Property_0_is_incompatible_with_index_signature_2530","Property '{0}' is incompatible with index signature."),Cannot_assign_an_abstract_constructor_type_to_a_non_abstract_constructor_type:W(2517,1,"Cannot_assign_an_abstract_constructor_type_to_a_non_abstract_constructor_type_2517","Cannot assign an abstract constructor type to a non-abstract constructor type."),Type_0_provides_no_match_for_the_signature_1:W(2658,1,"Type_0_provides_no_match_for_the_signature_1_2658","Type '{0}' provides no match for the signature '{1}'."),Type_produces_a_tuple_type_that_is_too_large_to_represent:W(2799,1,"Type_produces_a_tuple_type_that_is_too_large_to_represent_2799","Type produces a tuple type that is too large to represent."),Expression_produces_a_tuple_type_that_is_too_large_to_represent:W(2800,1,"Expression_produces_a_tuple_type_that_is_too_large_to_represent_2800","Expression produces a tuple type that is too large to represent."),All_type_parameters_are_unused:W(6205,1,"All_type_parameters_are_unused_6205","All type parameters are unused."),JSDoc_typedef_tag_should_either_have_a_type_annotation_or_be_followed_by_property_or_member_tags:W(8021,1,"JSDoc_typedef_tag_should_either_have_a_type_annotation_or_be_followed_by_property_or_member_tags_8021","LPCDoc '@typedef' tag should either have a type annotation or be followed by '@property' or '@member' tags."),Type_alias_name_cannot_be_0:W(2457,1,"Type_alias_name_cannot_be_0_2457","Type alias name cannot be '{0}'."),Type_parameter_0_has_a_circular_default:W(2716,1,"Type_parameter_0_has_a_circular_default_2716","Type parameter '{0}' has a circular default."),Type_parameter_name_cannot_be_0:W(2368,1,"Type_parameter_name_cannot_be_0_2368","Type parameter name cannot be '{0}'."),Required_type_parameters_may_not_follow_optional_type_parameters:W(2706,1,"Required_type_parameters_may_not_follow_optional_type_parameters_2706","Required type parameters may not follow optional type parameters."),Type_parameter_defaults_can_only_reference_previously_declared_type_parameters:W(2744,1,"Type_parameter_defaults_can_only_reference_previously_declared_type_parameters_2744","Type parameter defaults can only reference previously declared type parameters."),Type_0_does_not_satisfy_the_constraint_1:W(2344,1,"Type_0_does_not_satisfy_the_constraint_1_2344","Type '{0}' does not satisfy the constraint '{1}'."),Property_0_of_type_1_is_not_assignable_to_2_index_type_3:W(2411,1,"Property_0_of_type_1_is_not_assignable_to_2_index_type_3_2411","Property '{0}' of type '{1}' is not assignable to '{2}' index type '{3}'."),_0_index_type_1_is_not_assignable_to_2_index_type_3:W(2413,1,"_0_index_type_1_is_not_assignable_to_2_index_type_3_2413","'{0}' index type '{1}' is not assignable to '{2}' index type '{3}'."),Type_parameter_0_has_a_circular_constraint:W(2313,1,"Type_parameter_0_has_a_circular_constraint_2313","Type parameter '{0}' has a circular constraint."),Circularity_originates_in_type_at_this_location:W(2751,1,"Circularity_originates_in_type_at_this_location_2751","Circularity originates in type at this location."),Private_or_protected_member_0_cannot_be_accessed_on_a_type_parameter:W(4105,1,"Private_or_protected_member_0_cannot_be_accessed_on_a_type_parameter_4105","Private or protected member '{0}' cannot be accessed on a type parameter."),Cannot_assign_to_0_because_it_is_a_read_only_property:W(2540,1,"Cannot_assign_to_0_because_it_is_a_read_only_property_2540","Cannot assign to '{0}' because it is a read-only property."),A_tuple_type_cannot_be_indexed_with_a_negative_value:W(2514,1,"A_tuple_type_cannot_be_indexed_with_a_negative_value_2514","A tuple type cannot be indexed with a negative value."),Tuple_type_0_of_length_1_has_no_element_at_index_2:W(2493,1,"Tuple_type_0_of_length_1_has_no_element_at_index_2_2493","Tuple type '{0}' of length '{1}' has no element at index '{2}'."),_0_is_assignable_to_the_constraint_of_type_1_but_1_could_be_instantiated_with_a_different_subtype_of_constraint_2:W(5075,1,"_0_is_assignable_to_the_constraint_of_type_1_but_1_could_be_instantiated_with_a_different_subtype_of_5075","'{0}' is assignable to the constraint of type '{1}', but '{1}' could be instantiated with a different subtype of constraint '{2}'."),_0_could_be_instantiated_with_an_arbitrary_type_which_could_be_unrelated_to_1:W(5082,1,"_0_could_be_instantiated_with_an_arbitrary_type_which_could_be_unrelated_to_1_5082","'{0}' could be instantiated with an arbitrary type which could be unrelated to '{1}'."),The_type_0_is_readonly_and_cannot_be_assigned_to_the_mutable_type_1:W(4104,1,"The_type_0_is_readonly_and_cannot_be_assigned_to_the_mutable_type_1_4104","The type '{0}' is 'readonly' and cannot be assigned to the mutable type '{1}'."),This_type_parameter_might_need_an_extends_0_constraint:W(2208,1,"This_type_parameter_might_need_an_extends_0_constraint_2208","This type parameter might need an `extends {0}` constraint."),Type_of_property_0_circularly_references_itself_in_mapped_type_1:W(2615,1,"Type_of_property_0_circularly_references_itself_in_mapped_type_1_2615","Type of property '{0}' circularly references itself in mapped type '{1}'."),false_unless_strict_is_set:W(6905,3,"false_unless_strict_is_set_6905","`false`, unless `strict` is set"),Generic_type_0_requires_1_type_argument_s:W(2314,1,"Generic_type_0_requires_1_type_argument_s_2314","Generic type '{0}' requires {1} type argument(s)."),Generic_type_0_requires_between_1_and_2_type_arguments:W(2707,1,"Generic_type_0_requires_between_1_and_2_type_arguments_2707","Generic type '{0}' requires between {1} and {2} type arguments."),Variance_annotations_are_only_supported_in_type_aliases_for_object_function_constructor_and_mapped_types:W(2637,1,"Variance_annotations_are_only_supported_in_type_aliases_for_object_function_constructor_and_mapped_t_2637","Variance annotations are only supported in type aliases for object, function, constructor, and mapped types."),Type_0_is_not_assignable_to_type_1_as_implied_by_variance_annotation:W(2636,1,"Type_0_is_not_assignable_to_type_1_as_implied_by_variance_annotation_2636","Type '{0}' is not assignable to type '{1}' as implied by variance annotation."),Type_parameter_list_cannot_be_empty:W(1098,1,"Type_parameter_list_cannot_be_empty_1098","Type parameter list cannot be empty."),Type_argument_list_cannot_be_empty:W(1099,1,"Type_argument_list_cannot_be_empty_1099","Type argument list cannot be empty."),JSDoc_types_can_only_be_used_inside_documentation_comments:W(8020,1,"JSDoc_types_can_only_be_used_inside_documentation_comments_8020","LPCDoc types can only be used inside documentation comments."),Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1:W(6048,1,"Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1_6048","Locale must be of the form <language> or <language>-<territory>. For example '{0}' or '{1}'."),Unable_to_open_file_0:W(6050,1,"Unable_to_open_file_0_6050","Unable to open file '{0}'."),Corrupted_locale_file_0:W(6051,1,"Corrupted_locale_file_0_6051","Corrupted locale file {0}."),Version_0:W(6029,3,"Version_0_6029","Version {0}"),Unused_lpc_expect_error_directive:W(2578,1,"Unused_lpc_expect_error_directive_2578","Unused '@lpc-expect-error' directive."),The_left_hand_side_of_a_for_each_statement_cannot_be_a_destructuring_pattern:W(2491,1,"The_left_hand_side_of_a_for_each_statement_cannot_be_a_destructuring_pattern_2491","The left-hand side of a 'foreach' statement cannot be a destructuring pattern."),The_left_hand_side_of_a_for_each_mapping_statement_must_be_a_variable_or_a_property_access:W(2487,1,"The_left_hand_side_of_a_for_each_mapping_statement_must_be_a_variable_or_a_property_access_2487","The left-hand side of a 'foreach...mapping' statement must be a variable or a property access."),Performance_timings_for_diagnostics_or_extendedDiagnostics_are_not_available_in_this_session_A_native_implementation_of_the_Web_Performance_API_could_not_be_found:W(6386,3,"Performance_timings_for_diagnostics_or_extendedDiagnostics_are_not_available_in_this_session_A_nativ_6386","Performance timings for '--diagnostics' or '--extendedDiagnostics' are not available in this session. A native implementation of the Web Performance API could not be found.")};function qc(e){return e>=89}function KZ(e){return e===32||qc(e)}function bm(e,n,r=!1){return{fileName:n,end:e,isSpeculative:r}}var f7={"#include":178,"#define":179,"#undef":180,"#if":181,"#ifdef":182,"#ifndef":183,"#else":184,"#elif":185,"#endif":186,"#pragma":187},eX=new Map(Object.entries(f7)),R2={any:97,break:106,buffer:108,bytes:107,case:113,catch:100,class:133,closure:98,continue:121,default:114,do:109,else:110,false:135,float:93,foreach:112,for:111,functions:143,function:138,if:115,in:103,int:92,inherit:120,intrinsic:129,is:142,lwobject:95,mapping:104,mixed:101,new:145,nomask:130,null:137,nosave:127,object:140,private:122,protected:123,public:124,ref:141,return:116,static:125,string:94,status:134,struct:99,switch:117,symbol:139,true:136,undefined:96,unknown:102,varargs:131,virtual:144,void:105,while:118,async:119},tX=new Map(Object.entries(R2)),p7=new Map(Object.entries({...R2,"{":17,"}":19,"(":20,")":21,"[":22,"]":23,".":24,"..":73,"...":25,";":26,",":27,"<":29,">":32,"<..":31,"<=":33,">=":34,"==":35,"!=":36,"===":37,"!==":38,"=>":39,"->":40,"+":41,"-":42,"**":44,"*":43,"/":45,"%":46,"++":47,"--":48,"<<":49,"</":30,">>":50,">>>":51,"&":52,"|":53,"^":54,"!":55,"~":57,"&&":58,"||":59,"?":60,"??":64,"?.":28,":":61,"::":71,"=":74,"+=":75,"-=":76,"*=":77,"**=":78,"/=":79,"%=":80,"<<=":81,">>=":82,">>>=":83,"&=":84,"|=":85,"^=":88,"||=":86,"??=":87,"@":62,"@@":63,"#":65,"(:":66,"([":68,"({":69,"(*":70,"`":18})),d7=[65,90,97,122,170,170,181,181,186,186,192,214,216,246,248,705,710,721,736,740,748,748,750,750,880,884,886,887,890,893,895,895,902,902,904,906,908,908,910,929,931,1013,1015,1153,1162,1327,1329,1366,1369,1369,1376,1416,1488,1514,1519,1522,1568,1610,1646,1647,1649,1747,1749,1749,1765,1766,1774,1775,1786,1788,1791,1791,1808,1808,1810,1839,1869,1957,1969,1969,1994,2026,2036,2037,2042,2042,2048,2069,2074,2074,2084,2084,2088,2088,2112,2136,2144,2154,2160,2183,2185,2190,2208,2249,2308,2361,2365,2365,2384,2384,2392,2401,2417,2432,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2493,2493,2510,2510,2524,2525,2527,2529,2544,2545,2556,2556,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2649,2652,2654,2654,2674,2676,2693,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2749,2749,2768,2768,2784,2785,2809,2809,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2869,2873,2877,2877,2908,2909,2911,2913,2929,2929,2947,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,3001,3024,3024,3077,3084,3086,3088,3090,3112,3114,3129,3133,3133,3160,3162,3165,3165,3168,3169,3200,3200,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3261,3261,3293,3294,3296,3297,3313,3314,3332,3340,3342,3344,3346,3386,3389,3389,3406,3406,3412,3414,3423,3425,3450,3455,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3585,3632,3634,3635,3648,3654,3713,3714,3716,3716,3718,3722,3724,3747,3749,3749,3751,3760,3762,3763,3773,3773,3776,3780,3782,3782,3804,3807,3840,3840,3904,3911,3913,3948,3976,3980,4096,4138,4159,4159,4176,4181,4186,4189,4193,4193,4197,4198,4206,4208,4213,4225,4238,4238,4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4822,4824,4880,4882,4885,4888,4954,4992,5007,5024,5109,5112,5117,5121,5740,5743,5759,5761,5786,5792,5866,5870,5880,5888,5905,5919,5937,5952,5969,5984,5996,5998,6e3,6016,6067,6103,6103,6108,6108,6176,6264,6272,6312,6314,6314,6320,6389,6400,6430,6480,6509,6512,6516,6528,6571,6576,6601,6656,6678,6688,6740,6823,6823,6917,6963,6981,6988,7043,7072,7086,7087,7098,7141,7168,7203,7245,7247,7258,7293,7296,7304,7312,7354,7357,7359,7401,7404,7406,7411,7413,7414,7418,7418,7424,7615,7680,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8305,8305,8319,8319,8336,8348,8450,8450,8455,8455,8458,8467,8469,8469,8472,8477,8484,8484,8486,8486,8488,8488,8490,8505,8508,8511,8517,8521,8526,8526,8544,8584,11264,11492,11499,11502,11506,11507,11520,11557,11559,11559,11565,11565,11568,11623,11631,11631,11648,11670,11680,11686,11688,11694,11696,11702,11704,11710,11712,11718,11720,11726,11728,11734,11736,11742,12293,12295,12321,12329,12337,12341,12344,12348,12353,12438,12443,12447,12449,12538,12540,12543,12549,12591,12593,12686,12704,12735,12784,12799,13312,19903,19968,42124,42192,42237,42240,42508,42512,42527,42538,42539,42560,42606,42623,42653,42656,42735,42775,42783,42786,42888,42891,42954,42960,42961,42963,42963,42965,42969,42994,43009,43011,43013,43015,43018,43020,43042,43072,43123,43138,43187,43250,43255,43259,43259,43261,43262,43274,43301,43312,43334,43360,43388,43396,43442,43471,43471,43488,43492,43494,43503,43514,43518,43520,43560,43584,43586,43588,43595,43616,43638,43642,43642,43646,43695,43697,43697,43701,43702,43705,43709,43712,43712,43714,43714,43739,43741,43744,43754,43762,43764,43777,43782,43785,43790,43793,43798,43808,43814,43816,43822,43824,43866,43868,43881,43888,44002,44032,55203,55216,55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,64285,64285,64287,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65136,65140,65142,65276,65313,65338,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500,65536,65547,65549,65574,65576,65594,65596,65597,65599,65613,65616,65629,65664,65786,65856,65908,66176,66204,66208,66256,66304,66335,66349,66378,66384,66421,66432,66461,66464,66499,66504,66511,66513,66517,66560,66717,66736,66771,66776,66811,66816,66855,66864,66915,66928,66938,66940,66954,66956,66962,66964,66965,66967,66977,66979,66993,66995,67001,67003,67004,67072,67382,67392,67413,67424,67431,67456,67461,67463,67504,67506,67514,67584,67589,67592,67592,67594,67637,67639,67640,67644,67644,67647,67669,67680,67702,67712,67742,67808,67826,67828,67829,67840,67861,67872,67897,67968,68023,68030,68031,68096,68096,68112,68115,68117,68119,68121,68149,68192,68220,68224,68252,68288,68295,68297,68324,68352,68405,68416,68437,68448,68466,68480,68497,68608,68680,68736,68786,68800,68850,68864,68899,69248,69289,69296,69297,69376,69404,69415,69415,69424,69445,69488,69505,69552,69572,69600,69622,69635,69687,69745,69746,69749,69749,69763,69807,69840,69864,69891,69926,69956,69956,69959,69959,69968,70002,70006,70006,70019,70066,70081,70084,70106,70106,70108,70108,70144,70161,70163,70187,70207,70208,70272,70278,70280,70280,70282,70285,70287,70301,70303,70312,70320,70366,70405,70412,70415,70416,70419,70440,70442,70448,70450,70451,70453,70457,70461,70461,70480,70480,70493,70497,70656,70708,70727,70730,70751,70753,70784,70831,70852,70853,70855,70855,71040,71086,71128,71131,71168,71215,71236,71236,71296,71338,71352,71352,71424,71450,71488,71494,71680,71723,71840,71903,71935,71942,71945,71945,71948,71955,71957,71958,71960,71983,71999,71999,72001,72001,72096,72103,72106,72144,72161,72161,72163,72163,72192,72192,72203,72242,72250,72250,72272,72272,72284,72329,72349,72349,72368,72440,72704,72712,72714,72750,72768,72768,72818,72847,72960,72966,72968,72969,72971,73008,73030,73030,73056,73061,73063,73064,73066,73097,73112,73112,73440,73458,73474,73474,73476,73488,73490,73523,73648,73648,73728,74649,74752,74862,74880,75075,77712,77808,77824,78895,78913,78918,82944,83526,92160,92728,92736,92766,92784,92862,92880,92909,92928,92975,92992,92995,93027,93047,93053,93071,93760,93823,93952,94026,94032,94032,94099,94111,94176,94177,94179,94179,94208,100343,100352,101589,101632,101640,110576,110579,110581,110587,110589,110590,110592,110882,110898,110898,110928,110930,110933,110933,110948,110951,110960,111355,113664,113770,113776,113788,113792,113800,113808,113817,119808,119892,119894,119964,119966,119967,119970,119970,119973,119974,119977,119980,119982,119993,119995,119995,119997,120003,120005,120069,120071,120074,120077,120084,120086,120092,120094,120121,120123,120126,120128,120132,120134,120134,120138,120144,120146,120485,120488,120512,120514,120538,120540,120570,120572,120596,120598,120628,120630,120654,120656,120686,120688,120712,120714,120744,120746,120770,120772,120779,122624,122654,122661,122666,122928,122989,123136,123180,123191,123197,123214,123214,123536,123565,123584,123627,124112,124139,124896,124902,124904,124907,124909,124910,124912,124926,124928,125124,125184,125251,125259,125259,126464,126467,126469,126495,126497,126498,126500,126500,126503,126503,126505,126514,126516,126519,126521,126521,126523,126523,126530,126530,126535,126535,126537,126537,126539,126539,126541,126543,126545,126546,126548,126548,126551,126551,126553,126553,126555,126555,126557,126557,126559,126559,126561,126562,126564,126564,126567,126570,126572,126578,126580,126583,126585,126588,126590,126590,126592,126601,126603,126619,126625,126627,126629,126633,126635,126651,131072,173791,173824,177977,177984,178205,178208,183969,183984,191456,191472,192093,194560,195101,196608,201546,201552,205743],nX=/^\/\/\/?\s*@(lpc-expect-error|lpc-ignore)/,rX=/^(?:\/|\*)*\s*@(lpc-expect-error|lpc-ignore)/;function _7(e,n){if(e<n[0])return!1;let r=0,s=n.length,a;for(;r+1<s;){if(a=r+(s-r)/2,a-=a%2,n[a]<=e&&e<=n[a+1])return!0;e<n[a]?s=a:r=a+2}return!1}function m7(e,n){return _7(e,d7)}function iX(e,n){return _7(e,d7)}function sX(e){let n=[];return e.forEach((r,s)=>{n[r]=s}),n}var oX=sX(p7);function Mi(e){return oX[e]}function hg(e){return p7.get(e)}function _0(e){let n=[],r=0,s=0;for(;r<e.length;){let a=e.charCodeAt(r);switch(r++,a){case 13:e.charCodeAt(r)===10&&r++;case 10:n.push(s),s=r;break;default:a>127&&Mo(a)&&(n.push(s),s=r);break}}return n.push(s),n}function Sy(e,n,r,s){return e.getPositionOfLineAndCharacter?e.getPositionOfLineAndCharacter(n,r,s):M2(Xc(e),n,r,e.text,s)}function M2(e,n,r,s,a){(n<0||n>=e.length)&&(a?n=n<0?0:n>=e.length?e.length-1:n:w.fail(`Bad line number. Line: ${n}, lineStarts.length: ${e.length} , line map is correct? ${s!==void 0?Gx(e,_0(s)):"unknown"}`));let l=e[n]+r;return a?l>e[n+1]?e[n+1]:typeof s=="string"&&l>s.length?s.length:l:(n<e.length-1?w.assert(l<e[n+1]):s!==void 0&&w.assert(l<=s.length),l)}function Xc(e){return e.lineMap||(e.lineMap=_0(e.text))}function m0(e,n){let r=qh(e,n);return{line:r,character:n-e[r]}}function qh(e,n,r){let s=up(e,n,Gi,vs,r);return s<0&&(s=~s-1,w.assert(s!==-1,"position cannot precede the beginning of the file")),s}function bv(e,n,r){if(n===r)return 0;let s=Xc(e),a=Math.min(n,r),l=a===r,u=l?n:r,d=qh(s,a),_=qh(s,u,d);return l?d-_:_-d}function $s(e,n){return m0(Xc(e),n)}function Bu(e){return Ou(e)||Mo(e)}function Ou(e){return e===32||e===9||e===11||e===12||e===160||e===133||e===5760||e>=8192&&e<=8203||e===8239||e===8287||e===12288||e===65279}function Mo(e){return e===10||e===13||e===8232||e===8233}function a_(e){return e>=48&&e<=57}function M4(e){return a_(e)||e>=65&&e<=70||e>=97&&e<=102}function g7(e){return e>=65&&e<=90||e>=97&&e<=122}function aX(e){return g7(e)||a_(e)||e===95}function VS(e){return e>=48&&e<=55}function cX(e,n){let r=e.charCodeAt(n);switch(r){case 13:case 10:case 9:case 11:case 12:case 32:case 47:case 60:case 124:case 61:case 62:return!0;case 35:return n===0;default:return r>127}}function ts(e,n,r,s,a){if(La(n))return n;let l=!1;for(;;){let u=e.charCodeAt(n);switch(u){case 13:e.charCodeAt(n+1)===10&&n++;case 10:if(n++,r)return n;l=!!a;continue;case 9:case 11:case 12:case 32:n++;continue;case 47:if(s)break;if(e.charCodeAt(n+1)===47){for(n+=2;n<e.length&&!Mo(e.charCodeAt(n));)n++;l=!1;continue}if(e.charCodeAt(n+1)===42){for(n+=2;n<e.length;){if(e.charCodeAt(n)===42&&e.charCodeAt(n+1)===47){n+=2;break}n++}l=!1;continue}break;case 60:case 124:case 61:case 62:if(bh(e,n)){n=j1(e,n),l=!1;continue}break;case 35:if(n===0&&_D(e,n)){n=mD(e,n),l=!1;continue}break;case 42:if(l){n++,l=!1;continue}break;default:if(u>127&&Bu(u)){n++;continue}break}return n}}var qS=7;function bh(e,n){if(w.assert(n>=0),n===0||Mo(e.charCodeAt(n-1))){let r=e.charCodeAt(n);if(n+qS<e.length){for(let s=0;s<qS;s++)if(e.charCodeAt(n+s)!==r)return!1;return r===61||e.charCodeAt(n+qS)===32}}return!1}function j1(e,n,r){r&&r(P.Merge_conflict_marker_encountered,n,qS);let s=e.charCodeAt(n),a=e.length;if(s===60||s===62)for(;n<a&&!Mo(e.charCodeAt(n));)n++;else for(w.assert(s===124||s===61);n<a;){let l=e.charCodeAt(n);if((l===61||l===62)&&l!==s&&bh(e,n))break;n++}return n}var dD=/^#!.*/;function _D(e,n){return w.assert(n===0),dD.test(e)}function mD(e,n){let r=dD.exec(e)[0];return n=n+r.length,n}function j2(e,n,r,s,a,l,u){let d,_,y,h,v=!1,b=s,T=u;if(r===0){b=!0;let E=kv(n);E&&(r=E.length)}e:for(;r>=0&&r<n.length;){let E=n.charCodeAt(r);switch(E){case 13:n.charCodeAt(r+1)===10&&r++;case 10:if(r++,s)break e;b=!0,v&&(h=!0);continue;case 9:case 11:case 12:case 32:r++;continue;case 47:let g=n.charCodeAt(r+1),M=!1;if(g===47||g===42){let N=g===47?2:3,z=r;if(r+=2,g===47)for(;r<n.length;){if(Mo(n.charCodeAt(r))){M=!0;break}r++}else for(;r<n.length;){if(n.charCodeAt(r)===42&&n.charCodeAt(r+1)===47){r+=2;break}r++}if(b){if(v&&(T=a(d,_,y,h,l,T),!e&&T))return T;d=z,_=r,y=N,h=M,v=!0}continue}break e;default:if(E>127&&Bu(E)){v&&Mo(E)&&(h=!0),r++;continue}break e}}return v&&(T=a(d,_,y,h,l,T)),T}function by(e,n,r,s){return j2(!1,e,n,!1,r,s)}function lX(e,n,r,s){return j2(!1,e,n,!0,r,s)}function h7(e,n,r,s,a){return j2(!0,e,n,!1,r,s,a)}function y7(e,n,r,s,a){return j2(!0,e,n,!0,r,s,a)}function v7(e,n,r,s,a,l=[]){return l.push({kind:r,pos:e,end:n,hasTrailingNewLine:s}),l}function Wu(e,n){return h7(e,n,v7,void 0,void 0)}function B_(e,n){return y7(e,n,v7,void 0,void 0)}function kv(e){let n=dD.exec(e);if(n)return n[0]}function bc(e,n){return g7(e)||e===36||e===95||e>127&&m7(e,n)}function Kl(e,n,r){return aX(e)||e===36||e>127&&iX(e,n)}function y_(e,n,r){let s=mP(e,0);if(!bc(s,n))return!1;for(let a=vl(s);a<e.length;a+=vl(s))if(!Kl(s=mP(e,a),n,r))return!1;return!0}function Cv(e,n,r,s=2,a,l,u,d){var _=a,y=!1,h=!0,v,b=1,T=2,E=[],g,M,N,z,X,j,Z,le,de,se=0,ye=!1,he=!1,oe=!1,ie=0,Y=0;Ie(_,u,d);var _e={getTokenFullStart:()=>z,getStartPos:()=>z,getTokenEnd:()=>g,getFileName:()=>M,getTextPos:()=>g,getToken:()=>j,getTokenStart:()=>X,getTokenPos:()=>X,getTokenText:()=>_.substring(X,g),getTokenValue:()=>Z,getStateId:()=>b,getState:Kt,releaseState:()=>{w.assertIsDefined(v),v?.()},resetSavedStates:()=>{v=void 0,T=2,b=1,E=[]},hasUnicodeEscape:()=>(le&1024)!==0,hasExtendedUnicodeEscape:()=>(le&8)!==0,hasPrecedingLineBreak:()=>(le&1)!==0,hasPrecedingJSDocComment:()=>(le&2)!==0,isIdentifier:()=>j===89||j>132,isReservedWord:()=>j>=92&&j<=132,isUnterminated:()=>(le&4)!==0,getCommentDirectives:()=>de,getNumericLiteralFlags:()=>le&58352,getTokenFlags:()=>le,reScanGreaterToken:Se,reScanAsteriskEqualsToken:De,reScanLessThanToken:Je,reScanLessThanTokenAsStringLiteral:we,reScanHashToken:ze,reScanQuestionToken:it,reScanInvalidIdentifier:xr,reScanInclude:_i,scanJsDocToken:H,scanJSDocCommentTextToken:Re,scan:Vr,switchStream:sn,getText:ro,clearCommentDirectives:$i,setText:Ie,setReportLineBreak:Rr,setScriptTarget:Gt,setLanguageVariant:yn,setScriptKind:Rn,setJSDocParsingMode:bn,setOnError:yt,setParseBracketAsStringLiteral:Te,resetTokenState:Kn,setTextPos:Kn,setSkipJsDocLeadingAsterisks:ur,hasLeadingAsterisks:_r,tryScan:cs,lookAhead:Xr,scanRange:gr,getEnd:Xi,setFileName:Le=>M=Le,getStateEndings:()=>E};return w.isDebugging&&(Object.defineProperty(_e,"__debugShowCurrentPositionInText",{get:()=>{let Le=_e.getText();return Le.slice(0,_e.getTokenFullStart())+"\u2551"+Le.slice(_e.getTokenFullStart())}}),Object.defineProperty(_e,"__debugEndStates",{get:()=>JSON.stringify(_e.getStateEndings(),void 0,2)})),_e;function G(Le){return mP(_,Le)}function ke(Le){return Le>=0&&Le<N?G(Le):-1}function re(Le){return _.charCodeAt(Le)}function be(Le){return Le>=0&&Le<N?re(Le):-1}function rt(Le,He=g,lt,nn){if(l){let Un=g;g=He,l(Le,lt||0,nn),g=Un}}function qt(){let Le=g,He=!1,lt=!1,nn="";for(;;){let Un=re(g);if(Un===95){le|=512,He?(He=!1,lt=!0,nn+=_.substring(Le,g)):(le|=16384,rt(lt?P.Multiple_consecutive_numeric_separators_are_not_permitted:P.Numeric_separators_are_not_allowed_here,g,1)),g++,Le=g;continue}if(a_(Un)){He=!0,lt=!1,g++;continue}break}return re(g-1)===95&&(le|=16384,rt(P.Numeric_separators_are_not_allowed_here,g-1,1)),nn+_.substring(Le,g)}function fe(){let Le=g,He;if(re(g)===48)if(g++,re(g)===95)le|=16896,rt(P.Numeric_separators_are_not_allowed_here,g,1),g--,He=qt();else if(!Mt())le|=8192,He=""+ +Z;else if(!Z)He="0";else{Z=""+parseInt(Z,8),le|=32;let Yn=j===42,hr=(Yn?"-":"")+"0o"+(+Z).toString(8);return Yn&&Le--,11}else He=qt();let lt,nn;re(g)===46&&re(g+1)!==46&&(g++,lt=qt());let Un=g;if(re(g)===69||re(g)===101){g++,le|=16,(re(g)===43||re(g)===45)&&g++;let Yn=g,hr=qt();hr?(nn=_.substring(Un,Yn)+hr,Un=g):rt(P.Digit_expected)}let Ir;if(le&512?(Ir=He,lt&&(Ir+="."+lt),nn&&(Ir+=nn)):Ir=_.substring(Le,Un),lt!==void 0||le&16)return je(Le,lt===void 0&&!!(le&16)),Z=""+ +Ir,11;{Z=Ir;let Yn=pt();return je(Le),Yn}}function pt(){return Z=""+(le&128?parseInt(Z.slice(2),2):le&256?parseInt(Z.slice(2),8):+Z),11}function je(Le,He){if(!bc(G(g),e))return;let lt=g,{length:nn}=ue();nn===1&&_[lt]==="n"?rt(He?P.A_bigint_literal_cannot_use_exponential_notation:P.A_bigint_literal_must_be_an_integer,Le,lt-Le+1):(rt(P.An_identifier_or_keyword_cannot_immediately_follow_a_numeric_literal,lt,nn),g=lt)}function Mt(){let Le=g,He=!0;for(;a_(be(g));)VS(re(g))||(He=!1),g++;return Z=_.substring(Le,g),He}function Yt(Le,He){let lt=Me(Le,!1,He);return lt?parseInt(lt,16):-1}function Bt(Le,He){return Me(Le,!0,He)}function Me(Le,He,lt){let nn=[],Un=!1,Ir=!1;for(;nn.length<Le||He;){let Yn=re(g);if(lt&&Yn===95){le|=512,Un?(Un=!1,Ir=!0):rt(Ir?P.Multiple_consecutive_numeric_separators_are_not_permitted:P.Numeric_separators_are_not_allowed_here,g,1),g++;continue}if(Un=lt,Yn>=65&&Yn<=70)Yn+=32;else if(!(Yn>=48&&Yn<=57||Yn>=97&&Yn<=102))break;nn.push(Yn),g++,Ir=!1}return nn.length<Le&&(nn=[]),re(g-1)===95&&rt(P.Numeric_separators_are_not_allowed_here,g-1,1),String.fromCharCode(...nn)}function tt(){let Le=re(g);return g++,Lt()}function me(){let Le=re(g);if(Le!==39)return!1;g++;let He=g;for(;;){if(g>=N)return!1;let lt=re(g);if(lt===Le)return!1;if(g>=1&&lt===44||lt===10||lt===13||lt===32||!Kl(lt,e,s))return!0;g++}}function dt(Le){si(re(g),Le);let He=RP(RP(Z,"@"),"@"),lt="",nn=g,Un=g,Ir=g,Yn=g,hr="";for(;;){if(g>=N){lt+=_.substring(nn,g),le|=4,rt(P.Unterminated_string_literal,Un,1);break}let Hs=re(g);if(Bu(Hs)||h8(Hs)){if(_.substring(Ir+1,g).trim()==He){lt+=_.substring(nn,g-He.length);break}Mo(Hs)&&(Ir=g),Yn=g}else Un=g;g++}return lt}function Lt(Le=!1){let He=re(g);g++;let lt="",nn=g;for(;;){if(g>=N){lt+=_.substring(nn,g),le|=4,rt(P.Unterminated_string_literal);break}let Un=re(g);if(Un===He||He===60&&Un===62){lt+=_.substring(nn,g),g++;break}if(Un===92&&!Le){lt+=_.substring(nn,g),lt+=Vt(3),nn=g;continue}if(s!==1&&(Un===10||Un===13)&&!Le){lt+=_.substring(nn,g),le|=4,rt(P.Unterminated_string_literal);break}g++}return lt}function Vt(Le){let He=g;if(g++,g>=N)return rt(P.Unexpected_end_of_text),"";let lt=re(g);switch(g++,lt){case 48:if(g>=N||!a_(re(g)))return"\0";case 49:case 50:case 51:g<N&&VS(re(g))&&g++;case 52:case 53:case 54:case 55:if(g<N&&VS(re(g))&&g++,le|=2048,Le&6){let Ir=parseInt(_.substring(He+1,g),8);return Le&4&&!(Le&32)&&lt!==48?rt(P.Octal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class_If_this_was_intended_as_an_escape_sequence_use_the_syntax_0_instead,He,g-He,"\\x"+Ir.toString(16).padStart(2,"0")):rt(P.Octal_escape_sequences_are_not_allowed_Use_the_syntax_0,He,g-He,"\\x"+Ir.toString(16).padStart(2,"0")),String.fromCharCode(Ir)}return _.substring(He,g);case 56:case 57:return le|=2048,Le&6?(Le&4&&!(Le&32)?rt(P.Decimal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class,He,g-He):rt(P.Escape_sequence_0_is_not_allowed,He,g-He,_.substring(He,g)),String.fromCharCode(lt)):_.substring(He,g);case 98:return"\b";case 116:return"	";case 110:return`
`;case 118:return"\v";case 102:return"\f";case 114:return"\r";case 39:return"'";case 34:return'"';case 117:if(Le&17&&g<N&&re(g)===123)return g-=2,_n(!!(Le&6));for(;g<He+6;g++)if(!(g<N&&M4(re(g))))return le|=2048,Le&6&&rt(P.Hexadecimal_digit_expected),_.substring(He,g);le|=1024;let nn=parseInt(_.substring(He+2,g),16),Un=String.fromCharCode(nn);if(Le&16&&nn>=55296&&nn<=56319&&g+6<N&&_.substring(g,g+2)==="\\u"&&re(g+2)!==123){let Ir=g,Yn=g+2;for(;Yn<Ir+6;Yn++)if(!M4(re(g)))return Un;let hr=parseInt(_.substring(Ir+2,Yn),16);if(hr>=56320&&hr<=57343)return g=Yn,Un+String.fromCharCode(hr)}return Un;case 120:for(;g<He+4;g++)if(!(g<N&&M4(re(g))))return le|=2048,Le&6&&rt(P.Hexadecimal_digit_expected),_.substring(He,g);return le|=4096,String.fromCharCode(parseInt(_.substring(He+2,g),16));case 13:g<N&&re(g)===10&&g++;case 10:case 8232:case 8233:return"";default:return(Le&16||Le&4&&!(Le&8)&&Kl(lt,e))&&rt(P.This_character_cannot_be_escaped_in_a_regular_expression,g-2,2),String.fromCharCode(lt)}}function _n(Le){let He=g;g+=3;let lt=g,nn=Bt(1,!1),Un=nn?parseInt(nn,16):-1,Ir=!1;return Un<0?(Le&&rt(P.Hexadecimal_digit_expected),Ir=!0):Un>1114111&&(Le&&rt(P.An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive,lt,g-lt),Ir=!0),g>=N?(Le&&rt(P.Unexpected_end_of_text),Ir=!0):re(g)===125?g++:(Le&&rt(P.Unterminated_Unicode_escape_sequence),Ir=!0),Ir?(le|=2048,_.substring(He,g)):(le|=8,gP(Un))}function hn(){if(g+5<N&&re(g+1)===117){let Le=g;g+=2;let He=Yt(4,!1);return g=Le,He}return-1}function kn(){if(G(g+1)===117&&G(g+2)===123){let Le=g;g+=3;let He=Bt(1,!1),lt=He?parseInt(He,16):-1;return g=Le,lt}return-1}function ue(){let Le="",He=g;for(;g<N;){let lt=G(g);if(Kl(lt,e))g+=vl(lt);else if(lt===92){if(lt=kn(),lt>=0&&Kl(lt,e)){Le+=_n(!0),He=g;continue}if(lt=hn(),!(lt>=0&&Kl(lt,e)))break;le|=1024,Le+=_.substring(He,g),Le+=gP(lt),g+=6,He=g}else break}return Le+=_.substring(He,g),Le}function Ze(){let Le=Z.length;if(Le>=2&&Le<=12){let He=Z.charCodeAt(0);if(He>=97&&He<=122){let lt=tX.get(Z);if(lt!==void 0)return j=lt}}return j=89}function Ct(Le){let He="#"+Z.substring(Le),lt=He.length;if(lt>=3&&lt<=12){let nn=He.charCodeAt(1);if(nn>=97&&nn<=122){let Un=eX.get(He);if(Un!==void 0)return j=Un}}return j=89}function on(Le){let He="",lt=!1,nn=!1;for(;;){let Un=re(g);if(Un===95){le|=512,lt?(lt=!1,nn=!0):rt(nn?P.Multiple_consecutive_numeric_separators_are_not_permitted:P.Numeric_separators_are_not_allowed_here,g,1),g++;continue}if(lt=!0,!a_(Un)||Un-48>=Le)break;He+=_[g],g++,nn=!1}return re(g-1)===95&&rt(P.Numeric_separators_are_not_allowed_here,g-1,1),He}function Vr(){for(z=g,le=0,ye=!1,E[b]=bm(g,M);;){X=g;let Le=!1,He=!1;for(;h&&g>=N&&v;){let nn=b;He=v(),E[b]??(E[b]=bm(g,M)),E[b].end=g,Le=!0}if(He)return j;if(Le)continue;if(g>=N)return j=1;let lt=G(g);if(g===0&&lt===35&&_D(_,g)){if(g=mD(_,g),n)continue;return j=8}switch(lt){case 10:case 13:if(le|=1,n&&!he){g++;continue}else return lt===13&&g+1<N&&re(g+1)===10?g+=2:g++,j=4;case 9:case 11:case 12:case 32:case 160:case 5760:case 8192:case 8193:case 8194:case 8195:case 8196:case 8197:case 8198:case 8199:case 8200:case 8201:case 8202:case 8203:case 8239:case 8287:case 12288:case 65279:if(n){g++;continue}else{for(;g<N&&Ou(re(g));)g++;return j=5}case 33:return re(g+1)===61?re(g+2)===61?(g+=3,j=38):(g+=2,j=36):(g++,j=55);case 39:return bc(re(g+1),e)&&Xr(me)?(g++,j=72):(Z=Lt(!1),Z.length>1&&rt(P.Character_literal_must_be_one_character,X,Z.length+2),Z=""+Z.charCodeAt(0),le|=32768,j=12);case 34:return Z=Lt(),j=16;case 37:return re(g+1)===61?(g+=2,j=80):(g++,j=46);case 38:return re(g+1)===38?(g+=2,j=58):re(g+1)===61?(g+=2,j=84):(g++,j=52);case 40:return re(g+1)===91?(g+=2,j=68):re(g+1)===123?(g+=2,j=69):re(g+1)===42?(g+=2,j=70):(g++,j=20);case 41:return g++,j=21;case 42:if(re(g+1)===61)return g+=2,j=77;if(re(g+1)===42)return re(g+2)===61?(g+=3,j=78):(g+=2,j=44);if(g++,se&&!ye&&le&1){ye=!0;continue}return j=43;case 43:return re(g+1)===43?(g+=2,j=47):re(g+1)===61?(g+=2,j=75):(g++,j=41);case 44:return g++,j=27;case 45:return re(g+1)===62?(g+=2,j=40):re(g+1)===45?(g+=2,j=48):re(g+1)===61?(g+=2,j=76):(g++,j=42);case 46:return a_(re(g+1))?(fe(),j=13):re(g+1)===46?re(g+2)===46?(g+=3,j=25):(g+=2,j=73):(g++,j=24);case 47:if(re(g+1)===47){for(g+=2;g<N&&!Mo(re(g));)g++;if(de=Ne(de,_.slice(X,g),nX,X),n)continue;return j=2}if(re(g+1)===42){g+=2;let Pt=re(g)===42&&re(g+1)!==47,oi=!1,tr=X;for(;g<N;){let Ui=re(g);if(Ui===42&&re(g+1)===47){g+=2,oi=!0;break}g++,Mo(Ui)&&(tr=g,le|=1)}if(Pt&&Vn()&&(le|=2),de=Ne(de,_.slice(tr,g),rX,tr),oi||rt(P.Asterisk_Slash_expected),n)continue;return oi||(le|=4),j=3}return re(g+1)===61?(g+=2,j=79):(g++,j=45);case 48:if(g+2<N&&(re(g+1)===88||re(g+1)===120))return g+=2,Z=Bt(1,!0),Z||(rt(P.Hexadecimal_digit_expected),Z="0"),Z="0x"+Z,le|=64,j=pt();if(g+2<N&&(re(g+1)===66||re(g+1)===98))return g+=2,Z=on(2),Z||(rt(P.Binary_digit_expected),Z="0"),Z="0b"+Z,le|=128,j=pt();if(g+2<N&&(re(g+1)===79||re(g+1)===111))return g+=2,Z=on(8),Z||(rt(P.Octal_digit_expected),Z="0"),Z="0o"+Z,le|=256,j=pt();case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return j=fe();case 58:return re(g+1)===58?(g+=2,j=71):(g++,j=61);case 59:return g++,j=26;case 60:if(bh(_,g)){if(g=j1(_,g,rt),n)continue;return j=6}return re(g+1)===60?re(g+2)===61?(g+=3,j=81):(g+=2,j=49):re(g+1)===61?(g+=2,j=33):re(g+1)===46&&re(g+2)===46?(g+=3,j=31):oe?(Z=Lt(),j=16):(g++,j=29);case 61:if(bh(_,g)){if(g=j1(_,g,rt),n)continue;return j=6}return re(g+1)===61?re(g+2)===61?(g+=3,j=37):(g+=2,j=35):re(g+1)===62?(g+=2,j=39):(g++,j=74);case 62:if(bh(_,g)){if(g=j1(_,g,rt),n)continue;return j=6}return g++,j=32;case 63:return re(g+1)===46&&!a_(re(g+2))?(g+=2,j=28):re(g+1)===63?re(g+2)===61?(g+=3,j=87):(g+=2,j=64):(g++,j=60);case 91:return g++,j=22;case 93:return g++,j=23;case 94:return re(g+1)===61?(g+=2,j=88):(g++,j=54);case 123:return g++,j=17;case 124:if(bh(_,g)){if(g=j1(_,g,rt),n)continue;return j=6}return re(g+1)===124?re(g+2)===61?(g+=3,j=86):(g+=2,j=59):re(g+1)===61?(g+=2,j=85):(g++,j=53);case 125:return g++,j=19;case 126:return g++,j=57;case 64:g++;let nn=re(g)===64;return nn&&g++,bc(re(g),e)?(Z=dt(e),j=nn?15:16):j=nn?63:62;case 92:let Un=kn();if(Un>=0&&bc(Un,e))return Z=_n(!0)+ue(),j=Ze();let Ir=hn();if(Ir>=0&&bc(Ir,e))return g+=6,le|=1024,Z=String.fromCharCode(Ir)+ue(),j=Ze();switch(re(g+1)){case 13:g+2<N&&re(g+2)===10&&(g+=1);case 10:g+=2,le|=1;continue}return rt(P.Invalid_character),g++,j=0;case 35:if(g!==0&&_[g+1]==="!")return rt(P.can_only_be_used_at_the_start_of_a_file,g,2),g++,j=0;if(re(g+1)===39)return g+=2,j=72;if(g===0||Mo(re(g-1))){if(g++,j=xi(re(g),e),r)switch(j){case 181:case 184:case 185:case 186:case 183:case 182:for(;g<N&&!Mo(re(g));)g++;continue;default:}return j}let Yn=G(g+1);if(Yn===92){g++;let Pt=kn(),oi=hn();g--}return bc(Yn,e)?(g++,si(Yn,e),j=90):(Z="#",rt(P.Invalid_character,g++,vl(lt)),j=0);case 65533:return rt(P.File_appears_to_be_binary,0,0),g=N,j=9;case 98:if(re(g+1)===34)return Z=tt(),j=14;default:let hr=si(lt,e);if(hr)return j=hr;if(Ou(lt)){g+=vl(lt);continue}else if(Mo(lt)){le|=1,g+=vl(lt);continue}let Hs=vl(lt);return rt(P.Invalid_character,g,Hs),g+=Hs,j=0}}}function Vn(){switch(Y){case 0:return!0;case 1:return!1}return!0}function _i(Le){X=z=Le;let He=Vr();return w.assert(He===178,"Expected to rescan an include directive"),He}function xr(){w.assert(j===0,"'reScanInvalidIdentifier' should only be called when the current token is 'SyntaxKind.Unknown'."),g=X=z,le=0;let Le=G(g),He=si(Le,1);return He?j=He:(g+=vl(Le),j)}function si(Le,He){let lt=Le;if(bc(lt,He)){for(g+=vl(lt);g<N&&Kl(lt=G(g),He);)g+=vl(lt);return Z=_.substring(X,g),lt===92&&(Z+=ue()),Ze()}}function xi(Le,He){let lt=g,nn=Le;for(;g<N&&Ou(nn);)nn=G(++g);let Un=g-lt+1;if(bc(nn,He)){for(g+=vl(nn);g<N&&Kl(nn=G(g),He);)g+=vl(nn);return Z=_.substring(X,g),nn===92&&(Z+=ue()),Ct(Un)}}function Se(){if(j===32){if(re(g)===62)return re(g+1)===62?re(g+2)===61?(g+=3,j=83):(g+=2,j=51):re(g+1)===61?(g+=2,j=82):(g++,j=50);if(re(g)===61)return g++,j=34}return j}function De(){return w.assert(j===77,"'reScanAsteriskEqualsToken' should only be called on a '*='"),g=X+1,j=74}function Ne(Le,He,lt,nn){let Un=$e(He.trimStart(),lt);return Un===void 0?Le:ei(Le,{range:{pos:nn,end:g},type:Un})}function $e(Le,He){let lt=He.exec(Le);if(lt)switch(lt[1]){case"lpc-expect-error":return 0;case"lpc-ignore":return 1}}function we(){if(j===29)return g--,Z=Lt(),j=16}function Je(){return j===49?(g=X+1,j=29):j}function ze(){return j}function it(){return w.assert(j===64,"'reScanQuestionToken' should only be called on a '??'"),g=X+1,j=60}function Re(Le){if(z=X=g,le=0,w.assert(!E[b]||E[b].end<=g,"State ending cannot be after the current position"),E[b]=bm(g,M),g>=N)return j=1;for(let He=re(g);g<N&&!Mo(He)&&He!==96;He=G(++g))if(!Le){if(He===123)break;if(He===64&&g-1>=0&&Ou(re(g-1))&&!(g+1<N&&Bu(re(g+1))))break}return g===X?H():(Z=_.substring(X,g),j=91)}function H(){if(z=X=g,le=0,E[b]=bm(g,M),g>=N)return j=1;let Le=G(g);switch(g+=vl(Le),Le){case 9:case 11:case 12:case 32:for(;g<N&&Ou(re(g));)g++;return j=5;case 64:return j=62;case 13:re(g)===10&&g++;case 10:return le|=1,j=4;case 42:return j=43;case 123:return j=17;case 125:return j=19;case 91:return j=22;case 93:return j=23;case 40:return j=20;case 41:return j=21;case 60:return j=29;case 62:return j=32;case 61:return j=74;case 44:return j=27;case 46:return j=24;case 96:return j=18;case 35:return j=65;case 92:g--;let He=kn();if(He>=0&&bc(He,e))return Z=_n(!0)+ue(),j=Ze();let lt=hn();return lt>=0&&bc(lt,e)?(g+=6,le|=1024,Z=String.fromCharCode(lt)+ue(),j=Ze()):(g++,j=0)}if(bc(Le,e)){let He=Le;for(;g<N&&Kl(He=G(g),e)||He===45;)g+=vl(He);return Z=_.substring(X,g),He===92&&(Z+=ue()),j=Ze()}else return j=0}function Sn(Le=!1){let He=Zt(Le),lt=b=T++;return()=>(b>=lt&&He(),E[lt]&&(E[lt].isSpeculative=Le),!1)}function Zt(Le){let He=Le,lt=g,nn=N,Un=z,Ir=X,Yn=j,hr=Z,Hs=le,Pt=M,oi=v,tr=b,Ui=_,Gs=h,xs=!1;return()=>{w.assert(!xs,"State has already been released"),xs=!0,Le=He,M=Pt,g=lt,N=nn,z=Un,X=Ir,j=Yn,Z=hr,le=Hs,b=tr,_=Ui,h=Gs,v=oi}}function sn(Le,He,lt,nn,Un=!0,Ir){let Yn=Sn();return y=!1,h=Un,v=function(){let hr=b;return Yn(),Ir?.()},Ie(He,lt,nn),M=Le,E[b]=bm(g,M),v}function mn(Le,He){let lt=[...E],nn=b,Un=T,Ir=v,Yn=Sn(!0);y=!He;let hr=!0,Hs=!1;w.assert(b!=nn);let Pt=v=function(Ui){return Ui?(hr=!1,!1):Hs?!1:hr?(Hs=!0,Yn()):(Hs=!0,!1)},oi=b,tr=Le();if(!tr||He){for(;b>oi;)v();Pt(),E=lt,T=Un,w.assert(b<=nn,"State id mismatch")}else{Pt(!0),w.assert(b>nn);let Ui=new Map,Gs=b;for(;Gs>=nn;){let xs=E[Gs].fileName;Ui.set(xs,Math.max(E[Gs].end,Ui.get(xs)||0)),E[Gs].end=Ui.get(xs),Gs--}b=nn,v=Ir}return tr}function Kt(Le){return E[Le]}function gr(Le,He,lt){let nn=b,Un=T,Ir=[...E],Yn=Sn(),hr=b;y=!1,M="",E[b]=bm(Le,M),Ie(_,Le,He);let Hs=lt();for(;b>hr;)v();return Yn(),E=Ir,T=Un,w.assert(b<=nn,"State id mismatch"),Hs}function Xr(Le){return mn(Le,!0)}function cs(Le){return mn(Le,!1)}function Xi(){return N}function ro(){return _}function $i(){de=void 0}function Ie(Le,He,lt){_=Le||"",N=lt===void 0?_.length:He+lt,Kn(He||0)}function Te(Le){oe=Le}function yt(Le){l=Le}function Gt(Le){e=Le}function yn(Le){s=Le}function Rn(Le){ie=Le}function Rr(Le){he=Le}function bn(Le){Y=Le}function Kn(Le,He){w.assert(Le>=0),g=Le,z=Le,X=Le,j=0,Z=void 0,le=0,He&&(E[b]=bm(Le,M))}function ur(Le){se+=Le?1:-1}function _r(){return ye}}function mP(e,n){return e.codePointAt(n)}function vl(e){return e>=65536?2:e===-1?0:1}function uX(e){if(w.assert(0<=e&&e<=1114111),e<=65535)return String.fromCharCode(e);let n=Math.floor((e-65536)/1024)+55296,r=(e-65536)%1024+56320;return String.fromCharCode(n,r)}var fX=String.fromCodePoint?e=>String.fromCodePoint(e):uX;function gP(e){return fX(e)}var Jae=new Map(Object.entries({General_Category:"General_Category",gc:"General_Category",Script:"Script",sc:"Script",Script_Extensions:"Script_Extensions",scx:"Script_Extensions"})),K3={General_Category:new Set(["C","Other","Cc","Control","cntrl","Cf","Format","Cn","Unassigned","Co","Private_Use","Cs","Surrogate","L","Letter","LC","Cased_Letter","Ll","Lowercase_Letter","Lm","Modifier_Letter","Lo","Other_Letter","Lt","Titlecase_Letter","Lu","Uppercase_Letter","M","Mark","Combining_Mark","Mc","Spacing_Mark","Me","Enclosing_Mark","Mn","Nonspacing_Mark","N","Number","Nd","Decimal_Number","digit","Nl","Letter_Number","No","Other_Number","P","Punctuation","punct","Pc","Connector_Punctuation","Pd","Dash_Punctuation","Pe","Close_Punctuation","Pf","Final_Punctuation","Pi","Initial_Punctuation","Po","Other_Punctuation","Ps","Open_Punctuation","S","Symbol","Sc","Currency_Symbol","Sk","Modifier_Symbol","Sm","Math_Symbol","So","Other_Symbol","Z","Separator","Zl","Line_Separator","Zp","Paragraph_Separator","Zs","Space_Separator"]),Script:new Set(["Adlm","Adlam","Aghb","Caucasian_Albanian","Ahom","Arab","Arabic","Armi","Imperial_Aramaic","Armn","Armenian","Avst","Avestan","Bali","Balinese","Bamu","Bamum","Bass","Bassa_Vah","Batk","Batak","Beng","Bengali","Bhks","Bhaiksuki","Bopo","Bopomofo","Brah","Brahmi","Brai","Braille","Bugi","Buginese","Buhd","Buhid","Cakm","Chakma","Cans","Canadian_Aboriginal","Cari","Carian","Cham","Cher","Cherokee","Chrs","Chorasmian","Copt","Coptic","Qaac","Cpmn","Cypro_Minoan","Cprt","Cypriot","Cyrl","Cyrillic","Deva","Devanagari","Diak","Dives_Akuru","Dogr","Dogra","Dsrt","Deseret","Dupl","Duployan","Egyp","Egyptian_Hieroglyphs","Elba","Elbasan","Elym","Elymaic","Ethi","Ethiopic","Geor","Georgian","Glag","Glagolitic","Gong","Gunjala_Gondi","Gonm","Masaram_Gondi","Goth","Gothic","Gran","Grantha","Grek","Greek","Gujr","Gujarati","Guru","Gurmukhi","Hang","Hangul","Hani","Han","Hano","Hanunoo","Hatr","Hatran","Hebr","Hebrew","Hira","Hiragana","Hluw","Anatolian_Hieroglyphs","Hmng","Pahawh_Hmong","Hmnp","Nyiakeng_Puachue_Hmong","Hrkt","Katakana_Or_Hiragana","Hung","Old_Hungarian","Ital","Old_Italic","Java","Javanese","Kali","Kayah_Li","Kana","Katakana","Kawi","Khar","Kharoshthi","Khmr","Khmer","Khoj","Khojki","Kits","Khitan_Small_Script","Knda","Kannada","Kthi","Kaithi","Lana","Tai_Tham","Laoo","Lao","Latn","Latin","Lepc","Lepcha","Limb","Limbu","Lina","Linear_A","Linb","Linear_B","Lisu","Lyci","Lycian","Lydi","Lydian","Mahj","Mahajani","Maka","Makasar","Mand","Mandaic","Mani","Manichaean","Marc","Marchen","Medf","Medefaidrin","Mend","Mende_Kikakui","Merc","Meroitic_Cursive","Mero","Meroitic_Hieroglyphs","Mlym","Malayalam","Modi","Mong","Mongolian","Mroo","Mro","Mtei","Meetei_Mayek","Mult","Multani","Mymr","Myanmar","Nagm","Nag_Mundari","Nand","Nandinagari","Narb","Old_North_Arabian","Nbat","Nabataean","Newa","Nkoo","Nko","Nshu","Nushu","Ogam","Ogham","Olck","Ol_Chiki","Orkh","Old_Turkic","Orya","Oriya","Osge","Osage","Osma","Osmanya","Ougr","Old_Uyghur","Palm","Palmyrene","Pauc","Pau_Cin_Hau","Perm","Old_Permic","Phag","Phags_Pa","Phli","Inscriptional_Pahlavi","Phlp","Psalter_Pahlavi","Phnx","Phoenician","Plrd","Miao","Prti","Inscriptional_Parthian","Rjng","Rejang","Rohg","Hanifi_Rohingya","Runr","Runic","Samr","Samaritan","Sarb","Old_South_Arabian","Saur","Saurashtra","Sgnw","SignWriting","Shaw","Shavian","Shrd","Sharada","Sidd","Siddham","Sind","Khudawadi","Sinh","Sinhala","Sogd","Sogdian","Sogo","Old_Sogdian","Sora","Sora_Sompeng","Soyo","Soyombo","Sund","Sundanese","Sylo","Syloti_Nagri","Syrc","Syriac","Tagb","Tagbanwa","Takr","Takri","Tale","Tai_Le","Talu","New_Tai_Lue","Taml","Tamil","Tang","Tangut","Tavt","Tai_Viet","Telu","Telugu","Tfng","Tifinagh","Tglg","Tagalog","Thaa","Thaana","Thai","Tibt","Tibetan","Tirh","Tirhuta","Tnsa","Tangsa","Toto","Ugar","Ugaritic","Vaii","Vai","Vith","Vithkuqi","Wara","Warang_Citi","Wcho","Wancho","Xpeo","Old_Persian","Xsux","Cuneiform","Yezi","Yezidi","Yiii","Yi","Zanb","Zanabazar_Square","Zinh","Inherited","Qaai","Zyyy","Common","Zzzz","Unknown"]),Script_Extensions:void 0};K3.Script_Extensions=K3.Script;function T7(){return{explode:e,implode:n,__lpcBinaryArrayHelper:r,__lpcBinaryHelper:s,__lpcIndexAccessHelper:a};function e(l,u){return l&&l.split(u)}function n(l,u){return l&&l.join(u)}function r(l,u,d){switch(d){case"+":return l.concat(u);case"-":return l.filter(_=>!u.includes(_));default:throw"Unhandled array operator "+d}}function s(l,u,d){if(Array.isArray(l)&&Array.isArray(u))return r(l,u,d);switch(d){case"+":return l+u;case"-":return l-u;case"*":return l*u;case"/":return l/u;case"==":return l==u;case"=":return u;default:throw new Error("Unhandled operator "+d)}}function a(l,u){if(typeof u=="number")return l[u];if(typeof u=="string"){let d=u.startsWith("<")?l.length-parseInt(u.slice(1))+1:parseInt(u);return l[d]}else if(typeof u=="object"){let{start:d,end:_}=u;return typeof d=="string"&&d.startsWith("<")&&(d=l.length-parseInt(d.slice(1))+1),typeof _=="string"&&_.startsWith("<")&&(_=l.length-parseInt(_.slice(1))+1),_===void 0?l.slice(d):d===void 0?l.slice(0,_):l.slice(d,_)}}}function kh(e){return Go(e,"pos")&&Go(e,"end")}function ya(e){return e.name}function go(e){return e.text}function ky(e){return(e.flags&16)===0}function _s(e,n){if(e===void 0||ky(e))return e;for(e=e.original;e;){if(ky(e))return!n||n(e)?e:void 0;e=e.original}}function Qi(e){return!!e&&$h(e.kind)}function S7(e){switch(e){case 169:case 154:case 270:case 271:case 283:return!0;default:return!1}}function $h(e){switch(e){case 156:case 151:case 202:case 283:case 150:case 158:case 196:return!0;default:return S7(e)}}function gD(e,n){ms(e)&&(e=Cb(e));let r=n(e);return e.kind===237&&(e=e.parent),e&&e.kind===238&&(r|=n(e),e=e.parent),e&&e.kind===242&&(r|=n(e)),r}function ig(e){return gD(e,pX)}function pX(e){return e.flags}function xl(e){switch(e.kind){case 236:case 283:case 151:case 240:case 255:case 168:case 243:case 244:case 169:case 270:case 158:case 150:case 217:case 219:case 196:case 202:case 225:case 264:case 176:case 239:return!0;default:return!1}}function El(e){return!!e.name}function B2(e){switch(e.kind){case 89:return e;case 272:case 269:switch(Oa(e)){default:return}case 176:let n=e;return e.name}return e.name}function b7(e){if(e.parent){if(Ur(e.parent)&&e===e.parent.right){if(Tt(e.parent.left))return e.parent.left}else if(Cs(e.parent)&&Tt(e.parent.name))return e.parent.name}else return}function hi(e){if(e!==void 0)return B2(e)||(Zc(e)||Au(e)?b7(e):void 0)}function zm(e){return e.kind===244}function kl(e){return sg(e,8)}function fp(e){return k7(kl(e).kind)}function k7(e){switch(e){case 268:case 286:case 281:case 276:case 278:case 272:case 273:case 237:case 290:case 291:case 289:case 283:case 293:case 282:case 277:case 274:case 270:case 89:case 284:case 285:case 11:case 13:case 16:case 14:case 135:case 137:case 136:case 71:case 173:return!0;default:return!1}}function op(e){return e.kind===272||e.kind===276}function Vs(e){return iF(e.kind)}function tu(e){return e&&S7(e.kind)}function Cy(e,n){if(!Ov(e))return Oe;let r=e.jsDoc?.jsDocCache;if(r===void 0||n){let s=WD(e,n);w.assert(s.length<2||s[0]!==s[1]),r=ao(s,a=>Ol(a)?a.tags:a),n||(e.jsDoc??(e.jsDoc=[]),e.jsDoc.jsDocCache=r)}return r}function _d(e,n,r){return Zr(Cy(e,r),n)}function hP(e){return _d(e,hM)}function Xn(e,n){for(;e;){let r=n(e);if(r==="quit")return;if(r)return e;e=e.parent}}function v_(e){switch(e.kind){case 272:case 276:case 273:return!0;default:return!1}}function $S(e,n){switch(e.kind){case 243:case 244:case 245:case 246:return!0}return!1}function dX(e){return e===283||e===266||e===274||e===169||e===270||e===149||e===174||e===152||e===175||e===148||e===237||e===225||e===217||e===227}function hp(e){return e.kind===148?e.parent&&e.parent.kind!==224:dX(e.kind)}function ds(e){return e?e.kind===265:!1}function _X(e){return e.kind===266}function T_(e){switch(e.kind){case 283:case 269:case 266:case 272:case 274:case 281:case 169:case 270:case 89:case 150:case 217:case 219:case 196:case 220:case 227:case 202:case 225:case 201:case 276:case 11:case 13:case 293:case 149:case 286:case 174:case 152:case 175:case 176:case 16:case 163:case 148:case 237:return!0;default:return!1}}function yP(e){return ti(e)||uu(e)&&Qi(e.parent)}function mX(e){return e===169||e===173||e===170||e===239||e===241||e===172}function gX(e){return e.kind!==236||e.parent!==void 0&&e.parent.kind===255?!1:!Yh(e)}function C7(e){return e===250||e===251||e===245||e===247||e===254||e===244||e===243||e===253||e===249||e===248||e===256||e===242||e===246||e===233}function Vm(e){let n=e.kind;return C7(n)||mX(n)||gX(e)}function Pv(e){return gD(e,ld)}function xc(e){return hX(kl(e).kind)}function hX(e){switch(e){case 267:case 283:case 269:case 294:case 235:case 234:return!0;default:return P7(e)}}function Py(e){return P7(kl(e).kind)}function P7(e){switch(e){case 298:case 288:case 296:case 279:return!0;default:return k7(e)}}function W2(e){let n=hg(e.text);return n?to(n,ou):void 0}function xv(e){return U2(e.kind)}function U2(e){return e>=0&&e<=145}function kb(e){return e.kind===203||e.kind===204||e.kind===205}function hD(e){return e.kind===199||e.kind===198||e.kind===200||kb(e)||y0(e)||R_(e)||ip(e)}function J2(e){return e>=146}function g0(e){return e.kind===89}function Fu(e){return e.start+e.length}function Ju(e,n){if(e<0)throw new Error("start < 0");if(n<0)throw w.fail("length < 0"),new Error("length < 0");return{start:e,length:n}}function Ml(e,n){return Ju(e,n-e)}function P_(e){return!!e.initializer}function z2(e){return e.kind===250||e.kind===251}function Am(e){let n=e.kind;return n===146||n===89}function HS(e){return!1}function h0(e){let n=e.kind;return n===89||n===16||n===11||n===147}function vP(e){switch(e.kind){case 293:case 290:case 270:case 274:return!0}return!1}function GS(e){let n=e.kind;return n===286||n===146}function x7(e,n){return n>=e.pos&&n<=e.end}function Nh(e){return 11<=e&&e<=16}var eA=1073741823;function yD(e){let n=eA;for(let r of e){if(!r.length)continue;let s=0;for(;s<r.length&&s<n&&Bu(r.charCodeAt(s));s++);if(s<n&&(n=s),n===0)return 0}return n===eA?void 0:n}function ka(e,n){if(e)for(;e.original!==void 0;)e=e.original;return!e||!n||n(e)?e:void 0}function Dv(e){return Nh(e.kind)}function uh(e){switch(e.kind){case 237:case 149:case 266:case 152:case 174:return!0;default:return!1}}function D7(e){let n=wo(e.parameters);return!!n&&X1(n)}function X1(e){let n=Pc(e)?e.typeExpression&&e.typeExpression.type:e.type;return e.dotDotDotToken!==void 0||!!n&&n.kind===197||!!(ld(e)&512)}function Cb(e){let n=e.parent;for(;ms(n.parent);)n=n.parent.parent;return n.parent}function ho(e){return!!e&&(e.kind===170||e.kind===274||e.kind===176)}function yX(e){return uu(e)||xc(e)}function F_(e){return Tt(e)&&e.emitNode?.autoGenerate!==void 0}function V2(e,n){if(n<0)throw new Error("newLength < 0");return{span:e,newLength:n}}var q2=V2(Ju(0,0),0);function E7(e){if(e.length===0)return q2;if(e.length===1)return e[0];let n=e[0],r=n.span.start,s=Fu(n.span),a=r+n.newLength;for(let l=1;l<e.length;l++){let u=e[l],d=r,_=s,y=a,h=u.span.start,v=Fu(u.span),b=h+u.newLength;r=Math.min(d,h),s=Math.max(_,_+(v-y)),a=Math.max(b,b+(y-v))}return V2(Ml(r,s),a-r)}function vD(e){return gD(e,qF)}function Om(e){return hy(e,Oy,Lb)}function TD(e){switch(e?.driverType){case 1:return"efuns/fluffos/";case 0:default:return"efuns/ldmud/"}}function SD(e){switch(e?.driverType){case 1:return"efuns.fluffos.h";case 0:default:return"efuns.ldmud.h"}}function df(e){return N_(e)||sc(e)}function bD(e){return e.kind===16}function y0(e){return e.kind>=188&&e.kind<=231}function Ev(e){return e.kind===150}function TP(e){return v_(e)||Ub(e)}function $2(e){return!!e.type}function _f(e){return e.kind===16}function Pb(e){return!!(Gh(e)&167)}function w7(e){return Pb(e)||e===125}function S_(e){return Lm(e.kind)}function Lm(e){switch(e){case 119:case 114:case 124:case 122:case 123:case 125:case 131:case 130:case 128:case 127:case 143:case 144:return!0}return!1}function yg(e){return Cy(e,!1)}function v0(e){return e.kind===227||e.kind===220}function xb(e){return C7(e.kind)}function Hh(e){let n=e.kind;return n===152||n===154||n===150}function kD(e){return Ev(e)||Hh(e)}function N7(e,n){if(e.name)if(Tt(e.name)){let r=e.name.text;return Cy(e.parent,n).filter(s=>Pc(s)&&Tt(s.name)&&s.name.text===r)}else{let r=e.parent.parameters.indexOf(e);w.assert(r>-1,"Parameters should always be in their parents' parameter list");let s=Cy(e.parent,n).filter(Pc);if(r<s.length)return[s[r]]}return Oe}function wv(e){return N7(e,!1)}function I7(e){return N7(e,!0)}function A7(e,n){let r=e.name.text;return Cy(e.parent,n).filter(s=>Ll(s)&&s.typeParameters.some(a=>a.name.text===r))}function Nv(e){let n=_d(e,Vv);return!n&&gs(e)&&(n=Zr(wv(e),r=>!!r.typeExpression)),n&&n.typeExpression&&n.typeExpression.type}function Db(e){let n=e.kind;return n===279||n===296}function O7(e){return A7(e,!0)}function L7(e){return A7(e,!1)}function B1(e){return e.constraint?e.constraint:Ll(e.parent)&&e===e.parent.typeParameters[0]?e.parent.constraint:void 0}function F7(e){if(Nu(e,67559))return Yr(e.modifiers,S_)}function Fm(e){let n=_d(e,Vv);if(n&&n.typeExpression&&n.typeExpression.type)return n}function QS(e){return _d(e,SE)}function vX(e){return _d(e,EM)}function CD(e,n){return yg(e).filter(n)}function R7(e){return CD(e,wM)}function PD(e,n,r){return M7(e.start,e.length,n,r)}function M7(e,n,r,s){let a=e+n,l=r+s;return r<=a&&l>=e}function j7(e){return _d(e,Tk)}function B7(e){let n=j7(e);if(n&&n.typeExpression)return n.typeExpression.type;let r=Fm(e);if(r&&r.typeExpression){let s=r.typeExpression.type;if(ap(s)){let a=Zr(s.members,LM);return a&&a.type}if(k0(s)||bE(s))return s.type}}function fh(e){if(ip(e)){if(C0(e.parent)){let n=Av(e.parent);if(n&&Pr(n.tags))return ao(n.tags,r=>Ll(r)?r.typeParameters:void 0)}return Oe}if(pd(e))return w.assert(e.parent.kind===199),ao(e.parent.tags,n=>Ll(n)?n.typeParameters:void 0);if(e.typeParameters||eR(e)&&e.typeParameters)return e.typeParameters;if(Nr(e)){let n=tR(e);if(n.length)return n;let r=Nv(e);if(r&&k0(r)&&r.typeParameters)return r.typeParameters}return Oe}function SP(e){return _d(e,RM)}function W7(e){return!!_d(e,Pc)}function xD(e){return _d(e,TE)}function U7(e){return e.kind===166||e.kind===280}var bP=["zh-cn"];function TX(e,n,r){let s=e.toLowerCase(),a=/^([a-z]+)([_-]([a-z]+))?$/.exec(s);if(!a){r&&r.push(ac(P.Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1,"en","zh-cn"));return}let l=a[1],u=a[3];l!="en"&&r&&!ki(bP,s)&&!ki(bP,l)&&r.push(ac(P.Locale_0_is_not_supported,e)),QO(e)}var tA=bZ(require("vm")),kP=[],Eb=160,J7=1e6,Ks={getNodeConstructor:()=>nA,getTokenConstructor:()=>CX,getIdentifierConstructor:()=>PX,getSourceFileConstructor:()=>nA,getSymbolConstructor:()=>kX,getTypeConstructor:()=>bX,getSignatureConstructor:()=>SX},z7=[];function SX(e,n){this.flags=n,w.isDebugging&&(this.checker=e)}function bX(e,n){this.flags=n,(w.isDebugging||Dt)&&(this.checker=e)}function kX(e,n){this.flags=e,this.name=n,this.declarations=void 0,this.valueDeclaration=void 0,this.id=0,this.mergeId=0,this.parent=void 0,this.members=void 0,this.exports=void 0,this.exportSymbol=void 0,this.constEnumOnlyModule=void 0,this.isReferenced=void 0,this.lastAssignmentPos=void 0,this.links=void 0}function nA(e,n,r){this.pos=n,this.end=r,this.kind=e,this.id=0,this.flags=0,this.modifierFlagsCache=0,this.transformFlags=0,this.parent=void 0,this.original=void 0,this.emitNode=void 0}function CX(e,n,r){this.pos=n,this.end=r,this.kind=e,this.id=0,this.flags=0,this.transformFlags=0,this.parent=void 0,this.emitNode=void 0}function PX(e,n,r){this.pos=n,this.end=r,this.kind=e,this.id=0,this.flags=0,this.transformFlags=0,this.parent=void 0,this.original=void 0,this.emitNode=void 0}function V7(e,n){return e.end=n,e}function Aa(e,n,r){return V7(DD(e,n),r)}function DD(e,n){return e.pos=n,e}function q7(e,n,r){return Aa(e,n,n+r)}function ED(e,n,r){w.assertGreaterThanOrEqual(n,0),w.assertGreaterThanOrEqual(r,0),w.assertLessThanOrEqual(n,e.length),w.assertLessThanOrEqual(n+r,e.length)}var rA;function ad(e){return rA&&rA[e.key]||e.message}function vg(e,n){return e.replace(/{(\d+)}/g,(r,s)=>""+w.checkDefined(n[+s]))}function ph(e,n,r,s,a,...l){w.assertIsDefined(n),r+s>n.length&&(s=n.length-r),ED(n,r,s);let u=ad(a);return kt(l)&&(u=vg(u,l)),{file:void 0,start:r,length:s,messageText:u,category:a.category,code:a.code,reportsUnnecessary:a.reportsUnnecessary,fileName:e}}function dh(e,n){let r=[];for(let s of e)s.fileName===n.fileName&&r.push($7(s,n));return r}function $7(e,n){let r=n.fileName||"",s=n.text.length;w.assertEqual(e.fileName,r),w.assertLessThanOrEqual(e.start,s),w.assertLessThanOrEqual(e.start+e.length,s);let a={file:n,start:e.start,length:e.length,messageText:e.messageText,category:e.category,code:e.code,reportsUnnecessary:e.reportsUnnecessary};if(e.relatedInformation){a.relatedInformation=[];for(let l of e.relatedInformation)xX(l)&&l.fileName===r?(w.assertLessThanOrEqual(l.start,s),w.assertLessThanOrEqual(l.start+l.length,s),a.relatedInformation.push($7(l,n))):a.relatedInformation.push(l)}return a}function xX(e){return e.file===void 0&&e.start!==void 0&&e.length!==void 0&&typeof e.fileName=="string"}function H7(e){return wD(e)|DX(e)}function DX(e){return 0}function wD(e){return uk(e)?ND(e.modifiers):0}function ND(e){let n=0;if(e)for(let r of e)n|=Gh(r.kind);return n}function Gh(e){switch(e){case 125:return 256;case 124:return 1;case 123:return 4;case 122:return 2;case 130:return 32;case 128:return 64;case 127:return 128;case 126:return 1024;case 131:return 512}return 0}function La(e){return!(e>=0)}function qi(e){return La(e.pos)||La(e.end)}function $n(e){for(;e&&e.kind!==176;)e=e.parent;return e}function kc(e,n=!1){let r=e;for(;e&&e.kind!==176&&!(e.kind===178&&(!n||e.parent&&e.parent.kind===176)&&e.text&&e!=r);)e=e.parent;return e}function cd(e,n,r=!1){return G7(e.text,n,r)}function G7(e,n,r=!1){if(Eo(n))return"";let s=e.substring(r?n.pos:ts(e,n.pos),n.end);return wX(n)&&(s=s.split(/\r\n|\n|\r/).map(a=>a.replace(/^\s*\*/,"").trimStart()).join(`
`)),s}function EX(e,n,r=!1){return Q7(e.text,n,r)}function Q7(e,n,r=!1){return e.substring(r?n.pos:ts(e,n.pos),n.end)}function wX(e){return!!Xn(e,c_)}function Eo(e){return e===void 0?!0:e.pos===e.end&&e.pos>=0&&e.kind!==1}function ic(e,n){return e&&n&&(e.parent=n),e}function bi(e){let n=new Map;if(e)for(let r of e)n.set(r.name,r);return n}function Yp(e){if(e.kind===270||e.kind===283){let n=e,r=e.parent;for(;r.kind===289;)n=r,r=r.parent;if(r.kind===272&&r.expression===n)return r}}function x_(e){return!Eo(e)}function ID(e){return(ig(e)&1)!==0||Y7(e)}function Y7(e){let n=e;return n.kind===237&&n.parent.kind===255}function NX(e){return e}function xm(e){return e.kind===149}function Nu(e,n){return!!Z7(e,n)}function Z7(e,n){return AD(e)&n}function AD(e){return OD(e,!1)}function OD(e,n,r){return e.kind>=0&&e.kind<=145?0:(e.modifierFlagsCache&536870912||(e.modifierFlagsCache=wD(e)|536870912),IX(e.modifierFlagsCache))}function IX(e){return e&2023}function AX(e){return 0}function Oa(e){let n=AX(e);return n===5?n:0}function CP(e){return Ur(e)||Tt(e)||hs(e)}function wb(e,n){let{valueDeclaration:r}=e;(!r||!(n.flags&33554432&&!(r.flags&33554432))&&CP(r)&&!CP(n)||r.kind!==n.kind)&&(e.valueDeclaration=n)}function Rs(e,...n){return!n.length||!Gr(n)||(e.relatedInformation||(e.relatedInformation=[]),w.assert(e.relatedInformation!==Oe,"Diagnostic had empty array singleton for related info, but is still being constructed!"),e.relatedInformation.push(...n.slice(0,100))),e}function Qh(e){switch(e.kind){case 89:case 16:case 11:return!0;default:return!1}}function Iv(e){return e.end-e.pos}function sa(e){return!e||Iv(e)===0?"(Missing)":wl(e)}function wl(e,n=!1){return(Tt(e)||ss(e)?e.text:void 0)??cd(kc(e),e,n)}function H2(e,n){for(;dF(n)&&n.parent;)n=n.parent;let r=n;switch(n.kind){case 176:{let l=ts(e.text,0,!1);return l===e.text.length?Ju(0,0):qm(e,l)}case 237:case 266:case 274:case 169:case 270:case 152:r=n.name;break;case 299:case 301:{let l=ts(e.text,n.pos),u=Math.max(n.end,n.statements.length>0?n.statements[0].pos:n.end);return Ml(l,u)}case 248:{let l=ts(e.text,n.pos);return qm(e,l)}}if(r===void 0)return qm(e,n.pos);let s=Eo(r);w.assertIsDefined(e);let a=s?r.pos:ts(e.text,r.pos);return s?(w.assert(a===r.pos,"This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809"),w.assert(a===r.end,"This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809")):(w.assert(a>=r.pos,"This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809"),w.assert(a<=r.end,"This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809")),Ml(a,r.end)}function qm(e,n){let r=Cv(e.languageVersion,!0,!1,e.languageVariant,e.text,void 0,n);r.scan();let s=r.getTokenStart();return Ml(s,r.getTokenEnd())}function Gc(e,n,r,...s){let a=H2(e,n);return Iu(e,a.start,a.length,r,...s)}function Iu(e,n,r,s,...a){n>e.text.length&&(n=0),ED(e.text,n,r);let l=ad(s);return kt(a)&&(l=vg(l,a)),{file:e,start:n,length:r,messageText:l,category:s.category,code:s.code,reportsUnnecessary:s.reportsUnnecessary,reportsDeprecated:s.reportsDeprecated}}function xy(e){switch(e.kind){case 16:case 11:case 13:return!0;default:return!1}}function X7(e){return xy(e)&&e.text==="0"}function PP(e){return xy(e)&&e.text.length>0&&e.text!="0"}function K7(e){return Ur(e)&&Dy(e.operatorToken.kind)}function Dy(e){return e===86||e===87}function LD(e){return e===59||e===58}function FD(e){return LD(e)}function K1(e){return Ur(e)&&FD(e.operatorToken.kind)}function mf(e){return e>=74&&e<=88}function eF(e,n=15){switch(e.kind){case 289:return(n&1)!==0;case 234:return(n&8)!==0}return!1}function sg(e,n=15){for(;eF(e,n);)e=e.expression;return e}function tF(e){for(;e.parent&&e.kind===289;)e=e.parent;return e}function wu(e){return!!RD(e)}function RD(e){let n=e.parent;for(;;){switch(n.kind){case 269:let r=n,s=r.operatorToken.kind;return mf(s)&&r.left===e?r:void 0;case 298:case 288:let a=n,l=a.operator;return l===47||l===48?a:void 0;case 244:let u=n;return u.initializer===e?u:void 0;case 289:case 290:case 294:e=n;break;case 175:if(n.name!==e)return;e=n.parent;break;case 174:if(n.name===e)return;e=n.parent;break;default:return}n=e.parent}}function Ey(e){return e.kind===89||e.kind===71||e.kind===286&&Ey(e.expression)||e.kind===289&&Ey(e.expression)}function ws(e,n){return sg(e,n?17:1)}function Nb(){let e=[],n=[],r=new Map,s=!1;return{add:l,lookup:a,getGlobalDiagnostics:u,getDiagnostics:d};function a(_){let y;if(_.file?y=r.get(_.file.fileName):y=e,!y)return;let h=up(y,_,Gi,xP);if(h>=0)return y[h];if(~h>0&&Lb(_,y[~h-1]))return y[~h-1]}function l(_){let y;_.file?(y=r.get(_.file.fileName),y||(y=[],r.set(_.file.fileName,y),sd(n,_.file.fileName,Dc))):(s&&(s=!1,e=e.slice()),y=e),sd(y,_,xP,Lb)}function u(){return s=!0,e}function d(_){if(_)return r.get(_)||[];let y=_y(n,h=>r.get(h));return e.length&&y.unshift(...e),y}}function Ib(e){return e.canonicalHead?.code||e.code}function Ab(e){return e.canonicalHead?.messageText||e.messageText}function Ob(e){return e.file?e.file.path:void 0}function OX(e,n){let r=Ab(e),s=Ab(n);typeof r!="string"&&(r=r.messageText),typeof s!="string"&&(s=s.messageText);let a=typeof e.messageText!="string"?e.messageText.next:void 0,l=typeof n.messageText!="string"?n.messageText.next:void 0,u=Dc(r,s);return u||(u=LX(a,l),u)?u:e.canonicalHead&&!n.canonicalHead?-1:n.canonicalHead&&!e.canonicalHead?1:0}function xP(e,n){let r=Ib(e),s=Ib(n);return Dc(Ob(e),Ob(n))||vs(e.start,n.start)||vs(e.length,n.length)||vs(r,s)||OX(e,n)||0}function LX(e,n){return e===void 0&&n===void 0?0:e===void 0?1:n===void 0?-1:nF(e,n)||rF(e,n)}function nF(e,n){if(e===void 0&&n===void 0)return 0;if(e===void 0)return 1;if(n===void 0)return-1;let r=vs(n.length,e.length);if(r)return r;for(let s=0;s<n.length;s++)if(r=nF(e[s].next,n[s].next),r)return r;return 0}function rF(e,n){let r;for(let s=0;s<n.length;s++){if(r=Dc(e[s].messageText,n[s].messageText),r)return r;if(e[s].next!==void 0&&(r=rF(e[s].next,n[s].next),r))return r}return 0}function Lb(e,n){let r=Ib(e),s=Ib(n),a=Ab(e),l=Ab(n);return Dc(Ob(e),Ob(n))===0&&vs(e.start,n.start)===0&&vs(e.length,n.length)===0&&vs(r,s)===0&&FX(a,l)}function FX(e,n){let r=typeof e=="string"?e:e.messageText,s=typeof n=="string"?n:n.messageText;return Dc(r,s)===0}function DP({compilerOptions:e,requireSymbol:n,argumentsSymbol:r,error:s,getSymbolOfDeclaration:a,globals:l,lookup:u,setRequiresScopeChangeCache:d=Nm,getRequiresScopeChangeCache:_=Nm,onPropertyWithInvalidInitializer:y=Lu,onFailedToResolveSymbol:h=Nm,onSuccessfullyResolvedSymbol:v=Nm}){var b=bi();return T;function T(z,X,j,Z,le,de){let se=z,ye,he,oe,ie,Y,_e=!1,G,ke=Li(X)?X:X?.text,re=!Li(X)&&kE(X.parent)?X.parent.namespace:void 0,be=re?wl(re)??"*":void 0;if(be==="efun"){let rt=l.get("efun::");if(rt&&(ye=u(rt.members,ke,j)))return ye}(be||j&268435456)&&(z=$n(z));e:for(;z;){if(!be&&xl(z)&&z.locals&&(ye=u(z.locals,ke,j))){let rt=!0;if(Qi(z)&&he&&he!==z.body&&(j&ye.flags&788968&&he.kind!==199&&(rt=ye.flags&262144?!!(he.flags&16)||he===z.type||he.kind===149||he.kind===220||he.kind===221||he.kind===148:!1),j&ye.flags&3&&(E(ye,z,he)?rt=!1:ye.flags&1&&(rt=he.kind===149||!!(he.flags&16)||he===z.type&&!!Xn(ye.valueDeclaration,gs)))),rt)break e;ye=void 0}switch(_e=_e||g(z,he),z.kind){case 176:let rt=a(z);if(!be&&((ye=u(rt.members,ke,j))||(ye=u(rt.exports,ke,j))))break e;let qt=rt.inherits,fe=Array.from(qt?.entries()??Oe),pt=new Set;for(;!ye&&fe.length;){let[Mt,Yt]=fe.shift();if(pt.has(Mt))continue;pt.add(Mt);let Bt=Yt?.symbol?.exports??b;if(ye=u(Bt,ke,j),ye||(ye=u(Yt?.symbol?.members??b,ke,j)),ye)break e;let Me=Yt?.symbol?.inherits;fe.push(...Me?.entries()??Oe)}break;case 152:break;case 241:case 274:if(ye=u(a(z).members||b,ke,j&788968)){if(!N(ye,z)){ye=void 0;break}break e}break;case 283:case 169:if(j&3&&/^\$\d+$/.test(ke)){ye=r;break e}else if(j&16&&ke==="$"){ye=r;break e}break;case 270:if(j&3&&ke==="arguments"){ye=r;break e}if(j&16){let Mt=z.name;if(Mt&&ke===Mt.text){ye=z.symbol;break e}}break;case 225:case 217:case 219:case 231:let je=Av(z);je&&(z=je.parent);break;case 149:he&&(he===z.initializer||he===z.name)&&(Y||(Y=z));break}M(z,he)&&(oe=z),he=z,z=Ll(z)?Q2(z)||z.parent:(Pc(z)||Tk(z))&&T0(z)||z.parent}if(le&&ye&&(!oe||ye!==oe.symbol)&&(ye.isReferenced|=j),ye||(he&&w.assertNode(he,ti),de||(ye=u(l,ke,j))),Z){if(ie&&y(se,ke,ie,ye))return;if(ye)v(se,ye,j,he,Y,_e);else{let rt=h(se,X,j,Z);rt&&(ye=rt)}}return ye}function E(z,X,j){let Z=X;return gs(j)&&Z.body&&z.valueDeclaration&&z.valueDeclaration.pos>=Z.body.pos&&z.valueDeclaration.end<=Z.body.end,!1;function le(se){return de(se.name)||!!se.initializer&&de(se.initializer)}function de(se){switch(se.kind){case 283:case 270:case 169:return!1;case 174:return de(se.name);case 152:return de(se.name);default:return Vs(se)?!1:Ns(se,de)||!1}}}function g(z,X){return z.kind!==283&&z.kind!==270?(tu(z)||z.kind===152)&&(!X||X!==z.name):X&&X===z.name?!1:z.asteriskToken?!0:!Yp(z)}function M(z,X){switch(z.kind){case 149:return!!X&&X===z.name;case 169:case 241:case 170:case 155:case 239:return!0;default:return!1}}function N(z,X){if(z.declarations){for(let j of z.declarations)if(j.kind===148&&(Ll(j.parent)?wy(j.parent):j.parent)===X)return!0}return!1}}function wy(e){let n=Av(e);if(!n)return;let r=n.parent;if(r&&r.jsDoc&&n===wo(r.jsDoc))return r}function Av(e){return Xn(e.parent,Ol)}function G2(e){if(e.declarations){for(let n of e.declarations)if(n.localSymbol)return n.localSymbol}}function Q2(e){if(Ol(e.parent)&&e.parent.tags){let n=Zr(e.parent.tags,pd);if(n)return n}return T0(e)}function iF(e){return e>=157&&e<=168||e===102||e===92||e===93||e===140||e===101||e===94||e===104||e===105||e===98||e===99||e===258||e===133||e===191||e===192||e===193||e===194||e===195||e===196||e===197}function fi(e,n,...r){let s=kc(e);return w.assertIsDefined(s.text),Gc(s,e,n,...r)}function ac(e,...n){let r=ad(e);return kt(n)&&(r=vg(r,n)),{file:void 0,start:void 0,length:void 0,messageText:r,category:e.category,code:e.code,reportsUnnecessary:e.reportsUnnecessary,reportsDeprecated:e.reportsDeprecated}}function ia(e){return e.kind===286||e.kind===281}function va(e){return e.kind===89||MD(e)}function MD(e){return Ii(e)&&Tt(e.name)&&va(e.expression)}function sF(e){return va(e)||Au(e)}function Ny(e){return oF(e,!0)}function oF(e,n){return!1}function aF(e,...n){return{code:e.code,messageText:jD(e,...n)}}function jD(e,...n){let r=ad(e);return kt(n)&&(r=vg(r,n)),r}function BD(e){return e.externalModuleIndicator!==void 0}function ep(e){switch(e.kind){case 71:case 290:case 287:case 293:case 286:case 281:case 272:case 276:case 289:case 270:case 274:case 283:case 298:case 288:case 269:case 267:case 294:case 295:return!0;case 190:case 89:case 11:case 13:case 16:return cF(e);default:return!1}}function cF(e){let{parent:n}=e;switch(n.kind){case 237:case 149:case 152:case 174:return n.initializer===e;case 247:case 253:case 245:case 246:case 248:case 256:case 299:return n.expression===e;case 243:let r=n;return r.initializer===e&&r.initializer.kind!==238||r.condition===e||r.incrementor===e;case 244:let s=n;return s.initializer===e&&s.initializer.kind!==238||s.expression===e;case 175:return n.objectAssignmentInitializer===e;default:return ep(n)}}function Fb(e){return!!(e.flags&33554432)||!(ep(e)||RX(e))}function RX(e){return Tt(e)&&vp(e.parent)&&e.parent.name===e}function YS(e){return Dm(e)===1}function ey(e){return Dm(e)!==0}function Dm(e){let{parent:n}=e;switch(n?.kind){case 289:return Dm(n);case 288:case 298:let{operator:r}=n;return r===47||r===48?2:0;case 269:let{left:s,operatorToken:a}=n;return s===e&&mf(a.kind)?(a.kind===74,2):0;case 286:return n.name!==e?0:Dm(n);case 174:{let l=Dm(n.parent);return e===n.name?MX(l):l}case 175:return e===n.objectAssignmentInitializer?0:Dm(n.parent);case 290:return Dm(n);default:return 0}}function MX(e){switch(e){case 0:return 1;case 1:return 0;case 2:return 2;default:return w.assertNever(e)}}function Ov(e){switch(e.kind){case 269:case 236:case 250:case 299:case 274:case 251:case 179:case 245:case 281:case 254:case 1:case 247:case 244:case 243:case 169:case 270:case 158:case 89:case 253:case 178:case 283:case 252:case 150:case 196:case 202:case 293:case 149:case 289:case 286:case 174:case 152:case 153:case 248:case 175:case 256:case 148:case 237:case 242:case 246:return!0;default:return!1}}function WD(e,n){let r;Ry(e)&&P_(e)&&Kc(e.initializer)&&(r=Is(r,iA(e,e.initializer.jsDoc)));let s=e;for(;s&&s.parent;){if(Kc(s)&&(r=Is(r,iA(e,s.jsDoc))),s.kind===149){r=Is(r,(n?I7:wv)(s));break}if(s.kind===148){r=Is(r,(n?O7:L7)(s));break}s=l8(s)}return r||Oe}function iA(e,n){let r=jo(n);return ao(n,s=>{if(s===r){let a=Yr(s.tags,l=>jX(e,l));return s.tags===a?[s]:a}else return Yr(s.tags,C0)})}function jX(e,n){return!(Vv(n)||TE(n))||!n.parent||!Ol(n.parent)||!yp(n.parent.parent)||n.parent.parent===e}function pp(e,n){return Ur(e)&&(n?e.operatorToken.kind===74:mf(e.operatorToken.kind))&&fp(e.left)}function Rm(e){return Xn(e.parent,n=>uF(n,n.parent))}function lF(e){return Xn(e.parent,n=>xl(n))}function Y2(e){return!!e&&$h(e.kind)}function uF(e,n){switch(e.kind){case 176:case 240:case 255:case 243:case 244:case 169:case 270:case 283:case 152:return!0;case 236:return!Y2(n)}return!1}function EP(e){let n=e.kind;return n===270||n===169||n===283||n===176}function p_(e,n){for(;e;){if(e.kind===n)return e;e=e.parent}}var fF=(e=>(e[e.None=0]="None",e[e.Definite=1]="Definite",e[e.Compound=2]="Compound",e))(fF||{});function Hf(e){let n=RD(e);if(!n)return 0;switch(n.kind){case 269:let r=n.operatorToken.kind;return r===74||Dy(r)?1:2;case 298:case 288:return 2;case 244:return 1}}function BX(e){let n=ws(e.right);return n.kind===269&&UD(n.operatorToken.kind)}function WX(e){return e===44}function UX(e){return e===43||e===45||e===46}function JX(e){return WX(e)||UX(e)}function zX(e){return e===41||e===42}function VX(e){return zX(e)||JX(e)}function qX(e){return e===49||e===50||e===51}function UD(e){return qX(e)||VX(e)}function $X(e){return e===29||e===33||e===32||e===34||e===103}function HX(e){return $X(e)||UD(e)}function GX(e){return e===35||e===37||e===36||e===38}function QX(e){return GX(e)||HX(e)}function YX(e){return e===52||e===53||e===54}function ZX(e){return YX(e)||QX(e)}function XX(e){return e===58||e===59}function KX(e){return XX(e)||ZX(e)}function eK(e){return KX(e)||mf(e)}function tK(e){return eK(e)||e===27}function nK(e){return tK(e.kind)}function wP(e){let n=RD(e);return!!n&&pp(n,!0)&&BX(n)}function ZS(e){if(e.kind>=242&&e.kind<=256)return!0;switch(e.kind){case 89:case 71:case 281:case 286:case 266:case 270:case 283:return!0;default:return!1}}function $t(e){return e.flags&3899393?e.objectFlags:0}function Ch(e,n){return e&&(e.flags=n),e}function pF(e,n){return e.checkLpcDirective&&e.checkLpcDirective.enabled===!1?!1:e.scriptKind===1||e.scriptKind===5?!0:e.scriptKind==7}function Ru(e){return w.assertIsDefined(e.parent),!ti(e)&&!ds(e)&&hp(e.parent)&&e.parent.name===e}function NP(e,n,r){return{file:e,start:0,length:0,code:n.code,category:n.category,messageText:n.next?n:n.messageText,relatedInformation:r}}function s_(e,n,r,s){let a=H2(e,n);return Z2(e,a.start,a.length,r,s)}function Z2(e,n,r,s,a){return ED(e.text,n,r),{file:e,start:n,length:r,code:s.code,category:s.category,messageText:s.next?s:s.messageText,relatedInformation:a,canonicalHead:s.canonicalHead}}function Iy(e){return rK(e),(e.flags&1048576)!==0}function Rb(e){return(e.flags&32)!==0}function dF(e){return(e.flags&64)!==0}function Lv(e){return(e.flags&96)!==0}function rK(e){e.flags&2097152||(((e.flags&262144)!==0||Ns(e,Iy))&&(e.flags|=1048576),e.flags|=2097152)}var _F=(e=>(e[e.Normal=0]="Normal",e[e.Generator=1]="Generator",e[e.Async=2]="Async",e[e.Invalid=4]="Invalid",e[e.AsyncGenerator=3]="AsyncGenerator",e))(_F||{});function Sc(e){if(!e)return 4;let n=0;switch(e.kind){case 169:case 270:case 283:break}return e.body||(n|=4),n}function $c(e){return ip(e)?e.type&&e.type.typeExpression&&e.type.typeExpression.type:(Nr(e)?B7(e):void 0)??e.type}function Yh(e){return e&&e.kind===236&&Qi(e.parent)}function _h(e){return Xn(e.parent,Qi)}var iK=[".c",".h",".lpc"];function md(e){for(let n of iK){let r=mF(e,n);if(r!==void 0)return r}return e}function mF(e,n){return el(e,n)?JD(e,n):void 0}function JD(e,n){return e.substring(0,e.length-n.length)}function b_(e,n){return!!Mb(e,n)}function Mb(e,n){return ld(e)&n}function ld(e){return OD(e,!0)}function gF(e){let n=e.parent;switch(n.kind){case 152:case 174:case 286:return n.name===e;case 266:return n.propertyName===e}return!1}function ou(e){return 92<=e&&e<=145}function Fv(e){return e.kind>=188&&e.kind<=231}function og(e,n,r){if(Eo(e))return e.pos;if(Fv(e))return ts((n??$n(e)).text,e.pos,!1,!0);if(r&&Kc(e))return og(e.jsDoc[0],n);if(e.kind===232){n??(n=$n(e));let s=Fa(U8(e,n));if(s)return og(s,n,r)}return ts((n??$n(e)).text,e.pos,!1,!1,jb(e))}function jb(e){return!!e&&!!(e.flags&16777216)}function Kc(e){if(!Ov(e))return!1;let{jsDoc:n}=e;return!!n&&n.length>0}function Zh(e){return e.text}function sK(e){z7.push(e),e(Ks)}function hF(e){Object.assign(Ks,e),Jt(z7,n=>n(Ks))}var oK=`\r
`,aK=`
`;function ud(e){switch(e.newLine){case 0:return oK;case 1:case void 0:return aK}}var zD={files:Oe,directories:Oe};function $m(e){e.close()}function X2(e,n,r){return e!==n&&r.some(s=>!nk(Wb(e,s),Wb(n,s)))}function yF({name:e,subModuleName:n}){return n?`${e}/${n}`:e}function Xh(e){return`${yF(e)}@${e.version}${e.peerDependencies??""}`}function VD(e,n){return n||1}var vF=[".c",".h",".lpc"];function Qc(e,n){let r=e.entries();for(let[s,a]of r){let l=n(a,s);if(l)return l}}function Ay(e,n){return!n.directoryExists||n.directoryExists(e)}function ag(e){return e.exportSymbol?e.exportSymbol.flags|e.flags:e.flags}function sf(e,n){let r=e.declarations;if(r){for(let s of r)if(s.kind===n)return s}}function Es(e){return e.flags&33554432?e.links.checkFlags:0}function Sl(e,n=!1){if(e.valueDeclaration){let r=e.valueDeclaration,s=Pv(r);return e.parent&&e.parent.flags&32?s:s&-8}if(Es(e)&6){let r=e.links.checkFlags,s=r&1024?2:r&256?1:4,a=r&2048?256:0;return s|a}return e.flags&4194304?257:0}function Hp(e){return(+e).toString()===e}function D_(e){return(e.flags&33554432)!==0}function TF(e){return e.parent.kind===286&&e.parent.expression===e}function IP(e){return e.parent.kind===286&&e.parent.name===e}function SF(e){return!!e.parent&&(Ii(e.parent)&&e.parent.name===e||Ha(e.parent)&&e.parent.argumentExpression===e)}function bF(e){return iu(e.parent)&&e.parent.right===e||Ii(e.parent)&&e.parent.name===e}function Bb(e){let n=wy(e);if(n)return p9(n)||cK(n)||c8(n)||By(n)||n}function cK(e){return gk(e)&&Ur(e.expression)&&e.expression.operatorToken.kind===74?kF(e.expression):void 0}function kF(e){for(;pp(e,!0);)e=e.right;return e}function T0(e){let n=Bb(e);if(n)return Kp(n)&&n.type&&Qi(n.type)?n.type:Qi(n)?n:void 0}function Nr(e){return!0}function Gp(e){switch(e.kind){case 89:return e;case 146:do e=e.left;while(e.kind!==89);return e;case 286:do e=e.expression;while(e.kind!==89);return e}}function nu(e){switch(e.kind){case 89:return Iv(e)===0?go(e):wl(e);case 146:return nu(e.left)+"."+nu(e.right);case 286:return Tt(e.name)?nu(e.expression)+"."+nu(e.name):w.assertNever(e.name);default:return w.assertNever(e)}}function K2(e){switch(e.kind){case 283:return e.body;default:return!e.expression||Vs(e.expression)?void 0:e.expression}}var mh=["","    "];function ek(e){let n=mh[1];for(let r=mh.length;r<=e;r++)mh.push(mh[r-1]+n);return mh[e]}function Ih(){return mh[1].length}function S0(e){var n,r,s,a,l,u=!1;function d(g){let M=_0(g);M.length>1?(a=a+M.length-1,l=n.length-g.length+jo(M),s=l-n.length===0):s=!1}function _(g){g&&g.length&&(s&&(g=ek(r)+g,s=!1),n+=g,d(g))}function y(g){g&&(u=!1),_(g)}function h(g){g&&(u=!0),_(g)}function v(){n="",r=0,s=!0,a=0,l=0,u=!1}function b(g){g!==void 0&&(n+=g,d(g),u=!1)}function T(g){g&&g.length&&y(g)}function E(g){(!s||g)&&(n+=e,a++,l=n.length,s=!0,u=!1)}return v(),{write:y,rawWrite:b,writeLiteral:T,writeLine:E,increaseIndent:()=>{r++},decreaseIndent:()=>{r--},getIndent:()=>r,getTextPos:()=>n.length,getLine:()=>a,getColumn:()=>s?r*Ih():n.length-l,getText:()=>n,isAtStartOfLine:()=>s,hasTrailingComment:()=>u,hasTrailingWhitespace:()=>!!n.length&&Bu(n.charCodeAt(n.length-1)),clear:v,writeKeyword:y,writeOperator:y,writeParameter:y,writeProperty:y,writePunctuation:y,writeSpace:y,writeStringLiteral:y,writeSymbol:(g,M)=>y(g),writeTrailingSemicolon:y,writeComment:h}}function pi(e,n,...r){let s=ad(n);return kt(r)&&(s=vg(s,r)),{messageText:s,category:n.category,code:n.code,next:e===void 0||Array.isArray(e)?e:[e]}}function au(e){return 1}var lK=/[\\"\u0000-\u001f\t\v\f\b\r\n\u2028\u2029\u0085]/g,uK=/[\\'\u0000-\u001f\t\v\f\b\r\n\u2028\u2029\u0085]/g,fK=/\r\n|[\\`\u0000-\u001f\t\v\f\b\r\u2028\u2029\u0085]/g,pK=new Map(Object.entries({"	":"\\t","\v":"\\v","\f":"\\f","\b":"\\b","\r":"\\r","\n":"\\n","\\":"\\\\",'"':'\\"',"'":"\\'","`":"\\`","\u2028":"\\u2028","\u2029":"\\u2029","\x85":"\\u0085","\r\n":"\\r\\n"}));function CF(e){return"\\u"+("0000"+e.toString(16).toUpperCase()).slice(-4)}function dK(e,n,r){if(e.charCodeAt(0)===0){let s=r.charCodeAt(n+e.length);return s>=48&&s<=57?"\\x00":"\\0"}return pK.get(e)||CF(e.charCodeAt(0))}function W_(e,n){let r=n===96?fK:n===39?uK:lK;return e.replace(r,dK)}function qD(e){return e===39||e===34}function PF(e,n){if(e.length===0)return!1;let r=e.charCodeAt(0);return r===35?e.length>1&&bc(e.charCodeAt(1),n):bc(r,n)}function gf(e){let n=e.length;return n>=2&&e.charCodeAt(0)===e.charCodeAt(n-1)&&_K(e.charCodeAt(0))?e.substring(1,n-1):e}function _K(e){return e===39||e===34||e===96}function Ta(e,n){if(!Nr(e)&&Yc(e)||nv(e))return;let r=e.type;!r&&Cs(e)&&lf(e.parent.parent)&&(r=e.parent.parent.type);function s(){return v0(e)?e.typeExpression&&e.typeExpression.type:Nv(e)}if(r&&sA(r)){let a=s(),l=a&&(a.kind!==r.kind||lp(a))?a:r;if(Cs(e)&&Tt(e.name)&&sA(l))if(n){let u=n.locals.get("__varDocTags")?.members,d;if(u&&(d=u.get(e.name.text))&&d.declarations){let y=qs(d.declarations).typeExpression?.type;y&&(l=y)}}else console.warn("originatingFile should be provided for variable declarations");return l}else if(r||!Nr(e))return r;return s()}function sA(e){return AP(e)||e.kind===138||e.kind===98||e&&lp(e)&&AP(e.elementType)}function AP(e){return e&&(e.kind===140||e.kind===101)}function XS(e){if(kt(e.parameters,n=>!Ta(n)))return!0;if(e.kind!==283){let n=Fa(e.parameters)}return!1}function k_(e,n){return r(e);function r(s){switch(s.kind){case 248:return n(s);case 240:case 236:case 253:case 245:case 246:case 243:case 244:case 256:case 299:case 301:case 255:return Ns(s,r)}}}function Oy(e,n){return xP(e,n)||mK(e,n)||0}function mK(e,n){return!e.relatedInformation&&!n.relatedInformation?0:e.relatedInformation&&n.relatedInformation?vs(n.relatedInformation.length,e.relatedInformation.length)||Jt(e.relatedInformation,(r,s)=>{let a=n.relatedInformation[s];return Oy(r,a)})||0:e.relatedInformation?-1:1}function xF(e){switch(e.kind){case 274:case 163:return e.members;case 293:return e.properties}}function DF(e){return!1}var L1=gK();function gK(){var e="";let n=r=>e+=r;return{getText:()=>e,write:n,rawWrite:n,writeKeyword:n,writeOperator:n,writePunctuation:n,writeSpace:n,writeStringLiteral:n,writeLiteral:n,writeParameter:n,writeProperty:n,writeSymbol:(r,s)=>n(r),writeTrailingSemicolon:n,writeComment:n,getTextPos:()=>e.length,getLine:()=>0,getColumn:()=>0,getIndent:()=>0,isAtStartOfLine:()=>!1,hasTrailingComment:()=>!1,hasTrailingWhitespace:()=>!!e.length&&Bu(e.charCodeAt(e.length-1)),writeLine:()=>e+=" ",increaseIndent:ys,decreaseIndent:ys,clear:()=>e=""}}var EF=(e=>(e[e.Comma=0]="Comma",e[e.Spread=1]="Spread",e[e.Yield=2]="Yield",e[e.Assignment=3]="Assignment",e[e.Conditional=4]="Conditional",e[e.Coalesce=4]="Coalesce",e[e.LogicalOR=5]="LogicalOR",e[e.LogicalAND=6]="LogicalAND",e[e.BitwiseOR=7]="BitwiseOR",e[e.BitwiseXOR=8]="BitwiseXOR",e[e.BitwiseAND=9]="BitwiseAND",e[e.Equality=10]="Equality",e[e.Relational=11]="Relational",e[e.Shift=12]="Shift",e[e.Additive=13]="Additive",e[e.Multiplicative=14]="Multiplicative",e[e.Exponentiation=15]="Exponentiation",e[e.Unary=16]="Unary",e[e.Update=17]="Update",e[e.LeftHandSide=18]="LeftHandSide",e[e.Member=19]="Member",e[e.Primary=20]="Primary",e[e.Highest=20]="Highest",e[e.Lowest=0]="Lowest",e[e.Invalid=-1]="Invalid",e))(EF||{});function OP(e){let n=L1.getText();try{return e(L1),L1.getText()}finally{L1.clear(),L1.writeKeyword(n)}}function ty(e,n,r){switch(e){case 235:return 0;case 294:return 1;case 267:return 4;case 269:switch(n){case 27:return 0;case 74:case 75:case 76:case 78:case 77:case 79:case 80:case 81:case 82:case 83:case 84:case 88:case 85:case 86:case 87:return 3;default:return ny(n)}case 298:return 16;case 288:return 17;case 272:return 18;case 276:return r?19:18;case 286:case 281:return 19;case 71:case 89:case 137:case 136:case 135:case 11:case 13:case 16:case 290:case 293:case 270:case 283:case 274:case 289:return 20;default:return-1}}function ny(e){switch(e){case 59:return 5;case 58:return 6;case 53:return 7;case 54:return 8;case 52:return 9;case 35:case 36:case 37:case 38:return 10;case 29:case 32:case 33:case 34:case 103:return 11;case 49:case 50:case 51:return 12;case 41:case 42:return 13;case 43:case 45:case 46:return 14;case 44:return 15;case 74:return 11}return-1}function KS(e){let n=wF(e),r=e.kind===276&&e.arguments!==void 0;return ty(e.kind,n,r)}function wF(e){return e.kind===269?e.operatorToken.kind:e.kind===298||e.kind===288?e.operator:e.kind}var NF=(e=>(e[e.Left=0]="Left",e[e.Right=1]="Right",e))(NF||{});function IF(e){let n=wF(e),r=e.kind===276&&e.arguments!==void 0;return $D(e.kind,n,r)}function $D(e,n,r){switch(e){case 276:return r?0:1;case 298:case 267:return 1;case 269:switch(n){case 44:case 74:case 75:case 76:case 78:case 77:case 79:case 80:case 81:case 82:case 83:case 84:case 88:case 85:case 86:case 87:return 1}}return 0}function ry(e){return e.kind===269&&e.operatorToken.kind===27}function AF(e){return e.kind===235}function W1(e){return ry(e)||AF(e)}function U1(e,n){for(;;){switch(e.kind){case 288:e=e.operand;continue;case 269:e=e.left;continue;case 267:e=e.condition;continue;case 272:if(n)return e;case 281:case 286:case 234:e=e.expression;continue}return e}}function Ly(e){let n=e.emitNode;return n&&n.internalFlags||0}function is(e){let n=e.emitNode;return n&&n.flags||0}function OF(e,n,r){return lu(e0(e,r,!1),n.end,r)}function cp(e,n){return OF(e,e,n)}function Kh(e,n,r){return lu(e0(e,r,!1),e0(n,r,!1),r)}function lu(e,n,r){return bv(r,e,n)===0}function e0(e,n,r){return La(e.pos)?-1:ts(n.text,e.pos,!1,r)}function Fy(e,n,r,s){let a=e0(n,r,s);return bv(r,e.end,a)}function Ah(e,n,r){return lu(e.end,e0(n,r,!1),r)}function LP(e){return 0}function HD(e){return yk(e)&&(e.operator===41||e.operator===42)&&ff(e.operand)}function Hm(e){switch(e.kind){case 89:return e.text;case 16:case 11:return e.text;case 147:let n=e.expression;return _u(n)?n.text:HD(n)?n.operator===42?Mi(n.operator)+n.operand.text:n.operand.text:void 0;default:return w.assertNever(e)}}function oA(e){return Ii(e)}function LF(e){if(Ii(e))return e.name;let n=ws(e.argumentExpression);return ff(n)||ss(n)?n:e}function t0(e){let n=LF(e);if(n&&(Tt(n)||ss(n)||ff(n)))return n.text}function GD(e,n){return Qh(e)&&Qh(n)?Zh(e)===Zh(n):oA(e)&&oA(n)?t0(e)===t0(n)&&GD(e.expression,n.expression):!1}function eb(e){return Nr(e)&&e.initializer&&Ur(e.initializer)&&e.initializer.operatorToken.kind===59&&e.name&&va(e.name)&&GD(e.name,e.initializer.left)?e.initializer.right:e.initializer}function Ry(e){if(e)switch(e.kind){case 266:case 149:case 174:case 152:case 175:case 237:return!0}return!1}function FF(e){return ms(e)&&Ny(e.parent.parent)}function gh(e){return e.kind===270||e.kind===283}function hK(e){return e.pos}function My(e,n){return up(e,n,hK,vs)}function iy(e,n){for(;e;){if(e===n)return!0;e=e.parent}return!1}function Zp(e){if(157<=e.kind&&e.kind<=168)return!0;switch(e.kind){case 102:case 92:case 93:case 94:case 140:case 137:case 104:case 101:return!0;case 148:return e.parent.kind===264;case 89:(e.parent.kind===146&&e.parent.right===e||e.parent.kind===286&&e.parent.name===e)&&(e=e.parent),w.assert(e.kind===89||e.kind===146||e.kind===286,"'node' was expected to be a qualified name, identifier or property access in 'isPartOfTypeNode'.");case 146:case 286:{let{parent:n}=e;if(157<=n.kind&&n.kind<=168)return!0;switch(n.kind){case 148:return e===n.constraint;case 224:return e===n.constraint;case 152:case 149:case 237:return e===n.type;case 169:case 270:case 283:return e===n.type;case 150:return e===n.type;case 272:case 276:return!1}}}return!1}function J1(e){return pd(e)||nv(e)||gM(e)}function RF(e){return Xn(e.parent,Y2)}function MF(e,n){e.forEach((r,s)=>{n.set(s,r)})}function jF(e,n=j_){if(e.length<2)return!0;let r=e[0];for(let s=1,a=e.length;s<a;s++){let l=e[s];if(!n(r,l))return!1}return!0}function BF(e){return sp(e)&&Tt(e.typeName)}function WF(e){switch(e.kind){case 242:case 169:return!0;default:return!1}}function UF(e,n){for(;e&&e.kind===n;)e=e.parent;return e}function QD(e){return UF(e,165)}function JF(e){return e.declaration?sa(e.declaration.parameters[0].name):void 0}function YD(e,n,r){return!(r&&r(n))&&!e.identifiers.has(n)}function _u(e){return ss(e)||ff(e)}function Gf(e){return e.flags&384?""+e.value:w.fail()}function hh(e){return!1}function zF(e){let n=e.kind;return(n===286||n===281)&&!0}function VF(e,n){let r=e;for(;r.next;)r=r.next[0];r.next=[n]}function qF(e){return OD(e,!0,!0)}function $F(e,n){w.assert(e.length!==0);let r=n(e[0]),s=r;for(let a=1;a<e.length;a++){let l=n(e[a]);l<r?r=l:l>s&&(s=l)}return{min:r,max:s}}function HF(e){return typeof e.messageText=="string"?{code:e.code,category:e.category,messageText:e.messageText,next:e.next}:e.messageText}function z1(e,n,r,s){let a=ts(e.text,n.pos);return Z2(e,a,n.end-a,r,s)}function V1(e,n,r,...s){let a=ts(e.text,n.pos);return Iu(e,a,n.end-a,r,...s)}var FP=[[".lpc",".h",".lpc"]],ZD=kp(FP);function XD(e){return kt(ZD,n=>el(e,n))}var GF={driverType:{dependencies:[],computeValue:e=>e.driverType??0}},yK=GF.driverType.computeValue,vK=["node_modules","bower_components","jspm_packages"],KD=`(?!(${vK.join("|")})(/|$))`,QF={singleAsteriskRegexFragment:"([^./]|(\\.(?!min\\.js$))?)*",doubleAsteriskRegexFragment:`(/${KD}[^/.][^/]*)*?`,replaceWildcardCharacter:e=>e8(e,QF.singleAsteriskRegexFragment)};function e8(e,n){return e==="*"?n:e==="?"?"[^/]":"\\"+e}var YF={singleAsteriskRegexFragment:"[^/]*",doubleAsteriskRegexFragment:`(/${KD}[^/.][^/]*)*?`,replaceWildcardCharacter:e=>e8(e,YF.singleAsteriskRegexFragment)},ZF={singleAsteriskRegexFragment:"[^/]*",doubleAsteriskRegexFragment:"(/.+?)?",replaceWildcardCharacter:e=>e8(e,ZF.singleAsteriskRegexFragment)},t8={files:QF,directories:YF,exclude:ZF},aA=/[^\w\s/]/g;function n8(e){return!/[.*?]/.test(e)}function tk(e,n,r,{singleAsteriskRegexFragment:s,doubleAsteriskRegexFragment:a,replaceWildcardCharacter:l}=t8[r]){let u="",d=!1,_=Hv(e,n),y=jo(_);if(r!=="exclude"&&y==="**")return;_[0]=J_(_[0]),n8(y)&&_.push("**","*");let h=0;for(let v of _){if(v==="**")u+=a;else if(r==="directories"&&(u+="(",h++),d&&(u+=As),r!=="exclude"){let b="";v.charCodeAt(0)===42?(b+="([^./]"+s+")?",v=v.substr(1)):v.charCodeAt(0)===63&&(b+="[^./]",v=v.substr(1)),b+=v.replace(aA,l),b!==v&&(u+=KD),u+=b}else u+=v.replace(aA,l);d=!0}for(;h>0;)u+=")?",h--;return u}function r8(e,n,r){if(!(e===void 0||e.length===0))return ao(e,s=>s&&tk(s,n,r,t8[r]))}function Oh(e,n,r){let s=r8(e,n,r);return!s||!s.length?void 0:`^(${s.map(u=>`(${u})`).join("|")})${r==="exclude"?"($|/)":"$"}`}function TK(e,n,r){let s=[e];if(n){let a=[];for(let l of n){let u=sc(l)?l:di(ii(e,l));a.push(bK(u))}a.sort(I2(!r));for(let l of a)Ti(s,u=>!ug(u,l,e,!r))&&s.push(l)}return s}var SK=[42,63];function bK(e){let n=qO(e,SK);return n<0?P0(e)?J_(li(e)):e:e.substring(0,e.lastIndexOf(As,n))}function XF(e,n,r,s,a){e=di(e),a=di(a);let l=ii(a,e);return{includeFilePatterns:Xt(r8(r,l,"files"),u=>`^${u}$`),includeFilePattern:Oh(r,l,"files"),includeDirectoryPattern:Oh(r,l,"directories"),excludePattern:Oh(n,l,"exclude"),basePaths:TK(e,r,s)}}function Gm(e,n){return new RegExp(e,n?"":"i")}function i8(e,n,r,s,a,l,u,d,_){e=di(e),l=di(l);let y=XF(e,r,s,a,l),h=y.includeFilePatterns&&y.includeFilePatterns.map(N=>Gm(N,a)),v=y.includeDirectoryPattern&&Gm(y.includeDirectoryPattern,a),b=y.excludePattern&&Gm(y.excludePattern,a),T=h?h.map(()=>[]):[[]],E=new Map,g=ca(a);for(let N of y.basePaths)M(N,ii(l,N),u);return kp(T);function M(N,z,X){let j=g(_(z));if(E.has(j))return;E.set(j,!0);let{files:Z,directories:le}=d(N);for(let de of yb(Z,Dc)){let se=ii(N,de),ye=ii(z,de);if(!(n&&!kk(se,n))&&!(b&&b.test(ye)))if(!h)T[0].push(se);else{let he=Pl(h,oe=>oe.test(ye));he!==-1&&T[he].push(se)}}if(!(X!==void 0&&(X--,X===0)))for(let de of yb(le,Dc)){let se=ii(N,de),ye=ii(z,de);(!v||v.test(ye))&&(!b||!b.test(ye))&&M(se,ye,X)}}}function KF(e,n,r){let{onDeleteValue:s,onExistingValue:a}=r;e.forEach((l,u)=>{n?.has(u)?a&&a(l,n.get?.(u),u):(e.delete(u),s(l,u))})}function s8(e,n,r){KF(e,n,r);let{createNewValue:s}=r;n?.forEach((a,l)=>{e.has(l)||e.set(l,s(l,a))})}function o8(e,n){let r=e.keys();for(let s of r){let a=n(s);if(a)return a}}function n0(e,n){e.forEach(n),e.clear()}function nk(e,n){return e===n||typeof e=="object"&&e!==null&&typeof n=="object"&&n!==null&&HO(e,n,nk)}function e9(e,n){if(!n||n.length===0)return FP;let r=FP,s=kp(r);return[...r]}function t9(e,n,r){if(!e)return!1;let s=e9(n,r);for(let a of kp(s))if(el(e,a))return!0;return!1}function n9(e,n,r){let s=e.getCompilerOptions(),a=n===void 0?e.getSourceFiles():[n];return Yr(a,l=>r9(l,e,r))}function cg(e){return e.scriptKind===6}function r9(e,n,r){let s=n.getCompilerOptions();if(e.isDeclarationFile||n.isSourceFileFromExternalLibrary(e))return!1;if(r||!cg(e)||s.outFile)return!0;if(!s.outDir)return!1;if(s.rootDir){let a=Wi(tB(s,()=>[],n.getCurrentDirectory(),n.getCanonicalFileName),n.getCurrentDirectory()),l=a8(e.fileName,s.outDir,n.getCurrentDirectory(),a,n.getCanonicalFileName);if(Pk(e.fileName,l,n.getCurrentDirectory(),!n.useCaseSensitiveFileNames())===0)return!1}return!0}function a8(e,n,r,s,a){let l=Wi(e,r);return l=a(l).indexOf(a(s))===0?l.substring(s.length):l,ii(n,l)}function i9(e){return!cg(e)}function E_(e,n){if(!e)return e;return Hy(e,Fv(e)?r:a),e;function r(l,u){if(n&&l?.parent===u)return"skip";ic(l,u)}function s(l){if(l&&Kc(l))for(let u of l.jsDoc)r(u,l),Hy(u,r)}function a(l,u){return r(l,u)||s(l)}}function Wb(e,n){return e[n.name]}function kK(e){return e.startsWith('"')&&e.endsWith('"')?e.slice(1,-1):e}function RP(e,n){return e?.startsWith(n)?e.slice(n.length):e}var F1="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function s9(e,n){if(e&&e.base64decode)return e.base64decode(n);let r=n.length,s=[],a=0;for(;a<r&&n.charCodeAt(a)!==F1.charCodeAt(64);){let l=F1.indexOf(n[a]),u=F1.indexOf(n[a+1]),d=F1.indexOf(n[a+2]),_=F1.indexOf(n[a+3]),y=(l&63)<<2|u>>4&3,h=(u&15)<<4|d>>2&15,v=(d&3)<<6|_&63;h===0&&d!==0?s.push(y):v===0&&_!==0?s.push(y,h):s.push(y,h,v),a+=4}return CK(s)}function CK(e){let n="",r=0,s=e.length;for(;r<s;){let a=e[r];if(a<128)n+=String.fromCharCode(a),r++;else if((a&192)===192){let l=a&63;r++;let u=e[r];for(;(u&192)===128;)l=l<<6|u&63,r++,u=e[r];n+=String.fromCharCode(l)}else n+=String.fromCharCode(a),r++}return n}function o9(e,n,r){let s=n.outDir,a=s?a8(e,s,r.getCurrentDirectory(),r.getCommonSourceDirectory(),u=>r.getCanonicalFileName(u)):e,l=a9(a);return md(a)+l}function a9(e){return kk(e,[".json"])?".d.json.ts":".h"}function jy(e){return e.useCaseSensitiveFileNames?e.useCaseSensitiveFileNames():!1}function c9(e){return ca(jy(e))}function l9(e){return n=>{n.externalModuleIndicator=!0}}function PK(e){return Ii(e)?e.name:e.argumentExpression}function u9(e){return!1}function f9(e){return!0}function Rv(e){let n=e.parent;switch(e.kind){case 16:case 10:if(Ia(n))return n.parent;case 89:if(hp(n))return n.name===e?n:void 0;if(iu(n)){let r=n.parent;return Pc(r)&&r.name===n?r:void 0}else{let r=n.parent;return Ur(r)&&Oa(r)!==0&&(r.left.symbol||r.symbol)&&hi(r)===e?r:void 0}default:return}}function rk(e){return _u(e)&&e.parent.kind===147&&hp(e.parent.parent)}function hf(e,n){return e.flags&2097152?n.getAliasedSymbol(e):e}function Mv(e){return UF(e,289)}function Ub(e){return e.kind===270}function By(e){return lf(e)?Fa(e.declarationList.declarations):void 0}function c8(e){switch(e.kind){case 242:let n=By(e);return n&&n.initializer;case 152:return e.initializer;case 174:return e.initializer}}function p9(e){return gk(e)&&Ur(e.expression)&&Oa(e.expression)!==0&&Ur(e.expression.right)&&e.expression.right.operatorToken.kind===59?e.expression.right.right:void 0}function l8(e){let n=e.parent;if(n.kind===174||n.kind===152||n.kind===247&&e.kind===286||n.kind===248||pp(e))return n;if(n.parent&&(By(n.parent)===e||pp(n)))return n.parent;if(n.parent&&n.parent.parent&&(By(n.parent.parent)||c8(n.parent.parent)===e||p9(n.parent.parent)))return n.parent.parent}function d9(e,n){return Wu(n.text,e.pos)}function Jb(e){return ti(e)&&ri(my(sy(e)),L9(e))||Oe}function MP(e,n){for(;;){if(e=e.parent,!e)return;switch(e.kind){case 147:e=e.parent;break;case 169:case 270:if(!n)continue;case 152:case 153:return e}}}function Wy(e){return!1}function lg(e,n,r=!0){return e.has(n)?!1:(e.set(n,r),!0)}function u8(e){return e.text}function _9(e){return e?.kind===176}function f8(e,n){return cd(n,e).charCodeAt(0)===34}function ik(e){switch(e.parent.kind){case 172:case 231:return e.parent;case 252:return e.parent;case 273:return e.parent;default:return}}function xK(e){return!1}function DK(e){return 2<=e&&e<=8}function m9(e){return ik(e)||w.failBadSyntaxKind(e.parent)}function g9(e){return oF(e,!1)}function h9(e){return e.kind===176}function y9(e){switch(e.kind){case 169:case 270:return!0}return!1}function v9(e,n){for(;;){let r=n(e);if(r==="quit")return;if(r!==void 0)return r;if(!e||ti(e))return;e=e.parent}}function Uy(e){switch(e.kind){case 89:return e.emitNode?.autoGenerate?void 0:e.text;case 16:case 11:return e.text;case 147:return _u(e.expression)?e.expression.text:void 0;default:return w.assertNever(e)}}function p8(e){return e.replace(/\$/gm,()=>"\\$")}function Zf(e,n=e){return w.assert(n>=e||n===-1),{pos:e,end:n}}function d8(e,n){let r=e.kind===149||e.kind===148||e.kind===270||e.kind===271||e.kind===289||e.kind===237||e.kind===179||e.kind===252||e.kind===171?ri(B_(n,e.pos),Wu(n,e.pos)):Wu(n,e.pos);return Yr(r,s=>s.end<=e.end&&n.charCodeAt(s.pos+1)===42&&n.charCodeAt(s.pos+2)===42&&n.charCodeAt(s.pos+3)!==47)}function Lh(e,n){let r=Xc(e);return qh(r,n)}function T9(e){switch(e.substr(e.lastIndexOf(".")).toLowerCase()){case".c":case".h":case".lpc":return 1;case".json":return 6;default:return 0}}function zb(e,n){return w.assert(e>=0),Xc(n)[e]}function EK(e){switch(e.kind){case 252:case 273:return!0;default:return!1}}function jv(e,n){return e.charCodeAt(n+1)===42&&e.charCodeAt(n+2)===33}function sk(e){return e.kind===247&&e.expression.kind===16}function _8(e){return{pos:og(e),end:e.end}}function m8(e,n){let r=n.pos-1,s=Math.min(e.text.length,ts(e.text,n.end)+1);return{pos:r,end:s}}function S9(e){for(;ia(e);)e=e.expression;return e}function b9(e){return!1}function k9(e){let n;return Ns(e,r=>{x_(r)&&(n=r)},r=>{for(let s=r.length-1;s>=0;s--)if(x_(r[s])){n=r[s];break}}),n}function Fh(e){return no(e.name,"__@")}function C9(e){return e.kind===152&&e.initializer!==void 0}function g8(e){return 92<=e&&e<=121}function cA(e){let n=e.match(/\//g);return n?n.length:0}function P9(e,n){return vs(cA(e),cA(n))}function x9(e){return ou(e)&&!g8(e)}function D9(e){let n=hg(e);return n!==void 0&&x9(n)}function h8(e){return 17<=e&&e<=73}function tb(e){return ou(e)||h8(e)}function sy(e){let n=void 0;return n&&Nr(e),n}function wK(e){}function q1(e){switch(e.kind){case 148:case 170:case 241:case 225:case 217:case 219:return!0;default:return!1}}function Xs(e,n=!1,r=!1,s=!1){return{value:e,isSyntacticallyString:n,resolvedOtherFiles:r,hasExternalReferences:s}}function E9({evaluateElementAccessExpression:e,evaluateEntityNameExpression:n}){function r(s,a){let l=!1,u=!1,d=!1;switch(s=ws(s),s.kind){case 298:let _=r(s.operand,a);if(u=_.resolvedOtherFiles,d=_.hasExternalReferences,typeof _.value=="number")switch(s.operator){case 41:return Xs(_.value,l,u,d);case 42:return Xs(-_.value,l,u,d);case 57:return Xs(~_.value,l,u,d)}break;case 269:{let y=r(s.left,a),h=r(s.right,a);if(l=(y.isSyntacticallyString||h.isSyntacticallyString)&&s.operatorToken.kind===41,u=y.resolvedOtherFiles||h.resolvedOtherFiles,d=y.hasExternalReferences||h.hasExternalReferences,typeof y.value=="number"&&typeof h.value=="number")switch(s.operatorToken.kind){case 53:return Xs(y.value|h.value,l,u,d);case 52:return Xs(y.value&h.value,l,u,d);case 50:return Xs(y.value>>h.value,l,u,d);case 51:return Xs(y.value>>>h.value,l,u,d);case 49:return Xs(y.value<<h.value,l,u,d);case 54:return Xs(y.value^h.value,l,u,d);case 43:return Xs(y.value*h.value,l,u,d);case 45:return Xs(y.value/h.value,l,u,d);case 41:return Xs(y.value+h.value,l,u,d);case 42:return Xs(y.value-h.value,l,u,d);case 46:return Xs(y.value%h.value,l,u,d);case 44:return Xs(y.value**h.value,l,u,d)}else if((typeof y.value=="string"||typeof y.value=="number")&&(typeof h.value=="string"||typeof h.value=="number")&&s.operatorToken.kind===41)return Xs(""+y.value+h.value,l,u,d);break}case 16:return Xs(s.text,!0);case 11:return Xs(+s.text);case 13:return Xs(+s.text);case 89:return n(s,a);case 286:if(va(s))return n(s,a);break;case 281:return e(s,a)}return Xs(void 0,l,u,d)}return r}function Qf(e){return!!(e.flags&384)}function Jy(e){if(Ii(e)){let n=Jy(e.expression);if(n!==void 0)return n+"."+nu(e.name)}else if(Ha(e)){let n=Jy(e.expression);if(n!==void 0&&h0(e.argumentExpression))return n+"."+Hm(e.argumentExpression)}else if(Tt(e))return e.text}function y8(e){return e.kind===147&&!_u(e.expression)}function w9(e){return!1}function Vb(e){return Xn(e.parent,n=>!!(CE(n)&1))}function v8(e){return(e.kind===154||e.kind===169)&&(e.parent.kind===293||e.parent.kind===176)}function N9(e){return e&&e.kind===1}function jP(e){return XD(e)?e:e+".c"}function $1(e){return e.declarations?.find(ho)}function BP(e){return e.content.map(r=>r.text).join("")}function T8(e){return e==="Infinity"||e==="-Infinity"||e==="NaN"}function I9(e){switch(w.type(e),e.kind){case 149:case 153:case 152:case 266:case 286:case 281:case 269:case 237:case 174:return!0;default:return!1}}function S8(e){if(!v0(e))return!1;let{isBracketed:n,typeExpression:r}=e;return n||!!r&&r.type.kind===195}function b8(e){return Nr(e)&&(e.type&&e.type.kind===195||wv(e).some(S8))}function A9(e){switch(e.kind){case 149:return b8(e);case 227:case 220:return S8(e);default:return!1}}function d_(e){return yp(e)&&Nr(e)&&!!Fm(e)}function WP(e,n=!0){switch(w.type(e),e.kind){case 136:case 135:case 11:case 13:case 16:return!0;case 298:return e.operator===42||e.operator===41?Tp(e.operand):!1;default:return!1}}function k8(e){return Zc(e)||hd(e)||Au(e)||Yc(e)}function C8(e,n,r,s){let a=ts(r.text,e,!1,s),l=NK(a,n,r);return bv(r,l??n,a)}function NK(e,n=0,r){for(;e-- >n;)if(!Bu(r.text.charCodeAt(e)))return e}function P8(e){if(!e.parent)return;switch(e.kind){case 148:let{parent:r}=e;return;case 149:return e.parent.parameters;case 252:return e.parent.statements}let{parent:n}=e;if(y0(e))return R_(e.parent)?void 0:e.parent.tags;switch(n.kind){case 163:return Ev(e)?n.members:void 0;case 157:return n.types;case 290:case 235:return n.elements;case 293:return n.properties;case 272:case 276:return n.expression===e?void 0:n.arguments;case 236:case 299:case 301:return n.statements;case 240:return n.clauses;case 170:case 274:return Hh(e)?n.members:void 0;case 176:return n.statements}}function x8(e,n,r){return lu(e.end,n.end,r)}function D8(e,n,r,s){let a=ts(r.text,e,!1,s);return bv(r,e,Math.min(n,a))}function ok(e){let n=!1;function r(){n&&(e.writeTrailingSemicolon(";"),n=!1)}return{...e,writeTrailingSemicolon(){n=!0},writeLiteral(s){r(),e.writeLiteral(s)},writeStringLiteral(s){r(),e.writeStringLiteral(s)},writeSymbol(s,a){r(),e.writeSymbol(s,a)},writePunctuation(s){r(),e.writePunctuation(s)},writeKeyword(s){r(),e.writeKeyword(s)},writeOperator(s){r(),e.writeOperator(s)},writeParameter(s){r(),e.writeParameter(s)},writeSpace(s){r(),e.writeSpace(s)},writeProperty(s){r(),e.writeProperty(s)},writeComment(s){r(),e.writeComment(s)},writeLine(){r(),e.writeLine()},increaseIndent(){r(),e.increaseIndent()},decreaseIndent(){r(),e.decreaseIndent()}}}function E8(e){return w.checkDefined(Uy(e))}function yh(e,n,r){for(w.assert(e.kind!==176);;){if(e=e.parent,!e)return w.fail();switch(e.kind){case 147:if(r&&ho(e.parent.parent))return e;e=e.parent.parent;break;case 271:case 283:if(!n)continue;case 169:case 270:case 152:case 153:case 154:case 156:case 151:case 150:case 176:return e}}}function O9(e){return TR(e)?.kind===0}function L9(e){let n;return n=R7(e).map(r=>r.class),n||(n=Vi(e.heritageClauses,r=>r.inheritClause)),n}function nb(e){for(;vk(e);)e=e.type;return e}function F9(e){return e.text==="this_object"}function R9(e){return!!e&&e.kind===89&&F9(e)}function UP(e){return sp(e)&&Tt(e.typeName)&&e.typeName.text==="object"&&e.typeArguments&&e.typeArguments.length===2&&(e.typeArguments[0].kind===94||e.typeArguments[0].kind===92)}function qb(e){let n=hi(e);return!!n&&M9(n)}function M9(e){if(!(e.kind===147||e.kind===281))return!1;let n=Ha(e)?ws(e.argumentExpression):e.expression;return!_u(n)&&!HD(n)}function w8(e){return e===".c"||e===".lpc"||e===".h"}function N8(e){return w8(e)||e===".json"}function I8(e,n,r,s,a,l,u){let d,_;if(u?a.pos===0&&(d=Yr(Wu(e,a.pos),y)):d=Wu(e,a.pos),d){let h=[],v;for(let b of d){if(v){let T=ed(n,v.end);if(ed(n,b.pos)>=T+2)break}h.push(b),v=b}if(h.length){let b=ed(n,jo(h).end);ed(n,ts(e,a.pos))>=b+2&&(j9(n,r,a,d),W9(e,n,r,h,!1,!0,l,s),_={nodePos:a.pos,detachedCommentEndPos:jo(h).end})}}return _;function y(h){return jv(e,h.pos)}}function j9(e,n,r,s){B9(e,n,r.pos,s)}function B9(e,n,r,s){s&&s.length&&r!==s[0].pos&&ed(e,r)!==ed(e,s[0].pos)&&n.writeLine()}function zy(e,n,r,s,a,l){if(e.charCodeAt(s+1)===42){let u=m0(n,s),d=n.length,_;for(let y=s,h=u.line;y<a;h++){let v=h+1===d?e.length+1:n[h+1];if(y!==s){_===void 0&&(_=lA(e,n[u.line],s));let T=r.getIndent()*Ih()-_+lA(e,y,v);if(T>0){let E=T%Ih(),g=ek((T-E)/Ih());for(r.rawWrite(g);E;)r.rawWrite(" "),E--}else r.rawWrite("")}IK(e,a,r,l,y,v),y=v}}else r.writeComment(e.substring(s,a))}function A8(e,n,r,s){r!==s&&ed(e,r)!==ed(e,s)&&n.writeLine()}function IK(e,n,r,s,a,l){let u=Math.min(n,l-1),d=e.substring(a,u).trim();d?(r.writeComment(d),u!==n&&r.writeLine()):r.rawWrite(s)}function ed(e,n){return qh(e,n)}function lA(e,n,r){let s=0;for(;n<r&&Ou(e.charCodeAt(n));n++)e.charCodeAt(n)===9?s+=Ih()-s%Ih():s++;return s}function W9(e,n,r,s,a,l,u,d){if(s&&s.length>0){a&&r.writeSpace(" ");let _=!1;for(let y of s)_&&(r.writeSpace(" "),_=!1),d(e,n,r,y.pos,y.end,u),y.hasTrailingNewLine?r.writeLine():_=!0;_&&l&&r.writeSpace(" ")}}var uA=/[^\u0000-\u007F]/g;function ak(e,n){return e=W_(e,n),uA.test(e)?e.replace(uA,r=>CF(r.charCodeAt(0))):e}var U9=(e=>(e[e.None=0]="None",e[e.NeverAsciiEscape=1]="NeverAsciiEscape",e[e.JsxAttributeEscape=2]="JsxAttributeEscape",e[e.TerminateUnterminatedLiterals=4]="TerminateUnterminatedLiterals",e[e.AllowNumericSeparator=8]="AllowNumericSeparator",e))(U9||{});function O8(e,n,r){if(n&&AK(e,r))return cd(n,e);switch(e.kind){case 16:{let s=r&1||is(e)&16777216?W_:ak;return e.singleQuote?"'"+s(e.text,39)+"'":'"'+s(e.text,34)+'"'}case 10:case 11:case 13:return e.text}return w.fail(`Literal kind '${e.kind}' not accounted for.`)}function AK(e,n){if(qi(e)||!e.parent||n&4&&e.isUnterminated)return!1;if(Tp(e)){if(e.numericLiteralFlags&26656)return!1;if(e.numericLiteralFlags&512)return!!(n&8)}return!0}function J9(e){let n=Zr(e?.statements,l=>Yc(l)&&l.name.text==="get_include_path");if(!n)return;let r=rB(n,e)+`
return get_include_path(ctxInput);`,a={parsingContext:tA.createContext(T7(),{name:"masterApply_GetIncludePath"}),filename:e.fileName+".js.vm"};return tA.compileFunction(r,["ctxInput"],a)}function z9(e,n){return{file:void 0,start:void 0,length:void 0,code:e.code,category:e.category,messageText:e.next?e:e.messageText,relatedInformation:n}}function V9(e,n,r){let s=e&&tk(e,n,r,t8[r]);return s&&`^(${s})${r==="exclude"?"($|/)":"$"}`}function L8(e){return console.debug("todo - getNameOfScriptTarget"),"LPC"}function q9(e){switch(e){case"fluffos":return 1;case"ldmud":default:return 0}}function $b(e){return!1}function F8(e,n){return e.path===n.path&&!e.prepend==!n.prepend&&!e.circular==!n.circular}function R8(e,n){if(!e||!n||Object.keys(e).length!==Object.keys(n).length)return!1;for(let r in e)if(typeof e[r]=="object"){if(!R8(e[r],n[r]))return!1}else if(typeof e[r]!="function"&&e[r]!==n[r])return!1;return!0}function Bv(e,n,r){return Vy(M8(e),n,r)}function M8(e){if(e&&e.statements.length){let n=e.statements[0].expression;return to(n,Qa)}}function Vy(e,n,r,s){return Jt(e?.properties,a=>{if(!af(a))return;let l=Uy(a.name);return n===l||s&&s===l?r(a):void 0})}function qy(e,n,r){return n.skipLibCheck&&e.isDeclarationFile||n.skipDefaultLibCheck&&e.hasNoDefaultLib||n.noCheck||r.isSourceOfProjectReferenceRedirect(e.fileName)||!$9(e,n)}function $9(e,n){return e.checkLpcDirective&&e.checkLpcDirective.enabled===!1?!1:e.scriptKind===1||e.scriptKind===5?!0:e.scriptKind===7}function JP(e){if(e.symbol)return e.symbol;if(!Tt(e.name))return;let n=e.name.text,r=T0(e);if(!r)return;let s=Zr(r.parameters,a=>a.name.kind===89&&a.name.text===n);return s&&s.symbol}function Mm(e,n){if(!sc(e))return e;let r=n?.rootDir??li(n?.configFilePath??"");if(r&&e.startsWith(r)){let s=e.substring(r.length);return s=s.replace(/\\/g,"/"),s.startsWith("/")||(s="/"+s),s}}function j8(e,n){let r=Gr(n)?n[0]:n;return ic(Aa(Ve.createStringLiteral(r.arguments.name),r.range.pos,r.range.pos),e)}function zP(e,n,r){return Bv(e,n,s=>qv(s.initializer)?Zr(s.initializer.elements,a=>ss(a)&&a.text===r):void 0)}function H9(e,n,r){return Vy(e,n,s=>qv(s.initializer)?Zr(s.initializer.elements,a=>ss(a)&&a.text===r):void 0)}function G9(e,n){return e.configFilePath!==n.configFilePath||ck(e,n)||Q9(e,n)}function ck(e,n){return e.masterFile!==n.masterFile||e.sefunFile!==n.sefunFile}function Q9(e,n){return X2(e,n,iE)}function Y9(e,n,r,s){w.assert(e.length===n.length);for(let a=0;a<e.length;a++){let l=n[a],u=e[a],d=r(u);if(d?!l||!s(d,l):l)return!0}return!1}function Z9(e,n){return e===n||e.resolvedModule===n.resolvedModule||!!e.resolvedModule&&!!n.resolvedModule&&e.resolvedModule.isExternalLibraryImport===n.resolvedModule.isExternalLibraryImport&&e.resolvedModule.extension===n.resolvedModule.extension&&e.resolvedModule.resolvedFileName===n.resolvedModule.resolvedFileName&&e.resolvedModule.originalPath===n.resolvedModule.originalPath&&e.alternateResult===n.alternateResult}function X9(e,n){return X2(e,n,eM)}function OK(e,n){return`__#${Yi(e)}@${n}`}function K9(e){let n=e.name.text,{typeParameters:r}=e.parent.parent.parent;return r&&Zr(r,s=>s.name.text===n)}function eR(e){let n=e.kind;return!1}function tR(e){return ao(yg(e),n=>LK(n)?n.typeParameters:void 0)}function LK(e){return Ll(e)&&!(e.parent.kind===199&&(e.parent.tags.some(pd)||e.parent.tags.some(C0)))}function nR(e){return e.kind===272&&e.expression.kind===287}function rR(e){return CD(e,C0)}function rb(e,n){return e[n]===void 0?!!e.strict:!!e[n]}function iR(e){return Nr(e)&&yp(e)&&Kc(e)&&!!xD(e)}function sR(e){return w.checkDefined(B8(e))}function B8(e){let n=xD(e);return n&&n.typeExpression&&n.typeExpression.type}function oR(e){return e.allowUnreachableCode===!1}function aR(e,n){let r=e.indexOf(n);return w.assert(r!==-1),e.slice(r)}function cR(e){let n;for(;e&&e.kind===165;)n=e,e=e.parent;return[n,e]}function lR(e,n){let r=Cv(e.languageVersion,!0,!0,e.languageVariant,e.text,void 0,n);return r.scan(),r.getToken()}function W8(e){let n=li(di(Ms.getExecutingFilePath())),r=TD(e),s=GO()?.toLowerCase()??"en",l=/^([a-z]+)([_-]([a-z]+))?$/.exec(s)[1],u=SD(e),d=[ii(n,r,s,u),ii(n,r,l,u),ii(n,r,u)];return Zr(d,_=>Ms.fileExists(_))}function VP(e,n){let r=n.indexOf(e);return r>=0&&r<n.length-1?n[r+1]:void 0}function uR(e,n,r){return{file:e,start:n.pos,length:n.end-n.pos,code:r.code,category:r.category,messageText:r.message}}function fR(e,n){let r=new Map(n.map(u=>[`${$s(e,u.range.end).line}`,u])),s=new Map;return{getUnusedExpectations:a,markUsed:l};function a(){return as(r.entries()).filter(([u,d])=>d.type===0&&!s.get(u)).map(([u,d])=>d)}function l(u){return r.has(`${u}`)?(s.set(`${u}`,!0),!0):!1}}function pR(e){if(hs(e)){let n=hi(e.expression);if(n&&Tt(n)&&n.text==="this_object")return!0}return!1}function dR(){let e,n,r,s;return{createBaseSourceFileNode:a,createBaseIdentifierNode:l,createBaseTokenNode:u,createBaseNode:d};function a(_){return new(s||(s=Ks.getSourceFileConstructor()))(_,-1,-1)}function l(_){return new(r||(r=Ks.getIdentifierConstructor()))(_,-1,-1)}function u(_){return new(n||(n=Ks.getTokenConstructor()))(_,-1,-1)}function d(_){return new(e||(e=Ks.getNodeConstructor()))(_,-1,-1)}}function _R(e){let n,r;return{getParenthesizeLeftSideOfBinaryForOperator:s,getParenthesizeRightSideOfBinaryForOperator:a,parenthesizeLeftSideOfBinary:y,parenthesizeRightSideOfBinary:h,parenthesizeExpressionOfComputedPropertyName:v,parenthesizeConditionOfConditionalExpression:b,parenthesizeBranchOfConditionalExpression:T,parenthesizeExpressionOfExportDefault:E,parenthesizeExpressionOfNew:g,parenthesizeLeftSideOfAccess:M,parenthesizeOperandOfPostfixUnary:N,parenthesizeOperandOfPrefixUnary:z,parenthesizeExpressionsOfCommaDelimitedList:X,parenthesizeExpressionForDisallowedComma:j,parenthesizeExpressionOfExpressionStatement:Z,parenthesizeConciseBodyOfArrowFunction:le,parenthesizeCheckTypeOfConditionalType:de,parenthesizeExtendsTypeOfConditionalType:se,parenthesizeConstituentTypesOfUnionType:he,parenthesizeConstituentTypeOfUnionType:ye,parenthesizeConstituentTypesOfIntersectionType:ie,parenthesizeConstituentTypeOfIntersectionType:oe,parenthesizeOperandOfTypeOperator:Y,parenthesizeOperandOfReadonlyTypeOperator:_e,parenthesizeNonArrayTypeOfPostfixType:G,parenthesizeTypeOfOptionalType:re,parenthesizeTypeArguments:qt,parenthesizeLeadingTypeArgument:be};function s(fe){n||(n=new Map);let pt=n.get(fe);return pt||(pt=je=>y(fe,je),n.set(fe,pt)),pt}function a(fe){r||(r=new Map);let pt=r.get(fe);return pt||(pt=je=>h(fe,void 0,je),r.set(fe,pt)),pt}function l(fe,pt,je,Mt){let Yt=ty(269,fe),Bt=$D(269,fe),Me=kl(pt);if(!je&&pt.kind===283&&Yt>3)return!0;let tt=KS(Me);switch(vs(tt,Yt)){case-1:return!0;case 1:return!1;case 0:if(je)return Bt===1;if(Ur(Me)&&Me.operatorToken.kind===fe){if(u(fe))return!1;if(fe===41){let dt=Mt?d(Mt):0;if(Nh(dt)&&dt===d(Me))return!1}}return IF(Me)===0}}function u(fe){return fe===43||fe===53||fe===52||fe===54||fe===27}function d(fe){if(fe=kl(fe),Nh(fe.kind))return fe.kind;if(fe.kind===269&&fe.operatorToken.kind===41){if(fe.cachedLiteralKind!==void 0)return fe.cachedLiteralKind;let pt=d(fe.left),je=Nh(pt)&&pt===d(fe.right)?pt:0;return fe.cachedLiteralKind=je,je}return 0}function _(fe,pt,je,Mt){return kl(pt).kind===289?pt:l(fe,pt,je,Mt)?e.createParenthesizedExpression(pt):pt}function y(fe,pt){return _(fe,pt,!0)}function h(fe,pt,je){return _(fe,je,!1,pt)}function v(fe){return W1(fe)?e.createParenthesizedExpression(fe):fe}function b(fe){let pt=ty(267,60),je=kl(fe),Mt=KS(je);return vs(Mt,pt)!==1?e.createParenthesizedExpression(fe):fe}function T(fe){let pt=kl(fe);return W1(pt)?e.createParenthesizedExpression(fe):fe}function E(fe){let pt=kl(fe),je=W1(pt);if(!je)switch(U1(pt,!1).kind){case 274:case 270:je=!0}return je?e.createParenthesizedExpression(fe):fe}function g(fe){let pt=U1(fe,!0);switch(pt.kind){case 272:return e.createParenthesizedExpression(fe);case 276:return pt.arguments?fe:e.createParenthesizedExpression(fe)}return M(fe)}function M(fe,pt){let je=kl(fe);return fp(je)&&(je.kind!==276||je.arguments)?fe:Ho(e.createParenthesizedExpression(fe),fe)}function N(fe){return fp(fe)?fe:Ho(e.createParenthesizedExpression(fe),fe)}function z(fe){return Py(fe)?fe:Ho(e.createParenthesizedExpression(fe),fe)}function X(fe){let pt=xo(fe,j);return Ho(e.createNodeArray(pt,fe.hasTrailingComma),fe)}function j(fe){let pt=kl(fe),je=KS(pt),Mt=ty(269,27);return je>Mt?fe:Ho(e.createParenthesizedExpression(fe),fe)}function Z(fe){let pt=kl(fe);if(hs(pt)){let Mt=pt.expression,Yt=kl(Mt).kind;(Yt===270||Yt===283)&&console.warn("implement me - parenthesizeExpressionOfExpressionStatement")}let je=U1(pt,!1).kind;return je===293||je===270?Ho(e.createParenthesizedExpression(fe),fe):fe}function le(fe){return!uu(fe)&&(W1(fe)||U1(fe,!1).kind===293)?Ho(e.createParenthesizedExpression(fe),fe):fe}function de(fe){return fe.kind,fe}function se(fe){return fe.kind,fe}function ye(fe){switch(fe.kind){case 157:return e.createParenthesizedType(fe)}return de(fe)}function he(fe){return e.createNodeArray(xo(fe,ye))}function oe(fe){switch(fe.kind){case 157:return e.createParenthesizedType(fe)}return ye(fe)}function ie(fe){return e.createNodeArray(xo(fe,oe))}function Y(fe){return oe(fe)}function _e(fe){return Y(fe)}function G(fe){return Y(fe)}function ke(fe){return console.warn("implement me - hasJSDocPostfixQuestion"),!1}function re(fe){return ke(fe)?e.createParenthesizedType(fe):G(fe)}function be(fe){return fe}function rt(fe,pt){return pt===0?fe:fe}function qt(fe){if(kt(fe))return e.createNodeArray(xo(fe,rt))}}var mR={getParenthesizeLeftSideOfBinaryForOperator:e=>Gi,getParenthesizeRightSideOfBinaryForOperator:e=>Gi,parenthesizeLeftSideOfBinary:(e,n)=>n,parenthesizeRightSideOfBinary:(e,n,r)=>r,parenthesizeExpressionOfComputedPropertyName:Gi,parenthesizeConditionOfConditionalExpression:Gi,parenthesizeBranchOfConditionalExpression:Gi,parenthesizeExpressionOfExportDefault:Gi,parenthesizeExpressionOfNew:e=>aa(e,fp),parenthesizeLeftSideOfAccess:e=>aa(e,fp),parenthesizeOperandOfPostfixUnary:e=>aa(e,fp),parenthesizeOperandOfPrefixUnary:e=>aa(e,Py),parenthesizeExpressionsOfCommaDelimitedList:e=>aa(e,kh),parenthesizeExpressionForDisallowedComma:Gi,parenthesizeExpressionOfExpressionStatement:Gi,parenthesizeConciseBodyOfArrowFunction:Gi,parenthesizeCheckTypeOfConditionalType:Gi,parenthesizeExtendsTypeOfConditionalType:Gi,parenthesizeConstituentTypesOfUnionType:e=>aa(e,kh),parenthesizeConstituentTypeOfUnionType:Gi,parenthesizeConstituentTypesOfIntersectionType:e=>aa(e,kh),parenthesizeConstituentTypeOfIntersectionType:Gi,parenthesizeOperandOfTypeOperator:Gi,parenthesizeOperandOfReadonlyTypeOperator:Gi,parenthesizeNonArrayTypeOfPostfixType:Gi,parenthesizeTypeOfOptionalType:Gi,parenthesizeTypeArguments:e=>e&&aa(e,kh),parenthesizeLeadingTypeArgument:Gi},FK={convertToFunctionBlock:Xp,convertToFunctionExpression:Xp},fA=0,gR=(e=>(e[e.None=0]="None",e[e.NoParenthesizerRules=1]="NoParenthesizerRules",e[e.NoNodeConverters=2]="NoNodeConverters",e[e.NoIndentationOnFreshPropertyAccess=4]="NoIndentationOnFreshPropertyAccess",e[e.NoOriginalNode=8]="NoOriginalNode",e))(gR||{}),RK=[];function MK(e){RK.push(e)}function Wv(e,n){let r=e&8?Gi:uf,s=Fl(()=>e&1?mR:_R(_)),a=Fl(()=>FK),l=wh(k=>(x,R,V)=>j(k,x,R,V)),u=wh(k=>(x,R)=>fn(k,x,R)),d=wh(k=>x=>O(k,x)),_={get parenthesizer(){return s()},baseFactory:n,flags:e,get converters(){return a()},getDeclarationName:z,createToken:b,createSourceFile:y,createNodeArray:h,createIdentifier:G,createIntLiteral:Lt,createFloatLiteral:Vt,createStringLiteral:hn,createBytesLiteral:kn,createLiteralLikeNode:cs,createTrue:de,createFalse:se,createStringLiteralFromNode:ue,createIncludeDirective:la,createPragmaDirective:Cn,createDefineDirective:Rr,createUndefDirective:bn,createIndexSignature:ie,createTypeParameterDeclaration:gt,updateTypeParameterDeclaration:js,createFunctionTypeNode:fe,createCallSignature:oe,createModifier:Nt,createModifiersFromModifierFlags:bs,createTypePredicateNode:Ze,updateTypePredicateNode:Ct,createArrayTypeNode:on,createUnionTypeNode:Vn,createIntersectionTypeNode:_i,createParenthesizedType:ja,createKeywordTypeNode:mu,createTypeReferenceNode:me,updateTypeReferenceNode:dt,createLiteralTypeNode:tt,createTypeLiteralNode:yr,createStructTypeNode:Yt,createPropertySignature:Jn,createMethodSignature:sn,createQualifiedName:Ts,createComputedPropertyName:In,updateComputedPropertyName:At,createBindingElement:mn,updateBindingElement:Kt,createEmptyStatement:Re,createBlock:H,createVariableDeclarationList:si,createVariableStatement:xi,createVariableDeclaration:Se,createFunctionDeclaration:Xr,createExpressionStatement:Te,createReturnStatement:yt,createBreakStatement:Gt,createContinueStatement:yn,createInheritDeclaration:Kn,createIfStatement:_r,createCaseBlock:Le,createSwitchStatement:He,createCaseClause:nn,createDefaultClause:lt,createForStatement:hr,createForEachStatement:Hs,createDoWhileStatement:Pt,createWhileStatement:oi,createParameterDeclaration:Ui,createMissingDeclaration:_e,createStructDeclarationNode:Me,createCatchStatement:re,createCatchExpression:ke,createEvaluateExpression:be,createNewExpression:rt,createSpreadElement:qt,createByRefElement:Rn,createFunctionExpression:pt,createOmittedExpression:or,createParenthesizedExpression:mr,createConditionalExpression:$e,createBinaryExpression:we,createCallExpression:$i,createInlineClosure:Ie,createSuperAccessExpression:Un,createPropertyAccessExpression:Yn,createPrefixUnaryExpression:ar,createPostfixUnaryExpression:tr,createElementAccessExpression:Nc,createRangeExpression:ls,createArrayLiteralExpression:co,createObjectLiteralExpression:tl,createMappingLiteralExpression:br,createMappingEntryExpression:Bn,convertToAssignmentExpression:ze,createLambdaIdentifierExpression:Sn,createLambdaOperatorExpression:Zt,createCastExpression:Je,createCloneObjectExpression:Xi,createTypeAssertion:Mt,createNewStructExpression:Bt,createExpressionWithTypeArguments:zr,cloneNode:Y,createPropertyAssignment:je,createJSDocText:Os,createJSDocComment:Yo,createJSDocParameterTag:ct,createJSDocTypeExpression:Ca,createJSDocNameReference:Zo,createJSDocLink:Or,createJSDocLinkCode:Wr,createJSDocLinkPlain:nr,createJSDocUnknownTag:An,createJSDocPropertyTag:Jr,createJSDocVariableTag:Ji,createJSDocTypeLiteral:Ss,createJSDocSeeTag:vo,createJSDocImplementsTag:No,createJSDocTypedefTag:uc,createJSDocAugmentsTag:Ba,createJSDocSignature:fc,createJSDocCallbackTag:Io,createJSDocOverloadTag:Xo,createJSDocTemplateTag:Bo,get createJSDocOptionalType(){return d(195)},get createJSDocTypeTag(){return l(223)},get createJSDocReturnTag(){return l(221)},get createJSDocClassTag(){return u(211)},get createJSDocPublicTag(){return u(212)},get createJSDocPrivateTag(){return u(213)},get createJSDocProtectedTag(){return u(214)},get createJSDocOverrideTag(){return u(216)},get createJSDocDeprecatedTag(){return u(210)},get createJSDocAuthorTag(){return u(209)},get createJSDocThrowsTag(){return l(229)},get createJSDocSatisfiesTag(){return l(230)},get createJSDocThisTag(){return l(222)},get createJSDocVariadicType(){return d(197)},createSyntheticExpression:Xa,createSyntaxList:To};return _;function y(k,x,R){let V=n.createBaseSourceFileNode(176);return V.statements=h(k),V.endOfFileToken=x,V.flags|=R,V.text="",V.fileName="",V.path="",V.resolvedPath="",V.originalFileName="",V.languageVersion=1,V.languageVariant=0,V.scriptKind=0,V.isDeclarationFile=!1,V.hasNoDefaultLib=!1,V.transformFlags|=ra(V.statements)|wr(V.endOfFileToken),V.heritageClauses=void 0,V.inactiveCodeRanges=void 0,V.importCandidates=void 0,V.jsDocParsingMode=void 0,V.parsedMacros=void 0,V.locals=void 0,V.nextContainer=void 0,V.endFlowNode=void 0,V.bindSuggestionDiagnostics=void 0,V.nodeCount=0,V.identifierCount=0,V.symbolCount=0,V.parseDiagnostics=void 0,V.bindDiagnostics=void 0,V.lineMap=void 0,V.externalModuleIndicator=void 0,V.setExternalModuleIndicator=void 0,V.pragmas=void 0,V.checkLpcDirective=void 0,V.referencedFiles=void 0,V.typeReferenceDirectives=void 0,V.libReferenceDirectives=void 0,V.commentDirectives=void 0,V.identifiers=void 0,V.imports=void 0,V.ambientModuleNames=void 0,V.classifiableNames=void 0,V.impliedNodeFormat=void 0,V.nodeMacroMap=void 0,V}function h(k,x){if(k===void 0||k===Oe)k=[];else if(kh(k)){if(x===void 0||k.hasTrailingComma===x)return w.attachNodeArrayDebugInfo(k),k;let Ce=k.slice();return Ce.pos=k.pos,Ce.end=k.end,Ce.hasTrailingComma=x,Ce.isComplete=void 0,w.attachNodeArrayDebugInfo(Ce),Ce}let R=k.length,V=R>=1&&R<=4?k.slice():k;return V.pos=Fa(V)?.pos??-1,V.end=wo(V)?.end??-1,V.hasTrailingComma=!!x,V.isComplete=void 0,UK(V),w.attachNodeArrayDebugInfo(V),V}function v(k){return n.createBaseTokenNode(k)}function b(k){return v(k)}function T(k){return n.createBaseNode(k)}function E(k){let x=T(k);return x.symbol=void 0,x.localSymbol=void 0,x}function g(k,x,R,V=0,Ce){let Ye=Ce?k&&B2(k):hi(k);if(Ye&&Tt(Ye)&&!F_(Ye)){let ut=ic(Ho(Y(Ye),Ye),Ye.parent);return V|=is(Ye),R||(V|=96),x||(V|=3072),V&&oa(ut,V),ut}return M(k)}function M(k,x=0,R,V){w.assert(!(x&7),"Argument out of range: flags");let Ce=k?g0(k)?su(!1,R,k,V,go):`generated@${Sa(k)}`:"";(R||V)&&(x|=16);let Ye=N(Ce,4|x,R,V);return Ye.original=k,Ye}function N(k,x,R,V){let Ce=Z(k);return SR(Ce,{flags:x,id:fA,prefix:R,suffix:V}),fA++,Ce}function z(k,x,R){return g(k,x,R)}function X(k,x,R){let V=T(k);return V.tagName=x,V.comment=R,V}function j(k,x,R,V){let Ce=X(k,x??G(pA(k)),V);return Ce.typeExpression=R,Ce}function Z(k){let x=n.createBaseIdentifierNode(89);return x.text=k,x.jsDoc=void 0,x.flowNode=void 0,x.symbol=void 0,x}function le(k){let x=n.createBaseSourceFileNode(176);x.flags|=k.flags&-17;for(let R in k)if(!(Go(x,R)||!Go(k,R))){if(R==="emitNode"){x.emitNode=void 0;continue}x[R]=k[R]}return x}function de(){return b(136)}function se(){return b(135)}function ye(k){let x=le(k);return r(x,k),x}function he(k){let x=Z(k.text);x.flags|=k.flags&-17,x.jsDoc=k.jsDoc,x.flowNode=k.flowNode,x.symbol=k.symbol,x.transformFlags=k.transformFlags,r(x,k);let R=Ym(k);return R&&Ph(x,R),x}function oe(k,x,R){let V=E(151);return V.parameters=xr(x),V.type=R,V.transformFlags=0,V.jsDoc=void 0,V.locals=void 0,V.nextContainer=void 0,V.typeArguments=void 0,V}function ie(k,x,R){let V=E(150);return V.modifiers=xr(k),V.parameters=xr(x),V.type=R,V.transformFlags=0,V.jsDoc=void 0,V.locals=void 0,V.nextContainer=void 0,V.typeArguments=void 0,V}function Y(k){if(k===void 0)return k;if(ti(k))return ye(k);if(Tt(k))return he(k);let x=J2(k.kind)?n.createBaseNode(k.kind):n.createBaseTokenNode(k.kind);x.flags|=k.flags&-17,x.transformFlags=k.transformFlags,r(x,k);for(let R in k)Go(x,R)||!Go(k,R)||(x[R]=k[R]);return x}function _e(){let k=E(173);return k.jsDoc=void 0,k}function G(k,x,R){x===void 0&&k&&(x=hg(k)),x===89&&(x=void 0);let V=Z(k);return R&&(V.flags|=256),V.transformFlags=0,V}function ke(k,x,R,V){let Ce=T(268);return Ce.expression=k,Ce.modifier=x,Ce.modifierExpression=R,Ce.block=V,Ce}function re(k,x){let R=T(255);return R.expression=k,R.block=x,R.transformFlags|=wr(R.expression)|wr(R.block),R.locals=void 0,R.nextContainer=void 0,R}function be(k,x){let R=T(278);return R.expression=k,R.arguments=x?s().parenthesizeExpressionsOfCommaDelimitedList(x):void 0,R.transformFlags|=wr(R.expression)|ra(R.arguments)|2,R}function rt(k,x,R){let V=E(276);return V.expression=k&&(Vs(k)?k:s().parenthesizeExpressionOfNew(k)),V.typeArguments=xr(x),V.arguments=R?s().parenthesizeExpressionsOfCommaDelimitedList(R):void 0,V.transformFlags|=wr(V.expression)|ra(V.arguments)|2,V}function qt(k){let x=T(294);return x.expression=s().parenthesizeExpressionForDisallowedComma(k),x.transformFlags|=wr(x.expression)|1,x}function fe(k,x,R){let V=E(158);return V.parameters=xr(x),V.type=R,V.transformFlags=0,V.modifiers=void 0,V.jsDoc=void 0,V.locals=void 0,V.nextContainer=void 0,V.typeArguments=void 0,V}function pt(k,x,R,V,Ce){let Ye=E(270);return Ye.modifiers=xr(k),Ye.name=Ne(x),Ye.parameters=h(R),Ye.type=V,Ye.body=Ce,Ye.transformFlags|=km(Ye.name)|wr(Ye.type)|ra(Ye.parameters)|wr(Ye.body),Ye.typeArguments=void 0,Ye.jsDoc=void 0,Ye.locals=void 0,Ye.nextContainer=void 0,Ye.flowNode=void 0,Ye.endFlowNode=void 0,Ye.returnFlowNode=void 0,Ye}function je(k,x){let R=E(174);return R.name=Ne(k),R.initializer=s().parenthesizeExpressionForDisallowedComma(x),R.transformFlags|=km(R.name)|wr(R.initializer),R.modifiers=void 0,R.jsDoc=void 0,R}function Mt(k,x){let R=T(279);return R.expression=s().parenthesizeOperandOfPrefixUnary(x),R.type=k,R.transformFlags|=wr(R.expression)|wr(R.type),R}function Yt(k){let x=T(258);return x.typeName=k,x}function Bt(k,x){let R=E(277);return R.type=k,R.arguments=x?xr(x):void 0,R}function Me(k,x,R,V){let Ce=E(241);return Ce.name=x,Ce.modifiers=xr(k),Ce.heritageName=R,Ce.type=V,Ce.transformFlags=Ce.heritageName?3:0,Ce.jsDoc=void 0,Ce.locals=void 0,Ce.nextContainer=void 0,Ce}function tt(k){let x=T(257);return x.literal=k,x.transformFlags=0,x}function me(k,x){let R=T(166);return R.typeName=Ne(k),R.typeArguments=x&&s().parenthesizeTypeArguments(h(x)),R.transformFlags=0,R}function dt(k,x,R){return k.typeName!==x||k.typeArguments!==R?gr(me(x,R),k):k}function Lt(k,x=0){let R=typeof k=="number"?k+"":k,V=E(11);return V.text=R,V.numericLiteralFlags=x,V.transformFlags=0,V}function Vt(k,x=0){let R=typeof k=="number"?k+"":k,V=E(13);return V.text=R,V.numericLiteralFlags=x,V.transformFlags=0,V}function _n(k){let x=E(16);return x.text=k,x}function hn(k,x){let R=_n(k);return R.hasExtendedUnicodeEscape=x,R}function kn(k,x){let R=E(14);return R.text=k,R.hasExtendedUnicodeEscape=x,R}function ue(k){let x=_n(Zh(k));return x.textSourceNode=k,x}function Ze(k,x,R){let V=T(167);return V.parameterName=Ne(x),V.type=R,V.transformFlags=0,V}function Ct(k,x,R,V){return k.parameterName!==R||k.type!==V?gr(Ze(x,R,V),k):k}function on(k){let x=T(161);return x.elementType=k,x}function Vr(k,x,R){let V=T(k);return V.types=_.createNodeArray(R(x)),V.transformFlags=0,V}function Vn(k){let x=T(157);return x.types=_.createNodeArray(k),x}function _i(k){return Vr(159,k,s().parenthesizeConstituentTypesOfIntersectionType)}function xr(k){return k?.length>0?h(k):void 0}function si(k,x=0){let R=T(238);return R.flags|=x&1,R.declarations=h(k),R}function xi(k,x,R){let V=T(242);return V.modifiers=xr(k),V.type=x,V.declarationList=Array.isArray(R)?si(R):R,V.transformFlags|=ra(V.modifiers)|wr(V.declarationList),V.jsDoc=void 0,V.flowNode=void 0,V}function Se(k,x,R,V){let Ce=E(237);return Ce.name=Ne(k),Ce.type=R,Ce.initializer=V,Ce.refToken=x,Ce.transformFlags|=km(Ce.name)|wr(Ce.initializer),Ce.jsDoc=void 0,Ce}function De(k){return k}function Ne(k){return typeof k=="string"?G(k):k}function $e(k,x,R,V,Ce){let Ye=T(267);return Ye.condition=k,Ye.questionToken=x??b(60),Ye.whenTrue=R,Ye.colonToken=V??b(61),Ye.whenFalse=Ce,Ye}function we(k,x,R){let V=E(269),Ce=it(x);return V.left=k,V.operatorToken=Ce,V.right=R,V.jsDoc=void 0,V}function Je(k,x){let R=T(296);return R.expression=k,R.type=x,R}function ze(k){w.assertNode(k.name,Tt),w.assertIsDefined(k.equalsToken),w.assertIsDefined(k.initializer);let x=k.name,R=k.initializer,V=k.equalsToken;k.name=void 0,k.initializer=void 0,k.equalsToken=void 0;let Ce=k;return Ce.kind=269,Ce.left=x,Ce.operatorToken=V,Ce.right=R,Ce}function it(k){return typeof k=="number"?b(k):k}function Re(){let k=T(254);return k.jsDoc=void 0,k}function H(k,x){let R=T(236);return R.statements=h(k),R.multiLine=x,R.transformFlags|=ra(R.statements),R.jsDoc=void 0,R.locals=void 0,R.nextContainer=void 0,R}function Sn(k){let x=T(284);return x.name=k,x}function Zt(k){let x=T(285);return x.operator=k,x}function sn(k,x,R,V,Ce,Ye){let ut=E(156);return ut.modifiers=xr(k),ut.name=Ne(x),ut.parameters=xr(Ce),ut.type=Ye,ut.transformFlags=0,ut.jsDoc=void 0,ut.locals=void 0,ut.nextContainer=void 0,ut.typeArguments=void 0,ut}function mn(k,x,R,V){let Ce=E(266);return Ce.dotDotDotToken=k,Ce.propertyName=Ne(x),Ce.name=Ne(R),Ce.initializer=V,Ce.transformFlags|=wr(Ce.dotDotDotToken)|km(Ce.propertyName)|km(Ce.name)|wr(Ce.initializer)|(Ce.dotDotDotToken?1:0),Ce.flowNode=void 0,Ce}function Kt(k,x,R,V,Ce){return k.propertyName!==R||k.dotDotDotToken!==x||k.name!==V||k.initializer!==Ce?gr(mn(x,R,V,Ce),k):k}function gr(k,x){return k!==x&&(r(k,x),Ho(k,x)),k}function Xr(k,x,R,V,Ce){let Ye=E(169);return Ye.modifiers=xr(k),Ye.name=Ne(x),Ye.parameters=h(R),Ye.type=V,Ye.body=Ce,Ye.body?Ye.transformFlags=ra(Ye.modifiers)|wr(Ye.asteriskToken)|km(Ye.name)|ra(Ye.typeParameters)|ra(Ye.parameters)|wr(Ye.type)|wr(Ye.body)|4:Ye.transformFlags=0,Ye.typeArguments=void 0,Ye.jsDoc=void 0,Ye.locals=void 0,Ye.nextContainer=void 0,Ye.endFlowNode=void 0,Ye.returnFlowNode=void 0,Ye}function cs(k,x){switch(k){case 11:return Lt(x,0);case 13:return Vt(x);case 16:return hn(x,void 0)}}function Xi(k,x){let R=E(273);return R.expression=k,R.arguments=xr(x),R}function ro(k,x){let R=E(272);return R.expression=k,R.arguments=x,R.transformFlags|=wr(R.expression)|ra(R.typeArguments)|ra(R.arguments),R.typeArguments&&(R.transformFlags|=0),R}function $i(k,x){return ro(k,x)}function Ie(k){let x=E(283);return x.body=k,x.transformFlags|=wr(x.body),x.jsDoc=void 0,x.locals=void 0,x.nextContainer=void 0,x.flowNode=void 0,x.endFlowNode=void 0,x.returnFlowNode=void 0,x.typeArguments=void 0,x}function Te(k){let x=T(247);return x.expression=k,x.transformFlags|=wr(x.expression),x.jsDoc=void 0,x.flowNode=void 0,x}function yt(k){let x=T(248);return x.expression=k,x.transformFlags|=wr(x.expression),x.jsDoc=void 0,x.flowNode=void 0,x}function Gt(k){let x=T(250);return x.label=Ne(k),x.transformFlags|=wr(x.label)|4,x.jsDoc=void 0,x.flowNode=void 0,x}function yn(k){let x=T(251);return x.label=Ne(k),x.transformFlags|=wr(x.label)|4,x.jsDoc=void 0,x.flowNode=void 0,x}function Rn(k,x){let R=T(295);return R.expression=x,R}function Rr(k,x,R){let V=E(179);return V.name=Ne(k),V.arguments=xr(x),V.range=R,V.transformFlags|=wr(V.name),V.jsDoc=void 0,V}function bn(k){let x=T(180);return x.name=Ne(k),x.transformFlags=0,x}function Kn(k,x){let R=T(252);return R.modifiers=xr(x),R.inheritClause=k,R.transformFlags|=ra(R.modifiers)|wr(R.inheritClause),R.jsDoc=void 0,R}function ur(k){return k}function _r(k,x,R){let V=T(253);return V.expression=k,V.thenStatement=x,V.elseStatement=R,V.transformFlags|=wr(V.expression)|wr(V.thenStatement)|wr(V.elseStatement),V.jsDoc=void 0,V.flowNode=void 0,V}function Le(k){let x=T(240);return x.clauses=h(k),x.transformFlags|=ra(x.clauses),x.locals=void 0,x.nextContainer=void 0,x}function He(k,x,R){let V=T(256);return V.expression=k,V.caseBlock=R,V.preBlock=x,V.transformFlags|=wr(V.expression)|wr(V.caseBlock),V.jsDoc=void 0,V.flowNode=void 0,V.possiblyExhaustive=!1,V}function lt(k){let x=T(301);return x.statements=h(k),x.transformFlags=ra(x.statements),x}function nn(k,x){let R=T(299);return R.expression=k,R.statements=h(x),R.transformFlags|=wr(R.expression)|ra(R.statements),R.jsDoc=void 0,R}function Un(k,x){let R=T(287);return R.namespace=Ne(x),R.name=k,R}function Ir(k,x,R){let V=E(286);return V.expression=k,V.name=x,V.propertyAccessToken=R,V.transformFlags=wr(V.expression)|(Tt(V.name)?qP(V.name):wr(V.name)),V.jsDoc=void 0,V.flowNode=void 0,V}function Yn(k,x,R){return Ir(s().parenthesizeLeftSideOfAccess(k,!1),Ne(x),R)}function hr(k,x,R,V){let Ce=T(243);return Ce.initializer=k,Ce.statement=V,Ce.condition=x,Ce.incrementor=R,Ce.transformFlags|=wr(Ce.initializer)|wr(Ce.condition)|wr(Ce.incrementor)|wr(Ce.statement),Ce.jsDoc=void 0,Ce.locals=void 0,Ce.nextContainer=void 0,Ce.flowNode=void 0,Ce}function Hs(k,x,R){let V=T(244);return V.initializer=k,V.statement=R,V.expression=x,V.transformFlags|=wr(V.initializer)|wr(V.expression)|wr(V.statement),V.jsDoc=void 0,V.locals=void 0,V.nextContainer=void 0,V.flowNode=void 0,V}function Pt(k,x){let R=T(245);return R.statement=k,R.expression=x,R.transformFlags|=wr(R.statement)|wr(R.expression)|4,R.jsDoc=void 0,R.flowNode=void 0,R}function oi(k,x){let R=T(246);return R.statement=k,R.expression=x,R.transformFlags|=wr(R.statement)|wr(R.expression)|4,R.jsDoc=void 0,R.flowNode=void 0,R}function tr(k,x){let R=T(288);return R.operator=x,R.operand=k,R.transformFlags|=wr(R.operand),R}function Ui(k,x,R,V,Ce,Ye){let ut=E(149);return ut.modifiers=xr(k),ut.name=Ne(R),ut.dotDotDotToken=x,ut.ampToken=V,ut.type=Ce,ut.initializer=Ye,ut.transformFlags=ra(ut.modifiers)|wr(ut.dotDotDotToken)|km(ut.name)|wr(ut.initializer),ut.jsDoc=void 0,ut}function Gs(k,x){let R=E(281);return R.expression=k,R.argumentExpression=x,R.transformFlags|=wr(R.expression)|wr(R.argumentExpression),R.jsDoc=void 0,R.flowNode=void 0,R}function xs(k){return typeof k=="string"?hn(k):typeof k=="number"?Lt(k):k}function Cn(k){let x=T(187);return x.expression=xr(k),x.transformFlags=0,x.jsDoc=void 0,x}function la(k,x){let R=T(178);return R.content=h(k),R.localFirst=x,R.transformFlags=0,R.jsDoc=void 0,R}function ls(k,x){let R=E(282);return R.left=k,R.right=x,R.transformFlags|=wr(R.left)|wr(R.right),R.jsDoc=void 0,R}function Nc(k,x){return Gs(s().parenthesizeLeftSideOfAccess(k,!1),xs(x))}function Ts(k,x){let R=T(146);return R.left=k,R.right=Ne(x),R.transformFlags|=wr(R.left)|qP(R.right),R.flowNode=void 0,R}function In(k){let x=T(147);return x.expression=k,x.transformFlags|=wr(x.expression),x}function At(k,x){return k.expression!==x?gr(In(x),k):k}function or(){return T(297)}function mr(k){let x=T(289);return x.expression=k,x.transformFlags=wr(x.expression),x.jsDoc=void 0,x}function ja(k){let x=T(165);return x.type=k,x.transformFlags=0,x}function mu(k){return b(k)}function ar(k,x){let R=T(298);return R.operator=k,Py(x)||(x=Ho(_.createParenthesizedExpression(x),x)),R.operand=aa(x,Py),R.transformFlags|=wr(R.operand),(k===47||k===48)&&Tt(R.operand)&&!F_(R.operand)&&!bR(R.operand)&&(R.transformFlags|=5),R}function tl(k,x){let R=E(293);return R.properties=h(k),R.multiLine=x,R.transformFlags|=ra(R.properties),R.jsDoc=void 0,R}function co(k,x,R){let V=T(290),Ce=k&&wo(k),Ye=k?h(k,R):void 0;return V.elements=s().parenthesizeExpressionsOfCommaDelimitedList(Ye),V.multiLine=x,V.transformFlags|=ra(V.elements),V}function br(k,x,R,V){let Ce=T(291),Ye=x&&wo(x),ut=x?h(x,V):void 0;return Ce.initializer=k,Ce.elements=ut,Ce.multiLine=R,Ce.transformFlags|=ra(Ce.elements),Ce}function Bn(k,x){let R=T(292);return R.name=k,R.elements=xr(x),R.transformFlags|=wr(R.name)|ra(R.elements),R}function Jn(k,x,R){let V=E(153);return V.modifiers=xr(k),V.name=Ne(x),V.type=R,V.transformFlags=0,V.initializer=void 0,V.jsDoc=void 0,V}function yr(k){let x=E(163);return x.members=h(k),x.transformFlags=0,x}function Os(k){let x=T(200);return x.text=k,x}function Yo(k,x){let R=T(199);return R.comment=k,R.tags=xr(x),R}function Ca(k){let x=T(188);return x.type=k,x}function Zo(k){let x=T(189);return x.name=k,x}function Zn(k,x,R=!1){let V=O(k,R?x&&s().parenthesizeNonArrayTypeOfPostfixType(x):x);return V.postfix=R,V}function O(k,x){let R=T(k);return R.type=x,R}function pe(k,x,R){let V=E(k);return V.comment=R,V.tagName=x,V}function ct(k,x,R,V,Ce,Ye){let ut=pe(220,k??G("param"),Ye);return ut.typeExpression=V,ut.name=x,ut.isNameFirst=!!Ce,ut.isBracketed=R,ut}function fn(k,x,R){return X(k,x??G(pA(k)),R)}function Or(k,x){let R=T(203);return R.name=k,R.text=x,R}function Wr(k,x){let R=T(204);return R.name=k,R.text=x,R}function nr(k,x){let R=T(205);return R.name=k,R.text=x,R}function An(k,x){return X(206,k,x)}function Jr(k,x,R,V,Ce,Ye){let ut=pe(227,k??G("prop"),Ye);return ut.typeExpression=V,ut.name=x,ut.isNameFirst=!!Ce,ut.isBracketed=R,ut}function Ji(k,x,R,V,Ce,Ye){let ut=pe(228,k??G("var"),Ye);return ut.typeExpression=V,ut.name=x,ut.isNameFirst=!!Ce,ut.isBracketed=R,ut}function Ss(k,x=!1){let R=E(201);return R.jsDocPropertyTags=xr(k),R.isArrayType=x,R}function vo(k,x,R){let V=X(226,k??G("see"),R);return V.name=x,V}function No(k,x,R){let V=X(208,k??G("implements"),R);return V.class=x,V}function uc(k,x,R,V){let Ce=pe(225,k??G("typedef"),V);return Ce.typeExpression=x,Ce.fullName=R,Ce.name=R,Ce.locals=void 0,Ce.nextContainer=void 0,Ce}function Ba(k,x,R){let V=X(207,k??G("augments"),R);return V.class=x,V}function zr(k,x){let R=T(280);return R.expression=s().parenthesizeLeftSideOfAccess(k,!1),R.typeArguments=x&&s().parenthesizeTypeArguments(x),R.transformFlags|=wr(R.expression)|ra(R.typeArguments),R}function Xa(k,x=!1,R){let V=T(275);return V.type=k,V.isSpread=x,V.tupleNameSource=R,V}function To(k){let x=T(232);return x._children=k,x}function fc(k,x,R){let V=E(202);return V.parameters=h(x),V.type=R,V.jsDoc=void 0,V.locals=void 0,V.nextContainer=void 0,V}function Io(k,x,R,V){let Ce=pe(217,k??G("callback"),V);return Ce.typeExpression=x,Ce.fullName=R,Ce.name=R,Ce.locals=void 0,Ce.nextContainer=void 0,Ce}function Xo(k,x,R){let V=X(218,k??G("overload"),R);return V.typeExpression=x,V}function Bo(k,x,R,V){let Ce=X(224,k??G("template"),V);return Ce.constraint=x,Ce.typeParameters=h(R),Ce}function gt(k,x,R,V){let Ce=E(148);return Ce.modifiers=xr(k),Ce.name=Ne(x),Ce.constraint=R,Ce.default=V,Ce.transformFlags=0,Ce.expression=void 0,Ce.jsDoc=void 0,Ce}function js(k,x,R,V,Ce){return k.modifiers!==x||k.name!==R||k.constraint!==V||k.default!==Ce?gr(gt(x,R,V,Ce),k):k}function Nt(k){return b(k)}function bs(k){let x=[];return k&1&&x.push(Nt(124)),k&2&&x.push(Nt(122)),k&4&&x.push(Nt(123)),k&256&&x.push(Nt(125)),k&32&&x.push(Nt(130)),k&128&&x.push(Nt(127)),k&64&&x.push(Nt(128)),k&512&&x.push(Nt(131)),x.length?x:void 0}}function uf(e,n){if(e.original!==n&&(e.original=n,n)){let r=n.emitNode;r&&(e.emitNode=jK(r,e.emitNode))}return e}function jK(e,n){let{flags:r}=e;return n||(n={}),n}var OS=dR();function LS(e){return e.flags|=16,e}var BK={createBaseSourceFileNode:e=>LS(OS.createBaseSourceFileNode(e)),createBaseIdentifierNode:e=>LS(OS.createBaseIdentifierNode(e)),createBaseTokenNode:e=>LS(OS.createBaseTokenNode(e)),createBaseNode:e=>LS(OS.createBaseNode(e))},Ve=Wv(4,BK);function WK(e,n){return n}function wr(e){if(!e)return 0;let n=e.transformFlags;return El(e)&&h0(e.name)?WK(e.name,n):n}function UK(e){let n=0;for(let r of e)n|=wr(r);e.transformFlags=n}function pA(e){switch(e){case 223:return"type";case 221:return"returns";case 222:return"this";case 219:return"enum";case 209:return"author";case 211:return"class";case 212:return"public";case 213:return"private";case 214:return"protected";case 215:return"readonly";case 216:return"override";case 224:return"template";case 225:return"typedef";case 220:return"param";case 227:return"prop";case 217:return"callback";case 218:return"overload";case 207:return"augments";case 208:return"implements";case 231:return"import";default:return w.fail(`Unsupported kind: ${w.formatSyntaxKind(e)}`)}}function ra(e){return e?e.transformFlags:0}function km(e){return e&&Tt(e)?qP(e):wr(e)}function qP(e){return wr(e)}var $P=new WeakMap;function U8(e,n){let r=e.kind;return J2(r)?r===232?e._children:$P.get(n)?.get(e):Oe}function hR(e,n,r){if(e.kind===232)return w.fail("Should not need to re-set the children of a SyntaxList."),[];let s=$P.get(n);return s===void 0&&(s=new WeakMap,$P.set(n,s)),s.set(e,r),r}function J8(e,n){return e===n||e.priority===n.priority?0:e.priority===void 0?1:n.priority===void 0?-1:vs(e.priority,n.priority)}function oa(e,n){return U_(e).flags=n,e}function U_(e){if(e.emitNode)w.assert(!(e.emitNode.internalFlags&8),"Invalid attempt to mutate an immutable node.");else{if(ky(e)){if(e.kind===176)return e.emitNode={annotatedNodes:[e]};let n=$n(_s($n(e)))??w.fail("Could not determine parsed source file.");U_(n).annotatedNodes.push(e)}e.emitNode={}}return e.emitNode}function Qm(e){return e.emitNode?.startsOnNewLine}function Ph(e,n){return U_(e).identifierTypeArguments=n,e}function Ym(e){return e.emitNode?.identifierTypeArguments}function yR(e,n){return U_(e).leadingComments=n,e}function lk(e){return e.emitNode?.leadingComments}function ib(e,n,r,s){return yR(e,ei(lk(e),{kind:n,pos:-1,end:-1,hasTrailingNewLine:s,text:r}))}function HP(e){let n=$n(_s(e))?.emitNode?.annotatedNodes;if(n)for(let r of n)r.emitNode=void 0}function z8(e,n){let r=U_(e);return r.snippetElement=n,e}function vR(e,n){let r=U_(e);return r.flags=r.flags|n,e}function $y(e){return e.emitNode?.commentRange??e}function TR(e){return e.emitNode?.snippetElement}function V8(e){return e.emitNode?.helpers}function SR(e,n){return U_(e).autoGenerate=n,e}function Ho(e,n){return n?Aa(e,n.pos,n.end):e}function uk(e){let n=e.kind;return n===148||n===149||n===153||n===152||n===156||n===154||n===150||n===270||n===242||n===169||n===271||n===274||n===170||n===239}var Hb;(e=>{function n(h,v,b,T,E,g,M){let N=v>0?E[v-1]:void 0;return w.assertEqual(b[v],n),E[v]=h.onEnter(T[v],N,M),b[v]=d(h,n),v}e.enter=n;function r(h,v,b,T,E,g,M){w.assertEqual(b[v],r),w.assertIsDefined(h.onLeft),b[v]=d(h,r);let N=h.onLeft(T[v].left,E[v],T[v]);return N?(y(v,T,N),_(v,b,T,E,N)):v}e.left=r;function s(h,v,b,T,E,g,M){return w.assertEqual(b[v],s),w.assertIsDefined(h.onOperator),b[v]=d(h,s),h.onOperator(T[v].operatorToken,E[v],T[v]),v}e.operator=s;function a(h,v,b,T,E,g,M){w.assertEqual(b[v],a),w.assertIsDefined(h.onRight),b[v]=d(h,a);let N=h.onRight(T[v].right,E[v],T[v]);return N?(y(v,T,N),_(v,b,T,E,N)):v}e.right=a;function l(h,v,b,T,E,g,M){w.assertEqual(b[v],l),b[v]=d(h,l);let N=h.onExit(T[v],E[v]);if(v>0){if(v--,h.foldState){let z=b[v]===l?"right":"left";E[v]=h.foldState(E[v],N,z)}}else g.value=N;return v}e.exit=l;function u(h,v,b,T,E,g,M){return w.assertEqual(b[v],u),v}e.done=u;function d(h,v){switch(v){case n:if(h.onLeft)return r;case r:if(h.onOperator)return s;case s:if(h.onRight)return a;case a:return l;case l:return u;case u:return u;default:w.fail("Invalid state")}}e.nextState=d;function _(h,v,b,T,E){return h++,v[h]=n,b[h]=E,T[h]=void 0,h}function y(h,v,b){if(w.shouldAssert(2))for(;h>=0;)w.assert(v[h]!==b,"Circular traversal detected."),h--}})(Hb||(Hb={}));var JK=class{constructor(e,n,r,s,a,l){this.onEnter=e,this.onLeft=n,this.onOperator=r,this.onRight=s,this.onExit=a,this.foldState=l}};function Uv(e,n,r,s,a,l){let u=new JK(e,n,r,s,a,l);return d;function d(_,y){let h={value:void 0},v=[Hb.enter],b=[_],T=[void 0],E=0;for(;v[E]!==Hb.done;)E=v[E](u,E,v,b,T,h,y);return w.assertEqual(E,0),h.value}}function bR(e){return(is(e)&32768)!==0}function su(e,n,r,s,a){return n=cf(n,a),s=cf(s,a),r=zK(r,a),`${e?"#":""}${n}${r}${s}`}function zK(e,n){return typeof e=="string"?e:VK(e,w.checkDefined(n))}function VK(e,n){return F_(e)?n(e):go(e)}function cf(e,n){return typeof e=="object"?su(!1,e.prefix,e.node,e.suffix,n):typeof e=="string"?e.length>0&&e.charCodeAt(0)===35?e.slice(1):e:""}function q8(e){let n=e.emitNode.autoGenerate;if(n.flags&4){let r=n.id,s=e,a=s.original;for(;a;){s=a;let l=s.emitNode?.autoGenerate;if(g0(s)&&(l===void 0||l.flags&4&&l.id!==r))break;a=s.original}return s}return e}function xh(e){let n=Nv(e);return w.assertIsDefined(n),n}function qK(e){return e}function $8(e){let n=ka(e,ti),r=n&&n.emitNode;return!!r&&(!!r.externalHelpersModuleName||!!r.externalHelpers)}function $K(e){let n=e.kind;return n===174||n===175||n===173}function Jv(e){return{loadInclude:n,loadIncludeFile:r};function n(a,l){let u=r(a,l,!1);return{uri:u.filename,source:u.source,error:u.error}}function r(a,l,u,d){let _=di(a),y=li(_),h=di(l),v=e.getCompilerOptions().rootDir||e.getCurrentDirectory(),b,T;if(N_(h))b=I_(y,h);else if(a0(h))b=I_(v,"."+h);else{let g=[...s(a),...d||[],v];Tl(g,y),u&&g.reverse(),T=g,b=Jt(g,M=>(b=I_(M,h),e.fileExists(b)?b:void 0))}if(!b)return{filename:h,error:`Include file ${l} not found`};let E=e.readFile(b);return{filename:b,source:E}}function s(a){return e.getIncludeDirs(a)}}var HK=8,GK=()=>QK;function QK(e,n,r,s){this.directive=void 0,this.name=e,this.includeFilename=n,this.includeDirPos=void 0,this.includeDirEnd=void 0,this.disabled=!1,this.pos=void 0,this.end=void 0,this.argsIn=void 0,this.range=s,this.arguments=void 0,this.getText=r,this.originFilename=void 0,this.posInOrigin=void 0,this.endInOrigin=void 0}var r0;(e=>{var n=Cv(1,!0,!1),r,s,a=8192,l,u,d,_,y,h,v,b,T,E,g,M,N=[],z,X,j=!0,Z,le=1,de=!0,se,ye=!1,he,oe,ie,Y=!1,_e,G,ke,re,be,rt,qt,fe,pt,je,Mt,Yt,Bt;function Me(D){return G++,D}var tt={createBaseSourceFileNode:D=>Me(new _(D,0,0)),createBaseIdentifierNode:D=>Me(new d(D,0,0)),createBaseTokenNode:D=>Me(new u(D,0,0)),createBaseNode:D=>Me(new l(D,0,0))},me=Wv(11,tt),{createObjectLiteralExpression:dt,createElementAccessExpression:Lt,createForStatement:Vt,createIfStatement:_n,createCallExpression:hn,createArrayLiteralExpression:kn,createParenthesizedExpression:ue,createPropertyAccessExpression:Ze,createVariableDeclaration:Ct,createVariableDeclarationList:on,createVariableStatement:Vr,createBlock:Vn,createNodeArray:_i,createIntLiteral:xr,createFloatLiteral:si,createStringLiteral:xi,createBytesLiteral:Se,createLiteralLikeNode:De,createIdentifier:Ne,createToken:$e,createExpressionStatement:we,createNewExpression:Je}=me;function ze(D,J,K,ge,Be,mt,zt,ir,cn,gi){l=Ks.getNodeConstructor(),u=Ks.getTokenConstructor(),d=Ks.getIdentifierConstructor(),_=Ks.getSourceFileConstructor(),y=GK(),h=D,v=ir,T=J,T=J,E=Be,ie=mt,g=zt,M=gi;let Hn=li(h);Hn.endsWith("/")||(Hn=Hn+"/"),Mt=new Map,z=new Map,z.set("__DIR__",Or("__DIR__",`"${Hn}"`)),z.set("__FILE__",Or("__FILE__",`"${h}"`)),Qc(ge||Z1,(Dn,Pi)=>{z.set(Pi,Or(Pi,Dn))}),N=[],Jt(K,Dn=>{let Pi=me.createStringLiteral(Dn);Aa(Pi,0,0);let Ri=me.createIncludeDirective([Pi],!1);Ch(Ri,16);let xa=gt(Ri,0,0);N.push(xa)}),Z=[],X=void 0,be=new Map,be.set(h,T),rt=new Map,r=void 0,s=void 0,he=[],G=0,de=!0,ke=new Map,re=0,qt=[],fe=[],pt=[],je=new Map,n.resetSavedStates(),n.setText(T),n.setFileName(h),n.setOnError(Re),n.setScriptTarget(E),n.setLanguageVariant(M),n.setScriptKind(g),n.setJSDocParsingMode(cn)}function it(){n.clearCommentDirectives(),n.setText(""),n.setOnError(void 0),n.setScriptKind(0),n.setJSDocParsingMode(0),n.setFileName(void 0),n.resetSavedStates(),T=void 0,E=void 0,ie=void 0,g=void 0,M=void 0,b=0,he=void 0,oe=void 0,Yt=0,ke=void 0,qt=void 0,de=!0,be=void 0,rt.clear(),rt=void 0,Z=void 0,le=1,fe=void 0,pt=void 0,je=void 0,r=void 0,s=void 0,Mt=void 0,z=void 0,X=void 0,j=!0}function Re(D,J,K){lt(n.getTokenEnd(),J,n.getFileName(),D,K)}function H(){return _e}function Sn(D,J,K=1,ge,Be=!1){ze(D,J,Oe,Z1,K,ge,6,void 0,0,2),b=se,Kt();let mt=Pt(),zt,ir;if(H()===1)zt=br([],mt.pos,mt.pos),ir=bs();else{let Hn;for(;H()!==1;){let Ri;switch(H()){case 22:Ri=Ed();break;case 136:case 135:case 137:Ri=bs();break;case 42:us(()=>Kt()===10&&Kt()!==61)?Ri=vu():Ri=Zt();break;case 10:case 16:if(us(()=>Kt()!==61)){Ri=wp();break}default:Ri=Zt();break}Hn&&Gr(Hn)?Hn.push(Ri):Hn?Hn=[Hn,Ri]:(Hn=Ri,H()!==1&&tr(P.Unexpected_token))}let Dn=Gr(Hn)?gt(kn(Hn),mt):w.checkDefined(Hn),Pi=we(Dn);gt(Pi,mt),zt=br([Pi],mt),ir=R(1,P.Unexpected_token)}let cn=He(D,zt,ir);Be&&wd(cn),cn.nodeCount=G,cn.identifierCount=re,cn.identifiers=ke,cn.parseDiagnostics=dh(he,cn),oe&&(cn.jsDocDiagnostics=dh(oe,cn));let gi=cn;return it(),gi}e.parseJsonText=Sn;function Zt(){let D=Pt(),J=n.getTokenStart(),K=Nt(17),ge=n.hasPrecedingLineBreak(),Be=ni(15,sn,!0);return k(17,19,K,J,D.fileName),gt(dt(Be,ge),D)}function sn(){let D=Pt(),J=Jn(),K=Ja(!0),ge=Ar(43),Be=js(),mt=gn(),zt=Ar(60),ir=Ar(55),cn;Nt(61);let gi=vr(()=>za(!0));return cn=me.createPropertyAssignment(mt,gi),cn.modifiers=K,mi(gt(cn,D),J)}function mn(D){switch(D){case 184:return le===0&&cs(),le===1?tr(P.Else_directive_without_if):le=le===0?-1:0,le===0&&Xr(),n.scan();case 185:case 181:let J=D===185;le===0&&cs(),!J&&le!==1?Z.push(le):J&&le===1&&tr(P.Elseif_directive_without_if);let K=0;for(D=n.scan();D!=4&&D!=1;)K++,D===11&&n.getTokenValue()==="0"?le=0:le=-1,D=n.scan();return le===0&&Xr(),K==0&&nn(n.getTokenStart(),n.getTokenEnd(),n.getFileName(),P.Expression_expected),D;case 182:case 183:let ge=D===182;if(le!==1&&Z.push(le),D=n.scan(),D===89||ou(D)){let Be=n.getTokenValue();le=ge?z.has(Be)?-1:0:z.has(Be)?0:-1,D=n.scan()}else tr(P.Identifier_expected);return le===0&&Xr(),D}}function Kt(){return ou(_e)&&(n.hasUnicodeEscape()||n.hasExtendedUnicodeEscape())&&nn(n.getTokenStart(),n.getTokenEnd(),n.getFileName(),P.Keywords_cannot_contain_escape_characters),Xi()}function gr(){let D=[],J=Nt(20,void 0,!1)?1:0,K="",ge=n.getTokenFullStart();if(J===0)return Kt(),D;for(;J>0;)switch(Kt()){case 1:J>0&&lt(ge,n.getTokenEnd()-ge,n.getFileName(),P.Unterminated_macro_arguments_list),J=0;break;case 20:J++,K+=n.getTokenText();break;case 21:J--,J>0&&(K+=n.getTokenText());break;case 27:if(J===1){D.push({text:K,disabled:!1,posInOrigin:ge,endInOrigin:n.getTokenFullStart(),originFilename:n.getFileName(),pos:0,end:K.length}),K="",ge=n.getTokenEnd();break}default:K+=n.getTokenText();break}return K.length>0&&D.push({text:K,disabled:!1,posInOrigin:ge,endInOrigin:n.getTokenFullStart(),originFilename:n.getFileName(),pos:0,end:K.length}),Nt(21),D}function Xr(){n.getFileName()===h&&fe.push({pos:n.getTokenFullStart(),end:0})}function cs(D){if(n.getFileName()===h){w.assert(fe.length>0);let J=jo(fe);w.assert(J.end===0),J.end=D||n.getTokenFullStart()}}function Xi(){let D=n.scan();for(;le===0&&D!==1;){let J=n.getTokenFullStart();switch(D){case 186:n.setReportLineBreak(!0),le=Z.pop()??1,D=n.scan(),D!==4&&D!==1&&lt(n.getTokenStart(),n.getTokenEnd()-n.getTokenStart(),n.getFileName(),P.Expected_newline_after_directive),n.setReportLineBreak(!1);break;case 185:case 184:n.setReportLineBreak(!0),Z.length===0&&(le=le===0?-1:0),D=n.scan(),D!==4&&D!==1&&lt(n.getTokenStart(),n.getTokenEnd()-n.getTokenStart(),n.getFileName(),P.Expected_newline_after_directive),n.setReportLineBreak(!1);break;case 181:case 182:case 183:for(n.setReportLineBreak(!0);D!=4&&D!=1;)D=n.scan();D!==4&&lt(n.getTokenStart(),n.getTokenEnd()-n.getTokenStart(),n.getFileName(),P.Expected_newline_after_directive),n.setReportLineBreak(!1),Z.push(le);break}return le!==0&&cs(J),Xi()}switch(D){case 186:return n.setReportLineBreak(!0),le=Z.pop()??1,D=n.scan(),D!==4&&D!==1&&lt(n.getTokenStart(),n.getTokenEnd()-n.getTokenStart(),n.getFileName(),P.Expected_newline_after_directive),n.setReportLineBreak(!1),Xi();case 182:case 183:case 181:case 185:case 184:return n.setReportLineBreak(!0),D=mn(D),D!==4&&lt(n.getTokenStart(),n.getTokenEnd()-n.getTokenStart(),n.getFileName(),P.Expected_newline_after_directive),n.setReportLineBreak(!1),Xi()}if(j&&D===89){let J=n.getTokenValue(),K=z.get(J);if(X&&X.argsIn?.[J]&&X.argsIn?.[J].disabled!==!0)return ro(D,J,X);if(K&&K.disabled!==!0&&K.range)return $i(D,J,K)}return _e=D}function ro(D,J,K){let ge=K.argsIn[J];return ge.disabled=!0,n.switchStream("",ge.text,ge.pos,ge.end,!0,()=>(ge.disabled=!1,!1)),Xi()}function $i(D,J,K){K.disabled=!0,K.originFilename=n.getFileName(),K.posInOrigin=n.getTokenFullStart(),K.endInOrigin=n.getTokenFullStart()+J.length+1,K.pos=Pt(),K.end=K.pos.tokenStart+J.length;let{range:ge,arguments:Be}=K,mt={};if(Be?.length>0){_e=Xi();let ir=gr(),cn=n.getTokenFullStart(),gi=wo(ir);Jt(Be,(Hn,Dn)=>{w.assertIsDefined(Hn.name);let Pi=Hn.name.text;if(ir.length>Dn){let Ri=ir[Dn];mt[Pi]=Ri}else nn(gi?.end??cn,cn,n.getFileName(),P.Missing_argument_for_macro_0,Pi),mt[Pi]={posInOrigin:gi?.end??cn,endInOrigin:gi?.end??cn,pos:0,end:0,text:"",disabled:!1}}),K.argsIn=mt}let zt=X;return n.switchStream(K.includeFilename??K.originFilename,K.getText(),ge.pos,ge.end-ge.pos,!0,()=>(w.assertIsDefined(K),K.disabled=!1,K.argsIn=void 0,K.originFilename=void 0,K.posInOrigin=void 0,K.endInOrigin=void 0,K.pos=void 0,X=zt,Be?.length>0)),X=K,Xi()}function Ie(D){return Kt(),D()}function Te(){return Kt(),qc(H())}function yt(){return Kt(),qc(H())&&!n.hasPrecedingLineBreak()}function Gt(){return Kt(),qc(H())&&Kt()===20}function yn(){return Kt()===20}function Rn(){return Kt()===17}function Rr(){return Kt()===45}function bn(){return Kt(),H()===11||H()===13||H()===12}function Kn(){return _e=n.reScanLessThanToken()}function ur(){return _e=n.reScanGreaterToken()}function _r(D,J,K,ge,Be,mt,zt,ir=!1,cn,gi,Hn=0,Dn=0,Pi=!1){ze(D,J,K,ge,mt,zt,cn,Be,Hn,Dn);try{let Ri=Le(mt,ir,cn||1,Hn,Pi);return it(),Ri}catch(Ri){throw console.error(Ri),it(),Ri}}e.parseSourceFile=_r;function Le(D,J,K,ge,Be){let mt=Pt(),zt=N.shift();zt&&Zo(zt)||Kt();let ir=Ui(0,Bn,mt);zt&&ir.unshift(zt),w.assert(H()===1);let cn=Jn(),gi=mi(bs(),cn),Hn=He(h,ir,gi);xR(Hn,T),DR(Hn,Pi);let Dn=wo(fe);if(Dn&&Dn.end===0&&(lt(Dn.pos,1,h,P.Unmatched_conditional_directive),Dn.end=n.getTokenEnd()),Hn.commentDirectives=n.getCommentDirectives(),Hn.nodeCount=G,Hn.identifierCount=re,Hn.identifiers=ke,Hn.heritageClauses=me.createNodeArray(qt),Hn.parseDiagnostics=dh(he,Hn),Hn.inactiveCodeRanges=fe,Hn.importCandidates=pt,Hn.jsDocParsingMode=ge,oe&&(Hn.jsDocDiagnostics=dh(oe,Hn)),Hn.nodeMacroMap=Mt,Be){let Ri=new Map;z.forEach((xa,Yu)=>{if(xa.includeFilename!="macro"){let{name:Zu,range:il}=xa;Ri.set(Zu,il?xa.getText()?.substring(il.pos,il.end)??"":"")}xa.argsIn=void 0}),Hn.parsedMacros=Ri}return J&&wd(Hn),Hn;function Pi(Ri,xa,Yu){he.push(ph(h,T,Ri,xa,Yu))}}function He(D,J,K){let ge=me.createSourceFile(J,K,0);return q7(ge,0,T.length),ge.fileName=D,ge.text=T,ge.bindDiagnostics=[],ge.bindSuggestionDiagnostics=void 0,ge.languageVersion=E||1,ge.fileName=D,ge.languageVariant=M,ge.isDeclarationFile=!1,ge.scriptKind=g||1,ge}function lt(D,J,K,ge,...Be){let mt=wo(he),zt;return(!mt||D!==mt.start)&&(zt=ph(K,be.get(K)??n.getText(),D,J,ge,...Be),he.push(zt)),ye=!0,zt}function nn(D,J,K,ge,...Be){return lt(D,J-D,K,ge,...Be)}function Un(D,J,K,...ge){nn(D.pos,D.end,J,K,...ge)}function Ir(D){return typeof D=="object"&&typeof D.pos=="number"}function Yn(D,J,K,...ge){let Be=Pt();J?lt(n.getTokenFullStart(),0,Be.fileName,K,...ge):K&&tr(K,...ge);let mt=D===89?Ne("",void 0):D===11||D===12?xr("",void 0):D===13?si("",void 0):D===16?xi("",void 0):D===173?me.createMissingDeclaration():$e(D);return gt(mt,Be.pos,Be.pos)}function hr(){let D=br([],Pt());return D.isMissingList=!0,D}function Hs(D){return!!D.isMissingList}function Pt(){return{pos:oi(),tokenStart:n.getTokenStart(),fileName:n.getFileName(),include:r,macro:X?{...X}:void 0,stateId:n.getStateId()}}function oi(){return n.getTokenFullStart()}function tr(D,...J){return nn(n.getTokenStart(),n.getTokenEnd(),n.getFileName(),D,...J)}function Ui(D,J,K){let ge=Bt,Be=Yt;Yt|=1<<D,Bt=D;let mt=[];for(K??(K=Pt());!or(D);){if(la(D,!1)){mt.push(ja(D,J));continue}if(Gs(D))break}return Yt=Be,Bt=ge,br(mt,K)}function Gs(D){return Cn(D),xs()?!0:(Kt(),!1)}function xs(){w.assert(Yt,"Missing parsing context");for(let D=0;D<30;D++)if(Yt&1<<D&&(la(D,!0)||or(D)))return!0;return!1}function Cn(D){switch(D){case 0:return tr(P.Declaration_or_statement_expected);case 1:return tr(P.Declaration_or_statement_expected);case 3:return tr(P.case_or_default_expected);case 4:return tr(P.Statement_expected);case 22:case 5:return tr(P.Property_or_signature_expected);case 6:return tr(P.Unexpected_token_A_constructor_method_accessor_or_property_was_expected);case 10:return tr(P.Expression_expected);case 11:return ou(H())?tr(P._0_is_not_allowed_as_a_variable_declaration_name,Mi(H())):tr(P.Variable_declaration_expected);case 12:return tr(P.Property_destructuring_pattern_expected);case 13:return tr(P.Array_element_destructuring_pattern_expected);case 14:return tr(P.Argument_expression_expected);case 15:return tr(P.Property_assignment_expected);case 17:case 16:return tr(P.Expression_or_comma_expected);case 18:case 19:return tr(P.Expression_or_comma_expected);case 21:return tr(P.Parameter_declaration_expected);case 20:return ou(H())?tr(P._0_is_not_allowed_as_a_parameter_name,Mi(H())):tr(P.Parameter_declaration_expected);case 23:return tr(P.Type_parameter_declaration_expected);case 24:return tr(P.Type_argument_expected);case 25:return tr(P.Type_expected);case 26:return tr(P.Unexpected_token_expected);case 33:return tr(P.Variable_declaration_expected);case 29:return tr(P.Identifier_expected);case 30:return w.fail("ParsingContext.Count used as a context");case 34:return tr(P.Pragma_option_expected);case 31:return tr(P.Expression_or_comma_expected);case 8:return tr(P.Property_or_signature_expected);default:w.fail("Unknown ParsingContext"),console.debug("todo - parsingContextErrors")}}function la(D,J){if(ar(D))return!0;switch(D){case 0:case 1:case 2:case 4:return!(H()===26&&J)&&Nc();case 3:return H()===113||H()===114;case 5:return us(Ke);case 8:return qc(H());case 15:switch(H()){case 22:case 43:case 25:case 24:return!0;default:return hu()}case 22:return hu();case 11:return $l()||H()===43;case 33:return $l()||Ke();case 34:return $l();case 13:return H()===27||H()===25||$l();case 23:return H()===103||js();case 18:case 17:case 16:switch(H()){case 27:case 24:return!0}case 14:case 31:return H()===25||Pa();case 19:return H()===26||Pa();case 20:return ls(!1);case 21:return ls(!0);case 24:case 25:return H()===27||zu();case 30:return w.fail("ParsingContext.Count used as a context")}}function ls(D){return H()===25||$l()||Lm(H())||H()===62||H()===52||zu(!D)}function Nc(){switch(H()){case 70:case 26:case 17:case 120:case 99:case 98:case 133:case 115:case 109:case 118:case 111:case 112:case 121:case 106:case 116:case 117:return!0;case 119:return!0;case 124:case 122:case 123:case 125:case 130:case 127:case 128:case 131:case 138:case 92:case 93:case 94:case 101:case 105:case 140:case 104:case 107:case 134:case 95:case 139:case 108:return At()||!us(yt);case 62:return Ao(16777216);default:return Ts()||Pa()}}function Ts(){switch(H()){case 178:case 179:case 180:case 181:case 184:case 185:case 186:case 187:return!0}}function In(){for(;;)switch(H()){case 138:case 133:case 99:case 98:return!0;case 119:case 122:case 123:case 124:case 125:case 130:case 127:case 131:case 128:case 107:case 95:case 108:case 92:case 93:case 94:case 101:case 105:case 104:case 29:return!0;case 140:return us(()=>Kt()!==71);case 134:case 139:return M===0;case 89:return Yt===1&&us(()=>Kt()===20);default:return!1}}function At(){return In()}function or(D){if(H()===1)return!0;switch(D){case 1:case 3:case 5:case 6:case 7:case 12:case 27:case 28:return H()===19||H()===67||H()===4;case 31:return H()===61;case 15:return H()===19;case 34:return H()===4;case 2:case 4:return H()===19||H()===113||H()===114;case 33:case 11:return mr();case 14:return H()===21||H()===26;case 17:return H()===23;case 16:return H()===19;case 25:case 13:return H()===23;case 18:return H()===23;case 19:return H()===23||H()===27;case 21:case 20:case 22:return H()===21||H()===23;case 24:return H()!==27;case 26:return H()===17||H()===19;case 8:return H()===26;default:return!1}}function mr(){return!!(pc()||Oc(H())||H()===39)}function ja(D,J){let K=ar(D);return K?co(K):J()}function mu(D){switch(D){case 6:case 3:case 0:case 1:case 4:case 7:case 5:case 11:case 21:case 20:return!0}return!1}function ar(D,J){if(!ie||!mu(D)||ye)return;let K=ie.currentNode(J??n.getTokenFullStart());if(!(Eo(K)||eee(K)||Iy(K)||(K.flags&34332768)!==se)&&tl(K,D))return Ov(K)&&K.jsDoc?.jsDocCache&&(K.jsDoc.jsDocCache=void 0),K}function tl(D,J){return!1}function co(D){return n.resetTokenState(D.end),Kt(),D}function br(D,J,K,ge){let Be=_i(D,ge),mt;if(typeof J=="number")mt=J,K??(K=n.getTokenFullStart());else if(J.macro?.pos){let zt=J.macro?Bo(J.macro):void 0,ir=Pt(),cn=ir.fileName===h&&!ir.macro?ir.pos:zt.end;mt=zt.pos.pos,K=cn}else mt=J.pos,K??(K=n.getState(J.stateId)?.end);return Aa(Be,mt,K),Be}function Bn(){switch(H()){case 120:return q_();case 26:return yr();case 17:return Ls(!1);case 115:return An();case 109:return fc();case 118:return Io();case 111:return Ji();case 112:return Jr();case 121:return Ss(251);case 106:return Ss(250);case 116:return V_();case 117:return To();case 100:return No();case 133:case 99:if(At())return A();case 122:case 123:case 124:case 125:case 130:case 127:case 128:case 131:case 138:case 107:case 134:case 95:case 98:case 139:case 108:case 105:case 92:case 93:case 94:case 101:case 104:case 140:case 89:case 29:if(At())return A()}return Ts()?Yo():Pp()}function Jn(){return n.hasPrecedingJSDocComment()}function yr(){let D=Pt(),J=Jn();return Nt(26),mi(gt(me.createEmptyStatement(),D),J)}function Os(){return H()==4||H()==1?!0:(tr(P.Expected_newline_after_directive),!1)}function Yo(){n.setReportLineBreak(!0);let D;switch(H()){case 178:D=pe();break;case 179:D=ui(ct);break;case 180:D=ui(nr);break;case 187:D=O();break;case 186:D=Yn(186,!0,P.Unexpected_endIf_directive);default:Kt();let K=[];for(;H()!==4;)K.push(H()),Kt()}let J=Os();return n.setReportLineBreak(!1),D?.kind===178&&J&&(J=!Zo(D)),D||(D=Yn(178,!0,P.Unexpected_keyword_or_identifier)),J&&Kt(),D}function Ca(D){let J=D.content.map(ge=>ge.text).join("");return v.loadIncludeFile(n.getFileName(),J,D.localFirst)}function Zo(D){let J=n.getFileName()??h,K=Ca(D),ge=Np(K.filename),Be=!1;if(ge===h)return!1;if(D.fileName=ge,K?.source?.length>0){if(rt.has(J)||rt.set(J,new Set),rt.get(J).add(ge),Zn(rt,J))return console.error(`Circular include detected: ${J} -> ${ge}`),Un(r??D,h,P.Circular_include_detected_0_to_1,J,ge),!1;let ir=fe;D.text=K.source,cr(32,()=>{Tn(D);let cn=K.source;be.set(ge,K.source);let gi=r,Hn=s,Dn=n.switchStream(ge,cn,0,cn.length,!1,()=>(r=gi,s=Hn,_e=n.getToken(),!1));r??(r=D),s=D,Kt();let Pi=Pt(),Ri=Ui(0,Bn,Pi);w.assert(H()===1);let xa=Jn(),Yu=mi(bs(),xa);D.statements=me.createNodeArray(Ri),D.endOfFileToken=Yu,Dn(),Be=!0}),D.inactiveCodeRanges=fe,fe=ir}let mt=N.shift();return mt&&(Be||(Be=Zo(mt))),Be&&!Ao(32)&&Kt(),Be}function Zn(D,J){let K=new Set,ge=new Set;function Be(mt){if(ge.has(mt))return!0;if(K.has(mt))return!1;K.add(mt),ge.add(mt);let zt=D.get(mt)||new Set;for(let ir of zt)if(Be(ir))return!0;return ge.delete(mt),!1}return Be(J)}function O(){let D=Pt();Nt(187);let J=ni(34,K=>pa());return J.length===0&&(J=hr(),tr(P.Pragma_directive_requires_at_least_one_argument)),gt(me.createPragmaDirective(J),D)}function pe(){let D=Pt(),J=Jn(),K=[];Nt(178);let ge=!1;if(H()===29)_e=n.reScanLessThanTokenAsStringLiteral(),K.push(wp());else{for(;H()===16;)K.push(wp());ge=!0}return K.length===0&&K.push(Yn(16,!0,P.Expression_expected)),mi(gt(me.createIncludeDirective(K,ge),D),J)}function ct(){let D=Pt(),J=Jn();Nt(179);let K=Pt(),ge=n.getTokenStart(),Be=Np(n.getTokenValue()),mt=H()===89?pa():nl();mt.kind===4&&(lt(K.pos,K.pos,D.fileName,P.Identifier_expected),mt=Yn(89,!1));let zt;ge+Be.length===n.getTokenStart()&&H()===20&&(zt=Fi(_t));let cn=0,gi=n.getTokenStart(),Hn=n.getFileName().length>0?n.getFileName():h,Dn=gi;for(;H()!==4&&H()!==1;)cn++,Dn=n.getTokenEnd(),Kt();let Pi;cn>0&&(Pi=Aa(me.createBlock([],!1),gi,Dn));let Ri=mi(gt(me.createDefineDirective(mt,zt,Pi),D),J);return Tt(mt)&&Be?.length>0&&(z.has(Be)?nn(ge,ge+Be.length,D.fileName,P.Macro_already_defined_0,Be):z.set(Be,Wr(Ri,Hn))),Ri}function fn(D,J,K,ge){let Be=new y(D,J,K,ge);return w.attachMacroDebugInfo(Be),Be}function Or(D,J){let K=Aa(me.createBlock([],!1),0,J?.length||0);return fn(D,"builtin",()=>J,K)}function Wr(D,J){function K(){return w.assertIsDefined(D.range,"Cannot expand macro for a define without content"),be.get(J)??""}let ge=fn(D.name.text,J,K,D.range);return ge.directive=D,ge.arguments=D.arguments,ge}function nr(){let D=Pt(),J=Jn();Nt(180);let K=pa();return z.delete(K.text),mi(gt(me.createUndefDirective(K),D),J)}function An(){let D=Pt(),J=Jn();Nt(115);let K=n.getTokenStart(),ge=n.getFileName(),Be=Nt(20),mt=vr(Bs);k(20,21,Be,K,ge);let zt=Bn(),ir=ut(110)?Bn():void 0;return mi(gt(_n(mt,zt,ir),D),J)}function Jr(){let D=Pt(),J=Jn();Nt(112),Nt(20);let K;ql()?K=fa(!0,void 0,33):K=jr(Bs);let ge=!1;ut(103)||(ge=!0,Nt(61));let Be=Fc(21);Nt(21);let mt=Bn(),zt=me.createForEachStatement(K,Be,mt);return mi(gt(zt,D),J)}function Ji(){let D=Pt(),J=Jn();Nt(111),Nt(20);let K;if(H()!==26)if(ql()&&us(Te)){let zt=ea();K=fa(!0,zt)}else K=jr(Bs);let ge;Nt(26);let Be=H()!==26&&H()!==21?vr(Bs):void 0;Nt(26);let mt=H()!==21?vr(Bs):void 0;return Nt(21),ge=Vt(K,Be,mt,Bn()),mi(gt(ge,D),J)}function Ss(D){let J=Pt(),K=Jn();Nt(D===250?106:121);let ge=pc()?void 0:pa();Di();let Be=D===250?me.createBreakStatement(ge):me.createContinueStatement(ge);return mi(gt(Be,J),K)}function vo(){let D=Pt(),J,K,ge,Be;return Nt(100),ut(20)?(J=Bs(),ut(26)&&(K=pa(P.Catch_expression_modifier_expected),!Eo(K)&&H()!==21&&(ge=Bs())),Nt(21)):Be=C(0),gt(me.createCatchExpression(J,K,ge,Be),D)}function No(){let D=Pt(),J=Jn();Nt(100);let K;ut(20)&&(K=Bs(),Nt(21));let ge=C(0);return mi(gt(me.createCatchStatement(K,ge),D),J)}function uc(){let D=Pt(),J=Jn();Nt(113);let K=Fc(61);Nt(61);let ge=Ui(4,Bn);return mi(gt(me.createCaseClause(K,ge),D),J)}function Ba(){let D=Pt();Nt(114),Nt(61);let J=Ui(4,Bn);return gt(me.createDefaultClause(J),D)}function zr(){return H()===113?uc():Ba()}function Xa(){let D=Pt(),J=Ui(3,zr);return gt(me.createCaseBlock(J),D)}function To(){let D=Pt(),J=Jn();Nt(117),Nt(20);let K=vr(Bs);Nt(21),Nt(17);let ge=Ui(2,Bn),Be=Xa();return Nt(19),mi(gt(me.createSwitchStatement(K,ge,Be),D),J)}function fc(){let D=Pt(),J=Jn();Nt(109);let K=Bn();Nt(118);let ge=n.getTokenStart(),Be=n.getFileName(),mt=Nt(20),zt=vr(Bs);return k(20,21,mt,ge,Be),ut(26),mi(gt(me.createDoWhileStatement(K,zt),D),J)}function Io(){let D=Pt(),J=Jn();Nt(118);let K=n.getTokenStart(),ge=n.getFileName(),Be=Nt(20),mt=vr(Bs);k(20,21,Be,K,ge);let zt=Bn();return mi(gt(me.createWhileStatement(zt,mt),D),J)}function Xo(D){return h}function Bo(D){let J=D;for(;J.pos?.macro;)J=J.pos?.macro;return J}function gt(D,J,K){if(typeof J!="number"){let ge=n.getState(J.stateId);w.assertIsDefined(ge,"Scanner state must be defined"),w.assert(ge.fileName==J.fileName,"Scanner state filename does not match position state filename"),je.set(D,ge.fileName?.length>0?ge.fileName:h);let Be=J.macro?Bo(J.macro):void 0,mt=Be?.pos;if(Be&&(Ch(D,D.flags|80),Mt.set(D,Be.name)),mt){let zt=Pt(),ir=Math.max(zt.fileName===h&&!zt.macro?zt.pos:0,Be.end);Aa(D,mt.pos,ir)}else Aa(D,J.pos,K??ge.end)}else Aa(D,J,K);return se&&(D.flags|=se),ye&&(ye=!1,D.flags|=262144),D}function js(){return H()===89?!0:H()>132}function Nt(D,J,K=!0){return H()===D?(K&&Kt(),!0):(J?tr(J):tr(P._0_expected,Mi(D)),!1)}function bs(){let D=Pt(),J=H();return Kt(),gt($e(J),D)}function k(D,J,K,ge,Be){if(H()===J){Kt();return}let mt=tr(P._0_expected,Mi(J));if(K&&mt){let zt=Be||n.getFileName()||h,ir=be.get(zt);Rs(mt,ph(zt,ir,ge,1,P.The_parser_expected_to_find_a_1_to_match_the_0_token_here,Mi(D),Mi(J)))}}function x(D,J,K,ge,Be){w.assert(J.length>0,"closeKind should have at least one element");let mt=0,zt,ir,cn=J.map(Mi).join("");for(;mt<J.length;){if(H()===J[mt++]){Kt();continue}ir=J[mt-1],zt=tr(P._0_expected,cn);break}K&&zt&&Rs(zt,ph(Be,be.get(Be)??n.getText(),ge,1,P.The_parser_expected_to_find_a_1_to_match_the_0_token_here,Mi(D),cn))}function R(D,J,K){return Ar(D)||Yn(D,!1,J||P._0_expected,K||Mi(D))}function V(D){let J=Ce(D);return J||(w.assert(tb(D)),Yn(D,!1,P._0_expected,Mi(D)))}function Ce(D){if(H()===D)return Ye()}function Ye(){let D=Pt(),J=H();return Lo(),gt($e(J),D)}function ut(D){return H()===D?(Kt(),!0):!1}function Ar(D){if(H()===D)return bs()}function Fn(D,J){let K=D&se;if(K){On(!1,K);let ge=J();return On(!0,K),ge}return J()}function cr(D,J){let K=D&~se;if(K){On(!0,K);let ge=J();return On(!1,K),ge}return J()}function On(D,J){D?se|=J:se&=~J}function Mr(D){On(D,8192)}function vr(D){return Fn(8192,D)}function Ci(D){return Fn(524288,D)}function kr(D){return Fn(139264,D)}function jr(D){return cr(8192,D)}function ns(D){return cr(131072,D)}function Fi(D){return cr(32768,D)}function ui(D){let J=j;j=!1;let K=D();return j=J,K}function Ao(D){return(se&D)!==0}function Ko(){return Ao(8192)}function pc(){return H()===26?!0:H()===19||H()===1||n.hasPrecedingLineBreak()}function Bl(D,J){let K=Y,ge=_e,Be=he.length,mt=ye,zt=X,ir=r,cn=s,gi=se;Y=!0;let Hn=J!==0?n.lookAhead(D):n.tryScan(D);return w.assert(gi===se),(!Hn||J!==0)&&(_e=ge,J!==2&&(he.length=Be),ye=mt,X=zt,r=ir,s=cn),Y=K,Hn}function us(D){return Bl(D,1)}function Wl(D){return Bl(D,0)}function Cp(){return pc()?(H()===26&&Kt(),!0):!1}function Di(){return Cp()||Nt(26)}function Pp(){let D=Pt(),J=Jn(),K,ge=H()===20,Be=vr(Bs);return Cp()||Ul(Be),K=we(Be),ge&&(J=!1),mi(gt(K,D),J)}function vd(D){for(let J of Ic)if(D.length>J.length+2&&no(D,J))return`${J} ${D.slice(J.length)}`}let Ic=Object.keys(R2).filter(D=>D.length>2);function Ul(D){let J=Tt(D)?go(D):void 0;if(!J||!y_(J,E)){tr(P._0_expected,Mi(26));return}let K=Ip(D)??h,ge=be.get(K),Be=ts(ge,D.pos);switch(J){case"const":case"let":case"var":nn(Be,D.end,K,P.Variable_declaration_not_allowed_at_this_location);return;case"declare":return}let mt=Uh(J,Ic,Gi)??vd(J);if(mt){nn(Be,D.end,Ip(D),P.Unknown_keyword_or_identifier_Did_you_mean_0,mt);return}H()!==0&&nn(Be,Math.max(Be,D.end),K,P.Unexpected_keyword_or_identifier)}let gu=!1;function mi(D,J){if(!J)return D;w.assert(!D.jsDoc);let K=T,ge=Ip(D);T=be.get(ge)??T;let Be;n.getFileName()!=ge&&(Be=n.switchStream(ge,T,D.pos,D.end));let mt=Vi(d8(D,T),zt=>cT.parseJSDocComment(D,zt.pos,zt.end-zt.pos));return mt.length&&(D.jsDoc=mt),gu&&(gu=!1,D.flags|=536870912),T=K,Be&&Be(),D}function Wa(){switch(H()){case 71:case 136:case 135:case 10:case 11:case 12:case 13:case 16:case 15:case 20:case 22:case 66:case 17:case 69:case 68:case 70:case 138:case 133:case 145:case 100:case 45:case 79:case 89:case 72:return!0;case 137:if(g===6)return!0;default:return js()}}function Pa(){if(Wa())return!0;switch(H()){case 41:case 42:case 57:case 55:case 105:case 47:case 48:case 29:return!0;case 62:return Ao(16777216);default:return Yk()?!0:js()}}function ea(){let D=Pt();return io()}function Ua(D,J,K){let ge=Pt();if(ut(29)){let zt=Ua(D,J,K);return Nt(32),ut(43)?gt(me.createArrayTypeNode(zt),ge):zt}let Be=ut(D),mt=J();if(H()===D||Be){let zt=[mt];for(;ut(D);)if(H()===29)zt.push(Ua(D,J,K));else{let ir=J()??Yn(101,!0,P.Type_expected);w.assertIsDefined(ir),zt.push(ir)}mt=gt(K(br(zt,ge)),ge)}return mt}function Wo(){return Ci(lo)}function ua(){return Ua(52,Wo,me.createIntersectionTypeNode)}function io(){return Ua(53,Ao(16777216)?ua:Wo,me.createUnionTypeNode)}function lo(){let D=Pt(),J=Jl();for(;H()!=1;)if(ut(43)&&(J=gt(me.createArrayTypeNode(J),D)),ut(44))J=gt(me.createArrayTypeNode(me.createArrayTypeNode(J)),D);else return J}function zu(D){switch(H()){case 97:case 102:case 94:case 107:case 134:case 95:case 98:case 139:case 108:case 92:case 93:case 101:case 104:case 140:case 105:case 96:case 17:case 22:case 29:case 53:case 52:case 145:case 16:case 15:case 10:case 11:case 12:case 13:case 136:case 135:case 43:case 60:case 55:case 25:case 138:return!0;case 42:return!D&&us(bn);case 137:if(g===6)return!0;default:return js()}}function nl(){let D=bs();return H()===24?void 0:D}function Jl(){switch(H()){case 97:case 102:case 94:case 107:case 95:case 98:case 108:case 92:case 93:case 138:case 101:case 104:case 140:case 96:return nl();case 134:case 139:return M===0?nl():void 0;case 77:n.reScanAsteriskEqualsToken();case 16:case 15:case 11:case 12:case 13:return Sd();case 105:return bs();case 17:return Td();case 133:case 99:return Qs(H());case 136:case 135:case 137:if(g===6)return Sd();default:return Ao(16777216)?zl():void 0}}function zl(){let D=Pt();return gt(me.createTypeReferenceNode(vf(),z_()),D)}function vf(){return R0(!0,P.Type_expected)}function z_(){if(!n.hasPrecedingLineBreak()&&Kn()===29)return ta(24,ea,29,32)}function ta(D,J,K,ge){if(Nt(K)){let Be=ni(D,J);return Nt(ge),Be}return hr()}function Td(){let D=Pt();return gt(me.createTypeLiteralNode(Ac()),D)}function Ac(){let D;return Nt(17)?(D=me.createNodeArray(kp(Ui(5,wn))),Nt(19)):D=hr(),D}function Qs(D,J=!0){let K=Pt();J&&!Nt(D)&&Yn(D,!0,P._0_expected,"struct");let ge=pa();return gt(me.createStructTypeNode(ge),K)}function Sd(D){let J=Pt();D&&Kt();let K=$_(H());if(D)K=gt(me.createPrefixUnaryExpression(42,K),J);else if(Lc(K)){let ge;for(;H()===16;){let Be=gt($e(41),Pt());ge=Y_(ge??K,Be,K_(),J)}ge&&(K=gt(ge,J))}return gt(me.createLiteralTypeNode(K),J)}function V_(){let D=Pt(),J=Jn();Nt(116);let K=pc()?void 0:vr(Bs);return Di(),mi(gt(me.createReturnStatement(K),D),J)}function q_(){let D=Pt(),J=Jn(),K=Ja(!1,!1,!1);return Tn(Tf(D,J,K))}function Tf(D,J,K){w.assert(!Y,"Inherit statements should not be speculatively parsed."),Nt(120);let ge=vr(Bs);Di();let Be=mi(gt(me.createInheritDeclaration(ge,K),D),J);return qt.push(Be),Be}function $_(D){let J=Pt();if(D===15){let ge=xi(n.getTokenValue(),void 0,n.hasExtendedUnicodeEscape());n.isUnterminated()&&(ge.isUnterminated=!0);let Be=me.createArrayLiteralExpression([ge],n.hasPrecedingLineBreak(),!1);return Kt(),gt(Be,J)}let K=D===11||D===10?xr(n.getTokenValue(),n.getNumericLiteralFlags()):D===13?si(n.getTokenValue(),n.getNumericLiteralFlags()):D===12?xr(n.getTokenValue(),n.getNumericLiteralFlags()):D===16?xi(sC(n.getTokenValue()),void 0,n.hasExtendedUnicodeEscape()):D===14?Se(n.getTokenValue(),n.hasExtendedUnicodeEscape()):Nh(D)?De(D,n.getTokenValue()):w.fail();return n.hasExtendedUnicodeEscape()&&(K.hasExtendedUnicodeEscape=!0),n.isUnterminated()&&(K.isUnterminated=!0),Kt(),gt(K,J)}function Ja(D,J,K){let ge=Pt(),Be,mt,zt,ir=!1,cn=!1,gi=!1;for(;zt=Vu(ir,J,K);)zt.kind===125&&(ir=!0),Be=ei(Be,zt),cn=!0;if(gi)for(;zt=Vu(ir,J,K);)zt.kind===125&&(ir=!0),Be=ei(Be,zt);return Be&&br(Be,ge)}function Vu(D,J,K){let ge=Pt(),Be=H();if(Vl())return Kt(),gt($e(Be),ge)}function Vl(){return Lm(H())&&us(H_)}function H_(){switch(H()){default:return bd()}}function bd(){return Kt(),Sf()}function Sf(){return H()===22||H()===17||H()===43||H()===25||H()===29||ql()||hu()}function ql(){switch(H()){case 107:case 95:case 98:case 108:case 136:case 135:case 92:case 93:case 94:case 101:case 104:case 140:case 99:case 133:case 138:case 105:return!0;case 134:case 139:return M===0;case 137:return E===3}return!1}function hu(){return qc(H())||H()===16||H()===11}function kd(){return H()===99||H()===133}function Oo(){return kd()?us(()=>{if(Kt()==89)switch(Kt()){case 17:case 20:return!0}return!1}):!1}function A(){let D=Pt(),J=Jn(),K=Ja(!0);if(H()==120)return Tf(D,J,K);let ge=ea();return ee(D,J,K,ge)}function ee(D,J,K,ge){if(js()){let Be=us(()=>Kt());return Be===20?rr(D,J,K,ge):Be===17?Fe(D,J,K,ge):Ee(D,J,K,ge)}else if(ge&&YP(ge))return Fe(D,J,K,ge);switch(H()){default:if(K||ge){let Be=Yn(173,!0,P.Declaration_expected);return DD(Be,D.pos),Be.modifiers=K,Be.type=ge,Be}return Kt(),Yn(173,!0,P.Declaration_expected)}}function Fe(D,J,K,ge){let Be=ge&&YP(ge)?ge.typeName:pa(),mt;ut(20)&&(mt=pa(),Nt(21));let zt=ea();Di();let ir=me.createStructDeclarationNode(K,Be,mt,zt);return mi(gt(ir,D),J)}function Ke(){if(H()===29)return!0;let D=!1;for(;Lm(H());)D=!0,Kt();return H()===22||ql()?!0:(hu()&&(D=!0,Kt()),D?H()==26:!1)}function wn(){let D=Pt(),J=Jn(),K=Ja(!1);return Dr(D,J,K)}function Dr(D,J,K){let ge=ea(),Be,mt=ni(8,gn),zt=!1,ir=Xt(mt,(cn,gi)=>{let Hn=ge,Dn=K;return gi>0&&(Hn=me.cloneNode(ge),Ch(Hn,Hn.flags|16),Dn=me.createNodeArray(Xt(K,Pi=>{let Ri=me.cloneNode(Pi);return Ch(Ri,Ri.flags|16),Ri}))),Be=me.createPropertySignature(Dn,cn,Hn),H()===74&&(Be.initializer=qu()),H()==26&&(Di(),zt=!0),mi(gt(Be,D),J)});return me.createNodeArray(ir)}function gn(){return fr(!0)}function fr(D){if(H()===16||H()===10){let J=wp();return J.text=Np(J.text),J}return kf()}function rr(D,J,K,ge){let Be=G_(),mt=_t(),zt=C(0),ir=me.createFunctionDeclaration(K,Be,mt,ge,zt);return mi(gt(ir,D),J)}function C(D,J){if(H()!==17&&pc()){Di();return}return $(D,J)}function $(D,J){let K=de;de=!1;let ge=Ls(!!(D&16),J);return de=K,ge}function Ee(D,J,K,ge){let Be=fa(!1,ge);Di();let mt=Vr(K,ge,Be);return mi(gt(mt,D),J)}function _t(){if(!Nt(20))return hr();let D=an(0,!0);return Nt(21),D}function an(D,J){return D&32?ni(21,os):ni(20,()=>J?Ft():qn())}function Ft(){return jt()}function qn(){return jt(!1)}function jt(D=!0){let J=Pt(),K=Jn(),ge=Ja(!1,!1,!1),Be=de;if(de=!1,!D&&!at())return;let mt=Ao(32768)?void 0:ea(),zt=Ar(52)||M===1&&Ar(141);Ar(43)&&(mt=me.createArrayTypeNode(mt));let cn=$l()?$r(ge):void 0,gi=Ar(25),Hn=qu(H()===74?74:61),Dn=mi(gt(me.createParameterDeclaration(ge,gi,cn,zt,mt,Hn),J),K);return de=Be,Dn}function $r(D){let J=Cd();return Iv(J)===0&&!kt(D)&&Lm(H())&&Kt(),J}function at(){return $l()||H()===22||H()===17}function os(){let D=Pt();return gt(me.createParameterDeclaration(void 0,void 0,void 0,void 0,em(),void 0),D)}function fa(D,J,K=0){let ge=Pt(),Be=1,mt,zt=Ko();return Mr(D),mt=ni(K||11,ir=>uo(J,ir)),Mr(zt),gt(on(mt,Be),ge)}function Oc(D){return D===103||D===61}function uo(D,J){let K=Pt(),ge=Jn(),Be=ea();if(Be&&lp(Be)&&!Be.elementType&&D){let Hn=gt(me.cloneNode(lp(D)?D.elementType:D),K);Be.elementType=Hn}else J&&(!Be||!lp(Be))&&D&&lp(D)&&(Be=gt(me.cloneNode(D.elementType),K));let mt=Pt(),zt;ut(141)&&(zt=gt($e(141),mt));let ir=Cd(),cn=Oc(H())?void 0:qu(),gi=Ct(ir,zt,Be,cn);return mi(gt(gi,K),ge)}function qu(D=74){return ut(D)?za(!0):void 0}function Cd(){return G_()}function G_(){return bf($l(),void 0)}function $l(){return H()===89?!0:H()>132}function bf(D,J,K){if(D){re++;let ir=Pt();ir.pos=n.hasLeadingAsterisks()?n.getTokenStart():oi();let cn=H(),gi=Np(n.getTokenValue()),Hn=n.hasExtendedUnicodeEscape();return Xi(),gt(Ne(gi,cn,Hn),ir)}if(H()===0&&n.tryScan(()=>n.reScanInvalidIdentifier()===89))return bf(!0);re++;let ge=H()===1,Be=n.isReservedWord(),mt=n.getTokenText(),zt=Be?P.Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here:P.Identifier_expected;return Yn(89,ge,J||zt,mt)}function Q_(D){}function ni(D,J,K){let ge=Yt;Yt|=1<<D;let Be=[],mt=Pt(),zt=-1;for(;;){if(la(D,!1)){let ir=n.getTokenFullStart(),cn=ja(D,()=>J(Be.length));if(!cn){Yt=ge;return}if(Be.push(cn),zt=n.getTokenStart(),ut(27))continue;if(zt=-1,or(D))break;Nt(27,void 0),K&&H()===26&&!n.hasPrecedingLineBreak()&&Kt(),ir===n.getTokenFullStart()&&Kt();continue}if(or(D)||Gs(D))break}return Yt=ge,br(Be,mt,void 0,zt>=0)}function yu(D,J,K){let ge=Yt;Yt|=1<<D;let Be=[],mt=Pt(),zt=-1;for(;;){if(la(D,!1)){let ir=n.getTokenFullStart(),cn=ja(D,J);if(!cn){Yt=ge;return}if(Be.push(cn),zt=n.getTokenStart(),ut(K))continue;if(zt=-1,or(D))break;Nt(K),ir===n.getTokenFullStart()&&Kt();continue}if(or(D)||Gs(D))break}return Yt=ge,br(Be,mt,void 0,zt>=0)}function Bs(){let D=Pt(),J=za(!0);H()==74&&(J=gt(ue(Pd(10,J,D)),D));let K;for(;!Ao(131072)&&(K=Ar(27));)J=Y_(J,K,za(!0),D);return J}function Ls(D,J){let K=Pt(),ge=Jn(),Be=n.getTokenStart(),mt=n.getFileName(),zt=!D&&Nt(17,J)||ut(17);if(zt||D){let ir=n.hasPrecedingLineBreak(),cn=Ui(1,Bn);zt&&k(17,19,zt,Be,mt);let gi=mi(gt(Vn(cn,ir),K),ge);return H()===74&&(tr(P.Declaration_or_statement_expected_This_follows_a_block_of_statements_so_if_you_intended_to_write_a_destructuring_assignment_you_might_need_to_wrap_the_whole_assignment_in_parentheses),Kt()),gi}else{let ir=hr();return mi(gt(Vn(ir,void 0),K),ge)}}function Yk(){return Ko()&&H()===103?!1:ny(H())>0}function za(D){let J=Pt(),K=Jn(),ge=I0(0);return fp(ge)&&mf(ur())?Y_(ge,bs(),za(D),J):Uo(ge,J,D)}function Y_(D,J,K,ge){return gt(me.createBinaryExpression(D,J,K),ge)}function I0(D){let J=Pt(),K=Zk();return Pd(D,K,J)}function Uo(D,J,K){let ge=Ar(60);if(!ge)return D;let Be;return gt(me.createConditionalExpression(D,ge,Fn(a,()=>za(!1)),Be=R(61),x_(Be)?za(K):Yn(89,!1,P._0_expected,Mi(61))),J)}function Pd(D,J,K){for(;;){ur();let ge=Lc(J)&&H()==16,Be=D==0&&H()==74?0:ny(ge?41:H());if(!(H()===44?Be>=D:Be>D)||H()===103&&Ko())break;let zt=ge?gt($e(41),Pt()):bs();J=Y_(J,zt,I0(Be),K)}return J}function Zk(){if(xd()){let K=Pt(),ge=A0();return H()===44?Pd(ny(H()),ge,K):ge}let D=H(),J=Z_();if(H()===44){let K=ts(T,J.pos),{end:ge}=J;w.assert(tb(D)),nn(K,ge,Ip(J),P.An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses,Mi(D))}return J}function Z_(){switch(H()){case 29:case 41:case 42:case 57:case 55:return vu();case 20:case 69:let D=eT();if(D)return D;default:return A0()}}function $u(){let D=Pt();Nt(20),Nt(29);let J=Qs(99,!1);w.assert(J.kind===258,"Expected a struct type node"),Nt(32);let K=us(()=>H()===89&&Kt()===61),ge;return K?ge=ni(14,rT):ge=ni(14,Dd),Nt(21),gt(me.createNewStructExpression(J,ge),D)}function eT(){let D=Pt();if(us(()=>{let J=ut(69);J||Nt(20);let K=!1;if(H()===29&&us(()=>Kt())===89&&(K=ut(29)),H()!==29&&!ql())return!1;let ge=ea();if(K&&Nt(32),J)Nt(19),Nt(21);else if(!ut(21))return!1;return!0})){let J=ut(69);J||Nt(20);let K=!1;if(H()===29&&us(()=>Kt())===89&&(K=ut(29)),H()!==29&&!ql())return;let ge=ea();if(K&&Nt(32),J)Nt(19),Nt(21);else if(!ut(21))return;let Be=Z_();return gt(me.createTypeAssertion(ge,Be),D)}}function vu(){let D=Pt(),J=H(),K=Ie(()=>ns(Z_));return H()==74&&(K=gt(ue(Pd(10,K,D)),D)),gt(me.createPrefixUnaryExpression(J,K),D)}function xd(){switch(H()){case 41:case 42:case 57:case 55:case 105:case 29:case 69:return!1;case 20:return us(()=>Kt()===29);default:return!0}}function A0(){if(H()===47||H()===48){let K=Pt();return gt(me.createPrefixUnaryExpression(H(),Ie(tT)),K)}let D=Pt(),J=tT();if((H()===47||H()===48)&&!n.hasPrecedingLineBreak()){let K=H();return Kt(),gt(me.createPostfixUnaryExpression(J,K),D)}return J}function tT(){let D=Pt(),J;return J=H()==71?kg(D):O0(),Xk(D,J)}function Xk(D,J){for(;;){if(J=So(D,J,!0),H()===20){let K=X_(),ge=Tt(J)?J.text:void 0;if(ge==="clone_object"){let Be=me.createCloneObjectExpression(J,K);J=Tn(gt(Be,D));continue}else{let Be=hn(J,K);J=gt(Be,D),ge==="base_name"&&Tn(J);continue}}break}return J}function Tn(D){return pt.push(D),D}function X_(){Nt(20);let D=ni(14,Dd),J=Nt(21);return nT(D,J)}function nT(D,J){return D.isComplete=J,D}function Dd(){return Fn(a,Qu)}function rT(){return Fn(a,Ws)}function Ws(){let D=Pt(),J=Jn(),K=gn();Nt(61);let ge=vr(()=>za(!0)),Be=me.createPropertyAssignment(K,ge);return mi(gt(Be,D),J)}function kg(D,J){let K=Jn();R(71);let ge=js()?pa():Yn(89,!0,P.Identifier_expected);J&&!(Tt(J)||ss(J))&&Un(J,Ip(J),P.Identifier_or_string_expected);let Be=me.createSuperAccessExpression(ge,J);return mi(gt(Be,D),K)}function O0(){let D=Pt(),J=K_();return So(D,J,!0)}function Kk(){return H()===40}function So(D,J,K){for(;;){let ge=!1,Be;if(H()==71&&(J=kg(D,J)),(H()==24||H()==40)&&(ge=!0,Be=bs()),ge){J=eC(D,J,Be);continue}let mt;for(;Lc(J)&&(H()==16||H()===90);){let zt=gt($e(41),Pt());mt=Y_(mt??J,zt,K_(),D)}if(mt&&(J=gt(ue(mt),D)),ut(22)){J=Hl(D,J);continue}return J}}function Lc(D){return ss(D)||Ur(D)}function Fc(D){let J=Pt(),K,ge;return ut(73)?ge=vr(Bs):(K=vr(Bs),ut(73)&&H()!==D&&(ge=vr(Bs))),ge?gt(me.createRangeExpression(K,ge),J):K}function Hl(D,J){let K;if(H()===23)K=Yn(89,!0,P.An_element_access_expression_should_take_an_argument);else{let Be,mt;ut(73)?mt=kr(Bs):(Be=kr(Bs),ut(73)&&H()!==23&&(mt=kr(Bs)));let zt=mt?gt(me.createRangeExpression(Be,mt),D):Be;_u(zt)&&(zt.text=Np(zt.text)),K=zt}Nt(23);let ge=Lt(J,K);return gt(ge,D)}function eC(D,J,K){let ge=Hu(!0,!0,!0),Be=!1,mt=Ze(J,ge,K);return Tn(gt(mt,D))}function Hu(D,J,K){return n.hasPrecedingLineBreak()&&qc(H())&&us(yt)?Yn(89,!0,P.Identifier_expected):D?K?kf():Ka():pa()}function L0(){let D=Pt();Nt(72);let J;if(H()==89){let K=Pt(),ge=pa();H()==71&&(ge=kg(K,ge)),J=me.createLambdaIdentifierExpression(ge)}else{H()==32&&ur();let K=bs();if(J=me.createLambdaOperatorExpression(K),K.kind==22)for(;H()!=27;){let ge=Kt()}}return gt(J,D)}function iT(){let D=Pt();if(!X)return Kt(),Yn(16,!0,P.Stringized_literal_only_valid_in_macro);let J=n.getTokenValue().slice(1),K=X.argsIn[J]?.text;if(Kt(),K){let ge=xi(Np(K),void 0,n.hasExtendedUnicodeEscape());return gt(ge,D)}return lt(D.pos,J.length+1,D.fileName,P.Macro_parameter_0_not_found,J),Yn(16,!1)}function pa(D,J){return bf(js(),D,J)}function kf(D){return bf(qc(H()),D)}function Ka(){return(n.hasUnicodeEscape()||n.hasExtendedUnicodeEscape())&&tr(P.Unicode_escape_sequence_cannot_appear_here),bf(qc(H()))}function rl(D=!0){let J=Pt(),K=Jn();D&&Nt(20);let ge=vr(Bs);return Nt(21),mi(gt(ue(ge),J),K)}function tC(){let D=Pt(),J=n.getTokenStart(),K=n.getFileName(),ge=Nt(68),Be,mt;ut(61)?Be=za(!1):mt=ni(18,Cf),x(68,[23,21],ge,J,K);let zt=n.hasPrecedingLineBreak();return gt(me.createMappingLiteralExpression(Be,mt,zt),D)}function Cf(){let D=Pt(),J=za(!1),K;return ut(61)&&(K=yu(19,nC,26),K?.length===0&&Yn(247,!0,P.Expression_expected)),gt(me.createMappingEntryExpression(J,K),D)}function nC(){return H()===26?gt(me.createOmittedExpression(),Pt()):za(!0)}function Us(D){let J=Pt(),K=Jn(),ge=Yt;Yt|=31;let Be=Nt(20)&&Nt(61),mt=Gu(D);return x(66,[61,21],Be,J.pos,J.fileName),Yt=ge,mi(gt(me.createInlineClosure(mt),J),K)}function sT(){return H()!==17&&H()!==133&&H()!==62&&Pa()}function Gu(D){if(H()===17)return $(0);if(H()!==26&&H()!==138&&H()!==133&&Nc()&&!sT())return $(16);let J=de;de=!1;let K=ni(31,Dd);return de=J,K.length==1?K[0]:K}function Ed(){let D=Pt(),J=n.getFileName(),K=n.getTokenStart(),ge=Nt(22),Be=n.hasPrecedingLineBreak(),mt=ni(17,Qu);return k(22,23,ge,K,J),gt(kn(mt,Be),D)}function xp(){let D=Pt(),J=n.getTokenStart(),K=n.getFileName(),ge=Nt(69),Be=n.hasPrecedingLineBreak(),mt=ni(16,Qu);return x(69,[19,21],ge,J,K),gt(kn(mt,Be),D)}function Dp(){let D=Pt();Nt(25);let J=za(!0);return gt(me.createSpreadElement(J),D)}function rC(){let D=Pt(),J=R(M===0?52:141),K=za(!0);return gt(me.createByRefElement(J,K),D)}function Qu(){let D=Pt(),J=H()===25?Dp():H()===52||H()===141?rC():H()===27?gt(me.createOmittedExpression(),Pt()):za(!0);return H()===25&&(Nt(25),J=gt(me.createSpreadElement(J),D)),J}function K_(){switch(H()){case 10:case 11:case 12:case 13:case 16:case 15:case 14:return wp();case 90:return iT();case 71:case 136:case 135:return bs();case 20:let D=us(()=>Kt());return D===61?Us(!0):D===29?$u():rl();case 69:return xp();case 66:return Us(!0);case 68:return tC();case 70:return Ep();case 138:return iC();case 100:return vo();case 72:return L0();case 22:if(g===6)return Ed();break;case 17:if(g===6)return Zt();break}if(H()===137&&g===6)return bs();if(H()===145&&M===1)return Cg();if(ql()&&us(()=>Kt()!==71)){let D=ea();return uo(D)}return pa(P.Expression_expected)}function Ep(){let D=Pt();Nt(70);let J=za(!0);Nt(21);let K=X_();return gt(me.createEvaluateExpression(J,K),D)}function Cg(){let D=Pt();Nt(145);let J,K;return Nt(20),H()==133?(J=ea(),ut(27)&&(H()==89&&us(()=>Kt()==61)?K=ni(14,rT):K=ni(14,Dd))):K=ni(14,Dd),Nt(21),Tn(gt(Je(J,void 0,K),D))}function iC(){let D=Pt(),J=Jn(),K=Ja(!1);Nt(138);let ge=ea(),Be=js()?pa():void 0,mt=_t(),zt=$(0),ir=me.createFunctionExpression(K,Be,mt,ge,zt);return mi(gt(ir,D),J)}function wp(){return $_(H())}let oT;(D=>{D[D.SourceElements=0]="SourceElements",D[D.BlockStatements=1]="BlockStatements",D[D.SwitchPreBlock=2]="SwitchPreBlock",D[D.SwitchClauses=3]="SwitchClauses",D[D.SwitchClauseStatements=4]="SwitchClauseStatements",D[D.TypeMembers=5]="TypeMembers",D[D.ClassMembers=6]="ClassMembers",D[D.EnumMembers=7]="EnumMembers",D[D.PropertySignatureNames=8]="PropertySignatureNames",D[D.ElementAccess=9]="ElementAccess",D[D.HeritageClauseElement=10]="HeritageClauseElement",D[D.VariableDeclarations=11]="VariableDeclarations",D[D.ObjectBindingElements=12]="ObjectBindingElements",D[D.ArrayBindingElements=13]="ArrayBindingElements",D[D.ArgumentExpressions=14]="ArgumentExpressions",D[D.ObjectLiteralMembers=15]="ObjectLiteralMembers",D[D.ArrayLiteralMembers=16]="ArrayLiteralMembers",D[D.JsonArrayLiteralMembers=17]="JsonArrayLiteralMembers",D[D.MappingLiteralMembers=18]="MappingLiteralMembers",D[D.MappingEntryMembers=19]="MappingEntryMembers",D[D.Parameters=20]="Parameters",D[D.JSDocParameters=21]="JSDocParameters",D[D.RestProperties=22]="RestProperties",D[D.TypeParameters=23]="TypeParameters",D[D.TypeArguments=24]="TypeArguments",D[D.TupleElementTypes=25]="TupleElementTypes",D[D.HeritageClauses=26]="HeritageClauses",D[D.ImportOrExportSpecifiers=27]="ImportOrExportSpecifiers",D[D.ImportAttributes=28]="ImportAttributes",D[D.JSDocComment=29]="JSDocComment",D[D.Count=30]="Count",D[D.InlineClosure=31]="InlineClosure",D[D.StructMembers=32]="StructMembers",D[D.ForEachInitializers=33]="ForEachInitializers",D[D.PragmaArguments=34]="PragmaArguments"})(oT||(oT={}));function Np(D){let J=ke.get(D);return J===void 0&&ke.set(D,J=D),J}function sC(D){if(D&&D.length<=HK){let J=ke.get(D);return J===void 0&&ke.set(D,J=D),J}return D}function Pg(D){return H()===D?(Lo(),!0):(w.assert(tb(D)),tr(P._0_expected,Mi(D)),!1)}function Lo(){return _e=n.scanJsDocToken()}function aT(D){return _e=n.scanJSDocCommentTextToken(D)}function F0(){let D=pa();if(H()===142&&!n.hasPrecedingLineBreak())return Kt(),D}function oC(){let D=Pt(),J=js()&&us(()=>Kt()===142)?F0():void 0,K=ea();return J?gt(me.createTypePredicateNode(void 0,J,K),D):K}function em(){n.setSkipJsDocLeadingAsterisks(!0);let D=Pt(),J=ut(25),K=oC();return ut(22)&&Pg(23)&&(K=gt(me.createArrayTypeNode(K),D)),n.setSkipJsDocLeadingAsterisks(!1),J&&(K=gt(me.createJSDocVariadicType(K),D)),H()===74?(Kt(),gt(me.createJSDocOptionalType(K),D)):K}function wd(D){E_(D,!0)}e.fixupParentReferences=wd;function R0(D,J){let K=Pt(),ge=D?kf(J):pa(J);for(;ut(24)&&H()!==29;)ge=gt(me.createQualifiedName(ge,Hu(D,!1,!0)),K);return ge}function aC(D,J,K){return gt(me.createQualifiedName(D,J),K)}function Ip(D){let J=je.get(D);return w.assertIsDefined(J,"node should have a filename"),J}function xg(){return s?.fileName||h}let cT;(D=>{function J(cn,gi,Hn){let Dn=_e,Pi=he.length,Ri=ye,xa=cr(16777216,()=>ir(gi,Hn));return ic(xa,cn),oe||(oe=[]),Is(oe,he,Pi),_e=Dn,he.length=Pi,ye=Ri,xa}D.parseJSDocComment=J;let K;(cn=>{cn[cn.BeginningOfLine=0]="BeginningOfLine",cn[cn.SawAsterisk=1]="SawAsterisk",cn[cn.SavingComments=2]="SavingComments",cn[cn.SavingBackticks=3]="SavingBackticks"})(K||(K={}));function ge(cn){let gi=Pt(),Hn=(cn?ut:Nt)(17),Dn=cr(16777216,em);(!cn||Hn)&&Pg(19);let Pi=me.createJSDocTypeExpression(Dn);return wd(Pi),gt(Pi,gi)}D.parseJSDocTypeExpression=ge;function Be(){let cn=Pt(),gi=ut(17),Hn=oi(),Dn=R0(!1);gi&&Pg(19);let Pi=me.createJSDocNameReference(Dn);return wd(Pi),gt(Pi,cn)}D.parseJSDocNameReference=Be;function mt(cn,gi,Hn){ze("",cn,Oe,Z1,1,void 0,1,void 0,0,2);let Dn=cr(16777216,()=>ir(gi,Hn)),Ri=dh(he,{languageVariant:2,text:cn});return it(),Dn?{jsDoc:Dn,diagnostics:Ri}:void 0}D.parseIsolatedJSDocComment=mt;let zt;(cn=>{cn[cn.Property=1]="Property",cn[cn.Parameter=2]="Parameter",cn[cn.CallbackParameter=4]="CallbackParameter",cn[cn.Variable=8]="Variable"})(zt||(zt={}));function ir(cn=0,gi){let Hn=T,Dn=gi===void 0?Hn.length:cn+gi;if(gi=Dn-cn,w.assert(cn>=0),w.assert(cn<=Dn),w.assert(Dn<=Hn.length),!pk(Hn,cn))return;let Pi,Ri,xa,Yu,Zu,il=[],Pf=[],cC=Yt;Yt|=1<<29;let lC=n.scanRange(cn+3,gi-5,lT);return Yt=cC,lC;function lT(){let Xe=1,Et,bt=cn-(Hn.lastIndexOf(`
`,cn)+1)+4;function en(Kr){Et||(Et=bt),il.push(Kr),bt+=Kr.length}for(Lo();Ap(5););Ap(4)&&(Xe=0,bt=0);e:for(;;){switch(H()){case 62:uC(il),Zu||(Zu=oi()),dC(pT(bt)),Xe=0,Et=void 0;break;case 4:il.push(n.getTokenText()),Xe=0,bt=0;break;case 43:let Kr=n.getTokenText();Xe===1?(Xe=2,en(Kr)):(w.assert(Xe===0),Xe=1,bt+=Kr.length);break;case 5:w.assert(Xe!==2,"whitespace shouldn't come from the scanner while saving top-level comment text");let Ai=n.getTokenText();Et!==void 0&&bt+Ai.length>Et&&il.push(Ai.slice(Et-bt)),bt+=Ai.length;break;case 1:break e;case 91:Xe=2,en(n.getTokenValue());break;case 17:Xe=2;let Rc=n.getTokenFullStart(),so=n.getTokenEnd()-1,fo=dT(so);if(fo){Yu||uT(il),Pf.push(gt(me.createJSDocText(il.join("")),Yu??cn,Rc)),Pf.push(fo),il=[],Yu=n.getTokenEnd();break}default:Xe=2,en(n.getTokenText());break}Xe===2?aT(!1):Lo()}let tn=il.join("").trimEnd();Pf.length&&tn.length&&Pf.push(gt(me.createJSDocText(tn),Yu??cn,Zu)),Pf.length&&Pi&&w.assertIsDefined(Zu,"having parsed tags implies that the end of the comment span should be set");let Mn=Pi&&br(Pi,Ri,xa);return gt(me.createJSDocComment(Pf.length?br(Pf,cn,Zu):tn.length?tn:void 0,Mn),cn,Dn)}function uT(Xe){for(;Xe.length&&(Xe[0]===`
`||Xe[0]==="\r");)Xe.shift()}function uC(Xe){for(;Xe.length;){let Et=Xe[Xe.length-1].trimEnd();if(Et==="")Xe.pop();else if(Et.length<Xe[Xe.length-1].length){Xe[Xe.length-1]=Et;break}else break}}function fT(){for(;;){if(Lo(),H()===1)return!0;if(!(H()===5||H()===4))return!1}}function sl(){if(!((H()===5||H()===4)&&us(fT)))for(;H()===5||H()===4;)Lo()}function xf(){if((H()===5||H()===4)&&us(fT))return"";let Xe=n.hasPrecedingLineBreak(),Et=!1,bt="";for(;Xe&&H()===43||H()===5||H()===4;)bt+=n.getTokenText(),H()===4?(Xe=!0,Et=!0,bt=""):H()===43&&(Xe=!1),Lo();return Et?bt:""}function pT(Xe){w.assert(H()===62);let Et=n.getTokenStart(),bt=Pt();Lo();let en=Xu(void 0),tn=xf(),Mn;switch(en.text){case"author":Mn=yC(bt,en,Xe,tn);break;case"implements":Mn=TC(bt,en,Xe,tn);break;case"augments":case"extends":Mn=SC(bt,en,Xe,tn);break;case"class":case"constructor":Mn=Id(bt,me.createJSDocClassTag,en,Xe,tn);break;case"public":Mn=Id(bt,me.createJSDocPublicTag,en,Xe,tn);break;case"private":Mn=Id(bt,me.createJSDocPrivateTag,en,Xe,tn);break;case"protected":Mn=Id(bt,me.createJSDocProtectedTag,en,Xe,tn);break;case"override":Mn=Id(bt,me.createJSDocOverrideTag,en,Xe,tn);break;case"deprecated":gu=!0,Mn=Id(bt,me.createJSDocDeprecatedTag,en,Xe,tn);break;case"this":Mn=hT(bt,en,Xe,tn);break;case"arg":case"argument":case"param":return wg(bt,en,2,Xe);case"var":return wg(bt,en,8,Xe);case"return":case"returns":Mn=mT(bt,en,Xe,tn);break;case"template":Mn=Og(bt,en,Xe,tn);break;case"type":Mn=gT(bt,en,Xe,tn);break;case"typedef":Mn=kC(bt,en,Xe,tn);break;case"callback":Mn=CC(bt,en,Xe,tn);break;case"overload":Mn=j0(bt,en,Xe,tn);break;case"satisfies":Mn=bC(bt,en,Xe,tn);break;case"see":Mn=gC(bt,en,Xe,tn);break;case"exception":case"throws":Mn=hC(bt,en,Xe,tn);break;default:Mn=pC(bt,en,Xe,tn);break}return Mn}function Da(Xe,Et,bt,en){return en||(bt+=Et-Xe.pos),Dg(bt,en.slice(bt))}function Dg(Xe,Et){let bt=oi(),en=[],tn=[],Mn,Kr=0,Ai;function Rc(al){Ai||(Ai=Xe),en.push(al),Xe+=al.length}Et!==void 0&&(Et!==""&&Rc(Et),Kr=1);let so=H();e:for(;;){switch(so){case 4:Kr=0,en.push(n.getTokenText()),Xe=0;break;case 62:n.resetTokenState(n.getTokenEnd()-1);break e;case 1:break e;case 5:w.assert(Kr!==2&&Kr!==3,"whitespace shouldn't come from the scanner while saving comment text");let al=n.getTokenText();Ai!==void 0&&Xe+al.length>Ai&&(en.push(al.slice(Ai-Xe)),Kr=2),Xe+=al.length;break;case 17:Kr=2;let Tu=n.getTokenFullStart(),jn=n.getTokenEnd()-1,Js=dT(jn);Js?(tn.push(gt(me.createJSDocText(en.join("")),Mn??bt,Tu)),tn.push(Js),en=[],Mn=n.getTokenEnd()):Rc(n.getTokenText());break;case 18:Kr===3?Kr=2:Kr=3,Rc(n.getTokenText());break;case 91:Kr!==3&&(Kr=2),Rc(n.getTokenValue());break;case 43:if(Kr===0){Kr=1,Xe+=1;break}default:Kr!==3&&(Kr=2),Rc(n.getTokenText());break}Kr===2||Kr===3?so=aT(Kr===3):so=Lo()}uT(en);let fo=en.join("").trimEnd();if(tn.length)return fo.length&&tn.push(gt(me.createJSDocText(fo),Mn??bt)),br(tn,bt,n.getTokenEnd());if(fo.length)return fo}function dT(Xe){let Et=Wl(_T);if(!Et)return;Lo(),sl();let bt=fC(),en=[];for(;H()!==19&&H()!==4&&H()!==1;)en.push(n.getTokenText()),Lo();let tn=Et==="link"?me.createJSDocLink:Et==="linkcode"?me.createJSDocLinkCode:me.createJSDocLinkPlain;return gt(tn(bt,en.join("")),Xe,n.getTokenEnd())}function fC(){if(qc(H())){let Xe=Pt(),Et=kf();for(;ut(24);)Et=gt(me.createQualifiedName(Et,kf()),Xe);return Et}}function _T(){if(xf(),H()===17&&Lo()===62&&qc(Lo())){let Xe=n.getTokenValue();if(M0(Xe))return Xe}}function M0(Xe){return Xe==="link"||Xe==="linkcode"||Xe==="linkplain"}function pC(Xe,Et,bt,en){return gt(me.createJSDocUnknownTag(Et,Da(Xe,oi(),bt,en)),Xe)}function dC(Xe){Xe&&(Pi?Pi.push(Xe):(Pi=[Xe],Ri=Xe.pos),xa=Xe.end)}function tm(){return xf(),H()===17?ge():void 0}function _C(){let Xe=Ap(22);Xe&&sl();let Et=Ap(18),bt=EC();return Et&&V(18),Xe&&(sl(),Ar(74)&&Bs(),Nt(23)),{name:bt,isBracketed:Xe}}function Eg(Xe){switch(Xe.kind){case 140:return!0;case 161:return Eg(Xe.elementType);default:return sp(Xe)&&Tt(Xe.typeName)&&Xe.typeName.text==="Object"&&!Xe.typeArguments}}function wg(Xe,Et,bt,en){let tn=tm(),Mn=!tn;xf();let{name:Kr,isBracketed:Ai}=_C(),Rc=xf();Mn&&!us(_T)&&(tn=tm());let so=Da(Xe,oi(),en,Rc),fo=mC(tn,Kr,bt,en);fo&&(tn=fo,Mn=!0);let al=bt===1?me.createJSDocPropertyTag(Et,Kr,Ai,tn,Mn,so):bt===8?me.createJSDocVariableTag(Et,Kr,Ai,tn,Mn,so):me.createJSDocParameterTag(Et,Kr,Ai,tn,Mn,so);return Tn(gt(al,Xe))}function mC(Xe,Et,bt,en){if(Xe?.type&&Eg(Xe.type)){let tn=Pt(),Mn,Kr;for(;Mn=Wl(()=>Ag(bt,en,Et));)Mn.kind===220||Mn.kind===227?Kr=ei(Kr,Mn):Mn.kind===224&&Un(Mn.tagName,xg(),P.A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag);if(Kr){let Ai=gt(me.createJSDocTypeLiteral(Kr,Xe.type.kind===161),tn);return gt(me.createJSDocTypeExpression(Ai),tn)}}}function mT(Xe,Et,bt,en){kt(Pi,Tk)&&nn(Et.pos,n.getTokenStart(),n.getFileName(),P._0_tag_already_specified,Et.text);let tn=tm();return Tn(gt(me.createJSDocReturnTag(Et,tn,Da(Xe,oi(),bt,en)),Xe))}function gT(Xe,Et,bt,en){kt(Pi,Vv)&&nn(Et.pos,n.getTokenStart(),n.getFileName(),P._0_tag_already_specified,Et.text);let tn=ge(!0),Mn=bt!==void 0&&en!==void 0?Da(Xe,oi(),bt,en):void 0;return Tn(gt(me.createJSDocTypeTag(Et,tn,Mn),Xe))}function gC(Xe,Et,bt,en){let Mn=H()===22||us(()=>Lo()===62&&qc(Lo())&&M0(n.getTokenValue()))?void 0:Be(),Kr=bt!==void 0&&en!==void 0?Da(Xe,oi(),bt,en):void 0;return gt(me.createJSDocSeeTag(Et,Mn,Kr),Xe)}function hC(Xe,Et,bt,en){let tn=tm(),Mn=Da(Xe,oi(),bt,en);return gt(me.createJSDocThrowsTag(Et,tn,Mn),Xe)}function yC(Xe,Et,bt,en){let tn=Pt(),Mn=vC(),Kr=n.getTokenFullStart(),Ai=Da(Xe,Kr,bt,en);Ai||(Kr=n.getTokenFullStart());let Rc=typeof Ai!="string"?br(ri([gt(Mn,tn.pos,Kr)],Ai),tn):Mn.text+Ai;return gt(me.createJSDocAuthorTag(Et,Rc),Xe)}function vC(){let Xe=[],Et=!1,bt=n.getToken();for(;bt!==1&&bt!==4;){if(bt===29)Et=!0;else{if(bt===62&&!Et)break;if(bt===32&&Et){Xe.push(n.getTokenText()),n.resetTokenState(n.getTokenEnd());break}}Xe.push(n.getTokenText()),bt=Lo()}return me.createJSDocText(Xe.join(""))}function TC(Xe,Et,bt,en){let tn=Ng();return gt(me.createJSDocImplementsTag(Et,tn,Da(Xe,oi(),bt,en)),Xe)}function SC(Xe,Et,bt,en){let tn=Ng();return gt(me.createJSDocAugmentsTag(Et,tn,Da(Xe,oi(),bt,en)),Xe)}function bC(Xe,Et,bt,en){let tn=ge(!1),Mn=bt!==void 0&&en!==void 0?Da(Xe,oi(),bt,en):void 0;return gt(me.createJSDocSatisfiesTag(Et,tn,Mn),Xe)}function Ng(){let Xe=ut(17),Et=Pt(),bt=Nd();n.setSkipJsDocLeadingAsterisks(!0);let en=void 0;n.setSkipJsDocLeadingAsterisks(!1);let tn=me.createExpressionWithTypeArguments(bt,en),Mn=gt(tn,Et);return Xe&&Nt(19),Mn}function Nd(){let Xe=Pt(),Et=Xu();for(;ut(24);){let bt=Xu();Et=gt(Ze(Et,bt),Xe)}return Et}function Id(Xe,Et,bt,en,tn){return gt(Et(bt,Da(Xe,oi(),en,tn)),Xe)}function hT(Xe,Et,bt,en){let tn=ge(!0);return sl(),gt(me.createJSDocThisTag(Et,tn,Da(Xe,oi(),bt,en)),Xe)}function kC(Xe,Et,bt,en){let tn=tm();xf();let Mn=yT();sl();let Kr=Dg(bt),Ai;if(!tn||tn.type&&Eg(tn.type)){let so,fo,al,Tu=!1;for(;(so=Wl(()=>PC(bt)))&&so.kind!==224;)if(Tu=!0,so.kind===223)if(fo){let jn=tr(P.A_JSDoc_typedef_comment_may_not_contain_multiple_type_tags);jn&&Rs(jn,ph(h,T,0,0,P.The_tag_was_first_specified_here));break}else fo=so;else al=ei(al,so);if(Tu){let jn=tn&&tn.type.kind===161,Js=me.createJSDocTypeLiteral(al,jn);tn=fo&&fo.typeExpression&&!Eg(fo.typeExpression.type)?fo.typeExpression:gt(Js,Xe),Ai=tn.end}}Ai=Ai||Kr!==void 0?oi():(Mn??tn??Et).end,Kr||(Kr=Da(Xe,Ai,bt,en));let Rc=me.createJSDocTypedefTag(Et,tn,Mn,Kr);return Tn(gt(Rc,Xe.pos,Ai))}function Aw(Xe){let Et=Pt(),bt,en;for(;bt=Wl(()=>Ag(4,Xe));){if(bt.kind===224){Un(bt.tagName,xg(),P.A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag);break}en=ei(en,bt)}return br(en||[],Et)}function Ig(Xe,Et){let bt=Aw(Et),en=Wl(()=>{if(Ap(62)){let tn=pT(Et);if(tn&&tn.kind===221)return tn}});return gt(me.createJSDocSignature(void 0,bt,en),Xe)}function yT(Xe){let Et=n.getTokenStart();if(!qc(H()))return;let bt=Xu();return Xe&&(bt.flags|=4096),bt}function CC(Xe,Et,bt,en){let tn=yT();sl();let Mn=Dg(bt),Kr=Ig(Xe,bt);return Mn||(Mn=Da(Xe,oi(),bt,en)),gt(me.createJSDocCallbackTag(Et,Kr,tn,Mn),Xe)}function j0(Xe,Et,bt,en){sl();let tn=Dg(bt),Mn=Ig(Xe,bt);tn||(tn=Da(Xe,oi(),bt,en));let Kr=tn!==void 0?oi():Mn.end;return gt(me.createJSDocOverloadTag(Et,Mn,tn),Xe.pos,Kr)}function B0(Xe,Et){for(;!Tt(Xe)||!Tt(Et);)if(!Tt(Xe)&&!Tt(Et)&&Xe.right.text===Et.right.text)Xe=Xe.left,Et=Et.left;else return!1;return Xe.text===Et.text}function PC(Xe){return Ag(1,Xe)}function Ag(Xe,Et,bt){let en=!0,tn=!1;for(;;)switch(Lo()){case 62:if(en){let Mn=xC(Xe,Et);return Mn&&(Mn.kind===220||Mn.kind===227)&&bt&&(Tt(Mn.name)||!B0(bt,Mn.name.left))?!1:Mn}tn=!1;break;case 4:en=!0,tn=!1;break;case 43:tn&&(en=!1),tn=!0;break;case 89:en=!1;break;case 1:return!1}}function xC(Xe,Et){w.assert(H()===62);let bt=Pt();Lo();let en=Xu(),tn=xf(),Mn;switch(en.text){case"type":return Xe===1&&gT(bt,en);case"prop":case"property":Mn=1;break;case"arg":case"argument":case"param":Mn=6;break;case"template":return Og(bt,en,Et,tn);case"this":return hT(bt,en,Et,tn);default:return!1}return Xe&Mn?wg(bt,en,Xe,Et):!1}function ol(){let Xe=Pt(),Et=Ap(22);Et&&sl();let bt=Ja(!1,!0),en=Xu(P.Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces),tn;if(Et&&(sl(),Nt(74),tn=cr(16777216,em),Nt(23)),!Eo(en))return gt(me.createTypeParameterDeclaration(bt,en,void 0,tn),Xe)}function DC(){let Xe=Pt(),Et=[];do{sl();let bt=ol();bt!==void 0&&Et.push(bt),xf()}while(Ap(27));return br(Et,Xe)}function Og(Xe,Et,bt,en){let tn=H()===17?ge():void 0,Mn=DC();return gt(me.createJSDocTemplateTag(Et,tn,Mn,Da(Xe,oi(),bt,en)),Xe)}function Ap(Xe){return H()===Xe?(Lo(),!0):!1}function EC(){let Xe=Pt(),Et=Xu();for(ut(22)&&Nt(23);ut(24);){let bt=Xu();ut(22)&&Nt(23),Et=aC(Et,bt,Xe)}return Et}function Xu(Xe){if(!qc(H()))return Yn(89,!Xe,Xe||P.Identifier_expected);re++;let Et=n.getTokenStart(),bt=n.getTokenEnd(),en=H(),tn=Np(n.getTokenValue()),Mn=gt(Ne(tn,en),Et,bt);return Lo(),Mn}}})(cT=e.JSDocParser||(e.JSDocParser={}))})(r0||(r0={}));var dA,_A,mA,gA,kR={createBaseSourceFileNode:e=>new(gA||(gA=Ks.getSourceFileConstructor()))(e,-1,-1),createBaseIdentifierNode:e=>new(mA||(mA=Ks.getIdentifierConstructor()))(e,-1,-1),createBaseTokenNode:e=>new(_A||(_A=Ks.getTokenConstructor()))(e,-1,-1),createBaseNode:e=>new(dA||(dA=Ks.getNodeConstructor()))(e,-1,-1)},H1=Wv(1,kR);function St(e,n){return n&&e(n)}function ai(e,n,r){if(r){if(n)return n(r);for(let s of r){let a=e(s);if(a)return a}}}var YK={176:function(n,r,s){return ai(r,s,n.statements)||St(r,n.endOfFileToken)},255:function(n,r,s){return St(r,n.expression)||St(r,n.block)},149:function(n,r,s){return ai(r,s,n.modifiers)||St(r,n.type)||St(r,n.name)||St(r,n.ampToken)||St(r,n.dotDotDotToken)||St(r,n.initializer)},152:function(n,r,s){return ai(r,s,n.modifiers)||St(r,n.name)||St(r,n.type)||St(r,n.initializer)},174:function(n,r,s){return ai(r,s,n.modifiers)||St(r,n.name)||St(r,n.initializer)},153:function(n,r,s){return ai(r,s,n.modifiers)||St(r,n.name)||St(r,n.type)||St(r,n.initializer)},173:function(n,r,s){return ai(r,s,n.modifiers)},235:function(n,r,s){return ai(r,s,n.elements)},278:function(n,r,s){return St(r,n.expression)||ai(r,s,n.arguments)},276:j4,277:function(n,r,s){return St(r,n.type)||ai(r,s,n.arguments)},241:function(n,r,s){return ai(r,s,n.modifiers)||St(r,n.name)||St(r,n.heritageName)||St(r,n.type)},257:function(n,r,s){return St(r,n.literal)},259:function(n,r,s){return St(r,n.typeParameter)},163:function(n,r,s){return ai(r,s,n.members)},148:function(n,r,s){return ai(r,s,n.modifiers)||St(r,n.name)||St(r,n.constraint)||St(r,n.default)||St(r,n.expression)},166:function(n,r,s){return St(r,n.typeName)||ai(r,s,n.typeArguments)},167:function(n,r,s){return St(r,n.parameterName)||St(r,n.type)},169:function(n,r,s){return ai(r,s,n.modifiers)||St(r,n.type)||St(r,n.asteriskToken)||St(r,n.name)||ai(r,s,n.parameters)||St(r,n.body)},270:function(n,r,s){return ai(r,s,n.modifiers)||St(r,n.type)||St(r,n.name)||ai(r,s,n.parameters)||St(r,n.body)},178:function(n,r,s){return ai(r,s,n.content)||ai(r,s,n.statements)||St(r,n.endOfFileToken)},179:function(n,r,s){return St(r,n.name)||ai(r,s,n.arguments)},283:function(n,r,s){return ai(r,s,n.parameters)||Gr(n.body)?ai(r,s,n.body):St(r,n.body)},252:function(n,r,s){return St(r,n.inheritClause)},157:function(n,r,s){return ai(r,s,n.types)},159:function(n,r,s){return ai(r,s,n.types)},258:function(n,r,s){return St(r,n.typeName)},273:j4,281:function(n,r,s){return St(r,n.expression)||St(r,n.argumentExpression)},282:function(n,r,s){return St(r,n.left)||St(r,n.right)},272:j4,286:function(n,r,s){return St(r,n.expression)||St(r,n.name)},287:function(n,r,s){return St(r,n.namespace)||St(r,n.name)},288:function(n,r,s){return St(r,n.operand)},279:function(n,r,s){return St(r,n.type)||St(r,n.expression)},289:function(n,r,s){return St(r,n.expression)},298:function(n,r,s){return St(r,n.operand)},295:function(n,r,s){return St(r,n.refToken)||St(r,n.expression)},269:function(n,r,s){return St(r,n.left)||St(r,n.operatorToken)||St(r,n.right)},268:function(n,r,s){return St(r,n.expression)||St(r,n.modifier)||St(r,n.modifierExpression)||St(r,n.block)},294:function(n,r,s){return St(r,n.expression)},267:function(n,r,s){return St(r,n.condition)||St(r,n.questionToken)||St(r,n.whenTrue)||St(r,n.colonToken)||St(r,n.whenFalse)},236:ZK,242:function(n,r,s){return ai(r,s,n.modifiers)||St(r,n.type)||St(r,n.declarationList)},238:function(n,r,s){return ai(r,s,n.declarations)},237:function(n,r,s){return St(r,n.type)||St(r,n.refToken)||St(r,n.name)||St(r,n.initializer)},247:function(n,r,s){return St(r,n.expression)},253:function(n,r,s){return St(r,n.expression)||St(r,n.thenStatement)||St(r,n.elseStatement)},245:function(n,r,s){return St(r,n.statement)||St(r,n.expression)},246:function(n,r,s){return St(r,n.expression)||St(r,n.statement)},243:function(n,r,s){return St(r,n.initializer)||St(r,n.condition)||St(r,n.incrementor)||St(r,n.statement)},244:function(n,r,s){return St(r,n.initializer)||St(r,n.expression)||St(r,n.statement)},251:hA,250:hA,248:function(n,r,s){return St(r,n.expression)},256:function(n,r,s){return St(r,n.expression)||ai(r,s,n.preBlock)||St(r,n.caseBlock)},240:function(n,r,s){return ai(r,s,n.clauses)},299:function(n,r,s){return St(r,n.expression)||ai(r,s,n.statements)},301:function(n,r,s){return ai(r,s,n.statements)},296:function(n,r,s){return St(r,n.type)||St(r,n.expression)},290:function(n,r,s){return ai(r,s,n.elements)},284:function(n,r,s){return St(r,n.name)},285:function(n,r,s){return St(r,n.operator)},161:function(n,r,s){return St(r,n.elementType)},291:function(n,r,s){return St(r,n.initializer)||ai(r,s,n.elements)},292:function(n,r,s){return St(r,n.name)||ai(r,s,n.elements)},188:vA,199:function(n,r,s){return(typeof n.comment=="string"?void 0:ai(r,s,n.comment))||ai(r,s,n.tags)},226:function(n,r,s){return St(r,n.tagName)||St(r,n.name)||(typeof n.comment=="string"?void 0:ai(r,s,n.comment))},189:function(n,r,s){return St(r,n.name)},190:function(n,r,s){return St(r,n.left)||St(r,n.right)},220:B4,228:B4,227:B4,209:function(n,r,s){return St(r,n.tagName)||(typeof n.comment=="string"?void 0:ai(r,s,n.comment))},208:function(n,r,s){return St(r,n.tagName)||St(r,n.class)||(typeof n.comment=="string"?void 0:ai(r,s,n.comment))},207:function(n,r,s){return St(r,n.tagName)||St(r,n.class)||(typeof n.comment=="string"?void 0:ai(r,s,n.comment))},224:function(n,r,s){return St(r,n.tagName)||St(r,n.constraint)||ai(r,s,n.typeParameters)||(typeof n.comment=="string"?void 0:ai(r,s,n.comment))},225:function(n,r,s){return St(r,n.tagName)||(n.typeExpression&&n.typeExpression.kind===188?St(r,n.typeExpression)||St(r,n.fullName)||(typeof n.comment=="string"?void 0:ai(r,s,n.comment)):St(r,n.fullName)||St(r,n.typeExpression)||(typeof n.comment=="string"?void 0:ai(r,s,n.comment)))},217:function(n,r,s){return St(r,n.tagName)||St(r,n.fullName)||St(r,n.typeExpression)||(typeof n.comment=="string"?void 0:ai(r,s,n.comment))},221:ah,223:ah,222:ah,230:ah,229:ah,218:ah,197:vA,202:function(n,r,s){return Jt(n.parameters,r)||St(r,n.type)},203:W4,204:W4,205:W4,201:function(n,r,s){return Jt(n.jsDocPropertyTags,r)},206:Cm,211:Cm,212:Cm,213:Cm,214:Cm,210:Cm,216:Cm};function hA(e,n,r){return St(n,e.label)}function ZK(e,n,r){return ai(n,r,e.statements)}function j4(e,n,r){return St(n,e.expression)||ai(n,r,e.arguments)}function Ns(e,n,r){if(e===void 0||e.kind<=145)return;let s=YK[e.kind];return s===void 0?void 0:s(e,n,r)}function Hy(e,n,r){let s=yA(e),a=[];for(;a.length<s.length;)a.push(e);for(;s.length!==0;){let l=s.pop(),u=a.pop();if(Gr(l)){if(r){let d=r(l,u);if(d){if(d==="skip")continue;return d}}for(let d=l.length-1;d>=0;--d)s.push(l[d]),a.push(u)}else{let d=n(l,u);if(d){if(d==="skip")continue;return d}if(l&&l.kind>=146)for(let _ of yA(l))s.push(_),a.push(l)}}}function yA(e){let n=[];return Ns(e,r,r),n;function r(s){n.unshift(s)}}function XK(e){e.externalModuleIndicator=!0}function fk(e,n,r,s=!1,a,l){Dt?.push(Dt.Phase.Parse,"createSourceFile",{path:e},!0),ci.mark("beforeParse");let u,{languageVersion:d,setExternalModuleIndicator:_,impliedNodeFormat:y,jsDocParsingMode:h,globalIncludes:v,configDefines:b,fileHandler:T,reportParsedDefines:E}=typeof r=="object"?r:{languageVersion:r},g=M=>{XK(M)};return u=r0.parseSourceFile(e,n,v,b,T,1,void 0,s,void 0,g,h,l,E),ci.mark("afterParse"),ci.measure("Parse","beforeParse","afterParse"),Dt?.pop(),u}function i0(e){return CR(e)!==void 0}function CR(e){let n=c0(e,vF,!1);if(n)return n;if(el(e,".c")){let r=wc(e).lastIndexOf(".d.");if(r>=0)return e.substring(r)}}function PR(e,n,r,s,a,l,u=!1,d){return console.warn("implement me- updateSourceFile"),r0.parseSourceFile(e.fileName,n,r,s,a,1,void 0,!0,void 0,void 0,void 0,d)}function H8(e){return e.externalModuleIndicator!==void 0}function pk(e,n){return e.charCodeAt(n+1)===42&&e.charCodeAt(n+2)===42&&e.charCodeAt(n+3)!==47}var KK=new WeakSet;function eee(e){return KK.has(e)}function vA(e,n,r){return St(n,e.type)}function B4(e,n,r){return St(n,e.tagName)||(e.isNameFirst?St(n,e.name)||St(n,e.typeExpression):St(n,e.typeExpression)||St(n,e.name))||(typeof e.comment=="string"?void 0:ai(n,r,e.comment))}function ah(e,n,r){return St(n,e.tagName)||St(n,e.typeExpression)||(typeof e.comment=="string"?void 0:ai(n,r,e.comment))}function W4(e,n,r){return St(n,e.name)}function Cm(e,n,r){return St(n,e.tagName)||(typeof e.comment=="string"?void 0:ai(n,r,e.comment))}function dk(e,n){return r0.parseJsonText(e,n)}var U4=new Map;function tee(e){if(U4.has(e))return U4.get(e);let n=new RegExp(`(\\s${e}\\s*=\\s*)(?:(?:'([^']*)')|(?:"([^"]*)"))`,"im");return U4.set(e,n),n}var nee=/^\/\/\/\s*<(\S+)\s.*?\/>/im,ree=/^\/\/\/?\s*@([^\s:]+)(.*)\s*$/im;function iee(e,n,r){let s=n.kind===2&&nee.exec(r);if(s){let l=s[1].toLowerCase(),u=pD[l];if(!u||!(u.kind&1))return;if(u.args){let d={};for(let _ of u.args){let h=tee(_.name).exec(r);if(!h&&!_.optional)return;if(h){let v=h[2]||h[3];if(_.captureSpan){let b=n.pos+h.index+h[1].length+1;d[_.name]={value:v,pos:b,end:b+v.length}}else d[_.name]=v}}e.push({name:l,args:{arguments:d,range:n}})}else e.push({name:l,args:{arguments:{},range:n}});return}let a=n.kind===2&&ree.exec(r);if(a)return TA(e,n,2,a);if(n.kind===3){let l=/@(\S+)(\s+.*)?$/gim,u;for(;u=l.exec(r);)TA(e,n,4,u)}}function TA(e,n,r,s){if(!s)return;let a=s[1].toLowerCase(),l=pD[a];if(!l||!(l.kind&r))return;let u=s[2],d=see(l,u);d!=="fail"&&e.push({name:a,args:{arguments:d,range:n}})}function see(e,n){if(!n)return{};if(!e.args)return{};let r=n.trim().split(/\s+/),s={};for(let a=0;a<e.args.length;a++){let l=e.args[a];if(!r[a]&&!l.optional)return"fail";if(l.captureSpan)return w.fail("Capture spans not yet implemented for non-xml pragmas");s[l.name]=r[a]}return s}function xR(e,n){let r=[];for(let s of Wu(n,0)||Oe){let a=n.substring(s.pos,s.end);iee(r,s,a)}e.pragmas=new Map;for(let s of r){if(e.pragmas.has(s.name)){let a=e.pragmas.get(s.name);a instanceof Array?a.push(s.args):e.pragmas.set(s.name,[a,s.args]);continue}e.pragmas.set(s.name,s.args)}}function DR(e,n){e.checkLpcDirective=void 0,e.referencedFiles=[],e.typeReferenceDirectives=[],e.libReferenceDirectives=[],e.hasNoDefaultLib=!1,e.pragmas.forEach((r,s)=>{switch(s){case"reference":{let a=e.referencedFiles,l=e.typeReferenceDirectives,u=e.libReferenceDirectives;Jt(_P(r),d=>{let{types:_,lib:y,path:h,["resolution-mode"]:v,preserve:b}=d.arguments,T=b==="true"?!0:void 0;d.arguments["no-default-lib"]==="true"?e.hasNoDefaultLib=!0:_||(y?u.push({pos:y.pos,end:y.end,fileName:y.value,...T?{preserve:T}:{}}):h&&a.push({pos:h.pos,end:h.end,fileName:h.value,...T?{preserve:T}:{}}))});break}case"lpc-nocheck":case"lpc-check":{Jt(_P(r),a=>{(!e.checkLpcDirective||a.range.pos>e.checkLpcDirective.pos)&&(e.checkLpcDirective={enabled:s==="lpc-check",end:a.range.end,pos:a.range.pos})});break}case"this-object":case"this_object":return;default:w.fail("Unhandled pragma kind")}})}var zae=G3();function FS(e,n){return e?.startsWith(n)?e.slice(n.length):e}function ER(e,n){n&&e.push(n)}var wR=[["ldmud","ldmud.efun.c"]],sb=wR.map(e=>e[0]),Gb={name:"compileOnSave",type:"boolean",defaultValueDescription:!1},Gy={name:"extends",type:"listOrElement",element:{name:"extends",type:"string"},category:P.File_Management,disallowNullOrUndefined:!0};function _k(e,n,r,s,a=Oe){n=di(n);let l=ca(s.useCaseSensitiveFileNames),u=new Map,d=new Map,_=new Map,{validatedFilesSpec:y,validatedIncludeSpecs:h,validatedExcludeSpecs:v}=e;if(y)for(let g of y){let M=Wi(g,n);u.set(l(M),M)}let b=[".c",".h",".lpc"];if(h&&h.length>0)for(let g of s.readDirectory(n,kp(b),v,h,void 0)){let M=l(g);!u.has(M)&&!d.has(M)&&d.set(M,g)}let T=as(u.values()),E=as(d.values());return T.concat(E,as(_.values()))}function G8(e,n){let r;try{r=n(e)}catch(s){return ac(P.Cannot_read_file_0_Colon_1,e,s.message)}return r===void 0?ac(P.Cannot_read_file_0,e):r}function Q8(e,n,r,s,a,l,u,d){Dt?.push(Dt.Phase.Parse,"parseJsonSourceFileConfigFileContent",{path:e.fileName});let _=oee(void 0,e,n,r,s,d,a,l,u);return Dt?.pop(),_}function Y8(e,n){return li(Wi(e,n))}function Z8(e){return{enable:!!e&&wc(e)==="jsconfig.json",include:[],exclude:[]}}function oee(e,n,r,s,a={},l,u,d=[],_=[],y){w.assert(e===void 0&&n!==void 0||e!==void 0&&n===void 0);let h=[],v=HR(e,n,r,s,u,d,h,y),{raw:b}=v,T=aee(iL(a,v.options||{}),KR,s),E=l;T.configFilePath=u&&cc(u);let g=di(u?Y8(u,s):s),M=de();n&&(n.configFileSpecs=M),oE(T,n);let N=b?.include&&Gr(b.include)?Fa(b.include):void 0,z=di(ii(g,N??"./"));T.rootDir=z,T.rootDirs=[z],T.driverType=q9(b?.driver?.type),b?.libInclude&&Gr(b.libInclude)&&(T.libIncludeDirs=Xt(b.libInclude,_e=>di(ii(z,FS(_e,"/"))))),b?.libFiles?.global_include&&(T.globalIncludeFiles=[b?.libFiles?.global_include],T.resolvedGlobalIncludeFiles=T.globalIncludeFiles.map(_e=>Jt(T.libIncludeDirs,ke=>{let re=di(ii(ke,_e));if(r.fileExists(re))return re}))),T.diagnostics=b?.diagnostics==="on"||b?.diagnostics===!0;let X=FS(T.sefunFile??b?.libFiles?.simul_efun??"/obj/sefun.c","/");T.sefunFile=di(ii(z,X));let j=FS(T.masterFile??b?.libFiles?.master??"/obj/master.c","/");T.masterFile=di(ii(z,j));let Z=FS(T.playerFile??b?.libFiles?.player??"/obj/player.c","/");T.playerFile=di(ii(z,Z)),T.configDefines??(T.configDefines={});let le=b?.defines??Oe;return Jt(le,_e=>{let G=Fa(Object.keys(_e||{}));if(G){let ke=_e[G];T.configDefines[G]=_e[G]}}),{options:T,watchOptions:E,fileNames:se(g),projectReferences:ye(g),typeAcquisition:Z8(),raw:v,errors:h,wildcardDirectories:NR(M,g,r.useCaseSensitiveFileNames),compileOnSave:!1};function de(){let _e=ie("references",Bt=>typeof Bt=="object","object"),G=he(oe("files"));if(G){let Bt=_e==="no-prop"||Gr(_e)&&_e.length===0,Me=Go(b,"extends");if(G.length===0&&Bt&&!Me)if(n){let tt=u||"lpc-config.json",me=P.The_files_list_in_config_file_0_is_empty,dt=Bv(n,"files",Vt=>Vt.initializer),Lt=Mu(n,dt,me,tt);h.push(Lt)}else Y(P.The_files_list_in_config_file_0_is_empty,u||"tsconfig.json")}let ke=he(oe("include")),re=oe("exclude"),be=!1,rt=he(re);if(re==="no-prop"){let Bt=T.outDir,Me=T.declarationDir;(Bt||Me)&&(rt=Yr([Bt,Me],tt=>!!tt))}G===void 0&&ke===void 0&&(ke=[X8],be=!0);let qt,fe,pt,je;ke&&(qt=Qb(ke,h,!0,n,"include"),pt=w_(qt,g)||qt),rt&&(fe=Qb(rt,h,!1,n,"exclude"),je=w_(fe,g)||fe);let Mt=Yr(G,Li),Yt=w_(Mt,g)||Mt;return{filesSpecs:G,includeSpecs:ke,excludeSpecs:rt,validatedFilesSpec:Yt,validatedIncludeSpecs:pt,validatedExcludeSpecs:je,validatedFilesSpecBeforeSubstitution:Mt,validatedIncludeSpecsBeforeSubstitution:qt,validatedExcludeSpecsBeforeSubstitution:fe,pathPatterns:void 0,isDefaultIncludeSpec:be}}function se(_e){let G=_k(M,_e,T,r,_);return aE(G,cE(b),d)&&h.push(lE(M,u)),G}function ye(_e){let G,ke=ie("references",re=>typeof re=="object","object");return G}function he(_e){return Gr(_e)?_e:void 0}function oe(_e){return ie(_e,Li,"string")}function ie(_e,G,ke){if(Go(b,_e)&&!b0(b[_e]))if(Gr(b[_e])){let re=b[_e];return!n&&!Ti(re,G)&&h.push(ac(P.Compiler_option_0_requires_a_value_of_type_1,_e,ke)),re}else return Y(P.Compiler_option_0_requires_a_value_of_type_1,_e,"Array"),"not-array";return"no-prop"}function Y(_e,...G){n||h.push(ac(_e,...G))}}function aee(e,n,r){if(!e)return e;let s;for(let l of n)if(e[l.name]!==void 0){let u=e[l.name];switch(l.type){case"string":w.assert(l.isFilePath),K8(u)&&a(l,AR(u,r));break;case"list":w.assert(l.element.isFilePath);let d=w_(u,r);d&&a(l,d);break;case"object":w.assert(l.name==="paths");let _=cee(u,r);_&&a(l,_);break;default:w.fail("option type not supported")}}return s||e;function a(l,u){(s??(s=yy({},e)))[l.name]=u}}function NR({validatedIncludeSpecs:e,validatedExcludeSpecs:n},r,s){let a=Oh(n,r,"exclude"),l=a&&new RegExp(a,s?"":"i"),u={},d=new Map;if(e!==void 0){let _=[];for(let y of e){let h=di(ii(r,y));if(l&&l.test(h))continue;let v=lee(h,s);if(v){let{key:b,path:T,flags:E}=v,g=d.get(b),M=g!==void 0?u[g]:void 0;(M===void 0||M<E)&&(u[g!==void 0?g:T]=E,g===void 0&&d.set(b,T),E===1&&_.push(b))}}for(let y in u)if(Go(u,y))for(let h of _){let v=GP(y,s);v!==h&&ug(h,v,r,!s)&&delete u[y]}}return u}var X8="**/*";function Qb(e,n,r,s,a){return e.filter(l=>{if(!Li(l))return!1;let u=uee(l,r);return u!==void 0&&console.warn("implement diagnostic - ",u),u===void 0})}function cee(e,n){let r;return qx(e).forEach(a=>{if(!Gr(e[a]))return;let l=w_(e[a],n);l&&((r??(r=yy({},e)))[a]=l)}),r}function w_(e,n){if(!e)return e;let r;return e.forEach((s,a)=>{K8(s)&&((r??(r=e.slice()))[a]=AR(s,n))}),r}function b0(e){return e==null}function GP(e,n){return n?e:eg(e)}function lee(e,n){let r=fee.exec(e);if(r){let s=e.indexOf("?"),a=e.indexOf("*"),l=e.lastIndexOf(As);return{key:GP(r[0],n),path:r[0],flags:s!==-1&&s<l||a!==-1&&a<l?1:0}}if(n8(e.substring(e.lastIndexOf(As)+1))){let s=J_(e);return{key:GP(s,n),path:s,flags:1}}}function uee(e,n){if(w.assert(typeof e=="string"),n&&pee.test(e))return[P.File_specification_cannot_end_in_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0,e];if(OR(e))return[P.File_specification_cannot_contain_a_parent_directory_that_appears_after_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0,e]}var IR="${configDir}";function K8(e){return Li(e)&&no(e,IR,!0)}function AR(e,n){return Wi(e.replace(IR,"./"),n)}var fee=/^[^*?]*(?=\/[^/]*[*?])/,pee=/(^|\/)\*\*\/?$/;function OR(e){let n=no(e,"**/")?0:e.indexOf("/**/");return n===-1?!1:(Ec(e,"/..")?e.length:e.lastIndexOf("/../"))>n}function LR(e,n,r,s,a){let l=Oh(n,ii(di(s),a),"exclude"),u=l&&Gm(l,r);return u?u.test(e)?!0:!P0(e)&&u.test(of(e)):!1}function FR(e,n,r,s,a){let{validatedFilesSpec:l,validatedIncludeSpecs:u,validatedExcludeSpecs:d}=n;if(!Pr(u)||!Pr(d))return!1;r=di(r);let _=ca(s);if(l){for(let y of l)if(_(Wi(y,r))===e)return!1}return LR(e,d,s,a,r)}function RR(e,n,r,s){return LR(e,Yr(n,a=>!OR(a)),r,s)}function MR(e,n){return Yb(e,e.statements[0]?.expression,n,!0,void 0)}function Yb(e,n,r,s,a){if(!n)return s?{}:void 0;return d(n,a?.rootOptions);function l(y,h){let v=s?{}:void 0;for(let b of y.properties){if(b.kind!==174){r.push(Gc(e,b,P.Property_assignment_expected));continue}_(b.name)||r.push(Gc(e,b.name,P.String_literal_with_double_quotes_expected));let T=y8(b.name)?void 0:E8(b.name),E=T&&T,g=E?h?.elementOptions?.get(E):void 0,M=d(b.initializer,g);typeof E<"u"&&(s&&(v[E]=M),a?.onPropertySet(E,M,b,h,g))}return v}function u(y,h){if(!s){y.forEach(v=>d(v,h));return}return Yr(y.map(v=>d(v,h)),v=>v!==void 0)}function d(y,h){switch(y.kind){case 136:return!0;case 135:return!1;case 137:return null;case 16:return _(y)||r.push(Gc(e,y,P.String_literal_with_double_quotes_expected)),y.text;case 10:return Number(y.text);case 298:if(y.operator!==42||y.operand.kind!==10)break;return-Number(y.operand.text);case 293:return l(y,h);case 290:return u(y.elements,h&&h.element)}h?r.push(Gc(e,y,P.Compiler_option_0_requires_a_value_of_type_1,h.name,eE(h))):r.push(Gc(e,y,P.Property_value_can_only_be_string_literal_numeric_literal_true_false_null_object_literal_or_array_literal))}function _(y){return ss(y)&&f8(y,e)}}function eE(e){return e.type==="listOrElement"?`${eE(e.element)} or Array`:e.type==="list"?"Array":Li(e.type)?e.type:"string"}var SA;function dee(){return SA||(SA=tE(zR))}var _ee={diagnostic:P.Compiler_option_0_may_only_be_used_with_build,getOptionsNameMap:dee};function tE(e){let n=new Map,r=new Map;return Jt(e,s=>{n.set(s.name.toLowerCase(),s),s.shortName&&r.set(s.shortName,s.name)}),{optionsNameMap:n,shortOptionNames:r}}function jR(e){return e&&wc(e)==="jsconfig.json"?{maxNodeModuleJsDepth:2}:{}}function BR(e){return rL(e,WR)}function WR(e){return e.name}var nE=[{name:"help",shortName:"h",type:"boolean",showInSimplifiedHelpView:!0,isCommandLineOnly:!0,category:P.Command_line_Options,description:P.Print_this_message,defaultValueDescription:!1},{name:"help",shortName:"?",type:"boolean",isCommandLineOnly:!0,category:P.Command_line_Options,defaultValueDescription:!1},{name:"watch",shortName:"w",type:"boolean",showInSimplifiedHelpView:!0,isCommandLineOnly:!0,category:P.Command_line_Options,description:P.Watch_input_files,defaultValueDescription:!1},{name:"preserveWatchOutput",type:"boolean",showInSimplifiedHelpView:!1,category:P.Output_Formatting,description:P.Disable_wiping_the_console_in_watch_mode,defaultValueDescription:!1},{name:"listFiles",type:"boolean",category:P.Compiler_Diagnostics,description:P.Print_all_of_the_files_read_during_the_compilation,defaultValueDescription:!1},{name:"explainFiles",type:"boolean",category:P.Compiler_Diagnostics,description:P.Print_files_read_during_the_compilation_including_why_it_was_included,defaultValueDescription:!1},{name:"listEmittedFiles",type:"boolean",category:P.Compiler_Diagnostics,description:P.Print_the_names_of_emitted_files_after_a_compilation,defaultValueDescription:!1},{name:"pretty",type:"boolean",showInSimplifiedHelpView:!0,category:P.Output_Formatting,description:P.Enable_color_and_formatting_in_TypeScript_s_output_to_make_compiler_errors_easier_to_read,defaultValueDescription:!0},{name:"traceResolution",type:"boolean",category:P.Compiler_Diagnostics,description:P.Log_paths_used_during_the_moduleResolution_process,defaultValueDescription:!1},{name:"diagnostics",type:"boolean",category:P.Compiler_Diagnostics,description:P.Output_compiler_performance_information_after_building,defaultValueDescription:!1},{name:"extendedDiagnostics",type:"boolean",category:P.Compiler_Diagnostics,description:P.Output_more_detailed_compiler_performance_information_after_building,defaultValueDescription:!1},{name:"generateCpuProfile",type:"string",isFilePath:!0,paramType:P.FILE_OR_DIRECTORY,category:P.Compiler_Diagnostics,description:P.Emit_a_v8_CPU_profile_of_the_compiler_run_for_debugging,defaultValueDescription:"profile.cpuprofile"},{name:"generateTrace",type:"string",isFilePath:!0,isCommandLineOnly:!0,paramType:P.DIRECTORY,category:P.Compiler_Diagnostics,description:P.Generates_an_event_trace_and_a_list_of_types},{name:"incremental",shortName:"i",type:"boolean",category:P.Projects,description:P.Save_tsbuildinfo_files_to_allow_for_incremental_compilation_of_projects,transpileOptionValue:void 0,defaultValueDescription:P.false_unless_composite_is_set},{name:"sourceMap",type:"boolean",affectsBuildInfo:!0,showInSimplifiedHelpView:!0,category:P.Emit,defaultValueDescription:!1,description:P.Create_source_map_files_for_emitted_JavaScript_files},{name:"assumeChangesOnlyAffectDirectDependencies",type:"boolean",affectsSemanticDiagnostics:!0,affectsEmit:!0,affectsBuildInfo:!0,category:P.Watch_and_Build_Modes,description:P.Have_recompiles_in_projects_that_use_incremental_and_watch_mode_assume_that_changes_within_a_file_will_only_affect_files_directly_depending_on_it,defaultValueDescription:!1},{name:"locale",type:"string",category:P.Command_line_Options,isCommandLineOnly:!0,description:P.Set_the_language_of_the_messaging_from_TypeScript_This_does_not_affect_emit,defaultValueDescription:P.Platform_specific}],UR=[{name:"rootDir",type:"string",affectsEmit:!0,affectsBuildInfo:!0,affectsDeclarationPath:!0,isFilePath:!0,paramType:P.LOCATION,category:P.Command_line_Options,description:P.Specify_the_root_folder_within_your_source_files,defaultValueDescription:P.Computed_from_the_list_of_input_files},{name:"strictObjectTypes",type:"boolean",affectsSemanticDiagnostics:!0,affectsBuildInfo:!0,strictFlag:!0,category:P.Type_Checking,description:P.When_comparing_types_check_that_the_objectStructure_is_compatible_with_the_target_type,defaultValueDescription:P.false_unless_strict_is_set},{name:"noLib",type:"boolean",category:P.Language_and_Environment,affectsProgramStructure:!0,description:P.Disable_including_any_library_files_including_the_default_efun_h,transpileOptionValue:!0,defaultValueDescription:!1}],gd=[...nE,...UR],rE=[],JR=[{name:"verbose",shortName:"v",category:P.Command_line_Options,description:P.Enable_verbose_logging,type:"boolean",defaultValueDescription:!1}],zR=[...nE,...JR],iE=gd.filter(e=>!!e.affectsModuleResolution),bA;function VR(){return bA||(bA=BR(gd))}var qR=gd.filter(e=>!!e.affectsSourceFile||!!e.affectsBindDiagnostics);function mee(e,n,r,s,a,l){if(n){for(let u in n){let d=e.get(u);d?(s||(s={}))[d.name]=fd(d,n[u],r,l):l.push(ZR(u,a))}return s}}function gee(e,n,r,s,a){Go(e,"excludes")&&a.push(ac(P.Unknown_option_excludes_Did_you_mean_exclude));let l=Tee(e.compilerOptions,r,a,s),u=yee(e.typeAcquisition,r,a,s),d=vee(e.watchOptions,r,a);e.compileOnSave=hee(e,r,a);let _=e.extends||e.extends===""?$R(e.extends,n,r,s,a):void 0;return{raw:e,options:l,watchOptions:d,typeAcquisition:u,extendedConfigPath:_}}function kA(e,n,r,s,a,l){if(e=cc(e),sc(e)||no(e,"./")||no(e,"../")){let u=Wi(e,r);if(!n.fileExists(u)&&!Ec(u,".json")&&(u=`${u}.json`,!n.fileExists(u))){s.push(Mu(l,a,P.File_0_not_found,e));return}return u}e===""?s.push(Mu(l,a,P.Compiler_option_0_cannot_be_given_an_empty_string,"extends")):s.push(Mu(l,a,P.File_0_not_found,e))}function $R(e,n,r,s,a,l,u,d){let _,y=s?Y8(s,r):r;if(Li(e))_=kA(e,n,y,a,u,d);else if(Gr(e)){_=[];for(let h=0;h<e.length;h++){let v=e[h];Li(v)?_=ei(_,kA(v,n,y,a,u?.elements[h],d)):fd(Gy.element,e,r,a,l,u?.elements[h],d)}}else fd(Gy,e,r,a,l,u,d);return _}function hee(e,n,r){if(!Go(e,Gb.name))return!1;let s=fd(Gb,e.compileOnSave,n,r);return typeof s=="boolean"&&s}function yee(e,n,r,s){console.debug("todo - convertTypeAcquisitionFromJsonWorker")}function vee(e,n,r){console.debug("todo - convertWatchOptionsFromJsonWorker")}function HR(e,n,r,s,a,l,u,d){s=cc(s);let _=Wi(a||"",s);if(l.includes(_))return u.push(ac(P.Circularity_detected_while_resolving_configuration_Colon_0,[...l,_].join(" -> "))),{raw:e||MR(n,u)};let y=e?gee(e,r,s,a,u):Pee(n,r,s,a,u);if(y.options?.paths&&(y.options.pathsBasePath=s),y.extendedConfigPath){l=l.concat([_]);let v={options:{}};Li(y.extendedConfigPath)?h(v,y.extendedConfigPath):y.extendedConfigPath.forEach(b=>h(v,b)),v.include&&(y.raw.include=v.include),v.exclude&&(y.raw.exclude=v.exclude),v.files&&(y.raw.files=v.files),y.raw.compileOnSave===void 0&&v.compileOnSave&&(y.raw.compileOnSave=v.compileOnSave),n&&v.extendedSourceFiles&&(n.extendedSourceFiles=as(v.extendedSourceFiles.keys())),y.options=yy(v.options,y.options),y.watchOptions=y.watchOptions&&v.watchOptions?yy(v.watchOptions,y.watchOptions):y.watchOptions||v.watchOptions}return y;function h(v,b){console.debug("todo - applyExtendedConfig")}}var CA;function GR(){return CA||(CA=tE(gd))}var sE={alternateMode:_ee,getOptionsNameMap:GR,optionDeclarations:gd,unknownOptionDiagnostic:P.Unknown_compiler_option_0,unknownDidYouMeanDiagnostic:P.Unknown_compiler_option_0_Did_you_mean_1,optionTypeMismatchDiagnostic:P.Compiler_option_0_expects_an_argument};function Tee(e,n,r,s){let a=jR(s);return mee(VR(),e,n,a,sE,r),s&&(a.configFilePath=cc(s)),a}function Mu(e,n,r,...s){return e&&n?Gc(e,n,r,...s):ac(r,...s)}function QR(e,n){if(e){if(b0(n))return!e.disallowNullOrUndefined;if(e.type==="list")return Gr(n);if(e.type==="listOrElement")return Gr(n)||QR(e.element,n);let r=Li(e.type)?e.type:"string";return typeof n===r}return!1}function PA(e,n,r,s,a,l,u){return Yr(Xt(n,(d,_)=>fd(e.element,d,r,s,a,l?.elements[_],u)),d=>e.listPreserveFalsyValues?!0:!!d)}function See(e,n,r,s,a){if(b0(n))return;let l=n.toLowerCase(),u=e.type.get(l);if(u!==void 0)return YR(e,u,r,s,a);r.push(bee(e,(d,..._)=>Mu(a,s,d,..._)))}function bee(e,n){let r=as(e.type.keys()),s=(e.deprecatedKeys?r.filter(a=>!e.deprecatedKeys.has(a)):r).map(a=>`'${a}'`).join(", ");return n(P.Argument_for_0_option_must_be_Colon_1,`--${e.name}`,s)}function fd(e,n,r,s,a,l,u){if(e.isCommandLineOnly){s.push(Mu(u,a?.name,P.Option_0_can_only_be_specified_on_command_line,e.name));return}if(QR(e,n)){let d=e.type;if(d==="list"&&Gr(n))return PA(e,n,r,s,a,l,u);if(d==="listOrElement")return Gr(n)?PA(e,n,r,s,a,l,u):fd(e.element,n,r,s,a,l,u);if(!Li(e.type))return See(e,n,s,l,u);let _=YR(e,n,s,l,u);return b0(_)?_:kee(e,r,_)}else s.push(Mu(u,l,P.Compiler_option_0_requires_a_value_of_type_1,e.name,eE(e)))}function kee(e,n,r){return e.isFilePath&&(r=cc(r),r=K8(r)?r:Wi(r,n),r===""&&(r=".")),r}function YR(e,n,r,s,a){if(b0(n))return;let l=e.extraValidation?.(n);if(!l)return n;r.push(Mu(a,s,...l))}function oE(e,n){n&&Object.defineProperty(e,"configFile",{enumerable:!1,writable:!1,value:n})}function ZR(e,n,r,s,a){if(n.alternateMode?.getOptionsNameMap().optionsNameMap.has(e.toLowerCase()))return Mu(a,s,n.alternateMode.diagnostic,e);let l=Uh(e,n.optionDeclarations,WR);return l?Mu(a,s,n.unknownDidYouMeanDiagnostic,r||e,l.name):Mu(a,s,n.unknownOptionDiagnostic,r||e)}var XR={name:"compilerOptions",type:"object",elementOptions:VR(),extraKeyDiagnostics:sE},J4;function Cee(){return J4===void 0&&(J4={name:void 0,type:"object",elementOptions:BR([XR,Gy,{name:"references",type:"list",element:{name:"references",type:"object"},category:P.Projects},{name:"files",type:"list",element:{name:"files",type:"string"},category:P.File_Management},{name:"include",type:"list",element:{name:"include",type:"string"},category:P.File_Management,defaultValueDescription:P.if_files_is_specified_otherwise_Asterisk_Asterisk_Slash_Asterisk},{name:"exclude",type:"list",element:{name:"exclude",type:"string"},category:P.File_Management,defaultValueDescription:P.node_modules_bower_components_jspm_packages_plus_the_value_of_outDir_if_one_is_specified},Gb])}),J4}function Pee(e,n,r,s,a){let l=jR(s),u,d,_,y,h=Cee(),v=xee(e,a,{rootOptions:h,onPropertySet:b});return u||(u=Z8(s)),y&&v&&v.compilerOptions===void 0&&a.push(Gc(e,y[0],P._0_should_be_set_inside_the_compilerOptions_object_of_the_config_json_file,E8(y[0]))),{raw:v,options:l,watchOptions:d,typeAcquisition:u,extendedConfigPath:_};function b(T,E,g,M,N){if(N&&N!==Gy&&(E=fd(N,E,r,a,g,g.initializer,e)),M?.name)if(N){let z;M===XR?z=l:w.fail("Unknown option"),z[N.name]=E}else T&&M?.extraKeyDiagnostics&&(M.elementOptions?a.push(ZR(T,M.extraKeyDiagnostics,void 0,g.name,e)):a.push(Gc(e,g.name,M.extraKeyDiagnostics.unknownOptionDiagnostic,T)));else M===h&&(N===Gy?_=$R(E,n,r,s,a,g,g.initializer,e):N||(T==="excludes"&&a.push(Gc(e,g.name,P.Unknown_option_excludes_Did_you_mean_exclude)),Zr(UR,z=>z.name===T)&&(y=ei(y,g.name))))}}function xee(e,n,r){let s=e.statements[0]?.expression;if(s&&s.kind!==293){if(n.push(Gc(e,s,P.The_root_value_of_a_0_file_must_be_an_object,wc(e.fileName)==="jsconfig.json"?"jsconfig.json":"tsconfig.json")),qv(s)){let a=Zr(s.elements,Qa);if(a)return Yb(e,a,n,!0,r)}return{}}return Yb(e,s,n,!0,r)}function aE(e,n,r){return e.length===0&&n&&(!r||r.length===0)}function cE(e){return!Go(e,"files")&&!Go(e,"references")}function lE({includeSpecs:e,excludeSpecs:n},r){return ac(P.No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2,r||"lpc-config.json",JSON.stringify(e||[]),JSON.stringify(n||[]))}function uE(e,n,r,s,a,l,u,d,_){Dt?.push(Dt.Phase.Parse,"parseJsonSourceFileConfigFileContent",{path:e.fileName});let y=Dee(void 0,e,n,r,s,_,a,l,u,d);return Dt?.pop(),y}function Dee(e,n,r,s,a={},l,u,d=[],_=[],y){w.assert(e===void 0&&n!==void 0||e!==void 0&&n===void 0);let h=[],v=HR(e,n,r,s,u,d,h,y),{raw:b}=v,T=a,E=l;T.configFilePath=u&&cc(u);let g=di(u?Y8(u,s):s),M=N();return n&&(n.configFileSpecs=M),oE(T,n),{options:T,watchOptions:E,fileNames:z(g),projectReferences:X(g),typeAcquisition:v.typeAcquisition||Z8(),raw:b,errors:h,wildcardDirectories:NR(M,g,r.useCaseSensitiveFileNames),compileOnSave:!!b.compileOnSave};function N(){let se=le("references",qt=>typeof qt=="object","object"),ye=j(Z("files"));if(ye){let qt=se==="no-prop"||Gr(se)&&se.length===0,fe=Go(b,"extends");if(ye.length===0&&qt&&!fe)if(n){let pt=u||"tsconfig.json",je=P.The_files_list_in_config_file_0_is_empty,Mt=Bv(n,"files",Bt=>Bt.initializer),Yt=Mu(n,Mt,je,pt);h.push(Yt)}else de(P.The_files_list_in_config_file_0_is_empty,u||"tsconfig.json")}let he=j(Z("include")),oe=Z("exclude"),ie=!1,Y=j(oe);if(oe==="no-prop"){let qt=T.outDir,fe=T.declarationDir;(qt||fe)&&(Y=Yr([qt,fe],pt=>!!pt))}ye===void 0&&he===void 0&&(he=[X8],ie=!0);let _e,G,ke,re;he&&(_e=Qb(he,h,!0,n,"include"),ke=w_(_e,g)||_e),Y&&(G=Qb(Y,h,!1,n,"exclude"),re=w_(G,g)||G);let be=Yr(ye,Li),rt=w_(be,g)||be;return{filesSpecs:ye,includeSpecs:he,excludeSpecs:Y,validatedFilesSpec:rt,validatedIncludeSpecs:ke,validatedExcludeSpecs:re,validatedFilesSpecBeforeSubstitution:be,validatedIncludeSpecsBeforeSubstitution:_e,validatedExcludeSpecsBeforeSubstitution:G,pathPatterns:void 0,isDefaultIncludeSpec:ie}}function z(se){let ye=_k(M,se,T,r,_);return aE(ye,cE(b),d)&&h.push(lE(M,u)),ye}function X(se){let ye,he=le("references",oe=>typeof oe=="object","object");if(Gr(he))for(let oe of he)typeof oe.path!="string"?de(P.Compiler_option_0_requires_a_value_of_type_1,"reference.path","string"):(ye||(ye=[])).push({path:Wi(oe.path,se),originalPath:oe.path,prepend:oe.prepend,circular:oe.circular});return ye}function j(se){return Gr(se)?se:void 0}function Z(se){return le(se,Li,"string")}function le(se,ye,he){if(Go(b,se)&&!b0(b[se]))if(Gr(b[se])){let oe=b[se];return!n&&!Ti(oe,ye)&&h.push(ac(P.Compiler_option_0_requires_a_value_of_type_1,se,he)),oe}else return de(P.Compiler_option_0_requires_a_value_of_type_1,se,"Array"),"not-array";return"no-prop"}function de(se,...ye){n||h.push(ac(se,...ye))}}var KR=gd.filter(e=>e.allowConfigDirTemplateSubstitution||!e.isCommandLineOnly&&e.isFilePath),eM=gd.filter(e=>!!e.affectsProgramStructure),tM=[{name:"enable",type:"boolean",defaultValueDescription:!1},{name:"include",type:"list",element:{name:"include",type:"string"}},{name:"exclude",type:"list",element:{name:"exclude",type:"string"}},{name:"disableFilenameBasedTypeAcquisition",type:"boolean",defaultValueDescription:!1}];function Eee(e){return e.code===P.No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2.code}function nM(e,n,r,s,a){let l=s.length;return aE(e,a)?s.push(lE(r,n)):Hx(s,u=>!Eee(u)),l!==s.length}function wee(e,...n){return aa(ac(e,...n).messageText,Li)}function Nee(e,n,r,s,a,l){let u=G8(e,y=>r.readFile(y));if(!Li(u)){r.onUnRecoverableConfigFileDiagnostic(u);return}let d=dk(e,u),_=r.getCurrentDirectory();return d.path=Ra(e,_,ca(r.useCaseSensitiveFileNames)),d.resolvedPath=d.path,d.originalFileName=d.fileName,uE(d,r,Wi(li(e),_),n,Wi(e,_),void 0,l,s,a)}function td(e,n){return!!e.traceResolution&&n.trace!==void 0}function eo(e,n,...r){e.trace(jD(n,...r))}function Qy(e,n){return n===void 0?e:`${n}|${e}`}function Yy(){let e=new Map,n=new Map,r={get(a,l){return e.get(s(a,l))},set(a,l,u){return e.set(s(a,l),u),r},delete(a,l){return e.delete(s(a,l)),r},has(a,l){return e.has(s(a,l))},forEach(a){return e.forEach((l,u)=>{let[d,_]=n.get(u);return a(l,d,_)})},size(){return e.size}};return r;function s(a,l){let u=Qy(a,l);return n.set(u,[a,l]),u}}function Iee(e){return e.resolvedModule&&(e.resolvedModule.originalPath||e.resolvedModule.resolvedFileName)}function fE(e,n,r,s,a){let l=Aee(e,n,r,s,Iee,a);return l.getOrCreateCacheForModuleName=(u,d,_)=>l.getOrCreateCacheForNonRelativeName(u,d,_),l}function Aee(e,n,r,s,a,l){l??(l=new Map);let u=Lee(e,n,r,l),d=Oee(e,n,r,a,l);return{...s,...u,...d,clear:_,update:h,getPackageJsonInfoCache:()=>s,clearAllExceptPackageJsonInfoCache:y,optionsToRedirectsKey:l};function _(){y()}function y(){u.clear(),d.clear()}function h(v){u.update(v),d.update(v)}}function pE(e,n){let r=new Map,s=new Map,a=new Map;return e&&r.set(e,a),{getMapOfCacheRedirects:l,getOrCreateMapOfCacheRedirects:u,update:d,clear:y,getOwnMap:()=>a};function l(v){return v?_(v.commandLine.options,!1):a}function u(v){return v?_(v.commandLine.options,!0):a}function d(v){e!==v&&(e?a=_(v,!0):r.set(v,a),e=v)}function _(v,b){let T=r.get(v);if(T)return T;let E=h(v);if(T=s.get(E),!T){if(e){let g=h(e);g===E?T=a:s.has(g)||s.set(g,a)}b&&(T??(T=new Map)),T&&s.set(E,T)}return T&&r.set(v,T),T}function y(){let v=e&&n.get(e);a.clear(),r.clear(),n.clear(),s.clear(),e&&(v&&n.set(e,v),r.set(e,a))}function h(v){let b=n.get(v);return b||n.set(v,b=rM(v,iE)),b}}function QP(e){if(e===null||typeof e!="object")return""+e;if(Gr(e))return`[${e.map(r=>QP(r))?.join(",")}]`;let n="{";for(let r in e)Go(e,r)&&(n+=`${r}: ${QP(e[r])}`);return n+"}"}function rM(e,n){return n.map(r=>QP(Wb(e,r))).join("|")+`|${e.configFilePath}`}function Oee(e,n,r,s,a){let l=pE(r,a);return{getFromNonRelativeNameCache:_,getOrCreateCacheForNonRelativeName:y,clear:u,update:d};function u(){l.clear()}function d(v){l.update(v)}function _(v,b,T,E){return l.getMapOfCacheRedirects(E)?.get(Qy(v,b))?.get(T)}function y(v,b,T){return cM(l,T,Qy(v,b),h)}function h(){let v=new Map;return{get:b,set:T};function b(g){return v.get(Ra(g,e,n))}function T(g,M){let N=Ra(g,e,n);if(v.has(N))return;v.set(N,M);let z=s(M),X=z&&E(N,z),j=N;for(;j!==X;){let Z=li(j);if(Z===j||v.has(Z))break;v.set(Z,M),j=Z}}function E(g,M){let N=Ra(li(M),e,n),z=0,X=Math.min(g.length,N.length);for(;z<X&&g.charCodeAt(z)===N.charCodeAt(z);)z++;if(z===g.length&&(N.length===z||N[z]===As))return g;let j=fu(g);if(z<j)return;let Z=g.lastIndexOf(As,z-1);if(Z!==-1)return g.substr(0,Math.max(Z,j))}}}function Lee(e,n,r,s){let a=pE(r,s);return{getFromDirectoryCache:_,getOrCreateCacheForDirectory:d,clear:l,update:u,directoryToModuleNameMap:a};function l(){a.clear()}function u(y){a.update(y)}function d(y,h){let v=Ra(y,e,n);return cM(a,h,v,()=>Yy())}function _(y,h,v,b){let T=Ra(v,e,n);return a.getMapOfCacheRedirects(b)?.get(T)?.get(y,h)}}function dE(e,n,r,s,a,l,u){let d=td(r,s);l&&(r=l.commandLine.options),d&&(eo(s,P.Resolving_module_0_from_1,e,n),l&&eo(s,P.Using_compiler_options_of_project_reference_redirect_0,l.sourceFile.fileName));let _=li(n),y=a?.getFromDirectoryCache(e,u,_,l);if(y)d&&eo(s,P.Resolution_for_module_0_was_found_in_cache_from_location_1,e,_);else{let h=1;switch(h===void 0||d&&eo(s,P.Explicitly_specified_module_resolution_kind_Colon_0,fD[h]),h_?.logStartResolveModule(e),h){case 1:y=aM(e,n,r,s,a,l);break;default:return w.fail(`Unexpected moduleResolution: ${h}`)}y&&y.resolvedModule&&h_?.logInfoEvent(`Module "${e}" resolved to "${y.resolvedModule.resolvedFileName}"`),h_?.logStopResolveModule(y&&y.resolvedModule?""+y.resolvedModule.resolvedFileName:"null"),a&&!a.isReadonly&&(a.getOrCreateCacheForDirectory(_,l).set(e,u,y),df(e)||a.getOrCreateCacheForNonRelativeName(e,u,l).set(_,y))}return d&&(y.resolvedModule?y.resolvedModule.packageId?eo(s,P.Module_name_0_was_successfully_resolved_to_1_with_Package_ID_2,e,y.resolvedModule.resolvedFileName,Xh(y.resolvedModule.packageId)):eo(s,P.Module_name_0_was_successfully_resolved_to_1,e,y.resolvedModule.resolvedFileName):eo(s,P.Module_name_0_was_not_resolved,e)),y}var iM=(e=>(e[e.None=0]="None",e[e.Imports=2]="Imports",e[e.SelfName=4]="SelfName",e[e.Exports=8]="Exports",e[e.ExportsPatternTrailers=16]="ExportsPatternTrailers",e[e.AllFeatures=30]="AllFeatures",e[e.Node16Default=30]="Node16Default",e[e.NodeNextDefault=30]="NodeNextDefault",e[e.BundlerDefault=30]="BundlerDefault",e[e.EsmMode=32]="EsmMode",e))(iM||{}),sM="/node_modules/";function oM(e){return e.includes(sM)}function aM(e,n,r,s,a,l){let u=td(r,s),d=[],_=[],y=li(n),h=[],v={compilerOptions:r,host:s,traceEnabled:u,failedLookupLocations:d,affectingLocations:_,packageJsonInfoCache:a,features:0,conditions:[],requestContainingDirectory:y,reportDiagnostic:E=>void h.push(E),isConfigLookup:!1,candidateIsFromPackageJsonField:!1,resolvedPackageDirectory:!1},b=T(5);return Fee(e,b&&b.value,b?.value&&oM(b.value.path),d,_,h,v,a);function T(E){let g=Bee(E,e,y,RS,v);if(g)return{value:g};if(sc(e)){let M=v.compilerOptions.rootDir,N=di(ii(M,"."+e));return e.indexOf(".")===-1&&(N+=".c"),ab(RS(E,N,!1,v))}if(df(e)){let M=di(ii(y,e));return ab(RS(E,M,!1,v))}else{let M=Ek(y,N=>{let z=uM(a,e,void 0,N,l,v);if(z)return z;let X=di(ii(N,e));return ab(RS(E,X,!1,v))});if(M)return M;if(E&5){let N=Hee(e,y,v);return E&4&&(N??(N=void 0)),N}}}}function cM(e,n,r,s){let a=e.getOrCreateMapOfCacheRedirects(n),l=a.get(r);return l||(l=s(),a.set(r,l)),l}function xA(e){let n=[];return e&1&&n.push("LPC"),e&2&&n.push("JavaScript"),e&4&&n.push("Declaration"),e&8&&n.push("JSON"),n.join(", ")}function Fee(e,n,r,s,a,l,u,d,_){if(!u.resultFromCache&&!u.compilerOptions.preserveSymlinks&&n&&r&&!n.originalPath&&!df(e)){let{resolvedFileName:y,originalPath:h}=jee(n.path,u.host,u.traceEnabled);h&&(n={...n,path:y,originalPath:h})}return lM(n,r,s,a,l,u.resultFromCache,d,_)}function lM(e,n,r,s,a,l,u,d){return l?u?.isReadonly?{...l,failedLookupLocations:z4(l.failedLookupLocations,r),affectingLocations:z4(l.affectingLocations,s),resolutionDiagnostics:z4(l.resolutionDiagnostics,a)}:(l.failedLookupLocations=Zm(l.failedLookupLocations,r),l.affectingLocations=Zm(l.affectingLocations,s),l.resolutionDiagnostics=Zm(l.resolutionDiagnostics,a),l):{resolvedModule:e&&{resolvedFileName:e.path,originalPath:e.originalPath===!0?void 0:e.originalPath,extension:e.extension,isExternalLibraryImport:n,packageId:e.packageId,resolvedUsingTsExtension:!!e.resolvedUsingTsExtension},failedLookupLocations:ob(r),affectingLocations:ob(s),resolutionDiagnostics:ob(a),alternateResult:d}}function ob(e){return e.length?e:void 0}function Zm(e,n){return n?.length?e?.length?(e.push(...n),e):n:e}function z4(e,n){return e?.length?n.length?[...e,...n]:e.slice():ob(n)}function Ree(e,n,r){if(!n.realpath)return e;let s=di(n.realpath(e));return r&&eo(n,P.Resolving_real_path_for_0_result_1,e,s),s}function Mee(e,n,r){let s=typeof r.useCaseSensitiveFileNames=="function"?r.useCaseSensitiveFileNames():r.useCaseSensitiveFileNames;return Pk(e,n,!s)===0}function jee(e,n,r){let s=Ree(e,n,r),a=Mee(e,s,n);return{resolvedFileName:a?e:s,originalPath:a?void 0:e}}function ab(e){return e!==void 0?{value:e}:void 0}function Bee(e,n,r,s,a){return Wee(e,n,r,s,a)}function Wee(e,n,r,s,a){if(!a.compilerOptions.rootDir)return;a.traceEnabled&&eo(a.host,P.rootDirs_option_is_set_using_it_to_resolve_relative_module_name_0,n);let l=di(ii(r,n)),u,d;for(let _ of a.compilerOptions.rootDirs){let y=di(_);Ec(y,As)||(y+=As);let h=no(l,y)&&(d===void 0||d.length<y.length);a.traceEnabled&&eo(a.host,P.Checking_if_0_is_the_longest_matching_prefix_for_1_2,y,l,h),h&&(d=y,u=_)}if(d){a.traceEnabled&&eo(a.host,P.Longest_matching_prefix_for_0_is_1,l,d);let _=l.substr(d.length);a.traceEnabled&&eo(a.host,P.Loading_0_from_the_root_dir_1_candidate_location_2,_,d,l);let y=s(e,l,!Ay(r,a.host),a);if(y)return y;a.traceEnabled&&eo(a.host,P.Trying_other_entries_in_rootDirs);for(let h of a.compilerOptions.rootDir){if(h===u)continue;let v=ii(di(h),_);a.traceEnabled&&eo(a.host,P.Loading_0_from_the_root_dir_1_candidate_location_2,_,h,v);let b=li(v),T=s(e,v,!Ay(b,a.host),a);if(T)return T}a.traceEnabled&&eo(a.host,P.Module_resolution_using_rootDirs_has_failed)}}function uM(e,n,r,s,a,l){let u=e&&e.getFromNonRelativeNameCache(n,r,s,a);if(u)return l.traceEnabled&&eo(l.host,P.Resolution_for_module_0_was_found_in_cache_from_location_1,n,s),l.resultFromCache=u,{value:u.resolvedModule&&{path:u.resolvedModule.resolvedFileName,originalPath:u.resolvedModule.originalPath||!0,extension:u.resolvedModule.extension,packageId:u.resolvedModule.packageId,resolvedUsingTsExtension:u.resolvedModule.resolvedUsingTsExtension}}}function Uee(e,n,r){let s;if(n&&e){let a=e.contents.packageJsonContent;typeof a.name=="string"&&typeof a.version=="string"&&(s={name:a.name,subModuleName:n.path.slice(e.packageDirectory.length+As.length),version:a.version,peerDependencies:void 0})}return n&&{path:n.path,extension:n.ext,packageId:s,resolvedUsingTsExtension:n.resolvedUsingTsExtension}}function Jee(e){return Uee(void 0,e,void 0)}function RS(e,n,r,s){return Jee(zee(e,n,r,s))}function zee(e,n,r,s){let a=Vee(e,n,r,s);if(a)return a;if(!(s.features&32)){let l=fM(n,e,"",r,s);if(l)return l}}function Vee(e,n,r,s){if(!wc(n).includes("."))return;let l=md(n);l===n&&(l=n.substring(0,n.lastIndexOf(".")));let u=n.substring(l.length);return s.traceEnabled&&eo(s.host,P.File_name_0_has_a_1_extension_stripping_it,n,u),fM(l,e,u,r,s)}function fM(e,n,r,s,a){if(!s){let u=li(e);u&&(s=!Ay(u,a.host))}switch(r){case".c":case".h":case".lpc":case"":return n&1&&l(".c",r===".c"||r===".h")||n&1&&l(".h",r===".c"||r===".h")||a.isConfigLookup&&l(".json")||void 0;default:return n&4&&!i0(e+r)&&l(`.d${r}.ts`)||void 0}function l(u,d){let _=qee(e+u,s,a);return _===void 0?void 0:{path:_,ext:u,resolvedUsingTsExtension:!a.candidateIsFromPackageJsonField&&d}}}function qee(e,n,r){return $ee(e,n,r)}function $ee(e,n,r){if(!n){if(r.host.fileExists(e))return r.traceEnabled&&eo(r.host,P.File_0_exists_use_it_as_a_name_resolution_result,e),e;r.traceEnabled&&eo(r.host,P.File_0_does_not_exist,e)}r.failedLookupLocations?.push(e)}function Hee(e,n,r){return Gee(4,e,n,r,!0,void 0,void 0)}function Gee(e,n,r,s,a,l,u){let _=e&5,y=e&-6;if(_){DA(s,P.Searching_all_ancestor_node_modules_directories_for_preferred_extensions_Colon_0,xA(_));let v=h(_);if(v)return v}if(y&&!a)return DA(s,P.Searching_all_ancestor_node_modules_directories_for_fallback_extensions_Colon_0,xA(y)),h(y);function h(v){return Ek(cc(r),b=>{if(wc(b)!=="node_modules"){let T=uM(l,n,void 0,b,u,s);return T||ab(void 0)}})}}function DA(e,n,...r){e.traceEnabled&&eo(e.host,n,...r)}function pM(e){let n=e.indexOf(As);return e[0]==="@"&&(n=e.indexOf(As,n+1)),n===-1?{packageName:e,rest:""}:{packageName:e.slice(0,n),rest:e.slice(n+1)}}function dM(e,n,r,s,a,l){let u=td(r,s);u&&eo(s,P.Auto_discovery_for_typings_is_enabled_in_project_0_Running_extra_resolution_pass_for_module_1_using_cache_location_2,n,e,a);let d=[],_=[],y=[],h={compilerOptions:r,host:s,traceEnabled:u,failedLookupLocations:d,affectingLocations:_,packageJsonInfoCache:l,features:0,conditions:[],requestContainingDirectory:void 0,reportDiagnostic:b=>void y.push(b),isConfigLookup:!1,candidateIsFromPackageJsonField:!1,resolvedPackageDirectory:!1},v=void 0;return lM(v,!0,d,_,y,h.resultFromCache,void 0)}function Ur(e){return e.kind===269}function Ii(e){return e.kind===286}function Tt(e){return e.kind===89}function YP(e){return e.kind===258}function lf(e){return e.kind===242}function Yc(e){return e.kind===169}function uu(e){return e.kind===236}function hs(e){return e.kind===272}function _E(e){return e.kind===252}function _M(e){return e.kind===273}function zv(e){return e.kind===178}function s0(e){return e.kind===179}function Cs(e){return e.kind===237}function mE(e){return e.kind===238}function c_(e){return e.kind===188}function Zc(e){return e.kind===270}function ff(e){return e.kind===11}function o0(e){return e.kind===13}function ss(e){return e.kind===16}function ru(e){return e.kind===148}function gs(e){return e.kind===149}function lp(e){return e.kind===161}function mk(e){return e.kind===157}function mM(e){return e.kind===159}function ti(e){return e.kind===176}function ip(e){return e.kind===202}function Ol(e){return e.kind===199}function gk(e){return e.kind===247}function Qee(e){return!1}function ZP(e){return e.kind===253}function hk(e){return e.kind===301}function Au(e){return e.kind===283}function yp(e){return e.kind===289}function yk(e){return e.kind===298}function Ll(e){return e.kind===224}function gM(e){return e.kind===241}function vp(e){return e.kind===175}function hM(e){return e.kind===210}function ms(e){return e.kind===266}function Cl(e){return e.kind===152}function XP(e){return e.kind===243}function Zy(e){return console.debug("todo - isSpreadAssignment"),!1}function dp(e){return e.kind===257}function Ha(e){return e.kind===281}function l_(e){return e.kind===261}function Xy(e){return e.kind===265}function yM(e){return e.kind===256}function Ia(e){return e.kind===147}function iu(e){return e.kind===146}function Tg(e){return e.kind===276}function vM(e){return e.kind===225}function Cc(e){return!1}function Qa(e){return e.kind===293}function vk(e){return e.kind===165}function Pc(e){return e.kind===220}function KP(e){return e.kind===228}function af(e){return e.kind===174}function sp(e){return e.kind===166}function ap(e){return e.kind===163}function jm(e){return!1}function Ky(e){return e.kind===170}function hd(e){return!1}function pd(e){return e.kind===225||e.kind===217||e.kind===219}function TM(e){return!1}function gE(e){return e.kind===249}function hE(e){return!1}function Kp(e){return e.kind===153}function Tp(e){return e.kind===92||e.kind===93}function SM(e){return!1}function ev(e){return e.kind===154}function bM(e){return e.kind===203}function kM(e){return e.kind===204}function Yee(e){return e.kind===205}function k0(e){return e.kind===158}function C0(e){return e.kind===218}function R_(e){return e.kind===201}function CM(e){return e.kind===200}function yE(e){return e.kind===299}function PM(e){return!1}function xM(e){return e.kind===240}function tv(e){return e.kind===232}function DM(e){return e.kind===113}function vE(e){return e.kind===294}function Tk(e){return e.kind===221}function Vv(e){return e.kind===223}function nv(e){return e.kind===239}function Bm(e){return e.kind===297}function Sk(e){return e.kind===274}function TE(e){return e.kind===230}function u_(e){return e.kind===167}function SE(e){return e.kind===222}function EM(e){return e.kind===229}function qv(e){return e.kind===290}function rv(e){return e.kind===234}function wM(e){return e.kind===208}function Zb(e){return e.kind===168}function ex(e){return e.kind===260}function NM(e){return e.kind===191}function IM(e){return e.kind===192}function tx(e){return e.kind===197}function Zee(e){return e.kind===195}function AM(e){return e.kind===280}function bE(e){return e.kind===196}function OM(e){return e.kind===227}function LM(e){return e.kind===151}function FM(e){return e.kind===254}function Xee(e){return e.kind===162}function RM(e){return e.kind===211}function MM(e){return!1}function jM(e){return e.kind===189}function BM(e){return e.kind===190}function WM(e){return!1}function Kee(e){return e.kind===263}function UM(e){return e.kind===155}function kE(e){return e.kind===287}function JM(e){return e.kind===255}var ete=tte();function zM(e,n){ci.mark("beforeBind"),ete(e,n),ci.mark("afterBind"),ci.measure("Bind","beforeBind","afterBind")}function Hc(e,n,r){return w.attachFlowNodeDebugInfo({flags:e,id:0,node:n,antecedent:r})}function tte(){var e,n,r,s,a,l,u,d,_,y,h,v,b,T,E,g,M,N,z,X,j,Z,le,de=!1,se=0,ye,he,oe=Hc(1,void 0,void 0),ie=Hc(1,void 0,void 0),Y=ar();return _e;function _e(O,pe){e=O,n=pe,he=new Set,se=0,ye=Ks.getSymbolConstructor(),w.attachFlowNodeDebugInfo(oe),w.attachFlowNodeDebugInfo(ie),e.locals||(Dt?.push(Dt.Phase.Bind,"bindSourceFile",{path:e.path},!0),G(e),Dt?.pop(),e.symbolCount=se,e.classifiableNames=he,Os(),yr()),e=void 0,n=void 0,r=void 0,s=void 0,a=void 0,l=void 0,u=void 0,d=void 0,_=void 0,y=!1,h=void 0,v=void 0,b=void 0,T=void 0,E=void 0,g=void 0,M=void 0,z=void 0,X=!1,j=!1,de=!1,Z=0}function G(O){if(O)if(ic(O,r),Dt&&(O.tracingPath=e.path),Lt(O),O.kind>145){let pe=r;r=O;let ct=CE(O);ct===0?be(O):rt(O,ct),r=pe}else{let pe=r;O.kind===1&&(r=O),ke(O),r=pe}}function ke(O){if(Kc(O))if(Nr(O))for(let pe of O.jsDoc)G(pe);else for(let pe of O.jsDoc)ic(pe,O),E_(pe,!1)}function re(O){G(O.expression),tl(O.expression)}function be(O){let pe=de;if(de=!1,Bt(O)){fe(O),ke(O),de=pe;return}switch(O.kind>=242&&O.kind<=256&&(!n.allowUnreachableCode||O.kind===248)&&(O.flowNode=h),O.kind){case 179:G(O.name),qt(O.arguments,G);break;case 246:lt(O);break;case 245:nn(O);break;case 243:Un(O);break;case 244:Ir(O);break;case 253:Sn(O);break;case 248:we(O);break;case 250:case 251:Hs(O);break;case 256:Pt(O);break;case 240:Nc(O);break;case 299:Ts(O);break;case 247:re(O);break;case 298:In(O);break;case 288:At(O);break;case 269:Y(O);break;case 267:ur(O);break;case 237:Rn(O);break;case 286:case 281:Bn(O);break;case 272:Zn(O);break;case 225:case 217:case 219:Ca(O);break;case 228:Zo(O);case 176:{qt(O.statements),G(O.endOfFileToken);break}case 252:H(O);break;case 236:qt(O.statements);break;case 266:yt(O);break;case 149:Gt(O);break;case 293:case 290:case 174:case 294:case 291:case 277:case 283:case 295:de=pe;default:fe(O);break}ke(O),de=pe}function rt(O,pe){let ct=s,fn=a,Or=l;if(pe&1?(O.kind!==283&&(a=s),s=l=O,pe&32&&(s.locals=bi(),me(s))):pe&2&&(l=O,pe&32&&(l.locals=void 0)),pe&4){let Wr=h,nr=v,An=b,Jr=T,Ji=M,Ss=z,vo=X,No=pe&16&&!O.asteriskToken&&!!Yp(O);No||(h=Hc(2,void 0,void 0),pe&152&&(h.node=O)),T=No||O.kind===169||O.kind===270?dt():void 0,M=void 0,v=void 0,b=void 0,z=void 0,X=!1,be(O),O.flags&=-1537,!(h.flags&1)&&pe&8&&x_(O.body)&&(O.flags|=512,X&&(O.flags|=1024),O.endFlowNode=h),O.kind===176&&(O.flags|=Z,O.endFlowNode=h),T&&(Mt(T,h),h=je(T),(O.kind===169||O.kind===270)&&(O.returnFlowNode=h)),No||(h=Wr),v=nr,b=An,T=Jr,M=Ji,z=Ss,X=vo}else be(O);s=ct,a=fn,l=Or}function qt(O,pe=G){O!==void 0&&Jt(O,pe)}function fe(O){Ns(O,G,qt)}function pt(O){O.flags|=O.flags&2048?4096:2048}function je(O){let pe=O.antecedent;return pe?pe.length===1?pe[0]:O:oe}function Mt(O,pe){!(pe.flags&1)&&!ki(O.antecedent,pe)&&((O.antecedent||(O.antecedent=[])).push(pe),pt(pe))}function Yt(O,pe,ct){return pe.flags&1?pe:ct?PP(ct)&&O&64||X7(ct)&&O&32?oe:xs(ct)?(pt(pe),Hc(O,ct,pe)):pe:O&32?pe:oe}function Bt(O){if(!(h.flags&1))return!1;if(h===oe&&(xb(O)&&O.kind!==254||O.kind===170)&&(h=ie,!n.allowUnreachableCode)){let ct=oR(n)&&!(O.flags&33554432)&&(!lf(O)||!!(ig(O.declarationList)&1)||O.declarationList.declarations.some(fn=>!!fn.initializer));rte(O,(fn,Or)=>Me(ct,fn,Or,P.Unreachable_code_detected))}return!0}function Me(O,pe,ct,fn){if(!O&&Rb(pe))return;let Or=Rb(pe)?kc(pe):e;tt(O,{pos:og(pe,Or),end:ct.end},fn,Or)}function tt(O,pe,ct,fn=e){let Or=Iu(fn,pe.pos,pe.end-pe.pos,ct);O?e.bindDiagnostics.push(Or):e.bindSuggestionDiagnostics=ei(e.bindSuggestionDiagnostics,{...Or,category:2})}function me(O){u&&(u.nextContainer=O),u=O}function dt(){return Hc(4,void 0,void 0)}function Lt(O){switch(O.kind){case 89:if(O.flags&4096){let nr=O.parent;for(;nr;)nr=nr.parent;Zt(nr,524288,788968);break}return h&&(xc(O)||r.kind===175)&&(O.flowNode=h),Vn(O);case 176:return Kt();case 179:return _i(O);case 241:return Zt(O,524288,788968);case 237:return Xi(O);case 149:return Ie(O);case 169:return xr(O);case 270:case 283:return Vt(O);case 152:case 153:return on(O);case 174:case 175:return Vr(O,4,0);case 150:return sn(O,131072,0);case 211:return _n(O);case 158:case 196:case 202:return hn(O);case 167:break;case 148:return Yo(O);case 272:switch(Oa(O)){case 0:break;default:return w.fail("Unknown call expression assignment declaration kind")}return;case 266:if(O.flowNode=h,Xi(O),O.kind!==269)return;case 286:case 281:let ct=O;h&&tr(ct)&&(ct.flowNode=h);break;case 163:case 201:case 264:return kn(O);case 239:return Zt(O,524288,788968);case 220:if(O.parent.kind===202)return Ie(O);if(O.parent.kind!==201)break;case 227:let fn=O,Or=fn.isBracketed||fn.typeExpression&&fn.typeExpression.type.kind===195?16777220:4;return sn(fn,Or,0);case 225:case 217:case 219:return(d||(d=[])).push(O);case 228:return(_||(_=[])).push(O);case 218:return G(O.typeExpression);case 269:switch(Oa(O)){case 5:let nr=O.left.expression;w.fail("implement me - specialkind binary expression");break;case 0:break;default:w.fail("Unknown binary expression special property assignment kind")}return}}function Vt(O){h&&(O.flowNode=h);let pe=O.name?O.name.text:"__function";return Xr(O,16,pe)}function _n(O){fe(O);let pe=T0(O);pe&&pe.kind!==154&&Ne(pe.symbol,pe,32)}function hn(O){let pe=xi(131072,si(O));Ne(pe,O,131072);let ct=xi(2048,"__type");Ne(ct,O,2048),ct.members=bi(),ct.members.set(pe.name,pe)}function kn(O){return Xr(O,2048,"__type")}function ue(O,pe=s){if(Tt(O))return nte(pe,O.text);{let ct=ue(O.expression);return ct&&ct.exports&&ct.exports.get(t0(O))}}function Ze(O,pe,ct,fn){Ct(pe,void 0,ct)}function Ct(O,pe,ct){return!1}function on(O){return Vr(O,4,0)}function Vr(O,pe,ct){return h&&v8(O)&&(O.flowNode=h),qb(O)?Xr(O,pe,"__computed"):sn(O,pe,ct)}function Vn(O){if(!e.parseDiagnostics.length&&!(O.flags&33554432)&&!(O.flags&16777216)&&!gF(O)){let pe=W2(O);if(pe===void 0)return;le&&pe>=92&&pe<=145&&console.warn("implement me - checkContextualIdentifier")}}function _i(O){let pe=s;s=e,sn(O,268435456,111039),s=pe}function xr(O){!e.isDeclarationFile&&O.flags&33554432,h&&(O.flowNode=h);let pe=O.body?0:110991;sn(O,16,110991)}function si(O){let pe=hi(O);if(pe)return Qh(pe)?pe.text:void 0;switch(O.kind){case 158:case 151:case 202:return"__call";case 150:return"__index";case 176:return"export=";case 269:if(Oa(O)===2)return"export=";w.fail("Unknown binary declaration kind");break;case 196:return"__call";case 149:if(Yc(O.parent)){O.parent.body&&$e(O,P.Parameter_declaration_expected);break}w.assert(O.parent.kind===196,"Impossible parameter parent kind",()=>`parent is: ${w.formatSyntaxKind(O.parent.kind)}, expected JSDocFunctionType`)}}function xi(O,pe){return se++,new ye(O,pe)}function Se(O,pe,ct,fn,Or,Wr,nr){w.assert(nr||!qb(ct));let An=nr?"__computed":si(ct),Jr;if(An===void 0)Jr=xi(0,"__missing");else if(Jr=O.get(An),fn&2885600&&he.add(An),!Jr)O.set(An,Jr=xi(0,An)),Wr&&(Jr.isReplaceableByMethod=!0);else{if(Wr&&!Jr.isReplaceableByMethod)return Jr;if(Jr.flags&Or){if(Jr.isReplaceableByMethod)O.set(An,Jr=xi(0,An));else if(!(fn&3&&Jr.flags&67108864)){El(ct)&&ic(ct.name,ct);let Ji=Jr.flags&2?P.Cannot_redeclare_block_scoped_variable_0:P.Duplicate_identifier_0,Ss=!0,vo=!1;Pr(Jr.declarations);let No=[],uc=hi(ct)||ct;Jt(Jr.declarations,(zr,Xa)=>{let To=hi(zr)||zr,fc=Ss?$e(To,Ji,De(zr)):$e(To,Ji)});let Ba=Ss?$e(uc,Ji,De(ct)):$e(uc,Ji);e.bindDiagnostics.push(Rs(Ba,...No)),Jr=xi(0,An)}}}return Ne(Jr,ct,fn),s0(ct)||(Jr.parent?w.assert(Jr.parent===pe,"Existing symbol parent should match new one"):Jr.parent=pe),Jr}function De(O){return El(O)?sa(O.name):w.checkDefined(si(O))}function Ne(O,pe,ct){O.flags|=ct,pe.symbol=O,O.declarations=o_(O.declarations,pe),ct&1955&&!O.exports&&(O.exports=bi()),ct&6240&&!O.members&&(O.members=bi()),O.constEnumOnlyModule&&O.flags&304&&(O.constEnumOnlyModule=!1),ct&111551&&wb(O,pe)}function $e(O,pe,...ct){return Gc(kc(O)||e,O,pe,...ct)}function we(O){G(O.expression),O.kind===248&&(X=!0,T&&Mt(T,h)),h=oe,j=!0}function Je(O,pe,ct,fn){let Or=E,Wr=g;E=ct,g=fn,O(pe),E=Or,g=Wr}function ze(O,pe,ct){Je(G,O,pe,ct),(!O||!it(O)&&!Re(O))&&(Mt(pe,Yt(32,h,O)),Mt(ct,Yt(64,h,O)))}function it(O){return K7(O)}function Re(O){for(;;)if(O.kind===289)O=O.expression;else if(O.kind===298&&O.operator===55)O=O.operand;else return K1(O)}function H(O){G(O.inheritClause)}function Sn(O){let pe=dt(),ct=dt(),fn=dt();ze(O.expression,pe,ct),h=je(pe),G(O.thenStatement),Mt(fn,h),h=je(ct),G(O.elseStatement),Mt(fn,h),h=je(fn)}function Zt(O,pe,ct){switch(l.kind){case 176:let fn=Se(e.locals,void 0,O,pe,ct);fn.exportSymbol=Se(e.symbol.members,s.symbol,O,pe,ct),O.localSymbol=fn;break;default:w.assertNode(l,xl),l.locals||(l.locals=bi(),me(l)),Se(l.locals,void 0,O,pe,ct)}}function sn(O,pe,ct){switch(s.kind){case 176:return ro(O,pe,ct);case 163:case 201:case 293:return Se(s.symbol.members,s.symbol,O,pe,ct);case 158:case 151:case 202:case 150:case 154:case 156:case 169:case 270:case 283:case 241:case 196:case 239:case 264:return s.locals&&w.assertNode(s,xl),Se(s.locals,void 0,O,pe,ct)}}function mn(O){O.flags&33554432?O.flags|=128:O.flags&=-129}function Kt(){mn(e),gr();let O=e.symbol;Se(e.symbol.exports,e.symbol,e,4,-1),e.symbol=O}function gr(){let O=md(Mm(e.fileName,n)??e.fileName);Xr(e,544,`"${O}"`)}function Xr(O,pe,ct){let fn=xi(pe,ct);return pe&106508&&(fn.parent=s.symbol),Ne(fn,O,pe),fn}function cs(O){if(O.kind===170)Zt(O,32,899503);else{let ct=O.name?O.name.text:"__class";Xr(O,32,ct),O.name&&he.add(O.name.text)}let{symbol:pe}=O}function Xi(O){let pe=O.kind===237?O:O.parent.parent;if(ID(O)){if(Cs(O)&&!O.type&&(!mE(O.parent)||O.parent.declarations.length==1&&(!lf(O.parent.parent)||(O.parent.parent.modifiers?.length??0)==0))){let ct=si(O);if(w.assertIsDefined(ct,"Expected variable declaration to have a name"),(l&&xl(l)?l.locals?.get(ct):void 0)&&pp(O)){let Or=Ve.convertToAssignmentExpression(O);return}}Zt(O,2,268547007)}else xm(O)?sn(O,1,111551):sn(O,1,111550)}function ro(O,pe,ct){return e.isDefaultLib?Se(e.locals,void 0,O,pe,ct):s0(O)||Cs(O)||Pv(O)&6?Se(e.symbol.members,void 0,O,pe,ct):$i(O,pe,ct)}function $i(O,pe,ct){if(pe&2097152)return w.assertNode(s,xl),Se(s.locals,void 0,O,pe,ct);{if(!xl(s)||!s.locals)return Se(s.symbol.exports,s.symbol,O,pe,ct);let Or=pe&111551?1048576:0,Wr=Se(s.locals,void 0,O,Or,ct);return Wr.exportSymbol=Se(s.symbol.exports,s.symbol,O,pe,ct),O.localSymbol=Wr,Wr}}function Ie(O){O.kind===220&&s.kind!==202||(ds(O.name)?Xr(O,1,"__"+O.parent.parameters.indexOf(O)):sn(O,1,111551))}function Te(O){qt(O,pe=>pe.kind===169?G(pe):void 0),qt(O,pe=>pe.kind!==169?G(pe):void 0)}function yt(O){G(O.dotDotDotToken),G(O.propertyName),yn(O.initializer),G(O.name)}function Gt(O){qt(O.modifiers),G(O.dotDotDotToken),G(O.type),yn(O.initializer),G(O.name)}function yn(O){if(!O)return;let pe=h;if(G(O),pe===oe||pe===h)return;let ct=dt();Mt(ct,pe),Mt(ct,h),h=je(ct)}function Rn(O){fe(O),(O.initializer||zm(O.parent.parent))&&Rr(O)}function Rr(O){let pe=Bm(O)?void 0:O.name;if(ds(pe))for(let ct of pe.elements)Rr(ct);else h=Kn(16,h,O)}function bn(O,pe){return pt(O),j=!0,Hc(512,pe,O)}function Kn(O,pe,ct){pt(pe),j=!0;let fn=Hc(O,ct,pe);return M&&Mt(M,fn),fn}function ur(O){let pe=dt(),ct=dt(),fn=dt(),Or=h,Wr=j;j=!1,ze(O.condition,pe,ct),h=je(pe),G(O.questionToken),G(O.whenTrue),Mt(fn,h),h=je(ct),G(O.colonToken),G(O.whenFalse),Mt(fn,h),h=j?je(fn):Or,j||(j=Wr)}function _r(O,pe){let ct=z;for(;ct&&O.parent.kind===249;)ct.continueTarget=pe,ct=ct.next,O=O.parent;return pe}function Le(){return Hc(8,void 0,void 0)}function He(O,pe,ct){let fn=v,Or=b;v=pe,b=ct,G(O),v=fn,b=Or}function lt(O){let pe=_r(O,Le()),ct=dt(),fn=dt();Mt(pe,h),h=pe,ze(O.expression,ct,fn),h=je(ct),He(O.statement,fn,pe),Mt(pe,h),h=je(fn)}function nn(O){let pe=Le(),ct=_r(O,dt()),fn=dt();Mt(pe,h),h=pe,He(O.statement,fn,ct),Mt(ct,h),h=je(ct),ze(O.expression,pe,fn),h=je(fn)}function Un(O){let pe=_r(O,Le()),ct=dt(),fn=dt();G(O.initializer),Mt(pe,h),h=pe,ze(O.condition,ct,fn),h=je(ct),He(O.statement,fn,pe),G(O.incrementor),Mt(pe,h),h=je(fn)}function Ir(O){let pe=_r(O,Le()),ct=dt();G(O.expression),Mt(pe,h),h=pe,Mt(ct,h),G(O.initializer),O.initializer.kind!==238&&or(O.initializer),He(O.statement,ct,pe),Mt(pe,h),h=je(ct)}function Yn(O){for(let pe=z;pe;pe=pe.next)if(pe.name===O)return pe}function hr(O,pe,ct){let fn=O.kind===250?pe:ct;fn&&(Mt(fn,h),h=oe,j=!0)}function Hs(O){if(G(O.label),O.label){let pe=Yn(O.label.text);pe&&(pe.referenced=!0,hr(O,pe.breakTarget,pe.continueTarget))}else hr(O,v,b)}function Pt(O){let pe=dt();G(O.expression);let ct=v,fn=N;v=pe,N=h,qt(O.preBlock),G(O.caseBlock),Mt(pe,h);let Or=Jt(O.caseBlock.clauses,Wr=>Wr.kind===301);O.possiblyExhaustive=!Or&&!pe.antecedent,Or||Mt(pe,oi(N,O,0,0)),v=ct,N=fn,h=je(pe)}function oi(O,pe,ct,fn){return pt(O),Hc(128,{switchStatement:pe,clauseStart:ct,clauseEnd:fn},O)}function tr(O){switch(O.kind){case 89:case 284:case 71:return!0;case 286:case 289:return tr(O.expression);case 281:return(_u(O.argumentExpression)||va(O.argumentExpression))&&tr(O.expression);case 269:return O.operatorToken.kind===27&&tr(O.right)||mf(O.operatorToken.kind)&&fp(O.left)}return!1}function Ui(O){return tr(O)}function Gs(O){if(O.arguments){for(let pe of O.arguments)if(Ui(pe))return!0}return!!(O.expression.kind===286&&Ui(O.expression.expression))}function xs(O){switch(O.kind){case 89:return!0;case 286:case 281:return Ui(O);case 272:return Gs(O);case 289:return d_(O)?!1:xs(O.expression);case 269:return Cn(O);case 298:return O.operator===55&&xs(O.operand)}return!1}function Cn(O){switch(O.operatorToken.kind){case 74:case 86:return Ui(O.left);case 35:case 36:case 37:case 38:return ls(O.left)||ls(O.right)||la(O.right,O.left)||la(O.left,O.right);case 103:return xs(O.right);case 27:return xs(O.right)}return!1}function la(O,pe){return!1}function ls(O){switch(O.kind){case 289:return ls(O.expression);case 269:switch(O.operatorToken.kind){case 74:return ls(O.left);case 27:return ls(O.right)}}return Ui(O)}function Nc(O){let pe=O.clauses,ct=PP(O.parent.expression)||xs(O.parent.expression),fn=oe;for(let Or=0;Or<pe.length;Or++){let Wr=Or;for(;!pe[Or].statements.length&&Or+1<pe.length;)fn===oe&&(h=N),G(pe[Or]),Or++;let nr=dt();Mt(nr,ct?oi(N,O.parent,Wr,Or+1):N),Mt(nr,fn),h=je(nr);let An=pe[Or];G(An),fn=h,!(h.flags&1)&&Or!==pe.length-1&&n.noFallthroughCasesInSwitch&&(An.fallthroughFlowNode=h)}}function Ts(O){let pe=h;h=N,G(O.expression),h=pe,qt(O.statements)}function In(O){if(O.operator===55){let pe=E;E=g,g=pe,fe(O),g=E,E=pe}else fe(O),(O.operator===47||O.operator===48)&&or(O.operand)}function At(O){fe(O),(O.operator===47||O.operator===48)&&or(O.operand)}function or(O){if(tr(O))h=Kn(16,h,O);else if(O.kind===290)for(let pe of O.elements)mr(pe);else if(O.kind===291){for(let pe of O.elements)if(!Bm(pe)&&pe.elements)for(let ct of pe.elements)mr(pe)}else if(O.kind===293)for(let pe of O.properties)pe.kind===174?mr(pe.initializer):pe.kind===175&&or(pe.name)}function mr(O){O.kind===269&&O.operatorToken.kind===74?or(O.left):or(O)}function ja(O){let pe=O.parent;switch(pe.kind){case 253:case 246:case 245:return pe.expression===O;case 243:case 267:return pe.condition===O}return!1}function mu(O){for(;yp(O.parent)||yk(O.parent)&&O.parent.operator===55;)O=O.parent;return!ja(O)&&!Re(O.parent)}function ar(){return Uv(O,pe,ct,fn,Or,void 0);function O(nr,An){if(An){An.stackIndex++,ic(nr,r);let Ji=le;Lt(nr);let Ss=r;r=nr,An.skip=!1,An.inStrictModeStack[An.stackIndex]=Ji,An.parentStack[An.stackIndex]=Ss}else An={stackIndex:0,skip:!1,inStrictModeStack:[void 0],parentStack:[void 0]};let Jr=nr.operatorToken.kind;if(LD(Jr)||Dy(Jr)){if(mu(nr)){let Ji=dt(),Ss=h,vo=j;j=!1,br(nr,Ji,Ji),h=j?je(Ji):Ss,j||(j=vo)}else br(nr,E,g);An.skip=!0}return An}function pe(nr,An,Jr){if(!An.skip){let Ji=Wr(nr);return Jr.operatorToken.kind===27&&tl(nr),Ji}}function ct(nr,An,Jr){An.skip||G(nr)}function fn(nr,An,Jr){if(!An.skip){let Ji=Wr(nr);return Jr.operatorToken.kind===27&&tl(nr),Ji}}function Or(nr,An){if(!An.skip){let Ss=nr.operatorToken.kind;if(mf(Ss)&&!wu(nr)&&(or(nr.left),Ss===74&&nr.left.kind===281)){let vo=nr.left;ls(vo.expression)&&(h=Kn(256,h,nr))}}let Jr=An.inStrictModeStack[An.stackIndex],Ji=An.parentStack[An.stackIndex];Jr!==void 0&&(le=Jr),Ji!==void 0&&(r=Ji),An.skip=!1,An.stackIndex--}function Wr(nr){if(nr&&Ur(nr))return nr;G(nr)}}function tl(O){if(O.kind===272){let pe=O;pe.expression.kind!==71&&Ey(pe.expression)&&!co(pe)&&(h=bn(h,pe))}}function co(O){return Tt(O.expression)&&O.expression.text===(e.languageVariant===1?"error":"raise_error")}function br(O,pe,ct){let fn=dt();O.operatorToken.kind===58?ze(O.left,fn,ct):ze(O.left,pe,fn),h=je(fn),G(O.operatorToken),Dy(O.operatorToken.kind)?(Je(G,O.right,pe,ct),or(O.left),Mt(pe,Yt(32,h,O)),Mt(ct,Yt(64,h,O))):ze(O.right,pe,ct)}function Bn(O){fe(O)}function Jn(O){let pe=Xn(O,ct=>ct.parent&&Zb(ct.parent)&&ct.parent.extendsType===ct);return pe&&pe.parent}function yr(){if(!_)return;let O=s,pe=u,ct=l,fn=r,Or=h;for(let Wr of _){let nr=Wr.parent.parent;if(s=Vb(nr)||e,l=Rm(nr)||e,h=Hc(2,void 0,void 0),r=Wr,hi(Wr)){r=Wr.parent;let Jr=e;w.assertNode(Jr,xl),Jr.locals||(Jr.locals=bi(),me(Jr));let Ji=Jr.locals.get("__varDocTags")??xi(3,"__varDocTags");Ji.members??(Ji.members=bi()),Jr.locals.has("__varDocTags")||Jr.locals.set("__varDocTags",Ji),Se(Ji.members,e.symbol,Wr,2,268547007)}s=O,u=pe,l=ct,r=fn,h=Or}}function Os(){if(!d)return;let O=s,pe=u,ct=l,fn=r,Or=h;for(let Wr of d){let nr=Wr.parent.parent;s=Vb(nr)||e,l=Rm(nr)||e,h=Hc(2,void 0,void 0),r=Wr,G(Wr.typeExpression);let An=hi(Wr);!Wr.fullName&&An&&MD(An.parent)||(!Wr.fullName||Wr.fullName.kind===89?(r=Wr.parent,Zt(Wr,524288,788968)):G(Wr.fullName))}s=O,u=pe,l=ct,r=fn,h=Or}function Yo(O){if(Ll(O.parent)){let pe=Q2(O.parent);pe?(w.assertNode(pe,xl),pe.locals??(pe.locals=bi()),Se(pe.locals,void 0,O,262144,526824)):sn(O,262144,526824)}else if(O.parent.kind===259){let pe=Jn(O.parent);pe?(w.assertNode(pe,xl),pe.locals??(pe.locals=bi()),Se(pe.locals,void 0,O,262144,526824)):Xr(O,262144,si(O))}else sn(O,262144,526824)}function Ca(O){G(O.tagName),O.fullName&&(ic(O.fullName,O),E_(O.fullName,!1)),typeof O.comment!="string"&&qt(O.comment)}function Zo(O){G(O.tagName),G(O.typeExpression),O.name&&(ic(O.name,O),E_(O.name,!1)),typeof O.comment!="string"&&qt(O.comment)}function Zn(O){let pe=ws(O.expression);if(pe.kind===270||pe.kind===283?(qt(O.arguments),G(O.expression)):(fe(O),O.expression.kind===71?h=bn(h,O):co(O)&&(h=oe,j=!0)),O.expression.kind===286){let ct=O.expression}}}var VM=(e=>(e[e.None=0]="None",e[e.IsContainer=1]="IsContainer",e[e.IsBlockScopedContainer=2]="IsBlockScopedContainer",e[e.IsControlFlowContainer=4]="IsControlFlowContainer",e[e.IsFunctionLike=8]="IsFunctionLike",e[e.IsFunctionExpression=16]="IsFunctionExpression",e[e.HasLocals=32]="HasLocals",e[e.IsInterface=64]="IsInterface",e[e.IsObjectLiteralOrClassExpressionMethodOrAccessor=128]="IsObjectLiteralOrClassExpressionMethodOrAccessor",e))(VM||{});function CE(e){switch(e.kind){case 274:case 170:case 293:case 163:case 201:return 1;case 239:case 241:case 264:case 150:return 33;case 176:return 37;case 169:return 45;case 151:case 202:case 196:case 158:return 45;case 270:case 283:case 179:return 61;case 152:return e.initializer?4:0;case 243:case 244:case 240:return 34;case 276:return 33;case 236:return Qi(e.parent)||JM(e.parent)?0:34}return 0}function nte(e,n){let r=to(e,xl)?.locals?.get(n);if(r)return r.exportSymbol??r;if(T_(e))return e.symbol?.exports?.get(n)}function rte(e,n){if(Vm(e)&&EA(e)&&uu(e.parent)){let{statements:r}=e.parent,s=aR(r,e);fL(s,EA,(a,l)=>n(s[a],s[l-1]))}else n(e,e)}function EA(e){return!Yc(e)&&!ite(e)&&!MM(e)&&!(lf(e)&&!(ig(e)&1)&&e.declarationList.declarations.some(n=>!n.initializer))}function ite(e){switch(e.kind){case 155:case 239:return!0;default:return!1}}var wA=1,NA=1,IA=1,AA=1,ste="(anonymous)",qM=(e=>(e[e.None=0]="None",e[e.BivariantCallback=1]="BivariantCallback",e[e.StrictCallback=2]="StrictCallback",e[e.IgnoreReturnTypes=4]="IgnoreReturnTypes",e[e.StrictArity=8]="StrictArity",e[e.StrictTopSignature=16]="StrictTopSignature",e[e.Callback=3]="Callback",e))(qM||{}),ote=new Map(Object.entries({Uppercase:0,Lowercase:1,Capitalize:2,Uncapitalize:3,NoInfer:4}));function $M(e){var n=[],r=t=>{n.push(t)},s,a,l=Ks.getSymbolConstructor(),u=Ks.getTypeConstructor(),d=Ks.getSignatureConstructor(),_=0,y=0,h=0,v=0,b=0,T=0,E,g,M=!1,N,z=ca(e.useCaseSensitiveFileNames()),X,j=bi(),Z=[1],le=[],de=[],se=[],ye=0,he=!1,oe=e.getCompilerOptions(),ie=au(oe),Y=e.getDriverType(),_e=oe.exactOptionalPropertyTypes,G=!1,ke=!1,re=rb(oe,"strictFunctionTypes"),be=rb(oe,"strictObjectTypes"),rt=G$(),qt=xH(),fe=MH(),pt=dB(oe,{isEntityNameVisible:NH,isExpandoFunctionDeclaration:wH,requiresAddingImplicitUndefined:jI,isUndefinedIdentifierExpression(t){return w.assert(ep(t)),gc(t)===Vt},isDefinitelyReferenceToGlobalSymbolObject:IH}),je=!1,Mt=!1,Yt,Bt=new Map,Me=new Map,tt=0,me,dt=E9({evaluateElementAccessExpression:VH,evaluateEntityNameExpression:zI}),Lt=bi(),Vt=es(4,"undefined");Vt.declarations=[];var _n=es(1536,"globalThis",8);_n.exports=Lt,_n.declarations=[],Lt.set(_n.name,_n);var hn=es(4,"arguments"),kn=es(4,"require"),ue,Ze,Ct=0,on,Vr=0,Vn=Nb(),_i=Nb(),xr=new Map,si=0,xi=10,Se=[],De=[],Ne=[],$e=[],we=[],Je=[],ze=[],it=[],Re=[],H=[],Sn=[],Zt=[],sn=[],mn=[],Kt=[],gr=[],Xr=[],cs=[],Xi=new Map,ro=[],$i=new Map,Ie=0,Te=0,yt=0,Gt=!1,yn=0,Rn,Rr,bn,Kn=[],ur=[],_r=[],Le=0,He=[],lt=[],nn=[],Un=0,Ir=new Set,Yn=new Map,hr=DP({compilerOptions:oe,requireSymbol:kn,argumentsSymbol:hn,globals:Lt,getSymbolOfDeclaration:Ft,error:at,getRequiresScopeChangeCache:nT,setRequiresScopeChangeCache:Dd,lookup:X_,onPropertyWithInvalidInitializer:Zq,onFailedToResolveSymbol:QH,onSuccessfullyResolvedSymbol:ZH}),Hs=DP({compilerOptions:oe,requireSymbol:kn,argumentsSymbol:hn,globals:Lt,getSymbolOfDeclaration:Ft,error:at,getRequiresScopeChangeCache:nT,setRequiresScopeChangeCache:Dd,lookup:HH});let Pt={getTypeOfSymbol:Ln,getNodeCount:()=>Tc(e.getSourceFiles(),(t,i)=>t+i.nodeCount,0),getIdentifierCount:()=>Tc(e.getSourceFiles(),(t,i)=>t+i.identifierCount,0),getSymbolCount:()=>Tc(e.getSourceFiles(),(t,i)=>t+i.symbolCount,y),getTypeCount:()=>_,getInstantiationCount:()=>h,getStringType:()=>mr,getRelationCacheSizes:()=>({assignable:ua.size,identity:lo.size,subtype:Ua.size,strictSubtype:Wo.size}),signatureToString:qg,getDiagnostics:A0,getAliasedSymbol:Uc,runWithCurrentFile:ta,getSymbolAtLocation:t=>{let i=_s(t);return ta(i,()=>i?gc(i,!0):void 0)},getSignatureFromDeclaration:t=>{let i=_s(t,Qi);return ta(i,()=>i?Ai(i):void 0)},evaluate:dt,typeToTypeNode:fe.typeToTypeNode,getAugmentedPropertiesOfType:LC,getPropertiesOfType:oo,getUnionType:vn,getWidenedType:rc,symbolToString:wi,getRootSymbols:os,getEmitResolver:fa,getTypeFromTypeNode:jn,getPropertyOfType:ni,getMergedSymbol:gn,getAllPossiblePropertiesOfTypes:$z,isArrayLikeType:$p,isNullableType:A3,getNullableType:O3,getNonNullableType:cT,getNonOptionalType:oT,getIndexTypeOfType:(t,i)=>Hl(t,i===0?mr:An),isTypeInvalidDueToUnionDiscriminant:eC,typeHasCallOrConstructSignatures:e4,getReturnTypeOfSignature:Ei,getTypeOfPropertyAccessExpr:Ee,getContextualType:(t,i)=>{let o=_s(t,xc);if(o)return ta(o,()=>i&4?J3(o,()=>Mc(o,i)):Mc(o,i))},getSymbolsInScope:(t,i)=>{let o=_s(t);return ta(o,()=>o?C(o,i):[])},getTypeOfSymbolAtLocation:(t,i)=>{let o=_s(i);return ta(o,()=>o?ge(t,o):At)},isDeclarationVisible:K,getResolvedSignature:(t,i,o)=>bS(t,i,o,0),getShorthandAssignmentValueSymbol:t=>{let i=_s(t);return ta(i,()=>i?aZ(i):void 0)},getContextualTypeForArgumentAtIndex:(t,i)=>{let o=_s(t,v_);return ta(o,()=>o&&rN(o,i))},isUnknownSymbol:t=>t===Di,isUndefinedSymbol:t=>t===Vt,getTypeAtLocation:t=>{let i=_s(t);return ta(i,()=>i?ta(i,()=>an(i)):At)},getCandidateSignaturesForStringLiteralCompletions:uY,runWithCancellationToken:(t,i)=>{try{return s=t,i(Pt)}finally{s=void 0}},writeType:(t,i,o,c)=>rn(t,_s(i),o,c),writeSymbol:(t,i,o,c,f)=>wi(t,_s(i),o,c,f),writeSignature:(t,i,o,c,f)=>qg(t,_s(i),o,c,f),symbolToTypeParameterDeclarations:fe.symbolToTypeParameterDeclarations,tryGetThisTypeAt:(t,i,o)=>{let c=_s(t);return ta(c,()=>c&&kd(c,i,o))},getBaseConstraintOfType:Ls,getDefaultFromTypeParameter:t=>t&&t.flags&262144?Mp(t):void 0,getSignaturesOfType:Oi,getGlobalDiagnostics:H_,getFullyQualifiedName:y4,getAccessibleSymbolChain:c1,isValidPropertyAccessForCompletions:(t,i,o)=>{let c=_s(t,Ii);return ta(c,()=>!!c&&F5(c,i,o))},isArgumentsSymbol:t=>t===hn,resolveExternalModuleSymbol:A6,resolveName(t,i,o,c){return hr(i,t,o,void 0,!1,c)},resolveBaseTypesOfClass:Z_,getExportsOfModule:$,resolveExternalModuleName:t=>{let i=_s(t,xc);return ta(i,()=>{let o=Lr(i,64);return i&&Vd(i,i,o,!0)})},getContextualTypeForObjectLiteralElement:t=>{console.debug("todo - getContextualTypeForObjectLiteralElement")},getExpandedParameters:FI,getLocalTypeParametersOfClassOrInterfaceOrTypeAlias:Ep,getResolvedSignatureForSignatureHelp:(t,i,o)=>L4(t,()=>bS(t,i,o,16)),getTypePredicateOfSignature:Ea,hasEffectiveRestParameter:Gl,isOptionalParameter:t=>{let i=_s(t,gs);return ta(i,()=>i?w6(i):!1)},symbolToParameterDeclaration:fe.symbolToParameterDeclaration,typeParameterToDeclaration:fe.typeParameterToDeclaration,writeTypePredicate:(t,i,o,c)=>(console.log("todo - writeTypePredicate"),""),createSymbol:es,getSuggestionDiagnostics:(t,i)=>{let o=_s(t,ti)||w.fail("Could not determine parsed source file.");if(qy(o,oe,e))return Oe;let c;try{return s=i,b6(o),w.assert(!!(Tn(o).flags&1)),c=Is(c,_i.getDiagnostics(o.fileName)),f3(sI(o),(f,p,m)=>{!Rb(f)&&!Iy(f)&&!iI(p,!!(f.flags&33554432))&&(c||(c=[])).push({...m,category:2})}),c||Oe}finally{s=void 0}}};var oi=Ke(131072,"never",void 0,"unique literal"),tr=e1(t=>t.flags&262144?oi:t,()=>"(unique literal mapper)"),Ui=new Map,Gs=new Map,xs=new Map,Cn=Ke(1,"mixed",void 0,"mixed"),la=Cn,ls=Ke(1,"mixed",262144,"auto"),Nc=Ke(524288,"object",262144,"object"),Ts=Ke(1,"any",void 0,"wildcard"),In=Ke(1,"any",void 0,"blocked string"),At=Ke(1,"error"),or=Ke(131072,"never",262144,"silent"),mr=Ke(4,"string"),ja=Ke(4096,"bytes"),mu=Ke(524288,"closure",262144,"closure"),ar=Ke(524288,"lwobject",262144,"lwobject"),tl=G?pe:Ke(65536,"null",65536,"widening"),co=Ke(8,"int"),br=Ke(8,"float"),Bn=Ke(131072,"never"),Jn=Ke(32768,"undefined",void 0,"missing"),yr=Ke(2,"unknown"),Os=Ke(131072,"never",void 0,"implicit"),Yo=Ke(1,"unresolved"),Ca=Ke(1,"any",65536,"non-inferrable"),Zo=Ke(1,"intrinsic"),Zn=Ke(32768,"undefined"),O=G?Zn:Ke(32768,"undefined",65536,"widening"),pe=Ke(65536,"null"),ct=Ke(67108864,"object"),fn=Ke(16384,"void"),Or=vn([mr,co]),Wr,nr=vn([mr,co,br]),An=vn([co,br]),Jr=new Map,Ji=new Map,Ss=new Map,vo=Zn,No=Ke(131072,"never",void 0,"unreachable"),uc=e1(t=>t.flags&262144?LV(t):t,()=>"(restrictive mapper)"),Ba=e1(t=>t.flags&262144?Ts:t,()=>"(permissive mapper)"),zr=es(2048,"__type");zr.members=bi();var Xa=wa(zr,j,Oe,Oe,Oe),To=wa(void 0,j,Oe,Oe,Oe),fc=G?vn([Zn,pe,To]):yr,Io=wa(void 0,j,Oe,Oe,Oe);Io.instantiations=new Map;var Xo=Ke(256,"0",void 0,"fresh"),Bo=Ka(0),gt=Ke(256,"1",void 0,"fresh"),js=Ka(1);gt.regularType=js,gt.freshType=gt,js.regularType=js,js.freshType=gt,Xo.regularType=Bo,Xo.freshType=Xo,Bo.regularType=Bo,Bo.freshType=Xo;var Nt=vn([Bo,js]),bs=rl(""),k=Ka(0),x,R,V,Ce,Ye,ut,Ar,Fn,cr,On,Mr,vr,Ci,kr,jr,ns=wa(void 0,j,Oe,Oe,Oe),Fi=Bg(1,"<<unresolved>>",0,Cn),ui=Pu(void 0,void 0,void 0,Oe,Cn,void 0,0,0),Ao=Pu(void 0,void 0,void 0,Oe,At,void 0,0,0),Ko=Pu(void 0,void 0,void 0,Oe,Cn,void 0,0,0),pc=Pu(void 0,void 0,void 0,Oe,or,void 0,0,0),Bl=jf(An,mr,!0),us=new Map,Wl=new Map,Cp=new Set,Wa=wa(void 0,j,Oe,Oe,Oe),Di=es(4,"unknown"),Pp=new Map,vd=new Map,Jl=_c(),zl=_c();zl.constraint=Jl;var vf=_c(),Ic=_c(),Ul=_c();Ul.constraint=Ic;var gu=es(0,"__resolving__"),mi=wa(void 0,j,Oe,Oe,Oe),Wa=wa(void 0,j,Oe,Oe,Oe),Pa=wa(void 0,j,Oe,Oe,Oe),ea=wa(void 0,j,Oe,Oe,Oe),Ua=new Map,Wo=new Map,ua=new Map,io=new Map,lo=new Map,zu=e1(t=>(N&&(t===Jl||t===zl||t===vf)&&N(!0),t),()=>"(unmeasurable reporter)"),nl=e1(t=>(N&&(t===Jl||t===zl||t===vf)&&N(!1),t),()=>"(unreliable reporter)"),Jl=_c(),zl=_c();zl.constraint=Jl;var vf=_c();return z_(),Pt;function z_(){for(let i of e.getSourceFiles())i.isDefaultLib,zM(i,oe);for(let i of e.getSourceFiles())if(i.isDefaultLib){Vl(Lt,i.locals);let o=es(1920,"efun::",8);o.members=i.locals,Lt.set("efun::",o)}let t=e.getSourceFile(oe.sefunFile);t&&Td(t,Lt),V_(),jt(Vt).type=O,jt(hn).type=Cn,jt(Di).type=At,jt(_n).type=dl(16,_n),V=Ac("__LS__Array",0,!0),Ce=Ac("__LS__Mapping",0,!0),x=Ac("__LS__Object",0,!0),R=Ac("__LS__Function",0,!0),ut=Mt&&Ac("__LS__CallableFunction",0,!0)||R,Ar=Mt&&Ac("__LS__NewableFunction",0,!0)||R,Fn=Ac("__LS__String",0,!0),cr=Ac("__LS__Int",0,!0),Mr=Ac("__LS__Closure",0,!0),Ci=Qs(Cn),vr=Qs(ls),vr===ns&&(vr=wa(void 0,j,Oe,Oe,Oe)),Ye=q_("__LS__ReadonlyArray",1),kr=Ye?Tf(Ye,[Cn]):Ci,Wr=vn([An,V])}function ta(t,i){let o=!0;X||(o=!1,X=$n(t));let c=i();return o||(X=void 0),c}function Td(t,i){let o=new Set,c=gc(t,!0),p=[Ln(c,64)];for(;p.length;){let m=p.shift();if(o.has(m.symbol.name))continue;o.add(m.symbol.name);let S=$u(m);m.members.forEach((I,F)=>{i.set(F,I)}),p.push(...S)}}function Ac(t,i,o){let c=Ja(t,3,o?P.Cannot_find_global_type_0:void 0);if(!c)return console.warn("Global symbol not found: "+t),At;let f=es(8388640,t);f.valueDeclaration=c.valueDeclaration,f.members=bi();let p=t,m=es(8388612,p,8);return m.valueDeclaration=c.valueDeclaration,f.members.set(p,m),Vu(f,i)}function Qs(t,i){return Tf(i?Ye:V,[t])}function Sd(t,i,o){return w.assert(o!==!0,"readonly not supported"),Tf(Ce,[t,i])}function V_(){let t=Vt.name,i=Lt.get(t);i?Jt(i.declarations,o=>{q1(o)||Vn.add(fi(o,P.Declaration_name_conflicts_with_built_in_global_identifier_0,t))}):Lt.set(t,Vt)}function q_(t,i=0){let o=Ja(t,788968,void 0);return o&&Vu(o,i)}function Tf(t,i){return t!==Io?Od(t,i):ns}function $_(t,i,o=3){return Ja(t,o,i?P.Cannot_find_global_type_0:void 0)}function Ja(t,i,o){return hr(void 0,t,i,o,!1,!1)}function Vu(t,i){function o(f){let p=f.declarations;if(p)for(let m of p)switch(m.kind){case 170:case 155:return m}}if(!t)return i?Io:ns;if(t.flags&19)return dG(t);let c=bo(t);return c.flags&524288?Pr(c.typeParameters)!==i?(at(o(t),P.Global_type_0_must_have_1_type_parameter_s,ya(t),i),i?Io:ns):c:(at(o(t),P.Global_type_0_must_be_a_class_or_interface_type,ya(t)),i?Io:ns)}function Vl(t,i,o=!1){i.forEach((c,f)=>{let p=t.get(f);t.set(f,p?Fe(p,c,o):gn(c))})}function H_(){return k6(),Vn.getGlobalDiagnostics()}function bd(t){let i=!1;for(;t.parent&&!Qi(t.parent);){if(gs(t.parent)&&(i||t.parent.initializer===t))return!0;ms(t.parent)&&t.parent.initializer===t&&(i=!0),t=t.parent}return!1}function Sf(t){if(t.thisParameter)return Ln(t.thisParameter)}function ql(t){return Sf(Ai(t))}function hu(t){let i=QS(t);if(i&&i.typeExpression)return jn(i.typeExpression);let o=Tu(t);if(o)return Sf(o)}function kd(t,i=!0,o=yh(t,!1,!1)){let c=Nr(t);if(Qi(o)&&!bd(t)){let f=ql(o)||c&&hu(o);if(f)return qp(t,f)}if(ho(o.parent)){let f=Ft(o.parent),p=bo(f).thisType;return qp(t,p)}ti(o)&&console.debug("todo - tryGetThisTypeAt")}function Oo(t){let i=0;return t&2&&(i|=268547007),t&1&&(i|=111550),t&4&&(i|=0),t&8&&(i|=900095),t&16&&(i|=110991),t&32&&(i|=899503),t&64&&(i|=788872),t&256&&(i|=899327),t&128&&(i|=899967),t&512&&(i|=110735),t&8192&&(i|=103359),t&32768&&(i|=46015),t&65536&&(i|=78783),t&262144&&(i|=526824),t&524288&&(i|=788968),t&2097152&&(i|=2097152),i}function A(t,i){i.mergeId||(i.mergeId=IA,IA++),Se[i.mergeId]=t}function ee(t){let i=es(t.flags,t.name);return i.declarations=t.declarations?t.declarations.slice():[],i.parent=t.parent,t.valueDeclaration&&(i.valueDeclaration=t.valueDeclaration),t.constEnumOnlyModule&&(i.constEnumOnlyModule=!0),t.members&&(i.members=new Map(t.members)),t.exports&&(i.exports=new Map(t.exports)),A(i,t),i}function Fe(t,i,o=!1){if(!(t.flags&Oo(i.flags))||(i.flags|t.flags)&67108864){if(i===t)return t;if(!(t.flags&33554432)){let p=Ud(t);if(p===Di)return i;if(!(p.flags&Oo(i.flags))||(i.flags|p.flags)&67108864)t=ee(p);else return c(t,i),i}i.flags&512&&t.flags&512&&t.constEnumOnlyModule&&!i.constEnumOnlyModule&&(t.constEnumOnlyModule=!1),t.flags|=i.flags,i.valueDeclaration&&wb(t,i.valueDeclaration),Is(t.declarations,i.declarations),i.members&&(t.members||(t.members=bi()),Vl(t.members,i.members,o)),i.exports&&(t.exports||(t.exports=bi()),Vl(t.exports,i.exports,o)),o||A(t,i)}else c(t,i);return t;function c(p,m){let S=!!(p.flags&384||m.flags&384),I=!!(p.flags&2||m.flags&2),F=I?P.Cannot_redeclare_block_scoped_variable_0:P.Duplicate_identifier_0,U=m.declarations&&$n(m.declarations[0]),Q=p.declarations&&$n(p.declarations[0]),ne=!1,ae=!1,Ge=wi(m);if(U&&Q&&Yt&&!S&&U!==Q){let nt=Pk(U.path,Q.path)===-1?U:Q,wt=nt===U?Q:U,ht=gy(Yt,`${nt.path}|${wt.path}`,()=>({firstFile:nt,secondFile:wt,conflictingSymbols:new Map})),Rt=gy(ht.conflictingSymbols,Ge,()=>({isBlockScoped:I,firstFileLocations:[],secondFileLocations:[]}));ne||f(Rt.firstFileLocations,m),ae||f(Rt.secondFileLocations,p)}else ne||GT(m,F,Ge,p),ae||GT(p,F,Ge,m)}function f(p,m){if(m.declarations)for(let S of m.declarations)Tl(p,S)}}function Ke(t,i,o=0,c){Dr(i,c);let f=wn(t);return f.intrinsicName=i,f.debugIntrinsicName=c,f.objectFlags=o|524288|2097152|33554432|16777216,f}function wn(t){let i=new u(Pt,t);return _++,i.id=_,Dt?.recordType(i),i}function Dr(t,i){let o=`${t},${i??""}`;Ir.has(o)&&w.fail(`Duplicate intrinsic type name ${t}${i?` (${i})`:""}; you may need to pass a name to createIntrinsicType.`),Ir.add(o)}function gn(t){let i;return t&&t.mergeId&&(i=Se[t.mergeId])?i:t}function fr(t){return IP(t)&&(t=t.parent),Js(Co(t))}function rr(t){let i=[];return t.forEach((o,c)=>{LI(c)||i.push(o)}),i}function C(t,i){let o=bi(),c=!1;return f(),o.delete("this"),rr(o);function f(){for(;t;){switch(xl(t)&&t.locals&&!h9(t)&&m(t.locals,i),t.kind){case 176:m(Ft(t).exports,i&-1);break;case 274:m(Du(Ft(t)),i&788968);break;case 270:t.name&&p(t.symbol,i);break}y9(t)&&p(hn,i),c=!1,t=t.parent}m(Lt,i)}function p(S,I){if(ag(S)&I){let F=S.name;o.has(F)||o.set(F,S)}}function m(S,I){I&&S.forEach(F=>{p(F,I)})}}function $(t){return rr(EI(t))}function Ee(t){return R0(t.expression,t,64)||Bp(t.expression,192)||At}function _t(t){return t.kind===89&&q1(t.parent)&&hi(t.parent)===t}function an(t){if(ti(t))return At;if(Zp(t))return jn(t);if(ep(t))return fr(t);if(q1(t)){let i=Ft(t);return bo(i)}if(_t(t)){let i=gc(t);return i?bo(i):At}if(ms(t))return $0(t,!0,0)||At;if(hp(t)){let i=Ft(t);return i?Ln(i):At}if(LA(t)){let i=gc(t);return i?Ln(i):At}return ds(t)&&$0(t.parent,!0,0)||At}function Ft(t){return gn(t.symbol&&qn(t.symbol))}function qn(t){if(t.flags&32&&ti(t.valueDeclaration)){let i=Ln(t,64);i.resolvedBaseTypes||Z_(i)}if(t.flags&106500&&t.name==="__computed"){let i=jt(t);if(!i.lateSymbol&&kt(t.declarations,V6)){let o=gn(t.parent);Du(o)}return i.lateSymbol||(i.lateSymbol=t)}return t}function jt(t){if(t.flags&33554432)return t.links;let i=Yi(t);return De[i]??(De[i]=new OA)}function $r(t,i,...o){return t?fi(t,i,...o):ac(i,...o)}function at(t,i,...o){let c=$r(t,i,...o);return Vn.add(c),c}function os(t){let i=bf(t);return i?ao(i,os):[t]}function fa(t,i,o){return o||A0(t,i),qt}function Oc(t,i){return ml(t,i,ua)?-1:0}function uo(t,i,o=Oc){return L5(t,i,o)||$l(t,i)||qu(t,i)||Cd(t,i)||G_(t,i)}function qu(t,i){if($t(t)&128&&Zl(i,$p))return Zr(i.types,o=>!$p(o))}function Cd(t,i){let o=0;if(Oi(t,o).length>0||(o=1,Oi(t,o).length>0))return Zr(i.types,f=>Oi(f,o).length>0)}function G_(t,i){let o;if(!(t.flags&406978492)){let c=0;for(let f of i.types)if(!(f.flags&406978492)){let p=yi([ll(t),ll(f)]);if(p.flags&4194304)return f;if(mt(p)||p.flags&1048576){let m=p.flags&1048576?Kf(p.types,mt):1;m>=c&&(o=f,c=m)}}}return o}function $l(t,i){let o=$t(t);if(o&20&&i.flags&1048576)return Zr(i.types,c=>{if(c.flags&524288){let f=o&$t(c);if(f&4)return t.target===c.target;if(f&16)return!!t.aliasSymbol&&t.aliasSymbol===c.aliasSymbol}return!1})}function bf(t){if(Es(t)&6)return Vi(jt(t).containingType.types,i=>ni(i,t.name));if(t.flags&33554432){let{links:{leftSpread:i,rightSpread:o,syntheticOrigin:c}}=t;return i?[i,o]:c?[c]:my(Q_(t))}}function Q_(t){let i,o=t;for(;o=jt(o).target;)i=o;return i}function ni(t,i,o,c){if(t=xd(t),Ys(t)){let f=Fa(t.resolvedTypeArguments);f.flags&524288&&(t=f)}if(t.flags&524288){let f=fl(t),p=f.members?.get(i);if(p&&C6(p,c))return p;if(o)return;let m=f===mi?R:f.callSignatures?.length?ut:f.constructSignatures?.length?Ar:void 0;if(m){let S=vu(m,i);if(S)return S}return vu(x,i)}if(t.flags&2097152){let f=yu(t,i,!0);return f||(o?void 0:yu(t,i,o))}if(t.flags&1048576)return yu(t,i,o)}function yu(t,i,o){let c=Bs(t,i,o);return c&&!(Es(c)&16)?c:void 0}function Bs(t,i,o){let c=o?t.propertyCacheWithoutObjectFunctionPropertyAugment?.get(i):t.propertyCache?.get(i);return c||(c=eT(t,i,o),c&&((o?t.propertyCacheWithoutObjectFunctionPropertyAugment||(t.propertyCacheWithoutObjectFunctionPropertyAugment=bi()):t.propertyCache||(t.propertyCache=bi())).set(i,c),o&&!(Es(c)&48)&&!t.propertyCache?.get(i)&&(t.propertyCache||(t.propertyCache=bi())).set(i,c))),c}function Ls(t){if(t.flags&464781312){let i=Z6(t);return i!==Wa&&i!==Pa?i:void 0}return t.flags&4194304?nr:void 0}function Yk(t,i){if(t===i)return t.resolvedApparentType||(t.resolvedApparentType=Up(t,i,!0));let o=`I${zs(t)},${zs(i)}`;return aS(o)??cS(o,Up(t,i,!0))}function za(t){return t.resolvedApparentType||(t.resolvedApparentType=Y_(t))}function Y_(t){let i=t.target??t,o=nS(i);if(o&&!i.declaration.nameType){let c=v1(t),f=zo(c)?za(c):Ls(c);if(f&&qa(f,p=>bu(p)||I0(p)))return zn(i,Rd(o,f,t.mapper))}return t}function I0(t){return!!(t.flags&2097152)&&Ti(t.types,bu)}function Uo(t){let i=t.flags&465829888?Ls(t)||yr:t,o=$t(i);return o&32?za(i):o&4&&i!==t?Up(i,t):i.flags&2097152?Yk(i,t):i.flags&402653316?Fn:i.flags&256?cr:i.flags&2048?On:i.flags&524288&&i.intrinsicName==="closure"?Mr:i.flags&67108864?ns:i.flags&4194304?nr:i.flags&2&&!G?ns:i}function Pd(t){let i=$1(t.symbol);return i&&sy(i)}function Zk(t,i){let o=t.symbol??qf(i);w.assertIsDefined(o),Jt(i.heritageClauses,m=>Ag(m));let c=Jd(o);xu(t,c,Oe,Oe,Oe);let f=Uo(t);if(!o?.inherits)return t.resolvedBaseTypes=Oe;let p=[f];return Qc(o?.inherits,(m,S)=>{$u(m);let I=Uo(m);p.push(I)}),t.resolvedBaseTypes=p}function Z_(t){t.resolvedBaseTypes=kP;let i=$1(t.symbol);if(i&&ti(i))return Zk(t,i);let o=Uo(M6(t));if(!(o.flags&2621441))return t.resolvedBaseTypes=Oe;let c;if(o.flags&1?c=o:w.fail("todo - resolveBaseTypesOfClass"),Ws(c))return t.resolvedBaseTypes=Oe;let f=dc(c);return Ig(f)?t===f||g4(f,t)?(at(t.symbol.valueDeclaration,P.Type_0_recursively_references_itself_as_a_base_type,rn(t,void 0,2)),t.resolvedBaseTypes=Oe):(t.resolvedBaseTypes===kP&&(t.members=void 0),t.resolvedBaseTypes=[f]):(console.debug("todo - isValidBaseType"),t.resolvedBaseTypes=Oe)}function $u(t){if(!t.baseTypesResolved){if(If(t,6)&&(t.resolvedBaseTypes=[],t.symbol?.flags&96&&t.symbol.flags&32&&Z_(t),!Nf()&&t.symbol?.declarations))for(let i of t.symbol.declarations);t.baseTypesResolved=!0}return t.resolvedBaseTypes}function eT(t,i,o){let c,f,p,m=t.flags&1048576,S,I=4,F=m?0:8,U=!1;for(let It of t.types){let ln=Uo(It);if(!(Ws(ln)||ln.flags&131072)){let Pn=ni(ln,i,o),pr=Pn?Sl(Pn):0;if(Pn){if(Pn.flags&106500&&(S??(S=m?0:16777216),m?S|=Pn.flags&16777216:S&=Pn.flags),!c)c=Pn;else if(Pn!==c)if((Cg(Pn)||Pn)===(Cg(c)||c)&&kg(c,Pn,(rs,ji)=>rs===ji?-1:0)===-1)U=!!c.parent&&!!Pr(Ep(c.parent));else{f||(f=new Map,f.set(Yi(c),c));let rs=Yi(Pn);f.has(rs)||f.set(rs,Pn)}m&&Dp(Pn)?F|=8:!m&&!Dp(Pn)&&(F&=-9),F|=(pr&6?0:256)|(pr&4?512:0)|(pr&2?1024:0)|(pr&256?2048:0),I=2}else if(m){let Tr=!K_(i)&&Cf(ln,i);Tr?(F|=32|(Tr.isReadonly?8:0),p=ei(p,Tr.type)):Fc(ln)&&!($t(ln)&2097152)?(F|=32,p=ei(p,Zn)):F|=16}}}if(!c||m&&(f||F&48)&&F&1536&&!(f&&nC(f.values())))return;if(!f&&!(F&16)&&!p)if(U){let It=to(c,D_)?.links,ln=xp(c,It?.type);return ln.parent=c.valueDeclaration?.symbol?.parent,ln.links.containingType=t,ln.links.mapper=It?.mapper,ln.links.writeType=Ed(c),ln}else return c;let Q=f?as(f.values()):[c],ne,ae,Ge,nt=[],wt,ht,Rt=!1;for(let It of Q){ht?It.valueDeclaration&&It.valueDeclaration!==ht&&(Rt=!0):ht=It.valueDeclaration,ne=Is(ne,It.declarations);let ln=Ln(It);ae||(ae=ln,Ge=jt(It).nameType);let Pn=Ed(It);(wt||Pn!==ln)&&(wt=ei(wt||nt.slice(),Pn)),ln!==ae&&(F|=64),Qu(ln)&&(F|=128),ln.flags&131072&&ln!==oi&&(F|=131072),nt.push(ln)}Is(nt,p);let Ut=es(4|(S??0),i,I|F);return Ut.links.containingType=t,!Rt&&ht&&(Ut.valueDeclaration=ht,ht.symbol.parent&&(Ut.parent=ht.symbol.parent)),Ut.declarations=ne,Ut.links.nameType=Ge,nt.length>2?(Ut.links.checkFlags|=65536,Ut.links.deferralParent=t,Ut.links.deferralConstituents=nt,Ut.links.deferralWriteConstituents=wt):(Ut.links.type=m?vn(nt):yi(nt),wt&&(Ut.links.writeType=m?vn(wt):yi(wt))),Ut}function vu(t,i){if(t.flags&524288){let c=fl(t).members.get(i);if(c&&C6(c))return c}}function xd(t){return dc(Uo(dc(t)))}function A0(t,i,o){try{return s=i,ta(t,()=>tT(t,o))}finally{s=void 0}}function tT(t,i){if(t){k6();let o=Vn.getGlobalDiagnostics(),c=o.length;b6(t,i);let f=Vn.getDiagnostics(t.fileName),p=Yr(t.statements,zv);if(Jt(p,S=>{let I=Vn.getDiagnostics(S.fileName);if(I.length){let F=fi(S,P.Include_file_0_contains_one_or_more_errors,BP(S));Rs(F,...I),f.push(F)}}),i)return f;let m=Vn.getGlobalDiagnostics();if(m===o){if(c===0&&m.length>0)return ri(m,f)}return f}return Jt(e.getSourceFiles(),o=>b6(o)),Vn.getDiagnostics()}function Xk(t,i){Dt?.push(Dt.Phase.Check,i?"checkSourceFileNodes":"checkSourceFile",{path:t.path},!0);let o=i?"beforeCheckNodes":"beforeCheck",c=i?"afterCheckNodes":"afterCheck";ci.mark(o),X=t,i?Kq(t,i):Xq(t),X=void 0,ci.mark(c),ci.measure("Check",o,c),Dt?.pop()}function Tn(t){let i=Sa(t);return Ne[i]||(Ne[i]=new ate)}function X_(t,i,o){if(o){let c=gn(t.get(i));if(c&&(c.flags&o||c.flags&2097152&&fm(c)&o))return c}}function nT(t){return Tn(t).declarationRequiresScopeChange}function Dd(t,i){Tn(t).declarationRequiresScopeChange=i}function rT(t){return!!(t.flags&33554432)&&iC(t)}function Ws(t){return t===At||!!(t.flags&1&&t.aliasSymbol)}function kg(t,i,o){if(t===i)return-1;let c=Sl(t)&6,f=Sl(i)&6;if(c!==f)return 0;if(c){if(Cg(t)!==Cg(i))return 0}else if((t.flags&16777216)!==(i.flags&16777216))return 0;return Dp(t)!==Dp(i)?0:o(Ln(t),Ln(i))}function O0(t,i){return Zr(t,o=>o.keyType===i)}function Kk(t){return t.flags&3670016?fl(t).indexInfos??Oe:Oe}function So(t){return Kk(xd(t))}function Lc(t,i){return O0(So(t),i)}function Fc(t){return!!($t(t)&128)}function Hl(t,i){return Lc(t,i)?.type}function eC(t,i){return i.properties.some(c=>{let f=c.name&&Kd(c.name),p=f&&Qf(f)?Gf(f):void 0,m=p===void 0?void 0:nc(t,p);return!!m&&Qu(m)&&!Si(an(c),m)})}function Hu(t,i){return Si(t,i)||i===mr&&Si(t,An)||i===An&&!!(t.flags&128)&&Hp(t.value)}function L0(t,i){return So(t).filter(o=>Hu(i,o.keyType))}function iT(t,i){w.assertIsDefined(t);let o,c,f;for(let p of t)p.keyType===mr?o=p:Hu(i,p.keyType)&&(c?(f||(f=[c])).push(p):c=p);return c||(o&&Hu(i,mr)?o:void 0)}function pa(t,i){return iT(So(t),i)}function kf(t,i,o,c){let f=a1(t,o);return f.value=i,f.regularType=c||f,f}function Ka(t){let i;return Jr.get(t)||(Jr.set(t,i=kf(256,t)),i)}function rl(t){let i;return Ji.get(t)||(Ji.set(t,i=kf(128,t)),i)}function tC(t){let i;return Ss.get(t)||(Ss.set(t,i=kf(8192,t)),i)}function Cf(t,i){return pa(t,rl(i))}function nC(t){let i;for(let o of t){if(!o.declarations)return;if(!i){i=new Set(o.declarations);continue}if(i.forEach(c=>{ki(o.declarations,c)||i.delete(c)}),i.size===0)return}return i}function Us(t,i){if(t.flags&1048576){let o=t.types,c=Yr(o,i);if(c===o)return t;let f=t.origin,p;if(f&&f.flags&1048576){let m=f.types,S=Yr(m,I=>!!(I.flags&1048576)||i(I));if(m.length-S.length===o.length-c.length){if(S.length===1)return S[0];p=Hn(1048576,S)}}return wp(c,t.objectFlags&16809984,void 0,void 0,p)}return t.flags&131072||i(t)?t:Bn}function sT(t,i){return Us(t,o=>o!==i)}function Gu(t,i){return t}function Ed(t){let i=Es(t);return t.flags&4?Gu(Ln(t),!!(t.flags&16777216)):Ln(t)}function xp(t,i){let o=es(t.flags,t.name,Es(t)&8);o.declarations=t.declarations,o.parent=t.parent,o.links.type=i,o.links.target=t,t.valueDeclaration&&(o.valueDeclaration=t.valueDeclaration);let c=jt(t).nameType;return c&&(o.links.nameType=c),o}function Dp(t){return!!(Es(t)&8||t.flags&98304&&!(t.flags&65536)||t.flags&8||kt(t.declarations,zt))}function rC(t){return!!(t.flags&128)}function Qu(t){return t.flags&16?!0:t.flags&1048576?t.flags&1024?!0:Ti(t.types,mt):mt(t)}function K_(t){return t.charCodeAt(0)===95&&t.charCodeAt(1)===95&&t.charCodeAt(2)===64}function Ep(t){if(!t.declarations)return;let i;for(let o of t.declarations)(o.kind===155||o.kind===170||o.kind===274||J1(o))&&(i=WC(i,fh(o)));return i}function Cg(t){return Es(t)&1?t.links.target:t}function iC(t){for(let i of t.statements)console.warn("Implement me - grammar check");return!1}function wp(t,i,o,c,f){if(t.length===0)return Bn;if(t.length===1)return t[0];let m=(f?f.flags&1048576?`|${ma(f.types)}`:f.flags&2097152?`&${ma(f.types)}`:`#${f.type.id}|${ma(t)}`:ma(t))+$d(o,c),S=Gs.get(m);return S||(S=wn(1048576),S.objectFlags=i|cn(t,98304),S.types=t,S.origin=f,S.aliasSymbol=o,S.aliasTypeArguments=c,t.length===2&&t[0].flags&512&&t[1].flags&512&&(S.flags|=16,S.intrinsicName="boolean"),Gs.set(m,S)),S}function oT(t){return t}function Np(t,i,o){t.name&&Lr(t.name);let c=Xt(t.elements||Oe,Lr);return c.length===1?c[0]:Ci}function sC(t,i,o){let c=t.elements,f=c?.length||0,p=[],m=[],S=[];ZC(t);let I=!1;for(let Q=0;Q<f;Q++){let ne=c[Q];if(_e&&ne.kind===297)I=!0,m.push([vo]),S.push(2);else if(!Bm(ne)){let ae=Gg(ne.name,i,o);p.push(ae),S.push(I?2:1),Jt(ne.elements,(Ge,nt)=>{let wt=Gg(Ge,i,o);m[nt]=m[nt]||[],m[nt].push(Wc(wt,!0,I)),S.push(I?2:1)})}}jg();let F=dc(vn(p,2)),U=m.length>1?Qs(vn(m.map(Q=>dc(vn(Q,2))))):m.length===1?dc(vn(m[0],2)):G?Os:ls;return aT(Sd(F,U,!1))}function Pg(t,i,o){let c=t.elements,f=c.length,p=[],m=[];ZC(t);let S=wu(t),I=!1,F=z0(t,void 0),U=!1,Q=!1;for(let ne=0;ne<f;ne++){let ae=c[ne];if(ae.kind===294){let Ge=Lr(ae.expression,i,o);if($p(Ge))p.push(Ge),m.push(8);else if(S){let nt=Hl(Ge,An)||em(65,Ge,Zn,void 0,!1)||yr;p.push(nt),m.push(4)}else p.push(zf(33,Ge,Zn,ae.expression)),m.push(4)}else if(_e&&ae.kind===297)Q=!0,p.push(vo),m.push(2);else{let Ge=Gg(ae,i,o);if(p.push(Wc(Ge,!0,Q)),m.push(Q?2:1),U&&i&&i&2&&!(i&4)&&tc(ae)){let nt=im(t);w.assert(nt),Xw(nt,ae,Ge)}}}return jg(),S?Eu(p,m):Lo(o||I||U?Eu(p,m,I&&!(F&&Zl(F,RY))):Qs(p.length?vn(xo(p,(ne,ae)=>m[ae]&8?Ad(ne,An)||Cn:ne),2):G?Os:O,I))}function Lo(t){if(!($t(t)&4))return t;let i=t.literalType;return i||(i=t.literalType=F0(t),i.objectFlags|=147456),i}function aT(t){if(!($t(t)&4))return t;let i=t.literalType;return i||(i=t.literalType=F0(t),i.objectFlags|=133120),i}function F0(t){let i=a1(t.flags,t.symbol);return i.objectFlags=t.objectFlags,i.target=t.target,i.resolvedTypeArguments=t.resolvedTypeArguments,i}function oC(t,i,o){return i1(t,!1,void 0,rn(i))}function em(t,i,o,c,f){let p=(t&2)!==0;if(i===Bn){c&&oC(c,i,p);return}let S=!!0,I=oe.noUncheckedIndexedAccess&&!!(t&128),F=i,U=!1;if(t&4){if(F.flags&1048576){let ae=i.types,Ge=Yr(ae,nt=>!(nt.flags&402653316));Ge!==ae&&(F=vn(Ge,2))}else F.flags&402653316&&(F=Bn);if(U=F!==i,U&&F.flags&131072)return I?k1(mr):mr}if(!$p(F)&&!jd(F)){if(c){let ae=!!(t&4)&&!U,[Ge,nt]=ne(ae,S);i1(c,!1,Ge,rn(F))}return U?I?k1(mr):mr:void 0}let Q=Ys(F)&&F.resolvedTypeArguments?qs(F.resolvedTypeArguments):Hl(F,An);if(U&&Q)return Q.flags&402653316&&!oe.noUncheckedIndexedAccess?mr:vn(I?[Q,mr,Zn]:[Q,mr],2);if(jd(F))return F.resolvedTypeArguments?.length?vn(F.resolvedTypeArguments):ls;return t&128?k1(Q):Q;function ne(ae,Ge){return Ge?ae?[P.Type_0_is_not_an_array_type_or_a_string_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator,!0]:[P.Type_0_is_not_an_array_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator,!0]:ae?[P.Type_0_is_not_an_array_type_or_a_string_type,!0]:[P.Type_0_is_not_an_array_type,!0]}}function wd(t,i,o){return t.flags&4194304?aC(t,i):J6(t,t.expression,R0(t.expression,t,i)??Bp(t.expression,i),t.name,i,o)}function R0(t,i,o){if(t.kind===16)return g6(t);if(Tt(t))return;{let c=Lr(t,o);if(c.flags&132){let f=t,m=Vd(i||t,f,c);if(m){let S=n1(m,f,!0);if(S&&ti(S.valueDeclaration))return Ln(S)}}}}function aC(t,i){let o=Lr(t.expression),c=Ip(o,t.expression);return xg(J6(t,t.expression,Yl(c,t.expression),t.name,i),t,c!==o)}function Ip(t,i){return console.debug("todo - getOptionalExpressionType"),t}function xg(t,i,o){return t}function cT(t){return t}function D(t){return Xn(t,i=>{switch(i.kind){case 237:case 238:return!1;default:return!0}}).parent}function J(t){return on===t||(on=t,Vr=Pv(t)),Vr}function K(t){if(t){let o=Tn(t);return o.isVisible===void 0&&(o.isVisible=!!i()),o.isVisible}return!1;function i(){switch(t.kind){case 217:case 225:case 219:return!!(t.parent&&t.parent.parent&&t.parent.parent.parent&&ti(t.parent.parent.parent));case 266:return K(t.parent.parent);case 237:if(ds(t.name)&&!t.name.elements.length)return!1;case 239:case 169:let o=D(t);return!(J(t)&2048)&&!(o.kind!==176&&o.flags&33554432)?!0:K(o);case 152:case 153:if(b_(t,6))return!1;case 150:case 149:case 163:case 166:case 161:case 157:case 159:case 165:return K(t.parent);case 148:case 176:return!0;default:return!1}}}function ge(t,i){if(t=qd(t),i.kind===89&&(IP(i)&&(i=i.parent),ep(i)&&(!wu(i)||ey(i)))){let o=Co(i);if(qd(Tn(i).resolvedSymbol)===t)return o}return SF(i)&&ey(i.parent)?Ed(t):Be(t)}function Be(t){return Gu(Ln(t),!!(t.flags&16777216))}function mt(t){return!!(t.flags&101280)}function zt(t){return hs(t)&&console.warn("Implement me - isReadonlyAssignmentDeclaration"),!1}function ir(t){return t.valueDeclaration?u1(t.valueDeclaration):0}function cn(t,i){let o=0;for(let c of t)(i===void 0||!(c.flags&i))&&(o|=$t(c));return o&458752}function gi(t){return new u(Pt,t)}function Hn(t,i){let o=gi(t);return o.types=i,o}function Dn(t){if(t){let i=E;E=t,v=0,Pi(t),E=i}}function Pi(t){if(XN(t)&8388608)return;Ov(t)&&Jt(t.jsDoc,({comment:o,tags:c})=>{EN(o),Jt(c,f=>{EN(f.comment),Nr(t)&&Dn(f)})});let i=t.kind;if(s)switch(i){case 169:s.throwIfCancellationRequested()}switch(i>=242&&i<=256&&ZS(t)&&t.flowNode&&!Y0(t.flowNode)&&VN(oe.allowUnreachableCode===!1,t,P.Unreachable_code_detected),i){case 148:return NN(t);case 149:return Gw(t);case 252:return Ag(t);case 178:return PC(t);case 241:return Id(t);case 258:case 166:return lC(t);case 152:return Pf(t);case 153:return il(t);case 158:case 151:case 150:return bT(t);case 163:return xf(t);case 161:return dC(t);case 157:case 159:return pC(t);case 165:case 160:return Dn(t.type);case 167:return yq(t);case 263:w.fail("type operator");case 207:w.fail("augments");case 208:w.fail("implements");case 225:case 217:return rq(t);case 228:return nq(t);case 224:return iq(t);case 223:return sq(t);case 203:case 204:case 205:console.debug("todo - checkJSDocLinkLikeTag");return;case 220:return oq(t);case 227:return aq(t);case 221:return cq(t);case 196:lq(t);case 194:case 193:case 191:case 192:case 201:Ns(t,Dn);return;case 197:console.debug("todo - checkJSDocVariadicType");return;case 188:return Dn(t.type);case 212:case 214:case 213:console.debug("todo - checkJSDocAccessibilityModifiers");return;case 230:console.debug("todo - checkJSDocSatisfiesTag");return;case 261:return EC(t);case 264:return xC(t);case 169:return bt(t);case 236:return zN(t);case 242:return Rq(t);case 247:return xa(t);case 253:return Yu(t);case 245:return gC(t);case 246:return hC(t);case 243:return TC(t);case 244:return SC(t);case 251:case 250:return $V(t);case 248:return _C(t);case 256:return tm(t);case 237:mT(t);return;case 266:gT(t);return;case 170:w.fail("class declaration");case 239:w.fail("type alias");case 173:return void 0;case 255:return Dn(t.block);case 269:case 92:case 94:case 140:case 105:case 138:case 101:return;case 179:return;case 1:case 257:case 16:case 11:case 272:case 104:case 89:case 267:case 93:case 187:case 281:case 206:case 254:case 211:case 202:return}console.warn("Implement me - checkSourceElementWorker - "+w.formatSyntaxKind(t.kind))}function Ri(t){}function xa(t){Lr(t.expression)}function Yu(t){let i=Nd(t.expression);S6(t.expression,i,t.thenStatement),Dn(t.thenStatement),Dn(t.elseStatement)}function Zu(t,i,...o){let c=kc(t),f=$n(t);if(!IC(f)){let p=qm(c,t.pos);return Vn.add(Iu(c,p.start,p.length,i,...o)),!0}return!1}function il(t){return Pf(t)}function Pf(t){!Wd(t)&&cC(t),kT(t)}function cC(t){if(!ho(t.parent)){if(ap(t.parent)&&(w.assertNode(t,Kp),t.initializer))return da(t.initializer,P.A_type_literal_property_cannot_have_an_initializer)}}function lC(t){if(Vw(t,t.typeArguments),t.kind===166&&!Nr(t)&&!jb(t)&&t.typeArguments&&t.typeName.end!==t.typeArguments.pos){let i=$n(t);lR(i,t.typeName.end)===24&&ST(t,ts(i.text,t.typeName.end),1,P.JSDoc_types_can_only_be_used_inside_documentation_comments)}Jt(t.typeArguments,Dn),fT(t)}function lT(t){let i=jn(t);if(!Ws(i)){let o=Tn(t).resolvedSymbol;if(o)return uT(i,o)}}function uT(t,i){if(!Ws(t))return i.flags&524288&&jt(i).typeParameters||($t(t)&4?t.target.localTypeParameters:void 0)}function uC(t,i){let o,c,f=!0;for(let p=0;p<i.length;p++){let m=ga(i[p]);m&&(o||(o=KC(t,i),c=Jo(i,o)),f=f&&Rf(o[p],zn(m,c),t.typeArguments[p],P.Type_0_does_not_satisfy_the_constraint_1))}return f}function fT(t){let i=jn(t);if(!Ws(i)){t.typeArguments&&r(()=>{let c=lT(t);c&&uC(t,c)});let o=Tn(t).resolvedSymbol;o&&kt(o.declarations,c=>q1(c)&&!!(c.flags&536870912))&&Hg(sl(t),o.declarations,o.name)}}function sl(t){switch(t=ws(t),t.kind){case 272:case 276:return sl(t.expression);case 281:return t.argumentExpression;case 286:return t.name;case 166:let i=t;return iu(i.typeName)?i.typeName.right:i;default:return t}}function xf(t){Jt(t.members,Dn),r(i);function i(){let o=M0(t);pT(o,o.symbol),fC(t),dT(t)}}function pT(t,i,o){let c=So(t);if(c.length===0)return;for(let p of Cu(t))o&&p.flags&4194304||Da(t,p,J0(p,384,!0),Be(p));let f=i.valueDeclaration;if(f&&ho(f)){for(let p of f.members)if(!Wy(p)&&!en(p)){let m=Ft(p);Da(t,m,Co(p.name.expression),Be(m))}}if(c.length>1)for(let p of c)Dg(t,p)}function Da(t,i,o,c){let f=i.valueDeclaration,p=hi(f);if(p&&Cc(p))return;let m=L0(t,o),S=$t(t)&2?sf(t.symbol,155):void 0,I=f&&f.kind===269||p&&p.kind===147?f:void 0,F=nf(i)===t.symbol?f:void 0;for(let U of m){let Q=U.declaration&&nf(Ft(U.declaration))===t.symbol?U.declaration:void 0,ne=F||Q||(S&&!kt($u(t),ae=>!!vu(ae,i.name)&&!!Hl(ae,U.keyType))?S:void 0);if(ne&&!Si(c,U.type)){let ae=$r(ne,P.Property_0_of_type_1_is_not_assignable_to_2_index_type_3,wi(i),rn(c),rn(U.keyType),rn(U.type));I&&ne!==I&&Rs(ae,fi(I,P._0_is_declared_here,wi(i))),Vn.add(ae)}}}function Dg(t,i){let o=i.declaration,c=L0(t,i.keyType),f=$t(t)&2?sf(t.symbol,155):void 0,p=o&&nf(Ft(o))===t.symbol?o:void 0;for(let m of c){if(m===i)continue;let S=m.declaration&&nf(Ft(m.declaration))===t.symbol?m.declaration:void 0,I=p||S||(f&&!kt($u(t),F=>!!Lc(F,i.keyType)&&!!Hl(F,m.keyType))?f:void 0);I&&!Si(i.type,m.type)&&at(I,P._0_index_type_1_is_not_assignable_to_2_index_type_3,rn(i.keyType),rn(i.type),rn(m.keyType),rn(m.type))}}function dT(t){let i=new Map;for(let o of t.members)if(o.kind===153){let c,f=o.name;switch(f.kind){case 16:case 11:c=f.text;break;case 89:c=go(f);break;default:continue}i.get(c)?(at(hi(o.symbol.valueDeclaration),P.Duplicate_identifier_0,c),at(o.name,P.Duplicate_identifier_0,c)):i.set(c,!0)}}function fC(t){let i=u6(Ft(t));if(i?.declarations){let o=new Map;for(let c of i.declarations)c.parameters.length===1&&c.parameters[0].type&&t_(jn(c.parameters[0].type),f=>{let p=o.get(zs(f));p?p.declarations.push(c):o.set(zs(f),{type:f,declarations:[c]})});o.forEach(c=>{if(c.declarations.length>1)for(let f of c.declarations)at(f,P.Duplicate_index_signature_for_type_0,rn(c.type))})}}function _T(t){let i=Tn(t);return i.resolvedType||(i.resolvedType=Df(Ft(t.typeParameter))),i.resolvedType}function M0(t){let i=Tn(t);if(!i.resolvedType){let o=Op(t);if(Du(t.symbol).size===0&&!o)i.resolvedType=Xa;else{let c=dl(16,t.symbol);c.aliasSymbol=o,c.aliasTypeArguments=Ld(o),R_(t)&&t.isArrayType&&(c=Qs(c)),i.resolvedType=c}}return i.resolvedType}function pC(t){Jt(t.types,Dn),jn(t)}function dC(t){Dn(t.elementType)}function tm(t){let i,o=!1,c=Lr(t.expression);Jt(t.caseBlock.clauses,f=>{f.kind===301&&!o&&(i===void 0?i=f:(da(f,P.A_default_clause_cannot_appear_more_than_once_in_a_switch_statement),o=!0)),f.kind===299&&r(p(f)),Jt(f.statements,Dn),oe.noFallthroughCasesInSwitch&&f.fallthroughFlowNode&&Y0(f.fallthroughFlowNode)&&at(f,P.Fallthrough_case_in_switch);function p(m){return()=>{let S=Lr(m.expression);y6(c,S)||oI(S,c,m.expression,void 0)}}}),t.caseBlock.locals&&Jg(t.caseBlock)}function _C(t){let i=RF(t);if(!i){Zu(t,P.A_return_statement_can_only_be_used_within_a_function_body);return}let o=Ai(i);w.assertIsDefined(o,"Container should have a signature");let c=Ei(o),f=Sc(i);if(G||t.expression||c.flags&131072){let p=t.expression?Fo(t.expression):Zn;if(fo(i)){let m=U0(c,f)??c;m&&Ff(p,m,t,t.expression)}}else oe.noImplicitReturns&&!zw(i,c)&&at(t,P.Not_all_code_paths_return_a_value)}function Eg(t,i){if(eh(t),i&&i&4&&tc(t)){if(!$c(t)&&!XS(t)){let c=Rg(t);if(c&&cl(Ei(c))){let f=Tn(t);if(f.contextFreeType)return f.contextFreeType;let p=X0(t,i),m=Pu(void 0,void 0,void 0,Oe,p,void 0,0,512),S=wa(t.symbol,j,[m],Oe,Oe);return S.objectFlags|=262144,f.contextFreeType=S}}return mi}let o=AC(t);return wg(t,i),Ln(Ft(t))}function wg(t,i){let o=Tn(t);if(!(o.flags&64)){let c=Rg(t);if(!(o.flags&64)){o.flags|=64;let f=Fa(Oi(Ln(Ft(t)),0));if(!f)return;if((tc(t)||c&&!t.typeParameters&&c.parameters?.length>t.parameters?.length)&&console.debug("todo - contextuallyCheckFunctionExpressionOrObjectLiteralMethod"),c&&!fo(t)&&!f.resolvedReturnType){let p=X0(t,i);f.resolvedReturnType||(f.resolvedReturnType=p)}bT(t)}}}function mC(t,i){let o=Lr(t.expression,i);return zf(33,o,Zn,t.expression)}function mT(t){Dt?.push(Dt.Phase.Check,"checkVariableDeclaration",{kind:t.kind,pos:t.pos,end:t.end,path:t.tracingPath}),yC(t);let i=kT(t);return Dt?.pop(),i}function gT(t){return kT(t)}function gC(t){Dn(t.statement),Nd(t.expression)}function hC(t){Nd(t.expression),Dn(t.statement)}function yC(t){let o=u1(t)&1;return t.parent.parent.kind!==244&&t.parent.parent.kind!==243&&t.initializer,!!o}function vC(t){if(t.initializer.kind===238){let i=t.initializer;if(!$N(i)){let o=i.declarations;if(!o.length)return!1;let c=Jt(o,f=>f.initializer);if(c){let f=P.The_variable_declaration_of_a_for_in_statement_cannot_have_an_initializer;return da(c.parent.name,f)}}}return!1}function TC(t){t.initializer&&(t.initializer.kind===238?B0(t.initializer):Lr(t.initializer)),t.condition&&Nd(t.condition),t.incrementor&&Lr(t.incrementor),Dn(t.statement),t.locals&&Jg(t)}function SC(t){if(vC(t),t.initializer.kind===238){let i=t.initializer.declarations[0];i&&ds(i.name)&&at(i.name,P.The_left_hand_side_of_a_for_each_statement_cannot_be_a_destructuring_pattern),B0(t.initializer)}else{let i=t.initializer,o=d4(t),c=Lr(i),f,p=Lr(t.expression);if(i.kind===290||i.kind===293?at(i,P.The_left_hand_side_of_a_for_each_statement_cannot_be_a_destructuring_pattern):ry(i)?(um(i.left,P.The_left_hand_side_of_a_for_each_mapping_statement_must_be_a_variable_or_a_property_access,P.The_left_hand_side_of_a_for_in_statement_may_not_be_an_optional_property_access),um(i.right,P.The_left_hand_side_of_a_for_each_mapping_statement_must_be_a_variable_or_a_property_access,P.The_left_hand_side_of_a_for_in_statement_may_not_be_an_optional_property_access),c=Lr(i.left),f=Lr(i.right),Si(bC(p),c)||at(i,P.The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any)):Si(p,c)?um(i,P.The_left_hand_side_of_a_for_each_mapping_statement_must_be_a_variable_or_a_property_access,P.The_left_hand_side_of_a_for_in_statement_may_not_be_an_optional_property_access):at(i,P.The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any),o){if(ry(i)&&o.flags&1048576){let m=o;Ff(m.types.at(0)??At,c,i.left,t.expression),Ff(m.types.at(1)??At,f,i.right,t.expression)}else Ff(o,c,i,t.expression);return}else!Cs(i)&&!ry(i)&&um(i,P.The_left_hand_side_of_a_for_in_statement_must_be_a_variable_or_a_property_access,P.The_left_hand_side_of_a_for_in_statement_may_not_be_an_optional_property_access);(p===Bn||!Vo(p,126091268))&&at(t.expression,P.The_right_hand_side_of_a_for_in_statement_must_be_of_type_any_an_object_type_or_a_type_parameter_but_here_has_type_0,rn(p))}Dn(t.statement),t.locals&&Jg(t)}function bC(t){let i=zV(ll(t));return i.flags&131072?mr:i}function Ng(t,i){return t.flags&16384&&at(i,P.An_expression_of_type_void_cannot_be_tested_for_truthiness),t}function Nd(t,i){return Ng(Lr(t,i),t)}function Id(t){Wd(t),Dn(t.type)}function hT(t){let i=!1,o=!1;return console.info("todo - checkGrammarClassDeclarationHeritageClauses"),!0}function kC(t){let i=$n(t);return hT(t)}function Aw(t){kC(t),ti(t)||(t.name,void 0);let i=Ft(t),o=bo(i),c=Ln(i);tn(i),yT(t);let f=sy(t);console.debug("todo - checkClassLikeDeclaration")}function Ig(t){if(t.flags&262144){let i=Ls(t);if(i)return Ig(i)}return!!(t.flags&67633153&&!zo(t)||t.flags&2097152&&Ti(t.types,Ig))}function yT(t){let i=new Map,o=new Map,c=new Map;if(ti(t))return;for(let p of t.members){let m=p.name;if(!m)continue;let S=i,I=m&&CC(m);if(I)switch(p.kind){case 152:f(S,m,I,3);break;case 154:f(S,m,I,8);break}}function f(p,m,S,I){let F=p.get(S);if(F){let U=!!(F&8),Q=!!(I&8);U||Q?U!==Q&&at(m,P.Duplicate_identifier_0,wl(m)):F&I&-17?at(m,P.Duplicate_identifier_0,wl(m)):p.set(S,F|I)}else p.set(S,I)}}function CC(t){let i=Hm(t);return i||(Ia(t)?j0(Co(t.expression)):void 0)}function j0(t){return t.flags&384?""+t.value:void 0}function B0(t){let i=ig(t)&1;Jt(t.declarations,Dn)}function PC(t){t.flags&16||(t.text||at(t,P.Cannot_find_include_file_0,BP(t)),Jt(t.statements,Dn),Dn(t.endOfFileToken))}function Ag(t){let i=$n(t),o=qf(i);o.inherits??(o.inherits=new Map);let c=t.inheritClause,f=Lr(c),p=Vd(t,c,f);if(p){let m=n1(p,c,!0);if(m){let S=Ln(m);o.inherits.set(p.name,S)}}}function xC(t){Ap(t),Dn(t.typeParameter),Dn(t.nameType),Dn(t.type),t.type||so(t,Cn);let i=Og(t),o=ol(i);if(o)Rf(o,nr,t.nameType);else{let c=zc(i);Rf(c,nr,B1(t.typeParameter))}}function ol(t){return t.declaration.nameType?t.nameType||(t.nameType=zn(jn(t.declaration.nameType),t.mapper)):void 0}function DC(t){let i=Tn(t);if(!i.resolvedType){let o=jn(t.checkType),c=Op(t),f=Ld(c),p=Fg(t,!0),m=f?p:Yr(p,I=>_N(I,t)),S={node:t,checkType:o,extendsType:jn(t.extendsType),isDistributive:!!(o.flags&262144),inferTypeParameters:N6(t),outerTypeParameters:m,instantiations:void 0,aliasSymbol:c,aliasTypeArguments:f};i.resolvedType=JC(S,void 0,!1),m&&(S.instantiations=new Map,S.instantiations.set(ma(m),i.resolvedType))}return i.resolvedType}function Og(t){let i=Tn(t);if(!i.resolvedType){let o=dl(32,t.symbol);o.declaration=t,o.aliasSymbol=Op(t),o.aliasTypeArguments=Ld(o.aliasSymbol),i.resolvedType=o,zc(o)}return i.resolvedType}function Ap(t){if(t.members?.length)return da(t.members[0],P.A_mapped_type_may_not_declare_properties_or_methods)}function EC(t){Dn(t.objectType),Dn(t.indexType),Xe(Xu(t),t)}function Xu(t){let i=Tn(t);if(!i.resolvedType){let o=jn(t.objectType),c=jn(t.indexType),f=Op(t);i.resolvedType=jc(o,c,0,t,f,Ld(f))}return i.resolvedType}function Xe(t,i){if(!(t.flags&8388608))return t;let o=t.objectType,c=t.indexType,f=zo(o)&&zC(o)===2?kN(o,0):ll(o,0),p=!!Lc(o,An);if(qa(c,m=>Si(m,f)||p&&Hu(m,An)))return i.kind===281&&wu(i)&&$t(o)&32&&Et(o)&1&&at(i,P.Index_signature_in_type_0_only_permits_reading,rn(o)),t;if(a6(o)){let m=sN(c,i);if(m){let S=t_(Uo(o),I=>ni(I,m));if(S&&Sl(S)&6)return at(i,P.Private_or_protected_member_0_cannot_be_accessed_on_a_type_parameter,m),At}}return at(i,P.Type_0_cannot_be_used_to_index_type_1,rn(c),rn(o)),At}function Et(t){let i=t.declaration;return(i.readonlyToken?i.readonlyToken.kind===42?2:1:0)|0}function bt(t){Wd(t),r(i);function i(){Mn(t),t.name}}function en(t){return!0}function tn(t){r(()=>fq(t))}function Mn(t){bT(t);let i=Sc(t);if(en(t)){let p=Ft(t),m=t.localSymbol||p,S=m.declarations?.find(I=>I.kind===t.kind);t===S&&tn(m),p.parent&&tn(p)}let o=t.body;Dn(o),Jw(t,fo(t)),r(f);let c=Fm(t);c&&c.typeExpression&&!HC(jn(c.typeExpression),t)&&at(c.typeExpression.type,P.The_type_of_a_function_declaration_must_match_the_function_s_signature);function f(){$c(t)||(Eo(o)&&so(t,Cn),i&1&&x_(o)&&Ei(Ai(t)))}}function Kr(t){let i;for(let o of fh(t))i=o_(i,Df(o.symbol));return i?.length?i:Yc(t)?Tu(t)?.typeParameters:void 0}function Ai(t){let i=Tn(t);if(!i.resolvedSignature){let o=[],c=0,f=0,p,m=Nr(t)?QS(t):void 0,S=!1,I=Yp(t),F=!1;!I&&Nr(t)&&k8(t)&&!W7(t)&&!Nv(t)&&(c|=256),J(t)&512&&(c|=8),Kc(t)&&(c|=16);for(let nt=F?1:0;nt<t.parameters?.length;nt++){let wt=t.parameters[nt];if(Nr(wt)&&SE(wt)){m=wt;continue}let ht=wt.symbol,Rt=Pc(wt)?wt.typeExpression&&wt.typeExpression.type:wt.type;ht&&ht.flags&4&&!ds(wt.name)&&(ht=hr(wt,ht.name,111551,void 0,!1)),nt===0&&ht.name==="this"?(S=!0,p=wt.symbol):o.push(ht),Rt&&Rt.kind===257&&(c|=2),f=o.length}m&&m.typeExpression&&(p=xp(es(1,"this"),jn(m.typeExpression)));let ne=ip(t)?Bb(t):t,ae=ne&&jm(ne)?jp(gn(ne.parent.symbol)):void 0,Ge=ae?ae.localTypeParameters:Kr(t);(D7(t)||Nr(t)&&Rc(t,o))&&(c|=1),i.resolvedSignature=Pu(t,Ge,p,o,void 0,void 0,f,c)}return i.resolvedSignature}function Rc(t,i){return!1}function so(t,i,o){console.warn("Implement me - reportImplicitAny")}function fo(t){let i=$c(t);if(ip(t)){let o=Av(t);if(o&&jm(o.parent)&&!i)return jp(gn(o.parent.parent.symbol))}return i?u_(i)&&t.type?vn([Xo,jn(t.type)]):jn(i):al(t)}function al(t){let i=Tu(t);return i&&Ei(i)}function Tu(t){if(!tu(t))return;let i=Fm(t);return i?.typeExpression&&Mf(jn(i.typeExpression))}function jn(t){return Oz(Bw(t),t)}function Js(t){return t.flags&2976?t.regularType:t.flags&1048576?t.regularType||(t.regularType=Zs(t,Js)):t}function gz(t){let i=Tn(t);if(!i.resolvedType){if(t.parent&&(o(t)||u_(t.parent))&&(ss(t.literal)||Ur(t.literal))){let c=t.literal,f=Vd(t,c,void 0),p=n1(f,c,!0);if(p&&ti(p.valueDeclaration)){let m=Ln(p);i.resolvedType=m}}i.resolvedType||(i.resolvedType=Js(Lr(t.literal)))}return i.resolvedType&&t.parent&&KP(t.parent.parent)&&(i.resolvedType.flags|=-2147483648),i.resolvedType;function o(c){return c_(c)||c.parent&&c_(c.parent)||c.parent.parent&&c_(c.parent.parent)||c.parent.parent.parent&&c_(c.parent.parent.parent)}}function hz(t){switch(t.kind){case 258:case 166:return t.typeName;case 280:let i=t.expression;if(va(i))return i}}function nm(t,i,o){let c=hz(t);if(!c)return Di;let f=hc(c,i,o);return f&&f!==Di?f:o?Di:vT(c)}function vT(t){let o=(t.kind===146?t.right:t.kind===286?t.name:t).text;if(o){let c=t.kind===146?vT(t.left):t.kind===286?vT(t.expression):void 0,f=c?`${Ow(c)}.${o}`:o,p=Pp.get(f);return p||(Pp.set(f,p=es(524288,o,1048576)),p.parent=c,p.links.declaredType=Yo),p}return Di}function Ow(t){return t.parent?`${Ow(t.parent)}.${t.name}`:t.name}function yz(t,i){console.debug("getTypeFromClassOrInterfaceReference?");let o=bo(gn(i));return o}function vz(t,i){let o=Tn(t);if(!o.resolvedJSDocType){let f=Ln(i);i.valueDeclaration,o.resolvedJSDocType=f}return o.resolvedJSDocType}function Lw(t,i){if(i===Di)return At;if(i.flags&96)return yz(t,i);if(i.flags&524288)return Tz(t,i);let o=Uw(i);if(o)return ef(t,i)?Js(o):At;if(i.flags&111551&&TT(t)){let c=vz(t,i);return c||(nm(t,788968),Ln(i))}return At}function Fw(t){let i=t.declarations?.find(J1);return!!(i&&_h(i))}function Tz(t,i){if(Es(i)&1048576){let f=[],p=$d(i,f),m=vd.get(p);return m||(m=Ke(1,"error",void 0,`alias ${p}`),m.aliasSymbol=i,m.aliasTypeArguments=f,vd.set(p,m)),m}let o=bo(i),c=jt(i).typeParameters;if(c){let f=Pr(t.typeArguments),p=ku(c);if(f<p||f>c.length)return at(t,p===c.length?P.Generic_type_0_requires_1_type_argument_s:P.Generic_type_0_requires_between_1_and_2_type_arguments,wi(i),p,c.length),At;let m=Op(t),S=m&&(Fw(i)||!Fw(m))?m:void 0,I;if(S)I=Ld(S);else if(U7(t)){let F=nm(t,2097152,!0);if(F&&F!==Di){let U=Uc(F);U&&U.flags&524288&&(S=U,I=p6(t)||(c?[]:void 0))}}return i4(i,p6(t),S,I)}return ef(t,i)?o:At}function Sz(t){let i=Tn(t);if(!i.resolvedType){let o=Op(t),c=Xt(t.types,jn),f=c.length===2?c.indexOf(Xa):-1,m=!!((f>=0?c[1-f]:yr).flags&76);i.resolvedType=yi(c,m?1:0,o,Ld(o))}return i.resolvedType}function bz(t){let i=Tn(t);if(!i.resolvedType){let o=Op(t);i.resolvedType=vn(Xt(t.types,jn),1,o,Ld(o))}return i.resolvedType}function kz(t){return!1}function Rw(t){switch(t.kind){case 165:return Rw(t.type);case 162:t.elements.length===1&&(t=t.elements[0],console.debug("todo - array element"));break;case 161:return t.elementType}}function Cz(t){let i=kz(t.parent);if(Rw(t))return i?Ye:V;let c=Xt(t.elements,Mw);return P4(c,i,Xt(t.elements,Pz))}function Pz(t){console.debug("todo - memberIfLabeledElementDeclaration")}function Mw(t){return console.debug("todo - getTupleElementFlags"),1}function xz(t){w.assert(t.kind===138||t.kind===98);let i=Tn(t);return i.resolvedType||(i.resolvedType=Mr),i.resolvedType}function Dz(t){let i=Tn(t);if(!i.resolvedType){let o=Cz(t);if(o===Io)i.resolvedType=ns;else if(!(t.kind===162&&kt(t.elements,c=>!!(Mw(c)&8)))&&Ez(t))i.resolvedType=t.kind===162&&t.elements.length===0?o:fN(o,t,void 0);else{let c=t.kind===161?[jn(t.elementType)]:Xt(t.elements,jn);i.resolvedType=MC(o,c)}}return i.resolvedType}function Ez(t,i){return!!Op(t)||jw(t)&&(t.kind===161?Ku(t.elementType):t.kind===162?kt(t.elements,Ku):i||kt(t.typeArguments,Ku))}function Ku(t){switch(t.kind){case 166:return TT(t)||!!(nm(t,788968).flags&524288);case 164:return!0;case 263:return console.debug("todo - mayResolveTypeAlias"),!1;case 165:case 262:case 195:case 193:case 194:case 188:return Ku(t.type);case 160:return console.debug("todo - mayResolveTypeAlias"),!1;case 157:case 159:return kt(t.types,Ku);case 261:return Ku(t.objectType)||Ku(t.indexType);case 168:return Ku(t.checkType)||Ku(t.extendsType)||Ku(t.trueType)||Ku(t.falseType)}return!1}function jw(t){let i=t.parent;switch(i.kind){case 165:case 262:case 166:case 157:case 159:case 261:case 168:case 263:case 161:case 162:return jw(i);case 239:return!0}return!1}function Bw(t){switch(w.assertIsDefined(t),t.kind){case 97:case 191:case 192:return Cn;case 102:return yr;case 94:return mr;case 134:case 92:return co;case 93:return br;case 104:return Ce;case 107:case 108:return ja;case 105:return fn;case 101:return la;case 95:return ar;case 138:case 98:return xz(t);case 140:return Nc;case 257:return gz(t);case 161:return Dz(t);case 157:return bz(t);case 159:return Sz(t);case 258:case 166:return W0(t);case 167:return Nt;case 195:return Wc(jn(t.type));case 165:case 194:case 188:return jn(t.type);case 163:case 201:case 196:case 202:return M0(t);case 261:return Xu(t);case 264:return Og(t);case 168:return DC(t);case 259:return _T(t);case 89:case 286:let i=gc(t);return i?bo(i):At;default:return console.warn("Implement me - getTypeFromTypeNodeWorker "+w.formatSyntaxKind(t.kind)),At}}function TT(t){return!!(t.flags&16777216)&&t.kind===166}function ef(t,i){return t.typeArguments?(at(t,P.Type_0_is_not_generic,i?wi(i):t.typeName?sa(t.typeName):ste),!1):!0}function wz(t){let i=[];for(let o of t)if(o.flags&2097152&&$t(o)&67108864){let c=o.types[0].flags&8650752?0:1;Tl(i,o.types[c])}for(let o of i){let c=[];for(let p of t)if(p.flags&2097152&&$t(p)&67108864){let m=p.types[0].flags&8650752?0:1;p.types[m]===o&&d1(c,p.types[1-m])}let f=Ls(o);if(qa(f,p=>mc(c,p))){let p=t.length;for(;p>0;){p--;let m=t[p];if(m.flags&2097152&&$t(m)&67108864){let S=m.types[0].flags&8650752?0:1;m.types[S]===o&&mc(c,m.types[1-S])&&Qp(t,p)}}d1(t,o)}}}function Ww(t){if(Tt(t.typeName)){let i=t.typeArguments;switch(t.typeName.text){case"string":return ef(t),mr;case"int":return ef(t),co;case"float":return ef(t),br;case"mixed":return ef(t),Cn;case"void":return ef(t),fn;case"undefined":return ef(t),Zn;case"null":return ef(t),pe;case"Function":case"function":return ef(t),R;case"array":return(!i||!i.length)&&!je?Ci:void 0;case"object":if(i&&i.length===2){if(UP(t)){let o=jn(i[0]),c=jn(i[1]),f=o===mr||o===An?[jf(o,c,!1)]:Oe;return wa(void 0,j,Oe,Oe,f)}return Cn}return ef(t),je?void 0:Cn;default:console.debug("todo - unhandled jsdoc type ref name "+t.typeName.text)}}}function W0(t){let i=Tn(t);if(!i.resolvedType){let o,c;TT(t)&&(c=Ww(t),c||(o=nm(t,788968,!0),o===Di?o=nm(t,900095):nm(t,788968),c=Lw(t,o))),c||(o=nm(t,788968),c=Lw(t,o)),i.resolvedSymbol=o,i.resolvedType=c}return i.resolvedType}function bo(t){return Uw(t)||At}function Uw(t){if(t.flags&96)return jp(t);if(t.flags&524288)return Nz(t);if(t.flags&262144)return Df(t);if(t.flags&2097152)return Iz(t)}function Nz(t){let i=jt(t);if(!i.declaredType){if(!If(t,2))return At;let o=w.checkDefined(t.declarations?.find(J1),"Type alias symbol with no valid declaration found"),c=pd(o)?o.typeExpression:o.type,f=c?jn(c):At;if(Nf()){let p=Ep(t);p&&(i.typeParameters=p,i.instantiations=new Map,i.instantiations.set(ma(p),f))}else f=At,at(El(o)&&o.name||o,P.Type_alias_0_circularly_references_itself,wi(t));i.declaredType??(i.declaredType=f)}return i.declaredType}function Iz(t){let i=jt(t);return i.declaredType||(i.declaredType=bo(Uc(t)))}function Su(t){return t.flags&33554432?Su(t.baseType):t.flags&8388608&&(t.objectType.flags&33554432||t.indexType.flags&33554432)?jc(Su(t.objectType),Su(t.indexType)):t}function Az(t,i,o){return Su(jn(i))===Su(t)?jn(o):void 0}function Oz(t,i){let o,c=!0;for(;i&&!Vm(i)&&i.kind!==199;){let f=i.parent;if(f.kind===149&&(c=!c),(c||t.flags&8650752)&&f.kind===168&&i===f.trueType){let p=Az(t,f.checkType,f.extendsType);p&&(o=ei(o,p))}else if(t.flags&262144&&f.kind===264&&!f.nameType&&i===f.type){let p=jn(f);if(ec(p)===Su(t)){let m=nS(p);if(m){let S=ga(m);S&&qa(S,bu)&&console.debug("todo - getConditionalFlowTypeOfType - homomorphic mapped type")}}}i=f}return t}function U0(t,i){return!!(i&2)?wC(t)||At:t}function wC(t,i,o,...c){return console.warn("Implement me - getAwaitedTypeNoAlias"),t}function Ki(t,i){if(t.flags&i)return!0;if(t.flags&3145728){let o=t.types;for(let c of o)if(Ki(c,i))return!0}return!1}function NC(t){return t.endFlowNode&&Y0(t.endFlowNode)}function Jw(t,i){r(o);return;function o(){let c=Sc(t),f=i&&U0(i,c);if(f&&(Ki(f,16384)||f.flags&32769)||Eo(t.body)||t.body.kind!==236||!NC(t))return;let p=t.flags&1024,m=$c(t)||t;if(f&&f.flags&131072)at(m,P.A_function_returning_never_cannot_have_a_reachable_end_point);else if(f&&!p)at(m,P.A_function_whose_declared_type_is_not_void_must_return_a_value);else if(f&&G&&!Si(Zn,f))at(m,P.Function_lacks_ending_return_statement_and_return_type_does_not_include_undefined);else if(oe.noImplicitReturns){if(!f){if(!p)return;let S=Ei(Ai(t));if(zw(t,S))return}at(m,P.Not_all_code_paths_return_a_value)}}}function zw(t,i){let o=U0(i,Sc(t));return!!(o&&(Ki(o,16384)||o.flags&32769))}function IC(t){return t.parseDiagnostics.length>0}function da(t,i,...o){let c=$n(t);return IC(c)?!1:(Vn.add(fi(t,i,...o)),!0)}function Lz(t){return console.warn("Implement me - checkGrammarIndexSignatureParameters"),!1}function Fz(t){return Wd(t)||Lz(t)}function AC(t){let i=$n(t);return Wd(t)||Rz(t.typeParameters,i)||jz(t.parameters)}function Rz(t,i){if(t&&t.length===0){let o=t.pos-1,c=ts(i.text,t.end)+1;return ST(i,o,c-o,P.Type_parameter_list_cannot_be_empty)}return!1}function Pae(t){return Vw(t,t.typeArguments)}function Vw(t,i){return qw(i)||Mz(t,i)}function Mz(t,i){if(i&&i.length===0){let o=$n(t),c=i.pos-1,f=ts(o.text,i.end)+1;return ST(o,c,f-c,P.Type_argument_list_cannot_be_empty)}return!1}function ST(t,i,o,c,...f){let p=$n(t);return IC(p)?!1:(Vn.add(Iu(p,i,o,c,...f)),!0)}function qw(t,i=P.Trailing_comma_not_allowed){return t&&t.hasTrailingComma?ST(t[0],t.end-1,1,i):!1}function jz(t){let i=!1,o=t?.length??0;for(let c=0;c<o;c++){let f=t[c];if(f.dotDotDotToken){if(c!==o-1)return da(f.dotDotDotToken,P.A_rest_parameter_must_be_last_in_a_parameter_list);if(f.flags&33554432||qw(t,P.A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma),f.initializer)return da(f.name,P.A_rest_parameter_cannot_have_an_initializer)}}}function bT(t){t.kind===150?Fz(t):t.kind===169&&AC(t);let i=Sc(t);uq(t),Jt(t.parameters,Gw),t.type&&Dn(t.type),r(o);function o(){let c=$c(t),f=c;if(Nr(t)){let p=Fm(t);if(p&&p.typeExpression&&sp(p.typeExpression.type)){let m=Mf(jn(p.typeExpression));m&&m.declaration&&(c=$c(m.declaration),f=p.typeExpression.type)}}if(c&&f){let p=Sc(t)}t.kind!==150&&t.kind!==196&&Jg(t)}}function kT(t){if(ms(t)||Dn(t.type),!t.name)return At;if(ms(t)){if(t.propertyName&&Tt(t.name)&&xm(t)&&Eo(_h(t).body))return;let c=t.parent.parent,f=t.dotDotDotToken?32:0,p=K5(c,f),m=t.propertyName||t.name;if(p&&!ds(m)){let S=Kd(m);if(Qf(S)){let I=Gf(S),F=ni(p,I);F&&(l6(F,void 0,!1),tI(t,!!c.initializer&&c.initializer.kind===71,!1,p,F))}}}if(ds(t.name)&&Jt(t.name.elements,Dn),t.initializer&&xm(t)&&Eo(_h(t).body)){at(t,P.A_parameter_initializer_is_only_allowed_in_a_function_or_constructor_implementation);return}if(ds(t.name)){if(Qw(t))return Cn;let c=uh(t)&&t.initializer&&t.parent.parent.kind!==244,f=!1;if(c||f){let p=BT(t);if(c){let m=Fo(t.initializer);G&&f?$w(m,t):Ff(m,BT(t),t,t.initializer)}f&&(Xy(t.name)?zf(65,p,Zn,t):G&&$w(p,t))}return an(t)}let i=Ft(t);if(i.flags&2097152&&(Ny(t)||FF(t)))return Bz(t),an(t);let o=lS(Ln(i));if(t===i.valueDeclaration){let c=uh(t)&&eb(t);if(c&&!(Nr(t)&&Qa(c)&&c.properties.length===0&&!!i.exports?.size)&&t.parent.parent.kind!==244){let p;if(Au(c)){Fo(c);let m=D1(c);p=Ei(m)}else p||(p=Fo(c));Ff(p,o,t,c,void 0)}i.declarations&&i.declarations.length>1&&kt(i.declarations,f=>f!==t&&Ry(f)&&!Hw(f,t))&&at(t.name,P.All_declarations_of_0_must_have_identical_modifiers,sa(t.name))}else{let c=lS(BT(t));!Ws(o)&&!Ws(c)&&!rm(o,c)&&!(i.flags&67108864)&&Yw(i.valueDeclaration,o,t,c),uh(t)&&t.initializer&&Ff(Fo(t.initializer),c,t,t.initializer,void 0),i.valueDeclaration&&!Hw(t,i.valueDeclaration)&&at(t.name,P.All_declarations_of_0_must_have_identical_modifiers,sa(t.name))}return t.kind!==152&&t.kind!==153&&((t.kind===237||t.kind===266)&&Vz(t),t.name,void 0),an(t)}function $w(t,i){let o=Yl(t,i);if(o.flags&16384){if(va(i)){let c=nu(i);if(Tt(i)&&c==="undefined")return at(i,P.The_value_0_cannot_be_used_here,c),o;if(c.length<100)return at(i,P._0_is_possibly_undefined,c),o}at(i,P.Object_is_possibly_undefined)}return o}function Hw(t,i){if(t.kind===149&&i.kind===237||t.kind===237&&i.kind===149)return!0;let o=262;return Mb(t,o)===Mb(i,o)}function Bz(t){let i=Ft(t),o=Uc(i);if(o!==Di){i=gn(i.exportSymbol||i);let c=fm(o),f=(i.flags&1160127?111551:0)|(i.flags&788968?788968:0)|(i.flags&1920?1920:0);c&f&&w.fail("Shouldn't have a symbol conflict here.")}}function Gw(t){Wd(t),kT(t);let i=_h(t);Nu(t,167),t.name&&Tt(t.name)&&(t.name.text==="this"||t.name.text==="new")&&i.parameters.indexOf(t)!==0&&at(t,P.A_0_parameter_must_be_the_first_parameter,t.name.text),t.dotDotDotToken&&!ds(t.name)&&!Si(dc(Ln(t.symbol)),kr)&&at(t,P.A_rest_parameter_must_be_of_an_array_type)}function dc(t){return t.flags&1048576&&t.objectFlags&16777216?t.resolvedReducedType||(t.resolvedReducedType=zz(t)):t.flags&2097152?(t.objectFlags&16777216||(t.objectFlags|=16777216|(kt(B6(t),Wz)?33554432:0)),t.objectFlags&33554432?Bn:t):t}function Wz(t){return Uz(t)||Jz(t)}function Uz(t){return!(t.flags&16777216)&&(Es(t)&131264)===192&&!!(Ln(t).flags&131072)}function Jz(t){return!t.valueDeclaration&&!!(Es(t)&1024)}function zz(t){let i=xo(t.types,dc);if(i===t.types)return t;let o=vn(i);return o.flags&1048576&&(o.resolvedReducedType=o),o}function rm(t,i){return ml(t,i,lo)}function Qw(t){return!!(t.flags&33554432)}function xae(t){}function Vz(t){if((u1(t)&1)!==0||xm(t))return;let i=Ft(t);if(i.flags&1){if(!Tt(t.name))return w.fail();let o=hr(t,t.name.text,3,void 0,!1);if(o&&o!==i&&o.flags&2&&ir(o)&1){let c=p_(o.valueDeclaration,238),f=c.parent.kind===242&&c.parent.parent?c.parent.parent:void 0;if(!(f&&(f.kind===236&&Qi(f.parent)||f.kind===176))){let m=wi(o);at(t,P.Cannot_initialize_outer_scoped_variable_0_in_the_same_scope_as_block_scoped_declaration_1,m,m)}}}}function Yw(t,i,o,c){let f=hi(o),p=o.kind===152?P.Subsequent_property_declarations_must_have_the_same_type_Property_0_must_be_of_type_1_but_here_has_type_2:P.Subsequent_variable_declarations_must_have_the_same_type_Variable_0_must_be_of_type_1_but_here_has_type_2,m=sa(f),S=at(f,p,m,rn(i),rn(c));t&&Rs(S,fi(t,P._0_was_also_declared_here,m))}function CT(t,i,o){r(()=>{je&&$t(i)&65536&&(!o||!OC(t))&&(GC(i)||so(t,i,o))})}function OC(t){return gh(t)?Rg(t):void 0}function qz(t,i){for(let o=Le-1;o>=0;o--)if(t===Kn[o]&&(i||!_r[o]))return o;return-1}function LC(t){t=Uo(t);let i=bi(oo(t)),o=Oi(t,0).length?ut:Oi(t,1).length?Ar:void 0;return o&&Jt(oo(o),c=>{i.has(c.name)||i.set(c.name,c)}),o1(i)}function $z(t){let i=vn(t);if(!(i.flags&1048576))return LC(i);let o=bi();for(let c of t)for(let{name:f}of LC(c))if(!o.has(f)){let p=eT(i,f);p&&o.set(f,p)}return as(o.values())}function Hz(t,i){if(eh(t),Zc(t)&&(t.name,void 0),i&&i&4&&tc(t)){if(!$c(t)&&!XS(t)){let c=Rg(t);if(c&&cl(Ei(c))){let f=Tn(t);if(f.contextFreeType)return f.contextFreeType;let p=X0(t,i),m=Pu(void 0,void 0,void 0,Oe,p,void 0,0,512),S=wa(t.symbol,j,[m],Oe,Oe);return S.objectFlags|=262144,f.contextFreeType=S}}return mi}let o=AC(t);return wg(t,i),Ln(Ft(t))}function Gz(t,i){return Zw(t,i)}function Zw(t,i){let{type:o,expression:c}=aI(t),f=Lr(c,i),p=Tn(t);return p.assertionExpressionType=f,Dn(o),eh(t),jn(o)}function Xw(t,i,o){(t.intraExpressionInferenceSites??(t.intraExpressionInferenceSites=[])).push({node:i,type:o})}function Qz(t,i){return Kc(t)&&d_(t)?Zw(t,i):Lr(t.expression,i)}function Yz(t,i){let{type:o,arguments:c}=t,f=W0(o),p=Tn(t);return Dn(o),eh(t),Zz(t,i),jn(o)}function Zz(t,i=0){if(!t.arguments)return;let o=wu(t),c=G?bi():void 0,f=bi(),p=[],m=ns;ZC(t);let S=z0(t,void 0),I=0,F=8192,U=!1,Q=!1,ne=!1,ae=!1,Ge=0;if(t.arguments&&af(qs(t.arguments)))for(let ht of t.arguments){let Rt=Ft(ht);if(ht.kind===174||ht.kind===175||hh(ht)){let Ut=ht.kind===174?r5(ht,i):ht.kind===175?Gg(!o&&ht.objectAssignmentInitializer?ht.objectAssignmentInitializer:ht.name,i):void 0;F|=$t(Ut)&458752;let It=es(4|Rt.flags,Rt.name,I);if(It.declarations=Rt.declarations,It.parent=Rt.parent,Rt.valueDeclaration&&(It.valueDeclaration=Rt.valueDeclaration),It.links.type=Ut,It.links.target=Rt,Rt=It,c?.set(It.name,It),S&&i&2&&!(i&4)&&ht.kind===174&&tc(ht)){let ln=im(t);w.assert(ln);let Pn=ht.kind===174?ht.initializer:ht;Xw(ln,Pn,Ut)}}f.set(Rt.name,Rt),p.push(Rt)}if(jg(),Ws(m))return At;return wt();function wt(){let ht=[];Q&&ht.push(Kw(t,Ge,p,mr)),ne&&ht.push(Kw(t,Ge,p,An));let Rt=wa(t.symbol,f,Oe,Oe,ht);return Rt.objectFlags|=F|128|131072,U&&(Rt.objectFlags|=512),Rt}}function Kw(t,i,o,c){let f=[];for(let m=i;m<o.length;m++){let S=o[m];(c===mr&&!eV(S)||c===An&&Kz(S))&&f.push(Ln(o[m]))}let p=f.length?vn(f,2):Zn;return jf(c,p,!1)}function Xz(t){switch(t.kind){case 89:return Hp(t.text);case 10:case 16:return Hp(t.text);default:return!1}}function Kz(t){let i=t.declarations?.[0];return Hp(t.name)||i&&El(i)&&Xz(i.name)}function eV(t){let i=t.declarations?.[0];return Fh(t)}function Mc(t,i){var o;let c=qz(t,!i);if(c>=0)return ur[c];let{parent:f}=t;switch(f.kind){case 237:case 149:case 152:case 153:case 266:return oV(t,i);case 283:case 248:return sV(t,i);case 272:case 276:return dV(f,t);case 279:case 296:return jn(f.type);case 269:return tV(t,i);case 284:case 285:return Cn;case 174:case 175:console.warn("todo getContextualType - getContextualTypeForObjectLiteralElement");case 290:{let p=f,m=z0(p,i),S=My(p.elements,t),I=(o=Tn(p)).spreadIndices??(o.spreadIndices=pV(p.elements||Oe));return nN(m,S,p.elements?.length||0,I.first,I.last)}case 267:return uV(t,i);case 289:{if(Nr(f)){if(iR(f))return jn(sR(f));let p=Fm(f);if(p)return jn(p.typeExpression.type)}return Mc(f,i)}}}function tV(t,i){let o=t.parent,{left:c,operatorToken:f,right:p}=o;switch(f.kind){case 74:case 86:return t===p?nV(o):void 0;case 59:return Mc(o,i);case 58:case 27:return t===p?Mc(o,i):void 0;default:return}}function Dae(t){if(T_(t)&&t.symbol)return t.symbol;if(Tt(t))return _a(t);if(Ii(t)){let i=Co(t.expression);return ni(i,t.name.text)}if(Ha(t)){let i=Fo(t.argumentExpression);if(!Qf(i))return;let o=Co(t.expression);return ni(o,Gf(i))}}function nV(t){let i=Oa(t);switch(i){case 0:case 4:return yr;case 5:if(z6(t,i))return rV(t);if(!T_(t.left)||!t.left.symbol)return Co(t.left);{let f=t.left.symbol.valueDeclaration;if(!f)return;let p=aa(t.left,ia),m=Ta(f);if(m)return jn(m);if(Tt(p.expression)){let S=p.expression,I=hr(S,S.text,111551,void 0,!0);if(I){let F=I.valueDeclaration&&Ta(I.valueDeclaration);if(F){let U=t0(p);if(U!==void 0)return PT(jn(F),U)}return}}return Nr(f)||f===t.left?void 0:Co(t.left)}case 1:case 6:case 3:case 2:let o;i!==2&&(o=T_(t.left)?t.left.symbol?.valueDeclaration:void 0),o||(o=t.symbol?.valueDeclaration);let c=o&&Ta(o);return c?jn(c):void 0;case 7:case 8:case 9:return w.fail("Does not apply");default:return w.assertNever(i)}}function rV(t){if(!t.symbol)return Co(t.left);if(t.symbol.valueDeclaration){let f=Ta(t.symbol.valueDeclaration);if(f){let p=jn(f);if(p)return p}}let i=aa(t.left,ia);if(!hh(yh(i.expression,!1,!1)))return;let o=iV(i.expression),c=t0(i);return c!==void 0&&PT(o,c)||void 0}function iV(t){w.fail("todo - checkThisExpression")}function sV(t,i){let o=_h(t);if(o){let c=QN(o,i);if(c){let f=Sc(o);return c}}}function oV(t,i){let o=t.parent;if(P_(o)&&t===o.initializer){let c=tN(o,i);if(c)return c;if(!(i&8)&&ds(o.name)&&o.name.elements.length>0)return FC(o.name,!0,!1)}}function FC(t,i=!1,o=!1){return w.assertEqual(t.kind,265),aV(t,i,o)}function eN(t){return t.kind===266&&!!t.initializer||t.kind===269&&t.operatorToken.kind===74}function aV(t,i,o){let c=t.elements,f=wo(c),p=f&&f.kind===266&&f.dotDotDotToken?f:void 0;if(c.length===0||c.length===1&&p)return Ci;let m=Xt(c,U=>Bm(U)?Cn:cV(U,i,o)),S=Sb(c,U=>!(U===p||Bm(U)||eN(U)),c.length-1)+1,I=Xt(c,(U,Q)=>U===p?4:Q>=S?2:1),F=Eu(m,I);return i&&(F=F0(F),F.pattern=t,F.objectFlags|=131072),F}function cV(t,i,o){if(t.initializer){let c=ds(t.name)?FC(t.name,!0,!1):yr;return Wc(YC(t,Mg(t,o?0:1,c)))}return ds(t.name)?FC(t.name,i,o):(o&&so(t,Cn),i?Ca:Cn)}function tN(t,i){let o=Ta(t,X)||(Nr(t)?B8(t):void 0);if(o)return jn(o);switch(t.kind){case 149:return IN(t);case 266:return lV(t,i);case 152:}}function lV(t,i){let o=t.parent.parent,c=t.propertyName||t.name,f=tN(o,i)||o.kind!==266&&o.initializer&&Mg(o,t.dotDotDotToken?32:0);if(!f||ds(c)||y8(c))return;if(o.name.kind===265){let m=My(t.parent.elements,t);return m<0?void 0:nN(f,m)}let p=Kd(c);if(Qf(p)){let m=Gf(p);return nc(f,m)}}function uV(t,i){let o=t.parent;return t===o.whenTrue||t===o.whenFalse?Mc(o,i):void 0}function nN(t,i,o,c,f){return t&&Zs(t,p=>(!c||i<c)&&PT(p,""+i)||em(1,p,Zn,void 0,!1),!0)}function PT(t,i,o){return Zs(t,c=>{if(c.flags&3670016){let f=ni(c,i);return f?fV(f)?void 0:Gu(Ln(f),!!(f.flags&16777216)):iT(Kk(c),o||rl(i))?.type}},!0)}function fV(t){return!!(Es(t)&262144&&!t.links.type&&jT(t,0)>=0)}function pV(t){let i,o;for(let c=0;c<t.length;c++)vE(t[c])&&(i??(i=c),o=c);return{first:i,last:o}}function im(t){for(let i=Un-1;i>=0;i--)if(iy(t,lt[i]))return nn[i]}function dV(t,i){let c=WT(t).indexOf(i);return c===-1?void 0:rN(t,c)}function rN(t,i){let o=Tn(t).resolvedSignature===Ko?Ko:D1(t),c=o.parameters.length-1;return $a(o)&&i>=c?jc(Ln(o.parameters[c]),Ka(i-c),256):Ql(o,i)}function jc(t,i,o=0,c,f,p){return Ad(t,i,o,c,f,p)||(c?At:yr)}function iN(t){return t.flags&524288&&!zo(t)&&oo(t).length===0&&So(t).length===1&&!!Lc(t,mr)||t.flags&3145728&&Ti(t.types,iN)||!1}function Ad(t,i,o=0,c,f,p){if(t===Ts||i===Ts)return Ts;t=dc(t),iN(t)&&!(i.flags&98304)&&Vo(i,12)&&(i=mr),oe.noUncheckedIndexedAccess&&o&32&&(o|=1);let m=xd(t);if(i.flags&1048576&&!(i.flags&16)){let S=[],I=!1;for(let F of i.types){let U=oN(t,m,F,i,c,o|(I?128:0));if(U)S.push(U);else if(c)I=!0;else return}return I?void 0:o&4?yi(S,0,f,p):vn(S,1,f,p)}return oN(t,m,i,i,c,o|8|64)}function sN(t,i){return Qf(t)?Gf(t):i&&h0(i)?Hm(i):void 0}function RC(t){return t.kind===281?t.argumentExpression:t.kind===261?t.indexType:t.kind===147?t.expression:t}function Lg(t){if(je)return!1;if($t(t)&4096)return!0;if(t.flags&1048576)return Ti(t.types,Lg);if(t.flags&2097152)return kt(t.types,Lg);if(t.flags&465829888){let i=Z6(t);return i!==t&&Lg(i)}return!1}function _V(t,i,o){return o===0?!1:Dp(i)?!0:(ia(t)&&ws(t.expression).kind===89&&w.fail("todo - isAssignmentToReadonlyEntity"),!1)}function oN(t,i,o,c,f,p){let m=f&&f.kind===281?f:void 0,S=f&&Cc(f)?void 0:sN(o,f);if(S!==void 0){if(p&256)return PT(i,S)||Cn;let F=ni(i,S);if(F){if(p&64&&f&&F.declarations&&f1(F)&&F6(f,F)){let Q=m?.argumentExpression??(l_(f)?f.indexType:f);Hg(Q,F.declarations,S)}if(m){if(l6(F,m,rI(m.expression,i.symbol)),_V(m,F,Hf(m))){at(m.argumentExpression,P.Cannot_assign_to_0_because_it_is_a_read_only_property,wi(F));return}p&8&&(Tn(f).resolvedSymbol=F)}let U=p&4?Ed(F):Ln(F);return m&&Hf(m)!==1?qp(m,U):f&&l_(f)&&kS(U)?vn([U,Zn]):U}if(qa(i,vi)&&Hp(S)){let U=+S;if(f&&qa(i,Q=>!Q.target.hasRestElement)&&!(p&16)){let Q=RC(f);if(vi(i)){if(U<0)return at(Q,P.A_tuple_type_cannot_be_indexed_with_a_negative_value),Zn;at(Q,P.Tuple_type_0_of_length_1_has_no_element_at_index_2,rn(i),Jf(i),S)}else at(Q,P.Property_0_does_not_exist_on_type_1,S,rn(i))}if(U>=0)return I(Lc(i,An)),jN(i,U,p&1?Jn:void 0)}}if(!(o.flags&98304)&&Vo(o,402655660)){if(i.flags&131073)return i;let F=pa(i,o)||Lc(i,mr);if(F){if(p&2&&F.keyType!==An){m&&(p&4?at(m,P.Type_0_is_generic_and_can_only_be_indexed_for_reading,rn(t)):at(m,P.Type_0_cannot_be_used_to_index_type_1,rn(o),rn(t)));return}if(f&&F.keyType===mr&&!Vo(o,12)){let U=RC(f);return at(U,P.Type_0_cannot_be_used_as_an_index_type,rn(o)),p&1?vn([F.type,Jn]):F.type}return I(F),p&1&&!(i.symbol&&i.symbol.flags&384&&o.symbol&&o.flags&1024&&nf(o.symbol)===i.symbol)?vn([F.type,Jn]):F.type}if(o.flags&131072)return Bn;if(Lg(i))return Cn;if(m){if(Fc(i)){if(je&&o.flags&384)return Vn.add(fi(m,P.Property_0_does_not_exist_on_type_1,o.value,rn(i))),Zn;if(o.flags&12){let U=Xt(i.properties,Q=>Ln(Q));return vn(ei(U,Zn))}}if(i.symbol===_n&&S!==void 0&&_n.exports.has(S)&&_n.exports.get(S).flags&418)at(m,P.Property_0_does_not_exist_on_type_1,S,rn(i));else if(je&&!(p&128))if(Hl(i,An))at(m.argumentExpression,P.Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number);else{let U;if(S!==void 0&&(U=M5(S,i)))U!==void 0&&at(m.argumentExpression,P.Property_0_does_not_exist_on_type_1_Did_you_mean_2,S,rn(i),U);else{let Q=mV(i,m,o);if(Q!==void 0)at(m,P.Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature_Did_you_mean_to_call_1,rn(i),Q);else{let ne;o.flags&1024?ne=pi(void 0,P.Property_0_does_not_exist_on_type_1,"["+rn(o)+"]",rn(i)):o.flags&128||o.flags&256?ne=pi(void 0,P.Property_0_does_not_exist_on_type_1,o.value,rn(i)):o.flags&12&&(ne=pi(void 0,P.No_index_signature_with_a_parameter_of_type_0_was_found_on_type_1,rn(o),rn(i))),ne=pi(ne,P.Element_implicitly_has_an_any_type_because_expression_of_type_0_can_t_be_used_to_index_type_1,rn(c),rn(i)),Vn.add(s_($n(m),m,ne))}}}return}}if(Lg(i))return Cn;if(f){let F=RC(f);o.flags&384?at(F,P.Property_0_does_not_exist_on_type_1,""+o.value,rn(i)):o.flags&12?at(F,P.Type_0_has_no_matching_index_signature_for_type_1,rn(i),rn(o)):jd(t)||at(F,P.Type_0_cannot_be_used_as_an_index_type,rn(o))}if(qo(o))return o;return;function I(F){F&&F.isReadonly&&m&&wu(m)&&at(m,P.Index_signature_in_type_0_only_permits_reading,rn(i))}}function mV(t,i,o){function c(m){let S=vu(t,m);if(S){let I=Mf(Ln(S));return!!I&&ul(I)>=1&&Si(o,Ql(I,0))}return!1}let f=wu(i)?"set":"get";if(!c(f))return;let p=Jy(i.expression);return p===void 0?p=f:p+="."+f,p}function zn(t,i){return t&&i?cN(t,i,void 0,void 0):t}function aN(t){if(t.aliasSymbol&&!t.aliasTypeArguments){let i=sf(t.aliasSymbol,239);return!!(i&&Xn(i.parent,o=>o.kind===176?!0:"quit"))}return!1}function cl(t){let i=$t(t);if(i&524288)return!!(i&1048576);let o=!!(t.flags&465829888||t.flags&524288&&!aN(t)&&(i&4&&(t.node||kt(fs(t),cl))||i&134217728&&Pr(t.outerTypeParameters)||i&16&&t.symbol&&t.symbol.flags&14384&&t.symbol.declarations||i&12583968)||t.flags&3145728&&!(t.flags&1024)&&!aN(t)&&kt(t.types,cl));return t.flags&3899393&&(t.objectFlags|=524288|(o?1048576:0)),o}function cN(t,i,o,c){if(!cl(t))return t;if(b===100||v>=5e6)return Dt?.instant(Dt.Phase.CheckTypes,"instantiateType_DepthLimit",{typeId:t.id,instantiationDepth:b,instantiationCount:v}),at(E,P.Type_instantiation_is_excessively_deep_and_possibly_infinite),At;h++,v++,b++;let f=xV(t,i,o,c);return b--,f}function Bc(t,i){return xT(t,i,zn)}function xT(t,i,o){if(t&&t.length)for(let c=0;c<t.length;c++){let f=t[c],p=o(f,i);if(f!==p){let m=c===0?[]:t.slice(0,c);for(m.push(p),c++;c<t.length;c++)m.push(o(t[c],i));return m}}return t}function MC(t,i){return t.objectFlags&8?l4(t,i):Od(t,i)}function Od(t,i){let o=ma(i),c=t?.instantiations?.get(o);return t&&!c&&(c=dl(4,t.symbol),t.instantiations?.set(o,c),c.objectFlags|=i?cn(i):0,c.target=t,c.resolvedTypeArguments=i),c}function gV(t,i){let o=zn(t.mappedType,i);if(!($t(o)&32))return t;let c=zn(t.constraintType,i);if(!(c.flags&4194304))return t;let f=lN(zn(t.source,i),o,c);return f||t}function jC(t){return!($t(t)&262144)||Fc(t)&&kt(oo(t),i=>jC(Ln(i)))||vi(t)&&kt(Qd(t),jC)}function sm(t){return t.templateType||(t.templateType=t.declaration.type?zn(Wc(jn(t.declaration.type),!0,!!(Et(t)&4)),t.mapper):At)}function hV(t,i,o){let c=jc(o.type,ec(i)),f=sm(i),p=D4(c);return Af([p],t,f),j3(p)||yr}function BC(t,i,o){let c=t.id+","+i.id+","+o.id;if(Bt.has(c))return Bt.get(c)||yr;Xr.push(t),cs.push(i);let f=tt;_m(t,Xr,Xr.length,2)&&(tt|=1),_m(i,cs,cs.length,2)&&(tt|=2);let p;return tt!==3&&(p=hV(t,i,o)),Xr.pop(),cs.pop(),tt=f,Bt.set(c,p),p}function yV(t,i,o){if(!(Lc(t,mr)||oo(t).length!==0&&jC(t)))return;if(Ys(t)){let f=BC(fs(t)[0],i,o);return f?Qs(f,ym(t)):void 0}if(vi(t)){let f=Xt(Qd(t),m=>BC(m,i,o));if(!Ti(f,m=>!!m))return;let p=Et(i)&4?xo(t.target.elementFlags,m=>m&2?1:m):t.target.elementFlags;return Eu(f,p,t.target.readonly,t.target.labeledElementDeclarations)}let c=dl(1040,void 0);return c.source=t,c.mappedType=i,c.constraintType=o,c}function lN(t,i,o){let c=t.id+","+i.id+","+o.id;if(Me.has(c))return Me.get(c);let f=yV(t,i,o);return Me.set(c,f),f}function vV(t){if(!t||!Nr(t))return!1;let i=Yc(t)||Zc(t)?t:(Cs(t)||af(t))&&t.initializer&&Zc(t.initializer)?t.initializer:void 0;return i?SP(t)?!0:af(Mv(i.parent))?!1:!!Ft(i)?.members?.size:!1}function Fg(t,i){for(;;){if(t=t.parent,t&&Ur(t)){let o=Oa(t)}if(!t)return;switch(t.kind){case 274:case 170:case 155:case 151:case 156:case 158:case 196:case 169:case 154:case 270:case 283:case 239:case 224:case 225:case 219:case 217:case 264:case 168:{let c=Fg(t,i);if(t.kind===264)return ei(c,Df(Ft(t.typeParameter)));if(t.kind===168)return ri(c,N6(t));let f=WC(c,fh(t)),p=i&&(t.kind===170||t.kind===274||t.kind===155||vV(t))&&jp(Ft(t)).thisType;return p?ei(f,p):f}case 220:let o=JP(t);o&&(t=o.valueDeclaration);break;case 199:{let c=Fg(t,i);return t.tags?WC(c,ao(t.tags,f=>Ll(f)?f.typeParameters:void 0)):c}}}}function uN(t){let i=sf(t.symbol,148),o=Ll(i.parent)?Q2(i.parent):i.parent;return o&&qf(o)}function WC(t,i){for(let o of i)t=o_(t,Df(Ft(o)));return t}function Df(t){let i=jt(t);return i.declaredType||(i.declaredType=_c(t))}function _c(t){return a1(262144,t)}function Ef(t,i){switch(i.kind){case 0:return t===i.source?i.target:t;case 1:{let c=i.sources,f=i.targets;for(let p=0;p<c.length;p++)if(t===c[p])return f?f[p]:Cn;return t}case 2:{let c=i.sources,f=i.targets;for(let p=0;p<c.length;p++)if(t===c[p])return f[p]();return t}case 3:return i.func(t);case 4:case 5:let o=Ef(t,i.mapper1);return o!==t&&i.kind===4?zn(o,i.mapper2):Ef(o,i.mapper2)}}function UC(t){let i=_c(t.symbol);return i.target=t,i}function tf(t,i){return w.attachDebugPrototypeIfDebug({kind:0,source:t,target:i})}function ec(t){return t.typeParameter||(t.typeParameter=Df(Ft(t.declaration.typeParameter)))}function DT(t,i,o,c){w.assert(t.symbol,"anonymous type must have symbol to be instantiated");let f=dl(t.objectFlags&-1572865|64,t.symbol);if(t.objectFlags&32){f.declaration=t.declaration;let p=ec(t),m=UC(p);f.typeParameter=m,i=wf(tf(p,m),i),m.mapper=i}return t.objectFlags&8388608&&(f.node=t.node),t.objectFlags&134217728&&(f.outerTypeParameters=t.outerTypeParameters),f.target=t,f.mapper=i,f.aliasSymbol=o||t.aliasSymbol,f.aliasTypeArguments=o?c:Bc(t.aliasTypeArguments,i),f.objectFlags|=f.aliasTypeArguments?cn(f.aliasTypeArguments):0,f}function TV(t,i){return w.attachDebugPrototypeIfDebug({kind:1,sources:t,targets:i})}function Jo(t,i){return t.length===1?tf(t[0],i?i[0]:Cn):TV(t,i)}function Op(t){let i=t.parent;for(;vk(i)||c_(i);)i=i.parent;return J1(i)?Ft(i):void 0}function Ld(t){return t?Ep(t):void 0}function fN(t,i,o,c,f){if(!c){c=Op(i);let m=Ld(c);f=o?Bc(m,o):m}let p=dl(4,t.symbol);return p.target=t,p.node=i,p.mapper=o,p.aliasSymbol=c,p.aliasTypeArguments=f,p}function SV(t,i,o,c){let f=nS(t);if(f){let m=zn(f,i);if(f!==m)return vN(dc(m),p,o,c)}return zn(zc(t),i)===Ts?Ts:DT(t,i,o,c);function p(m){if(m.flags&61603843&&m!==Ts&&!Ws(m)){if(!t.declaration.nameType){let S;if(Ys(m)||m.flags&1&&jT(f,4)<0&&(S=ga(f))&&qa(S,bu))return bV(m,t,Rd(f,m,i));if(vi(m))return kV(m,t,f,i);if(I0(m))return yi(Xt(m.types,p))}return DT(t,Rd(f,m,i))}return m}}function pN(t,i,o,c){let f=NT(c,ec(t),i),p=zn(sm(t.target||t),f),m=Et(t);return G&&m&4&&!Ki(p,49152)?Of(p,!0):G&&m&8&&o?gl(p,524288):p}function dN(t,i){return i&1?!0:i&2?!1:t}function bV(t,i,o){let c=pN(i,An,!0,o);return Ws(c)?At:Qs(c,dN(ym(t),Et(i)))}function kV(t,i,o,c){let f=t.target.elementFlags,p=t.target.fixedLength,m=p?Rd(o,t,c):c,S=Xt(Qd(t),(Q,ne)=>{let ae=f[ne];return ne<p?pN(i,rl(""+ne),!!(ae&2),m):ae&8?zn(i,Rd(o,Q,c)):G0(zn(i,Rd(o,Qs(Q),c)))??yr}),I=Et(i),F=I&4?Xt(f,Q=>Q&1?2:Q):I&8?Xt(f,Q=>Q&2?1:Q):f,U=dN(t.target.readonly,Et(i));return ki(S,At)?At:Eu(S,F,U,t.target.labeledElementDeclarations)}function CV(t,i,o,c){let f=t.objectFlags&4||t.objectFlags&8388608?t.node:t.symbol.declarations[0],p=Tn(f),m=t.objectFlags&4?p.resolvedType:t.objectFlags&64?t.target:t,S=t.objectFlags&134217728?t.outerTypeParameters:p.outerTypeParameters;if(!S){S=Fg(f,!0)||Oe;let F=t.objectFlags&8388612?[f]:t.symbol.declarations;S=(m.objectFlags&8388612||m.symbol.flags&8192||m.symbol.flags&2048)&&!m.aliasTypeArguments?Yr(S,U=>kt(F,Q=>_N(U,Q))):S,p.outerTypeParameters=S}if(S.length){let I=wf(t.mapper,i),F=Xt(S,Ge=>Ef(Ge,I)),U=o||t.aliasSymbol,Q=o?c:Bc(t.aliasTypeArguments,i),ne=(t.objectFlags&134217728?"S":"")+ma(F)+$d(U,Q);m.instantiations||(m.instantiations=new Map,m.instantiations.set(ma(S)+$d(m.aliasSymbol,m.aliasTypeArguments),m));let ae=m.instantiations.get(ne);if(!ae){if(t.objectFlags&134217728)return ae=DT(t,i),m.instantiations.set(ne,ae),ae;let Ge=Jo(S,F);ae=m.objectFlags&4?fN(t.target,t.node,Ge,U,Q):m.objectFlags&32?SV(m,Ge,U,Q):DT(m,Ge,U,Q),m.instantiations.set(ne,ae);let nt=$t(ae);if(ae.flags&3899393&&!(nt&524288)){let wt=kt(F,cl);$t(ae)&524288||(nt&52?ae.objectFlags|=524288|(wt?1048576:0):ae.objectFlags|=wt?0:524288)}}return ae}return t}function wf(t,i){return t?ET(4,t,i):i}function ET(t,i,o){return w.attachDebugPrototypeIfDebug({kind:t,mapper1:i,mapper2:o})}function PV(t){return!(t.parent.kind===166&&t.parent.typeArguments&&t===t.parent.typeName)}function _N(t,i){if(t.symbol&&t.symbol.declarations&&t.symbol.declarations.length===1){let c=t.symbol.declarations[0].parent;for(let f=i;f!==c;f=f.parent)if(!f||f.kind===236)return!0;return o(i)}return!0;function o(c){switch(c.kind){case 89:return!t.isThisType&&Zp(c)&&PV(c)&&Bw(c)===t;case 164:w.fail("todo - type query")}return!!Ns(c,o)}}function xV(t,i,o,c){let f=t.flags;if(f&262144)return Ef(t,i);if(f&524288){let p=t.objectFlags;if(p&52){if(p&4&&!t.node){let m=t.resolvedTypeArguments,S=Bc(m,i);return S!==m?MC(t.target,S):t}return p&1024?gV(t,i):CV(t,i,o,c)}return t}if(f&3145728){let p=t.flags&1048576?t.origin:void 0,m=p&&p.flags&3145728?p.types:t.types,S=Bc(m,i);if(S===m&&o===t.aliasSymbol)return t;let I=o||t.aliasSymbol,F=o?c:Bc(t.aliasTypeArguments,i);return f&2097152||p&&p.flags&2097152?yi(S,0,I,F):vn(S,1,I,F)}if(f&4194304)return ll(zn(t.type,i));if(f&8388608){let p=o||t.aliasSymbol,m=o?c:Bc(t.aliasTypeArguments,i);return jc(zn(t.objectType,i),zn(t.indexType,i),t.accessFlags,void 0,p,m)}if(f&16777216)return gN(t,wf(t.mapper,i),!1,o,c);if(f&33554432){let p=zn(t.baseType,i);if(mm(t))return n4(p);let m=zn(t.constraint,i);return p.flags&8650752&&am(m)?mN(p,m):m.flags&3||Si(Fd(p),Fd(m))?p:p.flags&8650752?mN(p,m):yi([m,p])}return t}function wT(t){return t.flags&402915263?t:t.permissiveInstantiation||(t.permissiveInstantiation=zn(t,Ba))}function Fd(t){return t.flags&402915263?t:(t.restrictiveInstantiation||(t.restrictiveInstantiation=zn(t,uc),t.restrictiveInstantiation.restrictiveInstantiation=t.restrictiveInstantiation),t.restrictiveInstantiation)}function mN(t,i){return i.flags&3||i===t||t.flags&1?t:W5(t,i)}function gN(t,i,o,c,f){let p=t.root;if(p.outerTypeParameters){let m=Xt(p.outerTypeParameters,F=>Ef(F,i)),S=(o?"C":"")+ma(m)+$d(c,f),I=p.instantiations.get(S);if(!I){let F=Jo(p.outerTypeParameters,m),U=p.checkType,Q=p.isDistributive?dc(Ef(U,F)):void 0;I=Q&&U!==Q&&Q.flags&1179648?vN(Q,ne=>JC(p,Rd(U,ne,F),o),c,f):JC(p,F,o,c,f),p.instantiations.set(S,I)}return I}return t}function hN(t){return console.debug("todo - isSimpleTupleType"),!1}function yN(t,i){return am(t)||i&&vi(t)&&kt(Qd(t),am)}function JC(t,i,o,c,f){let p,m,S=0;for(;;){if(S===1e3)return at(E,P.Type_instantiation_is_excessively_deep_and_possibly_infinite),At;let F=zn(Su(t.checkType),i),U=zn(t.extendsType,i);if(F===At||U===At)return At;if(F===Ts||U===Ts)return Ts;let Q=nb(t.node.checkType),ne=nb(t.node.extendsType),ae=hN(Q)&&hN(ne)&&Pr(Q.elements)===Pr(ne.elements),Ge=yN(F,ae),nt;if(t.inferTypeParameters){let ht=I1(t.inferTypeParameters,void 0,0);i&&(ht.nonFixingMapper=wf(ht.nonFixingMapper,i)),Ge||Af(ht.inferences,F,U,1536),nt=i?wf(ht.mapper,i):ht.mapper}let wt=nt?zn(t.extendsType,nt):U;if(!Ge&&!yN(wt,ae)){if(!(wt.flags&3)&&(F.flags&1||!Si(wT(F),wT(wt)))){(F.flags&1||o&&!(wt.flags&131072)&&Zl(wT(wt),Rt=>Si(Rt,wT(F))))&&(m||(m=[])).push(zn(jn(t.node.trueType),nt||i));let ht=jn(t.node.falseType);if(ht.flags&16777216){let Rt=ht.root;if(Rt.node.parent===t.node&&(!Rt.isDistributive||Rt.checkType===t.checkType)){t=Rt;continue}if(I(ht,i))continue}p=zn(ht,i);break}if(wt.flags&3||Si(Fd(F),Fd(wt))){let ht=jn(t.node.trueType),Rt=nt||i;if(I(ht,Rt))continue;p=zn(ht,Rt);break}}p=wn(16777216),p.root=t,p.checkType=zn(t.checkType,i),p.extendsType=zn(t.extendsType,i),p.mapper=i,p.combinedMapper=nt,p.aliasSymbol=c||t.aliasSymbol,p.aliasTypeArguments=c?f:Bc(t.aliasTypeArguments,i);break}return m?vn(ei(m,p)):p;function I(F,U){if(F.flags&16777216&&U){let Q=F.root;if(Q.outerTypeParameters){let ne=wf(F.mapper,U),ae=Xt(Q.outerTypeParameters,wt=>Ef(wt,ne)),Ge=Jo(Q.outerTypeParameters,ae),nt=Q.isDistributive?Ef(Q.checkType,Ge):void 0;if(!nt||nt===Q.checkType||!(nt.flags&1179648))return t=Q,i=Ge,c=void 0,f=void 0,Q.aliasSymbol&&S++,!0}}return!1}}function vN(t,i,o,c){return t.flags&1048576&&o?vn(Xt(t.types,i),1,o,c):Zs(t,i)}function DV(t){let i=ec(t);return o(ol(t)||i);function o(c){return c.flags&470810559?!0:c.flags&16777216?c.root.isDistributive&&c.checkType===i:c.flags&137363456?Ti(c.types,o):c.flags&8388608?o(c.objectType)&&o(c.indexType):c.flags&33554432?o(c.baseType)&&o(c.constraint):c.flags&268435456?o(c.type):!1}}function zC(t){let i=ol(t);return i?Si(i,ec(t))?1:2:0}function TN(t){return!!(t.flags&1048576&&t.objectFlags&16777216&&kt(t.types,TN)||t.flags&2097152&&EV(t))}function EV(t){let i=t.uniqueLiteralFilledInstantiation||(t.uniqueLiteralFilledInstantiation=zn(t,tr));return dc(i)!==i}function wV(t,i){return i&1?t.resolvedStringIndexType||(t.resolvedStringIndexType=SN(t,1)):t.resolvedIndexType||(t.resolvedIndexType=SN(t,0))}function SN(t,i){let o=wn(4194304);return o.type=t,o.indexFlags=i,o}function VC(t,i=0){return!!(t.flags&58982400||Wf(t)||zo(t)&&(!DV(t)||zC(t)===2)||t.flags&1048576&&!(i&4)&&TN(t)||t.flags&2097152&&Ki(t,465829888)&&kt(t.types,Jc))}function ll(t,i=0){return mm(t)?n4(ll(t.baseType,i)):VC(t,i)?wV(t,i):t.flags&1048576?yi(Xt(t.types,o=>ll(o,i))):t.flags&2097152?vn(Xt(t.types,o=>ll(o,i))):$t(t)&32?kN(t,i):t===Ts?Ts:t.flags&2?Bn:t.flags&131073?nr:IV(t,(i&2?128:402653316)|(i&1?0:2344),i===0)}function NV(t){let i=gi(4194304);return i.type=t,i}function J0(t,i,o){if(o||!(Sl(t)&6)){let c=jt(qn(t)).nameType;if(!c){let f=hi(t.valueDeclaration);c=t.name==="default"?rl("default"):f&&Kd(f)||(Fh(t)?void 0:rl(ya(t)))}if(c&&c.flags&i)return c}return Bn}function IV(t,i,o){let c=o&&($t(t)&7||t.aliasSymbol)?NV(t):void 0,f=Xt(oo(t),m=>J0(m,i)),p=Xt(So(t),m=>m!==Bl&&bN(m.keyType,i)?m.keyType===mr&&i&8?Or:m.keyType:Bn);return vn(ri(f,p),1,void 0,void 0,c)}function bN(t,i){return!!(t.flags&i||t.flags&2097152&&kt(t.types,o=>bN(o,i)))}function qC(t){if(t.flags&4194304){let i=Uo(t.type);return Wf(i)?q5(i):ll(i)}if(t.flags&16777216&&console.debug("todo - getLowerBoundOfKeyType"),t.flags&1048576)return Zs(t,qC,!0);if(t.flags&2097152){let i=t.types;return i.length===2&&i[0].flags&76&&i[1]===Xa?t:yi(xo(t.types,qC))}return t}function AV(t,i){let o=t.inferences.slice(i);return Jo(Xt(o,c=>c.typeParameter),Xt(o,()=>yr))}function OV(t,i){return t?ET(5,t,i):i}function Rd(t,i,o){return o?ET(5,tf(t,i),o):tf(t,i)}function NT(t,i,o){return t?ET(5,t,tf(i,o)):tf(i,o)}function LV(t){return!t.constraint&&!$C(t)||t.constraint===Wa?t:t.restrictiveInstantiation||(t.restrictiveInstantiation=_c(t.symbol),t.restrictiveInstantiation.constraint=Wa,t.restrictiveInstantiation)}function $C(t){return Vi(Yr(t.symbol&&t.symbol.declarations,ru),B1)[0]}function kN(t,i){let o=ec(t),c=zc(t),f=ol(t.target||t);if(!f&&!(i&2))return c;let p=[];Xg(c)?t_(c,S):t_(qC(c),S);let m=i&2?Us(vn(p),I=>!(I.flags&5)):vn(p);if(m.flags&1048576&&c.flags&1048576&&ma(m.types)===ma(c.types))return c;return m;function S(I){let F=f?zn(f,NT(t.mapper,o,I)):I;p.push(F===mr?Or:F)}}function IT(t,i){return t.flags&465829888?zn(t,i):t.flags&1048576?vn(Xt(t.types,o=>IT(o,i)),0):t.flags&2097152?yi(Xt(t.types,o=>IT(o,i))):t}function FV(t){return!!(t.candidates||t.contraCandidates)||CN(t.typeParameter)}function CN(t){return!!(t.symbol&&Jt(t.symbol.declarations,i=>ru(i)&&i.default))}function mc(t,i){return up(t,i,zs,vs)>=0}function AT(t,i,o){if(t&&Ki(t,465829888)){let c=im(i);if(c&&o&1&&kt(c.inferences,FV))return IT(t,c.nonFixingMapper);if(c?.returnMapper){let f=IT(t,c.returnMapper);return f.flags&1048576&&mc(f.types,Bo)&&mc(f.types,js)?Us(f,p=>p!==Bo&&p!==js):f}}return t}function z0(t,i){let o=Mc(t,i),c=AT(o,t,i);if(c&&!(i&&i&2&&c.flags&8650752))return Zs(c,p=>$t(p)&32?p:Uo(p),!0)}function HC(t,i){let o=Oi(t,0),c=Yr(o,f=>!WV(f,i));return c.length===1?c[0]:RV(c)}function RV(t){rb(oe,"noImplicitAny")&&console.debug("todo - getIntersectedSignatures")}function MV(t){return!!(J(t)&512)||!!t.dotDotDotToken}function jV(t){return!!(t.flags&8)}function BV(t){return kt(t.parameters,MV)}function Gl(t){if(BV(t.declaration))return!0;if($a(t)){let i=Ln(t.parameters[t.parameters.length-1]);return!vi(i)||i.target.hasRestElement}return!1}function Va(t){let i=t.parameters.length;if($a(t)){let o=Ln(t.parameters[i-1]);if(vi(o))return i+o.target.fixedLength-(o.target.hasRestElement?0:1)}return i}function WV(t,i){let o=0;for(;o<(i.parameters?.length??0);o++){let c=i.parameters[o];if(c.initializer||c.dotDotDotToken||b8(c))break}return!Gl(t)&&Va(t)<o}function Rg(t){let i=Tu(t);if(i)return i;let o=z0(t,1);if(!o)return;if(!(o.flags&1048576))return HC(o,t);let c,f=o.types;for(let p of f){let m=HC(p,t);if(m)if(!c)c=[m];else if(LT(c[0],m,!1,!0,!0,OT))c.push(m);else return}if(c)return c.length===1?c[0]:PN(c[0],c)}function OT(t,i){return ml(t,i,lo)?-1:0}function V0(t){let i=Pu(t.declaration,t.typeParameters,t.thisParameter,t.parameters,void 0,void 0,t.minArgumentCount,t.flags&1295);return i.target=t.target,i.mapper=t.mapper,i.compositeSignatures=t.compositeSignatures,i.compositeKind=t.compositeKind,i}function PN(t,i){let o=V0(t);return o.compositeSignatures=i,o.compositeKind=1048576,o.target=void 0,o.mapper=void 0,o}function ul(t,i){let o=i&1,c=i&2;if(c||t.resolvedMinArgumentCount===void 0){let f;if(Nu(t.declaration,512))f=0;else if($a(t)){let p=Ln(t.parameters[t.parameters.length-1]);if(f=t.parameters.length-1,vi(p)){let m=Pl(p.target.elementFlags,I=>!(I&1)),S=m<0?p.target.fixedLength:m;S>0&&(f=t.parameters.length-1+S)}}if(f===void 0&&(f=t.minArgumentCount),c)return f;for(let p=f-1;p>=0;p--){let m=Ql(t,p);if(Us(m,xN).flags&131072)break;f=p}t.resolvedMinArgumentCount=f}return t.resolvedMinArgumentCount}function xN(t){return!!(t.flags&16384)}function Ql(t,i){return Md(t,i)||Cn}function Md(t,i){let o=t.parameters.length-($a(t)?1:0);if(i<o)return q0(t.parameters[i]);if($a(t)){let c=Ln(t.parameters[o]),f=i-o;if(!vi(c)||c.target.combinedFlags&12||f<c.target.fixedLength)return jc(c,Ka(f))}}function Wc(t,i=!1,o=!0){return G&&o?Of(t,i):t}function q0(t){let i=t.valueDeclaration;return Wc(Ln(t),!1,!!i&&P_(i))}function UV(t,i,o){let c=Va(t),f=Va(i),p=ul(t),m=ul(i),S=Gl(t),I=Gl(i);return!!(c===f&&p===m&&S===I||o&&p<=m)}function LT(t,i,o,c,f,p){if(t===i)return-1;if(!UV(t,i,o)||Pr(t.typeParameters)!==Pr(i.typeParameters))return 0;if(i.typeParameters){let I=Jo(t.typeParameters,i.typeParameters);for(let F=0;F<i.typeParameters.length;F++){let U=t.typeParameters[F],Q=i.typeParameters[F];if(!(U===Q||p(zn(zg(U),I)||yr,zg(Q)||yr)&&p(zn(Mp(U),I)||yr,Mp(Q)||yr)))return 0}t=lm(t,I,!0)}let m=-1,S=Va(i);for(let I=0;I<S;I++){let F=Ql(t,I),U=Ql(i,I),Q=p(U,F);if(!Q)return 0;m&=Q}if(!f){let I=Ea(t),F=Ea(i);m&=I||F?JV(I,F,p):p(Ei(t),Ei(i))}return m}function JV(t,i,o){return t&&i&&i6(t,i)?t.type===i.type?-1:t.type&&i.type?o(t.type,i.type):0:0}function bu(t){return Ys(t)}function Ys(t){return!!($t(t)&4)&&(t.target===V||t.target===Ye)}function jd(t){return!!($t(t)&4)&&t.target===Ce}function GC(t){let i=!1;if($t(t)&65536){if(t.flags&1048576)if(kt(t.types,$f))i=!0;else for(let o of t.types)i||(i=GC(o));else if(!bu(t)){if(Fc(t))for(let o of Cu(t)){let c=Ln(o);if($t(c)&65536&&(i=GC(c),!i)){let f=o.declarations?.find(p=>p.symbol.valueDeclaration?.parent===t.symbol.valueDeclaration);f&&(at(f,P.Object_literal_s_property_0_implicitly_has_an_1_type,wi(o),rn(rc(c))),i=!0)}}}}return i}function zV(t){return console.debug("todo - getExtractStringType - is this needed?"),mr}function Eae(t){return t}function om(t){let i=Ta(t,X);if(i)return jn(i)}function QC(t){let i=ws(t,!0);return i.kind===290&&i.elements.length===0}function VV(t,i){let o=Tu(t);if(!o)return;let c=t.parameters.indexOf(i);return Ql(o,c)}function $0(t,i,o){if(Cs(t)&&t.parent.parent.kind===244){let m=t.parent.parent,S=Lr(m.expression,o);if(Ys(S)&&S.resolvedTypeArguments)return qs(S.resolvedTypeArguments);if(jd(S)){let I=d4(m)||Cn;if(I.flags&1048576){let F=t.parent.declarations.indexOf(t),U=I.types.at(F)||Cn;if(t.type){let Q=jn(t.type);if(!Ff(U,Q,t,m.expression))return At}return U}else if(I===O)return om(t);return I}}ds(t.parent)&&w.fail("implement me - getTypeForVariableLikeDeclaration");let c=Cl(t)&&!w9(t)||Kp(t)||OM(t),f=!1,p=om(t);if(p)return Wc(p,c,f);if((je||Nr(t))&&Cs(t)&&!ds(t.name)&&!(J(t)&2048)&&!(t.flags&33554432)){if(!t.initializer||qV(t.initializer))return ls;if(t.initializer&&QC(t.initializer))return vr}if(gs(t)){if(!t.symbol)return;let m=t.parent,S=VV(m,t);if(S)return S;let I=IN(t);if(I)return Wc(I,!1,f)}if(uh(t)&&t.initializer){let m=YC(t,Mg(t,o));return Wc(m,c,f)}}function qV(t){let i=ws(t,!0);return i.kind===137||i.kind===89&&_a(i)===Vt}function YC(t,i){let o=Bd(i);if(Nr(t)){if(DN(o))return so(t,Cn),Cn;if(MT(o))return so(t,Ci),Ci}return o}function Mg(t,i,o){let c=eb(t);return Z5(c)||(o?H0(c,o,void 0,i||0):Fo(c,i))}function $V(t){HV(t)}function HV(t){let i=t;for(;i;){if(Y2(i))return da(t,P.Jump_target_cannot_cross_function_boundary);switch(i.kind){case 249:if(t.label&&i.label.text===t.label.text)return t.kind===251&&!$S(i.statement,!0)?da(t,P.A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement):!1;break;case 256:if(t.kind===250&&!t.label)return!1;break;default:if($S(i,!1)&&!t.label)return!1;break}i=i.parent}if(t.label){let o=t.kind===250?P.A_break_statement_can_only_jump_to_a_label_of_an_enclosing_statement:P.A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement;return da(t,o)}else{let o=t.kind===250?P.A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement:P.A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement;return da(t,o)}}function H0(t,i,o,c){let f=t;RT(f,i,!1),GV(f,o);let p=Lr(t,c|1|(o?2:0));o&&o.intraExpressionInferenceSites&&(o.intraExpressionInferenceSites=void 0);let m=Ki(p,2944)&&FT(p,AT(i,t,void 0))?Js(p):p;return QV(),jg(),m}function FT(t,i){if(i){if(i.flags&3145728){let o=i.types;return kt(o,c=>FT(t,c))}if(i.flags&58982400){let o=Ls(i)||yr;return Ki(o,4)&&Ki(t,128)||Ki(o,8)&&Ki(t,256)||Ki(o,64)&&Ki(t,2048)||Ki(o,4096)&&Ki(t,8192)||FT(t,o)}return!!(i.flags&406847616&&Ki(t,128)||i.flags&256&&Ki(t,256)||i.flags&2048&&Ki(t,2048)||i.flags&512&&Ki(t,512)||i.flags&4096&&Ki(t,8192))}return!1}function GV(t,i){lt[Un]=t,nn[Un]=i,Un++}function QV(){Un--}function ZC(t){RT(t,Mc(t,void 0),!0)}function RT(t,i,o){Kn[Le]=t,ur[Le]=i,_r[Le]=o,Le++}function jg(){Le--}function wae(t){return t}function DN(t){return G?t===Os:t===O}function MT(t){let i=G0(t);return!!i&&DN(i)}function G0(t){return Ys(t)?fs(t)[0]:void 0}function Nf(){return le.pop(),se.pop(),de.pop()}function XC(t){return t?Cn:yr}function Lp(t,i,o,c){let f=Pr(i);if(!f)return[];let p=Pr(t);if(c||p>=o&&p<=f){let m=t?t.slice():[];for(let I=p;I<f;I++)m[I]=At;let S=XC(c);for(let I=p;I<f;I++){let F=Mp(i[I]);c&&F&&(rm(F,yr)||rm(F,ns))&&(F=Cn),m[I]=F?zn(F,Jo(i,m)):S}return m.length=i.length,m}return t&&t.slice()}function ku(t){let i=0;if(t)for(let o=0;o<t.length;o++)CN(t[o])||(i=o+1);return i}function KC(t,i){return Lp(Xt(t.typeArguments,jn),i,ku(i),Nr(t))}function fs(t){if(!t.resolvedTypeArguments){if(!If(t,5))return ri(t.target.outerTypeParameters,t.target.localTypeParameters?.map(()=>At))||Oe;let i=t.node,o=i?i.kind===166?ri(t.target.outerTypeParameters,KC(i,t.target.localTypeParameters)):i.kind===161?[jn(i.elementType)]:Xt(i.elements,jn):Oe;Nf()?t.resolvedTypeArguments??(t.resolvedTypeArguments=t.mapper?Bc(o,t.mapper):o):(t.resolvedTypeArguments??(t.resolvedTypeArguments=ri(t.target.outerTypeParameters,t.target.localTypeParameters?.map(()=>At)||Oe)),at(t.node||E,t.target.symbol?P.Type_arguments_for_0_circularly_reference_themselves:P.Tuple_type_arguments_circularly_reference_themselves,t.target.symbol&&wi(t.target.symbol)))}return t.resolvedTypeArguments}function jT(t,i){for(let o=le.length-1;o>=ye;o--){if(YV(le[o],se[o]))return-1;if(le[o]===t&&se[o]===i)return o}return-1}function YV(t,i){switch(i){case 0:return!!jt(t).type;case 2:return!!jt(t).declaredType;case 3:return!!t.resolvedReturnType;case 4:return!!t.immediateBaseConstraint;case 5:return!!t.resolvedTypeArguments;case 6:return!!t.baseTypesResolved;case 7:return!!jt(t).writeType;case 8:return Tn(t).parameterInitializerContainsUndefined!==void 0}return w.assertNever(i)}function If(t,i){let o=jT(t,i);if(o>=0){let{length:c}=le;for(let f=o;f<c;f++)de[f]=!1;return!1}return le.push(t),de.push(!0),se.push(i),!0}function ZV(t,i,o){return t?(o&&CT(i,t),rc(t)):(t=gs(i)&&i.dotDotDotToken?Ci:Cn,t)}function BT(t,i){return ZV($0(t,!0,0),t,i)}function XV(t){let i=Tn(t);return i.containsArgumentsReference===void 0&&(i.flags&512?i.containsArgumentsReference=!0:i.containsArgumentsReference=o(t.body)),i.containsArgumentsReference;function o(c){if(!c)return!1;switch(c.kind){case 89:return c.text===hn.name&&RI(c)===hn;case 152:case 154:return c.name.kind===147&&o(c.name);case 286:case 281:return o(c.expression);case 174:return o(c.initializer);default:return!EP(c)&&!Zp(c)&&!!Ns(c,o)}}}function EN(t){Gr(t)&&Jt(t,i=>{kb(i)&&Dn(i)})}function wN(t,i){switch(t.text){case"any":case"unknown":case"never":case"number":case"bigint":case"boolean":case"string":case"symbol":case"void":case"object":case"undefined":at(t,i,t.text)}}function KV(t){return E6(t)!==Pa}function NN(t){Wd(t),t.expression&&Zu(t.expression,P.Type_expected),Dn(t.constraint),Dn(t.default);let i=Df(Ft(t));Ls(i),KV(i)||at(t.default,P.Type_parameter_0_has_a_circular_default,rn(i));let o=ga(i),c=Mp(i);o&&c&&Rf(c,Up(zn(o,tf(i,c)),c),t.default,P.Type_0_does_not_satisfy_the_constraint_1),eh(t),r(()=>wN(t.name,P.Type_parameter_name_cannot_be_0))}function eq(t){let i=!1;if(t)for(let c=0;c<t.length;c++){let f=t[c];NN(f),r(o(f,c))}function o(c,f){return()=>{c.default?(i=!0,tq(c.default,t,f)):i&&at(c,P.Required_type_parameters_may_not_follow_optional_type_parameters);for(let p=0;p<f;p++)t[p].symbol===c.symbol&&at(c.name,P.Duplicate_identifier_0,sa(c.name))}}}function tq(t,i,o){c(t);function c(f){if(f.kind===166){let p=W0(f);if(p.flags&262144)for(let m=o;m<i.length;m++)p.symbol===Ft(i[m])&&at(f,P.Type_parameter_defaults_can_only_reference_previously_declared_type_parameters)}Ns(f,c)}}function nq(t){let i;t.typeExpression||(i=at(t.name,P.LPCDoc_var_tag_should_have_a_type_annotation));let o=t.parent;if(!i&&kt(o.tags,c=>!KP(c))&&(i=at(t.name,P.LPCDoc_var_tags_must_be_in_their_own_LPCDoc_comment)),!i)if(Eo(t.name))i=at(t.name,P.LPCDoc_var_tag_should_provide_a_variable_name);else{let c=Tt(t.name)?t.name:t.name.right,f=hr(t.name,c,3,P.Cannot_find_name_0,!1,!0);if(f){let p=$n(f.valueDeclaration),m=$n(t);p==m&&(i=at(t.name,P.LPCDoc_var_tags_can_only_annotate_inherited_variables_0_is_a_local_variable,c.text))}}Dn(t.typeExpression)}function rq(t){t.typeExpression||at(t.name,P.JSDoc_typedef_tag_should_either_have_a_type_annotation_or_be_followed_by_property_or_member_tags),t.name&&wN(t.name,P.Type_alias_name_cannot_be_0),Dn(t.typeExpression),eq(fh(t))}function iq(t){Dn(t.constraint);for(let i of t.typeParameters)Dn(i)}function sq(t){Dn(t.typeExpression)}function oq(t){Dn(t.typeExpression)}function aq(t){Dn(t.typeExpression)}function cq(t){Dn(t.typeExpression)}function lq(t){r(i),bT(t);function i(){t.type||so(t,Cn)}}function uq(t){let i=Yr(yg(t),Pc);if(!Pr(i))return;let o=Nr(t),c=new Set,f=new Set;if(Jt(t.parameters,({name:m},S)=>{m&&Tt(m)&&c.add(m.text),m&&ds(m)&&f.add(S)}),XV(t)){let m=i.length-1,S=i[m];o&&S&&Tt(S.name)&&S.typeExpression&&S.typeExpression.type&&!c.has(S.name.text)&&!f.has(m)&&!Ys(jn(S.typeExpression.type))&&at(S.name,P.JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_It_would_match_arguments_if_it_had_an_array_type,go(S.name))}else Jt(i,({name:m,isNameFirst:S},I)=>{f.has(I)||Tt(m)&&c.has(m.text)||(iu(m)?o&&at(m,P.Qualified_name_0_is_not_allowed_without_a_leading_param_object_1,nu(m),nu(m.left)):S||VN(o,m,P.JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name,go(m)))})}function e6(t){return gh(t)&&kI(t)}function WT(t){let i=t.arguments||Oe,o=x4(i);if(o>=0){let c=i.slice(0,o);for(let f=o;f<i.length;f++){let p=i[f],m=p.kind===294&&(Te?Lr(p.expression):Fo(p.expression));c.push(p)}return c}return i}function Bd(t){return t.flags&128&&Wp(t)?mr:t.flags&256&&Wp(t)?co:t.flags&2048&&Wp(t)?br:t.flags&512&&Wp(t)?Nt:t.flags&1048576?Zs(t,Bd):t}function t6(t,i,o){return console.warn("todo - getRestTypeAtPosition"),Cn}function IN(t){let i=t.parent;if(!e6(i))return;let o=Yp(i);if(o&&o.arguments){let f=WT(o),p=i.parameters.indexOf(t);if(t.dotDotDotToken)return C4(f,p,f.length,Cn,void 0,0);let m=Tn(o),S=m.resolvedSignature;m.resolvedSignature=ui;let I=p<f.length?Bd(Lr(f[p])):t.initializer?void 0:O;return m.resolvedSignature=S,I}let c=Rg(i);if(c){let f=i.parameters.indexOf(t);return t.dotDotDotToken&&wo(i.parameters)===t?t6(c,f):Md(c,f)}}function n6(t,i){let o=J(t);if(t.parent.kind!==170&&t.parent.kind!==274&&t.flags&33554432){let c=Vb(t);c&&c.flags&128&&!(o&4096)&&(o|=2048),o|=4096}return o&i}function fq(t){function i(Ut,It){return It!==void 0&&It.parent===Ut[0].parent?It:Ut[0]}function o(Ut,It,ln,Pn,pr){if((Pn^pr)!==0){let rs=n6(i(Ut,It),ln);Jt(Ut,ji=>{let Br=n6(ji,ln)^rs})}}function c(Ut,It,ln,Pn){}let f=6150,p=0,m=f,S=!1,I=!0,F=!1,U,Q,ne,ae=t.declarations,Ge=(t.flags&16384)!==0,nt=!1,wt=!1,ht=!1,Rt=[];if(ae)for(let Ut of ae){let It=Ut,ln=It.flags&33554432,Pn=It.parent&&It.parent.kind===163||ln;if(Pn&&(ne=void 0),(It.kind===170||It.kind===274)&&!ln&&(ht=!0),It.kind===169||It.kind===154||It.kind===156){Rt.push(It);let pr=n6(It,f);p|=pr,m&=pr;let Tr=x_(It.body);Tr&&U&&(Ge?wt=!0:nt=!0),Tr?U||(U=It):F=!0,ne=It,Pn||(Q=It)}}if(nt&&Jt(Rt,Ut=>{at(hi(Ut)||Ut,P.Duplicate_function_implementation)}),ht&&!Ge&&t.flags&16&&ae&&Jt(ae,Ut=>{let It=Ut.kind===170?P.Class_declaration_cannot_implement_overload_list_for_0:Ut.kind===169?P.Function_with_bodies_can_only_merge_with_classes_that_are_ambient:void 0;It&&Rs(at(hi(Ut)||Ut,It,ya(t)))}),F&&(ae&&(o(ae,U,f,p,m),void 0),U)){let Ut=cm(t),It=Ai(U);for(let ln of Ut)if(!dq(It,ln)){let Pn=It.declaration&&ip(It.declaration)?It.declaration.parent.tagName:It.declaration;Rs(at(Pn,P.This_overload_signature_is_not_compatible_with_its_implementation_signature),fi(ln.declaration,P.The_implementation_signature_is_declared_here));break}}}function AN(t){return Jo(t,void 0)}function pq(t){return lm(t,AN(t.typeParameters),!0)}function Q0(t){return t.typeParameters?t.erasedSignatureCache||(t.erasedSignatureCache=pq(t)):t}function dq(t,i){let o=Q0(t),c=Q0(i),f=Ei(o),p=Ei(c);return p===fn||ml(p,f,ua)||ml(f,p,ua)?_q(o,c,!0):!1}function _q(t,i,o){return o6(t,i,o?4:0,!1,void 0,void 0,Oc,void 0)!==0}function UT(t){if(!t.typeParameters&&(!t.thisParameter||qo(q0(t.thisParameter)))&&t.parameters.length===1&&$a(t)){let i=q0(t.parameters[0]);return!!((Ys(i)?fs(i)[0]:i).flags&131073&&Ei(t).flags&3)}return!1}function mq(t){return wS(t,Xt(t.typeParameters,i=>i.target&&!ga(i.target)?i.target:i),Nr(t.declaration))}function gq(t){return t.typeParameters?t.canonicalSignatureCache||(t.canonicalSignatureCache=mq(t)):t}function r6(t,i,o){let c=Va(t),f=Va(i),p=CS(t),m=CS(i),S=m?f-1:f,I=p?S:Math.min(c,S);for(let F=0;F<I;F++)o(Ql(t,F),Ql(i,F));m&&o(t6(t,I,!1),m)}function ON(t,i,o,c){let f=I1(t.typeParameters,t,0,c),p=CS(i),m=o&&(p&&p.flags&262144?o.nonFixingMapper:o.mapper),S=m?lm(i,m):i;return r6(S,t,(I,F)=>{Af(f.inferences,I,F)}),o||s6(i,t,(I,F)=>{Af(f.inferences,I,F,128)}),wS(t,FN(f),Nr(i.declaration))}function i6(t,i){return t.kind===i.kind&&t.parameterIndex===i.parameterIndex}function s6(t,i,o){let c=Ea(i);if(c){let p=Ea(t);if(p&&i6(p,c)&&p.type&&c.type){o(p.type,c.type);return}}let f=Ei(i);cl(f)&&o(Ei(t),f)}function hq(t){switch(t.parent.kind){case 271:case 151:case 169:case 270:case 158:case 154:case 156:let i=t.parent;if(t===i.type)return i;case 188:return wy(t)}}function yq(t){let i=hq(t);if(!i){at(t,P.A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods);return}let o=Ai(i),c=Ea(o);if(!c)return;Dn(t.type);let{parameterName:f}=t;if(c.parameterIndex>=0){if($a(o)&&c.parameterIndex===o.parameters.length-1)at(f,P.A_type_predicate_cannot_reference_a_rest_parameter);else if(c.type){let p=()=>pi(void 0,P.A_type_predicate_s_type_must_be_assignable_to_its_parameter_s_type);Rf(c.type,Ln(o.parameters[c.parameterIndex]),t.type,void 0,p)}}else if(f){let p=!1;for(let{name:m}of i.parameters)if(ds(m)&&LN(m,f,c.parameterName)){p=!0;break}p||at(t.parameterName,P.Cannot_find_parameter_0,c.parameterName)}}function LN(t,i,o){for(let c of t.elements){if(Bm(c))continue;let f=c.name;if(f.kind===89&&f.text===o)return at(i,P.A_type_predicate_cannot_reference_element_0_in_a_binding_pattern,o),!0;if(f.kind===265&&LN(f,i,o))return!0}}function vq(t,i){let o,c=[];for(let p of t){let m=Ea(p);if(m){if(m.kind!==1||o&&!i6(o,m))return;o=m,c.push(m.type)}else{let S=i!==2097152?Ei(p):void 0;if(S!==Xo&&S!==Bo)return}}if(!o)return;let f=GN(c,i);return Bg(o.kind,o.parameterName,o.parameterIndex,f)}function Bg(t,i,o,c){return{kind:t,parameterName:i,parameterIndex:o,type:c}}function Tq(t,i){return Bg(t.kind,t.parameterName,t.parameterIndex,zn(t.type,i))}function Ea(t){if(!t.resolvedTypePredicate){if(t.target){let i=Ea(t.target);t.resolvedTypePredicate=i?Tq(i,t.mapper):Fi}else if(t.compositeSignatures)t.resolvedTypePredicate=vq(t.compositeSignatures,t.compositeKind)||Fi;else{let i=t.declaration&&$c(t.declaration),o;if(!i){let c=Tu(t.declaration);c&&t!==c&&(o=Ea(c))}if(i||o)t.resolvedTypePredicate=i&&u_(i)?Sq(i,t):o||Fi;else if(t.declaration&&tu(t.declaration)&&(!t.resolvedReturnType||t.resolvedReturnType.flags&16)&&Va(t)>0){let{declaration:c}=t;t.resolvedTypePredicate=Fi,t.resolvedTypePredicate=bq(c)||Fi}else t.resolvedTypePredicate=Fi}w.assert(!!t.resolvedTypePredicate)}return t.resolvedTypePredicate===Fi?void 0:t.resolvedTypePredicate}function Sq(t,i){let o=t.parameterName,c=t.type&&jn(t.type);return o.kind===260?Bg(0,void 0,void 0,c):Bg(1,o.text,Pl(i.parameters,f=>f.name===o.text),c)}function bq(t){if(Sc(t)!==0)return;let o;if(t.body&&t.body.kind!==236)o=t.body;else if(k_(t.body,f=>{if(o||!f.expression)return!0;o=f.expression})||!o||NC(t))return;return kq(t,o)}function kq(t,i){if(i=ws(i,!0),!!(Fo(i).flags&16))return Jt(t.parameters,(c,f)=>{let p=Ln(c.symbol);if(!p||p.flags&16||!Tt(c.name)||QI(c.symbol)||X1(c))return;let m=Cq(t,i,c,p);if(m)return Bg(1,c.name.text,f,m)})}function Cq(t,i,o,c){let f=i.flowNode||i.parent.kind===248&&i.parent.flowNode||Hc(2,void 0,void 0),p=Hc(32,i,f),m=qp(o.name,c,c,t,p);if(m===c)return;let S=Hc(64,i,f);return qp(o.name,c,m,t,S).flags&131072?m:void 0}function FN(t){let i=[];for(let o=0;o<t.inferences.length;o++)i.push(N4(t,o));return i}function Pq(t,i){return i===Jn?t===i:rm(t,i)||!!(i.flags&4&&t.flags&128||i.flags&8&&t.flags&256)}function xq(t,i){return!!(t.flags&524288&&i.flags&524288&&t.symbol&&t.symbol===i.symbol||t.aliasSymbol&&t.aliasTypeArguments&&t.aliasSymbol===i.aliasSymbol)}function RN(t){return!!Tn(t).skipDirectInference}function MN(t){return!!(t.symbol&&kt(t.symbol.declarations,RN))}function Dq(t,i){return vi(i)&&Eq(i,0)===jc(t,Ka(0))&&!nc(i,"1")}function Eq(t,i){let o=nc(t,""+i);if(o)return o;if(qa(t,vi))return jN(t,i,oe.noUncheckedIndexedAccess?Zn:void 0)}function wq(t){return t.fixedLength+y1(t,3)}function jN(t,i,o){return Zs(t,c=>{let f=c,p=X5(f);return p?o&&i>=wq(f.target)?vn([p,o]):p:Zn})}function Wg(t,i,o=0){return!!(t===i||t.flags&3145728&&kt(t.types,c=>Wg(c,i,o))||o<3&&t.flags&16777216&&(Wg(Hd(t),i,o+1)||Wg(Gd(t),i,o+1)))}function BN(t,i,o){if(t.flags&1048576||t.flags&2097152&&!VC(t)){let c=Xt(t.types,f=>Vc(jc(f,i),o));return t.flags&2097152||o?yi(c):vn(c)}}function Nq(t){let i=bi();t_(t,c=>{if(!(c.flags&128))return;let f=c.value,p=es(4,f);p.links.type=Cn,c.symbol&&(p.declarations=c.symbol.declarations,p.valueDeclaration=c.symbol.valueDeclaration),i.set(f,p)});let o=t.flags&4?[jf(mr,ns,!1)]:Oe;return wa(void 0,i,Oe,Oe,o)}function Iq(t,i){return!(i.target.combinedFlags&8)&&i.target.minLength>t.target.minLength||!i.target.hasRestElement&&(t.target.hasRestElement||i.target.fixedLength<t.target.fixedLength)}function Aq(t,i){return vi(t)&&vi(i)?Iq(t,i):!!s4(t,i,!1,!0)&&!!s4(i,t,!1,!1)}function Oq(t,i){return Jf(t)===Jf(i)&&Ti(t.target.elementFlags,(o,c)=>(o&12)===(i.target.elementFlags[c]&12))}function Lq(t){let i=t.typeParameters;if(i){if(t.baseSignatureCache)return t.baseSignatureCache;let o=AN(i),c=Jo(i,Xt(i,p=>ga(p)||yr)),f=Xt(i,p=>zn(p,c)||yr);for(let p=0;p<i.length-1;p++)f=Bc(f,c);return f=Bc(f,o),t.baseSignatureCache=lm(t,Jo(i,f),!0)}return t}function WN(t){return _e?sT(t,Jn):gl(t,524288)}function Af(t,i,o,c=0,f=!1){let p=!1,m,S=2048,I,F,U,Q=0;ne(i,o);function ne(Qe,xe){if(!(!cl(xe)||mm(xe))){if(Qe===Ts||Qe===In){let un=m;m=Qe,ne(xe,xe),m=un;return}if(Qe.aliasSymbol&&Qe.aliasSymbol===xe.aliasSymbol){if(Qe.aliasTypeArguments){let un=jt(Qe.aliasSymbol).typeParameters,Wn=ku(un),En=Lp(Qe.aliasTypeArguments,un,Wn,Nr(Qe.aliasSymbol.valueDeclaration)),Qr=Lp(xe.aliasTypeArguments,un,Wn,Nr(Qe.aliasSymbol.valueDeclaration));Rt(En,Qr,R3(Qe.aliasSymbol))}return}if(Qe===xe&&Qe.flags&3145728){for(let un of Qe.types)ne(un,un);return}if(xe.flags&1048576){let[un,Wn]=ht(Qe.flags&1048576?Qe.types:[Qe],xe.types,Pq),[En,Qr]=ht(un,Wn,xq);if(Qr.length===0)return;if(xe=vn(Qr),En.length===0){ae(Qe,xe,1);return}Qe=vn(En)}else if(xe.flags&2097152&&!Ti(xe.types,z5)&&!(Qe.flags&1048576)){let[un,Wn]=ht(Qe.flags&2097152?Qe.types:[Qe],xe.types,rm);if(un.length===0||Wn.length===0)return;Qe=yi(un),xe=yi(Wn)}if(xe.flags&41943040){if(mm(xe))return;xe=Su(xe)}if(xe.flags&8650752){if(MN(Qe))return;let un=ln(xe);if(un){if($t(Qe)&262144||Qe===Ca)return;if(!un.isFixed){let En=m||Qe;if(En===In)return;if((un.priority===void 0||c<un.priority)&&(un.candidates=void 0,un.contraCandidates=void 0,un.topLevel=!0,un.priority=c),c===un.priority){if(Dq(un.typeParameter,En))return;f&&!p?ki(un.contraCandidates,En)||(un.contraCandidates=ei(un.contraCandidates,En),ES(t)):ki(un.candidates,En)||(un.candidates=ei(un.candidates,En),ES(t))}!(c&128)&&xe.flags&262144&&un.topLevel&&!Wg(o,xe)&&(un.topLevel=!1,ES(t))}S=Math.min(S,c);return}let Wn=Vc(xe,!1);if(Wn!==xe)ne(Qe,Wn);else if(xe.flags&8388608){let En=Vc(xe.indexType,!1);if(En.flags&465829888){let Qr=BN(Vc(xe.objectType,!1),En,!1);Qr&&Qr!==xe&&ne(Qe,Qr)}}}if($t(Qe)&4&&$t(xe)&4&&(Qe.target===xe.target||Ys(Qe)&&Ys(xe))&&!(Qe.node&&xe.node))Rt(fs(Qe),fs(xe),c4(Qe.target));else if(Qe.flags&4194304&&xe.flags&4194304)Ut(Qe.type,xe.type);else if((Qu(Qe)||Qe.flags&4)&&xe.flags&4194304){let un=Nq(Qe);Ge(un,xe.type,256)}else if(Qe.flags&8388608&&xe.flags&8388608)ne(Qe.objectType,xe.objectType),ne(Qe.indexType,xe.indexType);else if(Qe.flags&268435456&&xe.flags&268435456)Qe.symbol===xe.symbol&&ne(Qe.type,xe.type);else if(Qe.flags&33554432)ne(Qe.baseType,xe),ae(u4(Qe),xe,4);else if(xe.flags&16777216)wt(Qe,xe,rs);else if(xe.flags&3145728)pr(Qe,xe.types,xe.flags);else if(Qe.flags&1048576){let un=Qe.types;for(let Wn of un)ne(Wn,xe)}else{if(Qe=dc(Qe),zo(Qe)&&zo(xe)&&wt(Qe,xe,ji),!(c&512&&Qe.flags&467927040)){let un=Uo(Qe);if(un!==Qe&&!(un.flags&2621440))return ne(un,xe);Qe=un}Qe.flags&2621440&&wt(Qe,xe,Br)}}}function ae(Qe,xe,un){let Wn=c;c|=un,ne(Qe,xe),c=Wn}function Ge(Qe,xe,un){let Wn=c;c|=un,Ut(Qe,xe),c=Wn}function nt(Qe,xe,un,Wn){let En=c;c|=Wn,pr(Qe,xe,un),c=En}function wt(Qe,xe,un){let Wn=Qe.id+","+xe.id,En=I&&I.get(Wn);if(En!==void 0){S=Math.min(S,En);return}(I||(I=new Map)).set(Wn,-1);let Qr=S;S=2048;let Er=Q;(F??(F=[])).push(Qe),(U??(U=[])).push(xe),_m(Qe,F,F.length,2)&&(Q|=1),_m(xe,U,U.length,2)&&(Q|=2),Q!==3?un(Qe,xe):S=-1,U.pop(),F.pop(),Q=Er,I.set(Wn,S),S=Math.min(S,Qr)}function ht(Qe,xe,un){let Wn,En;for(let Qr of xe)for(let Er of Qe)un(Er,Qr)&&(ne(Er,Qr),Wn=o_(Wn,Er),En=o_(En,Qr));return[Wn?Yr(Qe,Qr=>!ki(Wn,Qr)):Qe,En?Yr(xe,Qr=>!ki(En,Qr)):xe]}function Rt(Qe,xe,un){let Wn=Qe.length<xe.length?Qe.length:xe.length;for(let En=0;En<Wn;En++)En<un.length&&(un[En]&7)===2?Ut(Qe[En],xe[En]):ne(Qe[En],xe[En])}function Ut(Qe,xe){f=!f,ne(Qe,xe),f=!f}function It(Qe,xe){re||c&1024?Ut(Qe,xe):ne(Qe,xe)}function ln(Qe){if(Qe.flags&8650752){for(let xe of t)if(Qe===xe.typeParameter)return xe}}function Pn(Qe){let xe;for(let un of Qe){let Wn=un.flags&2097152&&Zr(un.types,En=>!!ln(En));if(!Wn||xe&&Wn!==xe)return;xe=Wn}return xe}function pr(Qe,xe,un){let Wn=0;if(un&1048576){let En,Qr=Qe.flags&1048576?Qe.types:[Qe],Er=new Array(Qr.length),Ds=!1;for(let Bi of xe)if(ln(Bi))En=Bi,Wn++;else for(let Ni=0;Ni<Qr.length;Ni++){let na=S;S=2048,ne(Qr[Ni],Bi),S===c&&(Er[Ni]=!0),Ds=Ds||S===-1,S=Math.min(S,na)}if(Wn===0){let Bi=Pn(xe);Bi&&ae(Qe,Bi,1);return}if(Wn===1&&!Ds){let Bi=ao(Qr,(Ni,na)=>Er[na]?void 0:Ni);if(Bi.length){ne(vn(Bi),En);return}}}else for(let En of xe)ln(En)?Wn++:ne(Qe,En);if(un&2097152?Wn===1:Wn>0)for(let En of xe)ln(En)&&ae(Qe,En,1)}function Tr(Qe,xe,un){if(un.flags&1048576||un.flags&2097152){let Wn=!1;for(let En of un.types)Wn=Tr(Qe,xe,En)||Wn;return Wn}if(un.flags&4194304){let Wn=ln(un.type);if(Wn&&!Wn.isFixed&&!MN(Qe)){let En=lN(Qe,xe,un);En&&ae(En,Wn.typeParameter,$t(Qe)&262144?16:8)}return!0}if(un.flags&262144){ae(ll(Qe,Qe.pattern?2:0),un,32);let Wn=Bf(un);if(Wn&&Tr(Qe,xe,Wn))return!0;let En=Xt(oo(Qe),Ln),Qr=Xt(So(Qe),Er=>Er!==Bl?Er.type:Bn);return ne(vn(ri(En,Qr)),sm(xe)),!0}return!1}function rs(Qe,xe){if(Qe.flags&16777216)ne(Qe.checkType,xe.checkType),ne(Qe.extendsType,xe.extendsType),ne(Hd(Qe),Hd(xe)),ne(Gd(Qe),Gd(xe));else{let un=[Hd(xe),Gd(xe)];nt(Qe,un,xe.flags,f?64:0)}}function ji(Qe,xe){ne(zc(Qe),zc(xe)),ne(sm(Qe),sm(xe));let un=ol(Qe),Wn=ol(xe);un&&Wn&&ne(un,Wn)}function Br(Qe,xe){if($t(Qe)&4&&$t(xe)&4&&(Qe.target===xe.target||Ys(Qe)&&Ys(xe))){Rt(fs(Qe),fs(xe),c4(Qe.target));return}if(zo(Qe)&&zo(xe)&&ji(Qe,xe),$t(xe)&32&&!xe.declaration.nameType){let un=zc(xe);if(Tr(Qe,xe,un))return}if(!Aq(Qe,xe)){if(bu(Qe)){if(vi(xe)){let un=Jf(Qe),Wn=Jf(xe),En=fs(xe),Qr=xe.target.elementFlags;if(vi(Qe)&&Oq(Qe,xe)){for(let Bi=0;Bi<Wn;Bi++)ne(fs(Qe)[Bi],En[Bi]);return}let Er=vi(Qe)?Math.min(Qe.target.fixedLength,xe.target.fixedLength):0,Ds=Math.min(vi(Qe)?y1(Qe.target,3):0,xe.target.hasRestElement?y1(xe.target,3):0);for(let Bi=0;Bi<Er;Bi++)ne(fs(Qe)[Bi],En[Bi]);if(!vi(Qe)||un-Er-Ds===1&&Qe.target.elementFlags[Er]&4){let Bi=fs(Qe)[Er];for(let Ni=Er;Ni<Wn-Ds;Ni++)ne(Qr[Ni]&8?Qs(Bi):Bi,En[Ni])}else{let Bi=Wn-Er-Ds;if(Bi===2){if(Qr[Er]&Qr[Er+1]&8){let Ni=ln(En[Er]);Ni&&Ni.impliedArity!==void 0&&(ne(Kg(Qe,Er,Ds+un-Ni.impliedArity),En[Er]),ne(Kg(Qe,Er+Ni.impliedArity,Ds),En[Er+1]))}else if(Qr[Er]&8&&Qr[Er+1]&4){let Ni=ln(En[Er])?.typeParameter,na=Ni&&Ls(Ni);if(na&&vi(na)&&!na.target.hasRestElement){let yc=na.target.fixedLength;ne(Kg(Qe,Er,un-(Er+yc)),En[Er]),ne(b1(Qe,Er+yc,Ds),En[Er+1])}}else if(Qr[Er]&4&&Qr[Er+1]&8){let Ni=ln(En[Er+1])?.typeParameter,na=Ni&&Ls(Ni);if(na&&vi(na)&&!na.target.hasRestElement){let yc=na.target.fixedLength,hl=un-y1(xe.target,3),rf=hl-yc,vc=Eu(fs(Qe).slice(rf,hl),Qe.target.elementFlags.slice(rf,hl),!1,Qe.target.labeledElementDeclarations&&Qe.target.labeledElementDeclarations.slice(rf,hl));ne(b1(Qe,Er,Ds+yc),En[Er]),ne(vc,En[Er+1])}}}else if(Bi===1&&Qr[Er]&8){let Ni=xe.target.elementFlags[Wn-1]&2,na=Kg(Qe,Er,Ds);ae(na,En[Er],Ni?2:0)}else if(Bi===1&&Qr[Er]&4){let Ni=b1(Qe,Er,Ds);Ni&&ne(Ni,En[Er])}}for(let Bi=0;Bi<Ds;Bi++)ne(fs(Qe)[un-Bi-1],En[Wn-Bi-1]);return}if(Ys(xe)){po(Qe,xe);return}}zi(Qe,xe),dr(Qe,xe,0),dr(Qe,xe,1),po(Qe,xe)}}function zi(Qe,xe){let un=Cu(xe);for(let Wn of un){let En=ni(Qe,Wn.name);En&&!kt(En.declarations,RN)&&ne(Gu(Ln(En),!!(En.flags&16777216)),Gu(Ln(Wn),!!(Wn.flags&16777216)))}}function dr(Qe,xe,un){let Wn=Oi(Qe,un),En=Wn.length;if(En>0){let Qr=Oi(xe,un),Er=Qr.length;for(let Ds=0;Ds<Er;Ds++){let Bi=Math.max(En-Er+Ds,0);Po(Lq(Wn[Bi]),Q0(Qr[Ds]))}}}function Po(Qe,xe){if(!(Qe.flags&512)){let un=p,Wn=xe.declaration?xe.declaration.kind:0;p=p||Wn===154||Wn===156,r6(Qe,xe,It),p=un}s6(Qe,xe,ne)}function po(Qe,xe){let un=$t(Qe)&$t(xe)&32?8:0,Wn=So(xe);if(dS(Qe))for(let En of Wn){let Qr=[];for(let Er of oo(Qe))if(Hu(J0(Er,384),En.keyType)){let Ds=Ln(Er);Qr.push(Er.flags&16777216?WN(Ds):Ds)}for(let Er of So(Qe))Hu(Er.keyType,En.keyType)&&Qr.push(Er.type);Qr.length&&ae(vn(Qr),En.type,un)}for(let En of Wn){let Qr=pa(Qe,En.keyType);Qr&&ae(Qr.type,En.type,un)}}}function o6(t,i,o,c,f,p,m,S){if(t===i||!(o&16&&UT(t))&&UT(i))return-1;if(o&16&&UT(t)&&!UT(i))return 0;let I=Va(i);if(!Gl(i)&&(o&8?Gl(t)||Va(t)>I:ul(t)>I))return c&&!(o&8)&&f(P.Target_signature_provides_too_few_arguments_Expected_0_or_more_but_got_1,ul(t),I),0;t.typeParameters&&t.typeParameters!==i.typeParameters&&(i=gq(i),t=ON(t,i,void 0,m));let U=Va(t),Q=th(t),ne=th(i);(Q||ne)&&zn(Q||ne,S);let ae=i.declaration?i.declaration.kind:0,Ge=!(o&3)&&re&&ae!==154&&ae!==156,nt=-1,wt=Q||ne?Math.min(U,I):Math.max(U,I),ht=Q||ne?wt-1:-1;for(let Rt=0;Rt<wt;Rt++){let Ut=Rt===ht?JN(t,Rt):Md(t,Rt),It=Rt===ht?JN(i,Rt):Md(i,Rt);if(Ut&&It&&(Ut!==It||o&8)){let ln=o&3||UN(t,Rt)?void 0:Mf(Ut),Pn=o&3||UN(i,Rt)?void 0:Mf(It),Tr=ln&&Pn&&!Ea(ln)&&!Ea(Pn)&&E1(Ut,50331648)===E1(It,50331648)?o6(Pn,ln,o&8|(Ge?2:1),c,f,p,m,S):!(o&3)&&!Ge&&m(Ut,It,!1)||m(It,Ut,c);if(Tr&&o&8&&Rt>=ul(t)&&Rt<ul(i)&&m(Ut,It,!1)&&(Tr=0),!Tr)return c&&f(P.Types_of_parameters_0_and_1_are_incompatible,t1(t,Rt),t1(i,Rt)),0;nt&=Tr}}if(!(o&4)){let Rt=zT(i)?Cn:Ei(i);if(Rt===fn||Rt===Cn)return nt;let Ut=zT(t)?Cn:Ei(t),It=Ea(i);if(It){let ln=Ea(t);if(ln)nt&=Fq(ln,It,c,f,m);else if(N9(It))return c&&f(P.Signature_0_must_be_a_type_predicate,qg(t)),0}else nt&=o&1&&m(Rt,Ut,!1)||m(Ut,Rt,c),!nt&&c&&p&&p(Ut,Rt)}return nt}function Fq(t,i,o,c,f){return console.info("todo - compareTypePredicateRelatedTo"),-1}function am(t){return!!Ug(t)}function a6(t){return!!(Ug(t)&4194304)}function Ug(t){return t.flags&3145728?(t.objectFlags&2097152||(t.objectFlags|=2097152|Tc(t.types,(i,o)=>i|Ug(o),0)),t.objectFlags&12582912):t.flags&33554432?(t.objectFlags&2097152||(t.objectFlags|=2097152|Ug(t.baseType)|Ug(t.constraint)),t.objectFlags&12582912):(t.flags&58982400||zo(t)||Wf(t)?4194304:0)|(t.flags&63176704||P3(t)?8388608:0)}function UN(t,i){let o;return!!(t.target&&(o=Md(t.target,i))&&am(o))}function JN(t,i){let o=t6(t,i),c=o&&G0(o);return c&&qo(c)?Cn:o}function Nae(t,i){}function Rq(t){!Wd(t)&&!$N(t.declarationList)&&Wq(t),B0(t.declarationList)}function zN(t){if(t.kind,yP(t)){let i=Gt;Jt(t.statements,Dn),Gt=i}else Jt(t.statements,Dn);t.locals&&Jg(t)}function Jg(t){r(i);function i(){let o=$n(t),c=xr.get(o.path);c||(c=[],xr.set(o.path,c)),c.push(t)}}function VN(t,i,o,...c){if(i.pos<0||i.end<0){if(!t)return;let f=kc(i);sS(t,"message"in o?Iu(f,0,0,o,...c):NP(f,o));return}sS(t,"message"in o?fi(i,o,...c):s_($n(i),i,o))}function Y0(t){let i=VT(t,!1);return Rn=t,Rr=i,i}function qN(t){return t.id<=0&&(t.id=AA,AA++),t.id}function Mq(t){return t===2?"private":t===4?"protected":"public"}function Wd(t){let i=jq(t);if(i!==void 0)return i;let o=lf(t)?t.declarationList.flags&1:0,c,f,p,m,S=0,I=!1,F=!1;for(let U of t.modifiers){if(t.kind===153||t.kind===156)return da(U,P._0_modifier_cannot_appear_on_a_type_member,Mi(U.kind));if(t.kind===150&&(U.kind!==125||!ho(t.parent)))return da(U,P._0_modifier_cannot_appear_on_an_index_signature,Mi(U.kind));switch(U.kind){case 124:case 123:case 122:let Q=Mq(Gh(U.kind));if(S&7)return da(U,P.Accessibility_modifier_already_seen);if(S&256)return da(U,P._0_modifier_must_precede_1_modifier,Q,"static");if(S&8192)return da(U,P._0_modifier_must_precede_1_modifier,Q,"readonly");S|=Gh(U.kind);break;case 125:if(S&256)return da(U,P._0_modifier_already_seen,"static");if(t.kind===149)return da(U,P._0_modifier_cannot_appear_on_a_parameter,"static");S|=256,c=U;break}}return t.kind===149&&S&167&&ds(t.name)?da(t,P.A_parameter_property_may_not_be_declared_using_a_binding_pattern):t.kind===149&&S&167&&t.dotDotDotToken?da(t,P.A_parameter_property_cannot_be_declared_using_a_rest_parameter):!1}function jq(t){if(!t.modifiers)return!1;let i=Bq(t);return i&&Zu(i,P.Modifiers_cannot_appear_here)}function Bq(t){switch(t.kind){case 152:case 153:case 154:case 156:case 150:case 270:case 271:case 149:case 148:case 169:case 242:return;case 174:case 175:case 173:return Zr(t.modifiers,S_);default:switch(t.kind){case 170:case 274:case 239:case 241:case 283:return Zr(t.modifiers,S_);default:w.assertNever(t)}}}function Iae(t,i){let o=Zr(t.modifiers,S_);return o&&o.kind!==i?o:void 0}function Wq(t){return!1}function $N(t){let i=t.declarations;return!1}function Uq(t){return(Cs(t)||Cl(t)||Kp(t)||gs(t))&&!!(Ta(t,X)||Nr(t)&&P_(t)&&t.initializer&&Ub(t.initializer)&&$c(t.initializer))}function c6(t,i){if(t=Ud(t),t.flags&8752)return Ln(t);if(t.flags&7){if(Es(t)&262144){let c=t.links.syntheticOrigin;if(c&&c6(c))return Ln(t)}let o=t.valueDeclaration;if(o){if(Uq(o))return Ln(t);if(Cs(o)&&o.parent.parent.kind===244){let c=o.parent.parent,f=Z0(c.expression,void 0);if(f)return zf(13,f,Zn,void 0)}i&&Rs(i,fi(o,P._0_needs_an_explicit_type_annotation,wi(t)))}}}function Z0(t,i){switch(t.kind){case 89:let o=hs(t.parent)?16:void 0,c=qd(_a(t,o));return c6(c,i);case 71:return _6(t);case 286:{let f=Z0(t.expression,i);if(f){let p=t.name,m;return m=ni(f,p.text),m&&c6(m,i)}return}case 289:return Z0(t.expression,i)}}function JT(t){let i=Tn(t),o=i.effectsSignature;if(o===void 0){let c;t.parent.kind===247?c=Z0(t.expression,void 0):t.expression.kind!==71&&(c=Bp(t.expression));let f=Oi(c&&Uo(c)||yr,0),p=f.length===1&&!f[0].typeParameters?f[0]:kt(f,HN)?D1(t):void 0;o=i.effectsSignature=p&&HN(p)?p:Ao}return o===Ao?void 0:o}function HN(t){return!!(Ea(t)||t.declaration&&(fo(t.declaration)||yr).flags&131072)}function GN(t,i,o){return i!==2097152?vn(t,o):yi(t)}function Jq(t,i){let o=Sc(t),c=[],f=NC(t),p=!1;if(k_(t.body,m=>{let S=m.expression;if(S){if(S=ws(S,!0),S.kind===272&&S.expression.kind===89&&Fo(S.expression).symbol===gn(t.symbol)&&!gh(t.symbol.valueDeclaration)){p=!0;return}let I=Fo(S,i&&i&-9);I.flags&131072&&(p=!0),Tl(c,I)}else f=!0}),!(c.length===0&&!f&&(p||zq(t))))return G&&c.length&&f&&Tl(c,Zn),c}function zq(t){switch(t.kind){case 270:case 283:return!0;default:return!1}}function zT(t){return t.compositeSignatures&&kt(t.compositeSignatures,zT)||!t.resolvedReturnType&&jT(t,3)>=0}function QN(t,i){let o=fo(t);if(o)return o;let c=OC(t);if(c&&!zT(c)){let p=Ei(c),m=Sc(t);return m&1?Us(p,S=>!!(S.flags&58998787)):m&2?Us(p,S=>!!(S.flags&58998787)):p}let f=Yp(t);if(f)return Mc(f,i)}function X0(t,i){if(!t.body)return At;let o=Sc(t),c=(o&2)!==0,f=(o&1)!==0,p,m,S,I=fn;if(t.body.kind!==236){if(Au(t)&&Gr(t.body))return console.debug("todo - remove this hack"),Cn;p=Fo(t.body,i&&i&-9),Au(t)&&Tt(t.body)&&$t(p)&16&&(p=Fa(p.callSignatures)?.resolvedReturnType??p)}else{let F=Jq(t,i);if(!F)return Bn;if(F.length===0){let U=QN(t,void 0);return U&&(U0(U,o)||fn).flags&32768?Zn:fn}p=vn(F,2)}if(p||m||S){if(m&&CT(t,m,3),p&&CT(t,p,1),S&&CT(t,S,2),p&&mt(p)||m&&mt(m)||S&&mt(S)){let F=OC(t),U=F?F===Ai(t)?f?void 0:p:AT(Ei(F),t,void 0):void 0;p=Vq(p,U,c)}m&&(m=rc(m)),p&&(p=rc(p)),S&&(S=rc(S))}return p||I}function YN(t,i){return FT(t,i)||(t=Bd(t)),Js(t)}function Vq(t,i,o){return t&&mt(t)&&(t=YN(t,i)),t}function Ei(t){if(!t.resolvedReturnType){if(!If(t,3))return At;let i=t.target?zn(Ei(t.target),t.mapper):t.compositeSignatures?zn(GN(Xt(t.compositeSignatures,Ei),t.compositeKind,2),t.mapper):fo(t.declaration)||(Eo(t.declaration.body)?Cn:X0(t.declaration));if(t.flags&128&&(i=Of(i)),!Nf()){if(t.declaration){let o=$c(t.declaration);if(o)at(o,P.Return_type_annotation_circularly_references_itself);else if(je){let c=t.declaration,f=hi(c);f?at(f,P._0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions,sa(f)):at(c,P.Function_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions)}}i=Cn}t.resolvedReturnType??(t.resolvedReturnType=i)}return t.resolvedReturnType}function ZN(t){let i=Tn(t);if(i.isExhaustive===void 0){i.isExhaustive=0;let o=Hq(t);i.isExhaustive===0&&(i.isExhaustive=o)}else i.isExhaustive===0&&(i.isExhaustive=!1);return i.isExhaustive}function qq(t){return!(t.flags&232352)}function $q(t,i){return t.flags&1048576?!Jt(t.types,o=>!ki(i,o)):ki(i,t)}function Hq(t){let i=Fo(t.expression);if(!Qu(i))return!1;let o=gS(t);return!o.length||kt(o,qq)?!1:$q(Zs(i,Js),o)}function VT(t,i){let o=0;for(;;){if(o++>100)return console.warn("Bailing out of reachable flow worker"),Rr;if(t===Rn)return Rr;let c=t.flags;if(c&4096){if(!i){let f=qN(t),p=H[f];return p!==void 0?p:H[f]=VT(t,!0)}i=!1}if(c&1)return!1;if(c&368)t=t.antecedent;else if(c&512){let f=JT(t.node);if(f&&Ei(f).flags&131072)return!1;t=t.antecedent}else{if(c&4)return kt(t.antecedent,f=>VT(f,!1));if(c&8){let f=t.antecedent;if(f===void 0||f.length===0)return!1;t=f[0]}else if(c&128){let f=t.node;if(f.clauseStart===f.clauseEnd&&ZN(f.switchStatement))return!1;t=t.antecedent}else if(c&1024){Rn=void 0;let f=t.node.target,p=f.antecedent;f.antecedent=t.node.antecedents;let m=VT(t.antecedent,!1);return f.antecedent=p,m}else return!(c&1)}}}function XN(t){let i=t.id||0;return i<0||i>=Ne.length?0:Ne[i]?.flags||0}function Aae(t,i){return Gq(t,i),!!(XN(t)&i)}function Gq(t,i){if(!oe.noCheck&&pF($n(t),oe)||Tn(t).calculatedFlags&i)return;switch(i){case 16:case 32:return m(t);case 128:case 256:case 2097152:return p(t);case 512:case 8192:case 65536:case 262144:return I(t);case 536870912:return F(t);case 4096:case 32768:case 16384:return Q(t);default:return w.assertNever(i,`Unhandled node check flag calculation: ${w.formatNodeCheckFlags(i)}`)}function c(ae,Ge){let nt=Ge(ae,ae.parent);if(nt!=="skip")return nt||Hy(ae,Ge)}function f(ae){let Ge=Tn(ae);if(Ge.calculatedFlags&i)return"skip";Ge.calculatedFlags|=2097536,m(ae)}function p(ae){c(ae,f)}function m(ae){let Ge=Tn(ae);Ge.calculatedFlags|=48,ae.kind===71&&_6(ae)}function S(ae){let Ge=Tn(ae);if(Ge.calculatedFlags&i)return"skip";Ge.calculatedFlags|=336384,F(ae)}function I(ae){c(ae,S)}function F(ae){let Ge=Tn(ae);if(Ge.calculatedFlags|=536920064,Tt(ae)&&ep(ae)&&!(Ii(ae.parent)&&ae.parent.name===ae)){let nt=gc(ae,!0);nt&&nt!==Di&&KI(ae,nt)}}function U(ae){let Ge=Tn(ae);if(Ge.calculatedFlags&i)return"skip";Ge.calculatedFlags|=53248,ne(ae)}function Q(ae){let Ge=Rm(Ru(ae)?ae.parent:ae);c(Ge,U)}function ne(ae){F(ae)}}function Qq(t){let i=t.valueDeclaration;return i&&Cl(i)&&!Ta(i)&&!i.initializer&&(je||Nr(i))}function Yq(t,i){let o=i?.valueDeclaration&&(!Qq(i)||ld(i.valueDeclaration)&4096)&&KN(i)||Zn;return qp(t,ls,o)}function KN(t){let i=K0(t),o=i&&$u(i)[0];return o&&nc(o,t.name)}function K0(t){return t.parent&&t.parent.flags&32?bo(nf(t)):void 0}function eI(t,i,o,c,f){let p=Hf(t);if(p===1)return Gu(o,!!(i&&i.flags&16777216));if(i&&!(i.flags&98311)&&!(i.flags&8192&&o.flags&1048576))return o;if(o===ls)return Yq(t,i);o=U6(o,t,f);let m=!1;G&&i&&i.valueDeclaration&&Ii(i.valueDeclaration)&&LP(i.valueDeclaration)&&_1(t)===_1(i.valueDeclaration)&&(m=!0);let S=qp(t,o,m?Of(o):o);return m&&!m1(o)&&m1(S)?(at(c,P.Property_0_is_used_before_being_assigned,wi(i)),o):p?_l(S):S}function Of(t,i=!1){w.assert(G);let o=i?vo:Zn;return t===o||t.flags&1048576&&t.types[0]===o?t:vn([t,o])}function tI(t,i,o,c,f,p=!0){let m=p?t.kind===146?t.right:t.kind===266&&t.propertyName?t.propertyName:t.name:void 0;return nI(t,i,o,c,f,m)}function nI(t,i,o,c,f,p){return!(Sl(f,o)&6)||i||c.flags&262144&&(c=c.isThisType?ga(c):Ls(c)),!0}function l6(t,i,o){let c=t&&t.flags&106500&&t.valueDeclaration;if(!c)return;let f=b_(c,2),p=t.valueDeclaration&&El(t.valueDeclaration)&&Cc(t.valueDeclaration.name);if(!(!f&&!p)&&!(i&&YS(i)&&!(t.flags&65536))){if(o){let m=Xn(i,tu);if(m&&m.symbol===t)return}(Es(t)&1?jt(t).target:t).isReferenced=-1}}function rI(t,i){return!!i&&va(t)&&i===_a(Gp(t))}function Zq(t,i,o,c){return!1}function Xq(t){let i=Tn(t);if(!(i.flags&1)){if(qy(t,oe,e))return;rT(t),Sh(Zt),Sh(sn),Sh(mn),Sh(Kt),i.flags&8388608&&(Zt=i.potentialThisCollisions,sn=i.potentialNewTargetCollisions,mn=i.potentialWeakMapSetCollisions,Kt=i.potentialReflectCollisions),Jt(t.statements,Dn),Dn(t.endOfFileToken);let o=qf(t),c=jp(o);e$(t),Jg(t),r(()=>{!t.isDeclarationFile&&(oe.noUnusedLocals||oe.noUnusedParameters)&&f3(sI(t),(f,p,m)=>{!Iy(f)&&iI(p,!!(f.flags&33554432))&&Vn.add(m)})}),gH(t),i.flags|=1}}function iI(t,i){if(i)return!1;switch(t){case 0:return!!oe.noUnusedLocals;case 1:return!!oe.noUnusedParameters;default:return w.assertNever(t)}}function sI(t){return xr.get(t.path)||Oe}function Kq(t,i){console.warn("Implement me - checkSourceFileNodesWorker")}function e$(t){let i=Tn(t);i.deferredNodes&&i.deferredNodes.forEach(t$),i.deferredNodes=void 0}function e1(t,i){return w.attachDebugPrototypeIfDebug({kind:3,func:t,debugInfo:w.isDebugging?i:void 0})}function gc(t,i){if(ti(t))return gn(t.symbol);let{parent:o}=t,c=o?.parent;if(LA(t))return Ft(o);switch(t.kind,t.kind){case 89:case 286:case 146:return eY(t);case 71:return Lr(t).symbol;case 179:return hc(t.name,268435456);case 16:if(t.parent.kind===252&&t.parent.inheritClause===t)return Vd(t,t,void 0,i);case 11:let p=Ha(o)?o.argumentExpression===t?Co(o.expression):void 0:dp(o)&&l_(c)?jn(c.objectType):void 0;return p&&ni(p,t.text);case 39:return qf(t.parent);default:return}}function t$(t){Dt?.push(Dt.Phase.Check,"checkDeferredNode",{kind:t.kind,pos:t.pos,end:t.end,path:t.tracingPath});let i=E;switch(E=t,v=0,t.kind){case 272:case 276:qT(t);break;case 270:case 283:i$(t);break;case 274:break;case 148:r$(t);break;case 279:case 296:case 289:n$(t);break;case 269:break;default:console.log("Unhandled deferred node kind: ",w.formatSyntaxKind(t.kind))}E=i,Dt?.pop()}function n$(t){let{type:i}=aI(t),o=yp(t)?i:t,c=Tn(t);w.assertIsDefined(c.assertionExpressionType);let f=g1(_l(c.assertionExpressionType)),p=jn(i);Ws(p)||r(()=>{let m=rc(f);ZT(p,m)||oI(f,p,o,P.Conversion_of_type_0_to_type_1_may_be_a_mistake_because_neither_type_sufficiently_overlaps_with_the_other_If_this_was_intentional_convert_the_expression_to_unknown_first)})}function oI(t,i,o,c,f){return Jp(t,i,io,o,c,f)}function aI(t){let i,o;switch(t.kind){case 296:case 279:i=t.type,o=t.expression;break;case 289:i=xh(t),o=t.expression;break}return{type:i,expression:o}}function r$(t){if(UM(t.parent)||ho(t.parent)||nv(t.parent)){let i=Df(Ft(t)),o=F3(i)&49152;if(o){let c=Ft(t.parent);if(nv(t.parent)&&!($t(bo(c))&52))at(t,P.Variance_annotations_are_only_supported_in_type_aliases_for_object_function_constructor_and_mapped_types);else if(o===16384||o===32768){Dt?.push(Dt.Phase.CheckTypes,"checkTypeParameterDeferred",{parent:zs(bo(c)),id:zs(i)});let f=h1(c,i,o===32768?Ul:Ic),p=h1(c,i,o===32768?Ic:Ul),m=i;g=i,Rf(f,p,t,P.Type_0_is_not_assignable_to_type_1_as_implied_by_variance_annotation),g=m,Dt?.pop()}}}}function i$(t){let i=Sc(t),o=fo(t);if(Jw(t,o),t.body){if(Au(t)&&Gr(t.body)){console.warn("todo - getReturnTypeFromBody - possible FluffOS function shortcut"),t.body.forEach(c=>Lr(c));return}if($c(t)||Ei(Ai(t)),t.body.kind===236)Dn(t.body);else{let c=Lr(t.body),f=o&&U0(o,i);if(f){let p=b4(t.body);Ff(c,f,p,p)}}}}function qT(t){return cI(t)&&Jt(t.typeArguments,Dn),Ur(t)?Lr(t.left):op(t)&&Jt(t.arguments,i=>{Lr(i)}),ui}function cI(t){return op(t)}function cm(t){if(!t||!t.declarations)return Oe;let i=[];for(let o=0;o<t.declarations.length;o++){let c=t.declarations[o];if(Qi(c)){if(o>0&&c.body){let f=t.declarations[o-1];if(c.parent===f.parent&&c.kind===f.kind&&c.pos===f.end)continue}if(Nr(c)&&c.jsDoc){let f=rR(c);if(Pr(f)){for(let p of f){let m=p.typeExpression;m.type===void 0&&!jm(c)&&so(m,Cn),i.push(Ai(m))}continue}}i.push(!gh(c)&&!hh(c)&&Tu(c)||Ai(c))}}return i}function u6(t){return t?.members?SS(t.members):void 0}function lI(t){let i=u6(t);return i?uI(i):Oe}function uI(t){if(t.declarations){let i=[];for(let o of t.declarations)if(o.parameters.length===1){let c=o.parameters[0];c.type&&t_(jn(c.type),f=>{s$(f)&&!O0(i,f)&&i.push(jf(f,o.type?jn(o.type):Cn,b_(o,8192),o))})}return i}return Oe}function s$(t){return!!(t.flags&12)}function fI(t){if(!t.declaredProperties){gI(t);let i=t.symbol,o=Du(i);t.declaredProperties=o1(o),t.declaredCallSignatures=Oe,t.declaredConstructSignatures=Oe,t.declaredIndexInfos=Oe,t.declaredCallSignatures=cm(o.get("__call")),t.declaredConstructSignatures=cm(o.get("__new")),t.declaredIndexInfos=lI(i)}return t}function Lr(t,i,o,c){Dt?.push(Dt.Phase.Check,"checkExpression",{kind:t.kind,pos:t.pos,end:t.end,path:t.tracingPath});let f=E;E=t,v=0;let p=F$(t,i,o,c),m=A$(t,p,i);return E=f,Dt?.pop(),m}function o$(t){let i=fI(t.target),o=ri(i.typeParameters,[i.thisType]),c=fs(t),f=c.length===o.length?c:ri(c,[t]);_I(t,i,o,f)}function lm(t,i,o){let c;if(t.typeParameters&&!o){c=Xt(t.typeParameters,UC),i=wf(Jo(t.typeParameters,c),i);for(let p of c)p.mapper=i}let f=Pu(t.declaration,c,t.thisParameter&&f6(t.thisParameter,i),xT(t.parameters,i,f6),void 0,void 0,t.minArgumentCount,t.flags&1295);return f.target=t,f.mapper=i,f}function $T(t,i){return xT(t,i,lm)}function a$(t,i){return jf(t.keyType,zn(t.type,i),t.isReadonly,t.declaration)}function pI(t,i){return xT(t,i,a$)}function dI(t,i){for(let o of i){let c=t.get(o.name);(!c||c.valueDeclaration&&Ur(c.valueDeclaration))&&t.set(o.name,o)}}function _I(t,i,o,c){let f,p,m,S,I;uP(o,c,0,o.length)?(p=i.symbol?Du(i.symbol):bi(i.declaredProperties),m=i.declaredCallSignatures,S=i.declaredConstructSignatures,I=i.declaredIndexInfos):(f=Jo(o,c),p=mI(i.declaredProperties,f,o.length===1),m=$T(i.declaredCallSignatures,f),S=$T(i.declaredConstructSignatures,f),I=pI(i.declaredIndexInfos,f));let F=$u(i);if(F.length){if(i.symbol&&p===Du(i.symbol)){let Q=bi(i.declaredProperties),ne=u6(i.symbol);ne&&Q.set("__index",ne),p=Q}xu(t,p,m,S,I);let U=wo(c);for(let Q of F){let ne=Q;dI(p,oo(ne)),m=ri(m,Oi(ne,0)),S=ri(S,Oi(ne,1));let ae=ne!==Cn?So(ne):[jf(mr,Cn,!1)];I=ri(I,Yr(ae,Ge=>!O0(I,Ge.keyType)))}}xu(t,p,m,S,I)}function c$(t){return!0}function f6(t,i){let o=jt(t);if(o.type&&!cl(o.type)&&(!(t.flags&65536)||o.writeType&&!cl(o.writeType)))return t;Es(t)&1&&(t=o.target,i=wf(o.mapper,i));let c=es(t.flags,t.name,1|Es(t)&53256);return c.declarations=t.declarations,c.parent=t.parent,c.links.target=t,c.links.mapper=i,t.valueDeclaration&&(c.valueDeclaration=t.valueDeclaration),o.nameType&&(c.links.nameType=o.nameType),c}function mI(t,i,o){let c=bi();for(let f of t)c.set(f.name,o&&c$(f)?f:f6(f,i));return c}function l$(t){let i=o1(t),o=SS(t);return o?ri(i,[o]):i}function gI(t){if(t.target){xu(t,j,Oe,Oe,Oe);let m=mI(Cu(t.target),t.mapper,!1),S=$T(Oi(t.target,0),t.mapper),I=$T(Oi(t.target,1),t.mapper),F=pI(So(t.target),t.mapper);xu(t,m,S,I,F);return}let i=gn(t.symbol);if(!i){console.debug("no symbol found");return}if(i.flags&2048){xu(t,j,Oe,Oe,Oe);let m=Du(i),S=cm(m.get("__call")),I=cm(m.get("__new")),F=lI(i);xu(t,m,S,I,F);return}let o=Jd(i),c,f;if(xu(t,o,Oe,Oe,Oe),i?.flags&32){let m=jp(i);m.flags&11272192&&(o=bi(l$(o)),dI(o,oo(m)))}let p=SS(o);if(p?c=uI(p):f&&(c=ei(c,f)),xu(t,o,Oe,Oe,c||Oe),i.flags&8208&&(t.callSignatures=cm(i)),i.flags&32){let m=jp(i),S=i.members?cm(i.members.get("__constructor")):Oe;i.flags&16&&(console.debug("todo - resolveAnonymousTypeMembers - function"),S=Is(S.slice(),Vi(t.callSignatures,I=>{}))),S.length||(S=u$(m)),t.constructSignatures=S}}function p6(t){return Xt(t.typeArguments,jn)}function u$(t){let i=M6(t),o=Oi(i,1),c=$1(t.symbol),f=!1;if(o.length===0)return[Pu(void 0,t.localTypeParameters,void 0,Oe,t,void 0,0,f?4:0)];let p=Pd(t),m=Nr(p),S=p6(p),I=Pr(S),F=[];for(let U of o){let Q=ku(U.typeParameters),ne=Pr(U.typeParameters);if(m||I>=Q&&I<=ne){let ae=ne?NS(U,Lp(S,U.typeParameters,Q,m)):V0(U);ae.typeParameters=t.localTypeParameters,ae.resolvedReturnType=t,ae.flags=f?ae.flags|4:ae.flags&-5,F.push(ae)}}return F}function d6(t){_I(t,fI(t),Oe,Oe)}function f$(t){console.debug("todo - resolveReverseMappedTypeMembers")}function p$(t){console.debug("todo - resolveMappedTypeMembers")}function fl(t){return t.members||(t.flags&524288?t.objectFlags&4?o$(t):t.objectFlags&3||t.objectFlags&3?d6(t):t.objectFlags&1024?f$(t):t.objectFlags&16?gI(t):t.objectFlags&32&&p$(t):t.flags&1048576?y$(t):t.flags&2097152?d$(t):w.fail("Unhandled type "+w.formatTypeFlags(t.flags))),t}function d$(t){let i,o,c,f=t.types,p=g$(f),m=Kf(p,S=>S);for(let S=0;S<f.length;S++){let I=t.types[S];if(!p[S]){let F=Oi(I,1);F.length&&m>0&&(F=Xt(F,U=>{let Q=V0(U);return Q.resolvedReturnType=h$(Ei(U),f,p,S),Q})),o=hI(o,F)}i=hI(i,Oi(I,0)),c=Tc(So(I),(F,U)=>_$(F,U,!1),c)}xu(t,j,i||Oe,o||Oe,c||Oe)}function hI(t,i){for(let o of i)(!t||Ti(t,c=>!LT(c,o,!1,!1,!1,OT)))&&(t=ei(t,o));return t}function _$(t,i,o){if(t)for(let c=0;c<t.length;c++){let f=t[c];if(f.keyType===i.keyType)return t[c]=jf(f.keyType,o?vn([f.type,i.type]):yi([f.type,i.type]),o?f.isReadonly||i.isReadonly:f.isReadonly&&i.isReadonly),t}return ei(t,i)}function m$(t){let i=Oi(t,1);if(i.length===1){let o=i[0];if(!o.typeParameters&&o.parameters.length===1&&$a(o)){let c=q0(o.parameters[0]);return qo(c)||G0(c)===Cn}}return!1}function g$(t){let i=Kf(t,c=>Oi(c,1).length>0),o=Xt(t,m$);if(i>0&&i===Kf(o,c=>c)){let c=o.indexOf(!0);o[c]=!1}return o}function h$(t,i,o,c){let f=[];for(let p=0;p<i.length;p++)p===c?f.push(t):o[p]&&f.push(Ei(Oi(i[p],1)[0]));return yi(f)}function y$(t){let i=yI(Xt(t.types,f=>f===R?[Ao]:Oi(f,0))),o=yI(Xt(t.types,f=>Oi(f,1))),c=v$(t.types);xu(t,j,i,o,c)}function v$(t){let i=So(t[0]);if(i){let o=[];for(let c of i){let f=c.keyType;Ti(t,p=>!!Lc(p,f))&&o.push(jf(f,vn(Xt(t,p=>Hl(p,f))),kt(t,p=>Lc(p,f).isReadonly)))}return o}return Oe}function yI(t){let i,o;for(let c=0;c<t.length;c++){if(t[c].length===0)return Oe;t[c].length>1&&(o=o===void 0?c:-1);for(let f of t[c])if(!i||!HT(i,f,!1,!1,!0)){let p=x$(t,f,c);if(p){let m=f;if(p.length>1){let S=f.thisParameter,I=Jt(p,F=>F.thisParameter);if(I){let F=yi(Vi(p,U=>U.thisParameter&&Ln(U.thisParameter)));S=xp(I,F)}m=PN(f,p),m.thisParameter=S}(i||(i=[])).push(m)}}}if(!Pr(i)&&o!==-1){let c=t[o!==void 0?o:0],f=c.slice();for(let p of t)if(p!==c){let m=p[0];if(w.assert(!!m,"getUnionSignatures bails early on empty signature lists and should not have empty lists on second pass"),f=m.typeParameters&&kt(f,S=>!!S.typeParameters&&!b$(m.typeParameters,S.typeParameters))?void 0:Xt(f,S=>T$(S,m)),!f)break}i=f}return i||Oe}function T$(t,i){let o=t.typeParameters||i.typeParameters,c;t.typeParameters&&i.typeParameters&&(c=Jo(i.typeParameters,t.typeParameters));let f=t.declaration,p=S$(t,i,c),m=Math.max(t.minArgumentCount,i.minArgumentCount),S=Pu(f,o,void 0,p,void 0,void 0,m,(t.flags|i.flags)&1295);return S.compositeKind=1048576,S.compositeSignatures=ri(t.compositeKind!==2097152&&t.compositeSignatures||[t],[i]),c?S.mapper=t.compositeKind!==2097152&&t.mapper&&t.compositeSignatures?wf(t.mapper,c):c:t.compositeKind!==2097152&&t.mapper&&t.compositeSignatures&&(S.mapper=t.mapper),S}function S$(t,i,o){let c=Va(t),f=Va(i),p=c>=f?t:i,m=p===t?i:t,S=p===t?c:f,I=Gl(t)||Gl(i),F=I&&!Gl(p),U=new Array(S+(F?1:0));for(let Q=0;Q<S;Q++){let ne=Md(p,Q);p===i&&(ne=zn(ne,o));let ae=Md(m,Q)||yr;m===i&&(ae=zn(ae,o));let Ge=yi([ne,ae]),nt=I&&!F&&Q===S-1,wt=Q>=ul(p)&&Q>=ul(m),ht=Q>=c?void 0:t1(t,Q),Rt=Q>=f?void 0:t1(i,Q),Ut=ht===Rt?ht:ht?Rt?void 0:ht:Rt,It=es(1|(wt&&!nt?16777216:0),Ut||`arg${Q}`,nt?32768:wt?16384:0);It.links.type=nt?Qs(Ge):Ge,U[Q]=It}if(F){let Q=es(1,"args",32768);Q.links.type=Qs(Ql(m,S)),m===i&&(Q.links.type=zn(Q.links.type,o)),U[S]=Q}return U}function t1(t,i,o){let c=t.parameters.length-($a(t)?1:0);if(i<c)return t.parameters[i].name;let f=t.parameters[c]||Di,p=o||Ln(f);return f.name}function b$(t,i){if(Pr(t)!==Pr(i))return!1;if(!t||!i)return!0;let o=Jo(i,t);for(let c=0;c<t.length;c++){let f=t[c],p=i[c];if(f!==p&&!rm(zg(f)||yr,zn(zg(p)||yr,o)))return!1}return!0}function zg(t){if(!t.constraint)if(t.target){let i=ga(t.target);t.constraint=i?zn(i,t.mapper):Wa}else{let i=$C(t);if(!i)t.constraint=C$(t)||Wa;else{let o=jn(i);o.flags&1&&!Ws(o)&&(o=i.parent.parent.kind===264?nr:yr),t.constraint=o}}return t.constraint===Wa?void 0:t.constraint}function k$(t,i,o){return t.typeArguments&&o<t.typeArguments.length?jn(t.typeArguments[o]):KC(t,i)[o]}function C$(t,i){let o;if(t.symbol?.declarations){for(let c of t.symbol.declarations)if(c.parent.kind===259){let[f=c.parent,p]=cR(c.parent.parent);if(p.kind===166&&!i){let m=p,S=lT(m);if(S){let I=m.typeArguments.indexOf(f);if(I<S.length){let F=ga(S[I]);if(F){let U=I4(S,S.map((ne,ae)=>()=>k$(m,S,ae))),Q=zn(F,U);Q!==t&&(o=ei(o,Q))}}}}else if(p.kind===149&&p.dotDotDotToken||p.kind===160||p.kind===262&&p.dotDotDotToken)o=ei(o,Qs(yr));else if(p.kind===148&&p.parent.kind===264)o=ei(o,nr);else if(p.kind===264&&p.type&&ws(p.type)===c.parent&&p.parent.kind===168&&p.parent.extendsType===p&&p.parent.checkType.kind===264&&p.parent.checkType.type){let m=p.parent.checkType,S=jn(m.type);o=ei(o,zn(S,tf(Df(Ft(m.typeParameter)),m.typeParameter.constraint?jn(m.typeParameter.constraint):nr)))}}}return o&&yi(o)}function HT(t,i,o,c,f){for(let p of t)if(LT(p,i,o,c,f,o?P$:OT))return p}function P$(t,i){return ml(t,i,Ua)?-1:0}function x$(t,i,o){if(i.typeParameters){if(o>0)return;for(let f=1;f<t.length;f++)if(!HT(t[f],i,!1,!1,!1))return;return[i]}let c;for(let f=0;f<t.length;f++){let p=f===o?i:HT(t[f],i,!1,!1,!0)||HT(t[f],i,!0,!1,!0);if(!p)return;c=o_(c,p)}return c}function Vg(t,i,o){if(t.flags&524288){let c=fl(t);if(o||c.properties&&c.properties?.length===0&&c.indexInfos?.length===0){if(i===0&&c.callSignatures?.length===1&&c.constructSignatures?.length===0)return c.callSignatures[0];if(i===1&&c.constructSignatures?.length===1&&c.callSignatures?.length===0)return c.constructSignatures[0]}}}function D$(t,i){return t.block&&t.expression&&at(t,P.Catch_expression_cannot_also_have_a_block),t.block?zN(t.block):Lr(t.expression,i),vn([Xo,mr])}function _6(t,i){Tn(t).flags|=16;let o=$n(t),c=qf(o);!c.inherits?.size&&(!t.namespace||wl(t.namespace)!=="efun")&&at(t,P.Super_access_can_only_be_used_in_a_file_that_inherits_from_another_file);let f=bo(c);return f&&$u(f)[0]?v5(t.name,i):At}function m6(t,i){return kt(t,o=>o.symbol.name===i)}function E$(t,i){let o=i.length;for(;o>1&&i.charCodeAt(o-1)>=48&&i.charCodeAt(o-1)<=57;)o--;let c=i.slice(0,o);for(let f=1;;f++){let p=c+f;if(!m6(t,p))return p}}function w$(t,i){let o=[],c,f;for(let p of i){let m=p.symbol.name;if(m6(t.inferredTypeParameters,m)||m6(o,m)){let S=E$(ri(t.inferredTypeParameters,o),m),I=es(262144,S),F=_c(I);F.target=p,c=ei(c,p),f=ei(f,F),o.push(F)}else o.push(p)}if(f){let p=Jo(c,f);for(let m of f)m.mapper=p}return o}function N$(t,i){for(let o=0;o<t.length;o++)if(e_(t[o])&&e_(i[o]))return!0;return!1}function I$(t,i){for(let o=0;o<t.length;o++)!e_(t[o])&&e_(i[o])&&(t[o]=i[o])}function A$(t,i,o){if(o&&o&10){let c=Vg(i,0,!0),f=Vg(i,1,!0),p=c||f;if(p&&p.typeParameters){let m=z0(t,2);if(m){let S=Vg(m,c?0:1,!1);if(S&&!S.typeParameters){if(o&8)return g3(t,o),mi;let I=im(t),F=I.signature&&Ei(I.signature),U=F&&B3(F);if(U&&!U.typeParameters&&!Ti(I.inferences,e_)){let Q=w$(I,p.typeParameters),ne=A4(p,Q),ae=Xt(I.inferences,Ge=>D4(Ge.typeParameter));if(r6(ne,S,(Ge,nt)=>{Af(ae,Ge,nt,0,!0)}),kt(ae,e_)&&(s6(ne,S,(Ge,nt)=>{Af(ae,Ge,nt)}),!N$(I.inferences,ae)))return I$(I.inferences,ae),I.inferredTypeParameters=ri(I.inferredTypeParameters,Q),l1(ne)}return l1(ON(p,S,I),ao(nn,Q=>Q&&Xt(Q.inferences,ne=>ne.typeParameter)).slice())}}}}return i}function O$(t,i){return t.flags&4194304?L$(t,i):vI(t,Bp(t.expression),i)}function L$(t,i){let o=Lr(t.expression),c=Ip(o,t.expression);return xg(vI(t,Yl(c,t.expression),i),t,c!==o)}function vI(t,i,o){let c=Hf(t)!==0||m5(t)?rc(i):i,f=t.argumentExpression,p=Lr(f);if(Ws(c)||c===or)return c;let m=p,S=Hf(t),I;S===0?I=32:(I=4,S===2&&(I|=32));let F=Ad(c,m,I,t)||At;return Xe(eI(t,Tn(t).resolvedSymbol,F,f,o),t)}function F$(t,i,o,c){let f=t.kind;if(s)switch(f){case 274:case 270:case 283:s.throwIfCancellationRequested()}switch(f){case 89:return v5(t,i,c);case 16:if(i&128){let p=g6(t);if(p)return p}return Fp(rl(t.text));case 14:return Fp(tC(t.text));case 11:return Fp(Ka(+t.text));case 13:return Fp(Ka(parseFloat(t.text)));case 290:return Pg(t,i,o);case 291:return sC(t,i,!1);case 292:return Np(t,i,!1);case 286:return wd(t,i);case 146:return g5(t,i);case 281:return O$(t,i);case 272:case 276:return U$(t,i);case 273:return TI(t,i);case 277:return Yz(t,i);case 289:return Qz(t,i);case 270:return Hz(t,i);case 283:return Eg(t,i);case 279:case 296:return Gz(t,i);case 280:return console.debug("todo - implement check expression w/ type args"),Cn;case 298:return V$(t);case 288:return J$(t);case 269:return rt(t,i);case 267:return M$(t,i);case 282:return R$(t,i);case 294:return mC(t,i);case 275:return w.fail("TODO - implement me - checkExpressionWorker - SyntheticExpression"),Cn;case 237:return mT(t);case 287:return _6(t);case 268:return D$(t)}return console.warn("Implement me - checkExpressionWorker - "+w.formatSyntaxKind(t.kind)),At}function R$(t,i){let o=[];return t.left&&o.push(Lr(t.left,i)),t.right&&o.push(Lr(t.right,i)),o.length>1?vn(o,2):o[0]}function M$(t,i){let o=Nd(t.condition,i);S6(t.condition,o,t.whenTrue);let c=Lr(t.whenTrue,i),f=Lr(t.whenFalse,i);return vn([c,f],2)}function j$(t,i){if(!(t.flags&1024)&&t.declaration&&t.declaration.flags&536870912){let o=sl(i),c=Jy(K2(i));B$(o,t.declaration,c,qg(t))}}function B$(t,i,o,c){let f=o?fi(t,P.The_signature_0_of_1_is_deprecated,c,o):fi(t,P._0_is_deprecated,c);return HI(i,f)}function g6(t,i){let o=t,f=Vd(i||t,o,void 0);if(f){let p=n1(f,o,!0);if(p&&ti(p.valueDeclaration))return Ln(p)}}function TI(t,i){if(W$(t),!t.arguments?.length)return Cn;let o=t.arguments[0],c=Fo(o);for(let p=1;p<t.arguments.length;++p)Fo(t.arguments[p]);(c.flags&32768||c.flags&65536||!Si(c,mr))&&at(o,P.Clone_object_s_specifier_must_be_of_type_string_but_here_has_type_0,rn(c));let f=Vd(t,o,c);if(f){let p=n1(f,o,!0);if(p&&ti(p.valueDeclaration))return Ln(p)}return Cn}function n1(t,i,o){let c=A6(t);return!o&&c&&w.fail("TODO - implement me - resolveExternalObjectSymbol"),c}function W$(t){if(t.arguments?.length===0)return da(t,P.Clone_object_can_only_accept_an_object_name_and_an_optional_set_of_attributes_as_arguments_1450)}function U$(t,i){let o=D1(t,void 0,i);if(o===Ko)return or;if(j$(o,t),Tg(t)&&!t.expression&&t.arguments?.length)return TI(t);if(hs(t)){if(t.expression.kind===71)return fn;let f=hi(t.expression),p=f&&Tt(f)?f.text:void 0;if(p==="this_object"){let m=$n(t),S=m.pragmas.get("this-object")??m.pragmas.get("this_object"),I;if(S){let F=j8(m,S);I=F.text?.length?g6(F):void 0}if(!I){let F=gc(m);I=Ln(F)}return I}else if(p==="base_name"&&!t.arguments?.length){let m=$n(t),S=Mm(m.fileName,oe);return rl(S)}if(p==="$"&&Y===1&&Xn(t,Au)){let m=t.arguments||Oe,S=Fa(m);if(S&&Tt(S)){let I=Fo(S,i&&i&-9);for(let F=1;F<m.length;++F)Lr(m[F]);return I}return m.forEach(I=>Lr(I)),Cn}}let c=Ei(o);if(t.kind===272&&t.parent.kind===247&&c.flags&16384&&Ea(o)){if(!Ey(t.expression))at(t.expression,P.Assertions_require_the_call_target_to_be_an_identifier_or_qualified_name);else if(!JT(t)){let f=at(t.expression,P.Assertions_require_every_name_in_the_call_target_to_be_declared_with_an_explicit_type_annotation);Z0(t.expression,f)}}return c}function J$(t){let i=Lr(t.operand);return i===or?or:(XT(t.operand,Yl(i,t.operand),P.An_arithmetic_operand_must_be_of_type_any_number_bigint_or_an_enum_type)&&um(t.operand,P.The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access,P.The_operand_of_an_increment_or_decrement_operator_may_not_be_an_optional_property_access),h6(i))}function Fp(t){if(t.flags&2976){if(!t.freshType){let i=kf(t.flags,t.value,t.symbol,t);i.freshType=i,t.freshType=i}return t.freshType}return t}function z$(t,i){if(Ki(t,i))return!0;let o=Lf(t);return!!o&&Ki(o,i)}function Lf(t){return Ls(t)||t}function V$(t){let i=Lr(t.operand);if(i===or)return or;switch(t.operand.kind){case 11:switch(t.operator){case 42:return Fp(Ka(-t.operand.text));case 41:return Fp(Ka(+t.operand.text))}break;case 13:switch(t.operator){case 42:return Fp(Ka(-t.operand.text));case 41:return Fp(Ka(+t.operand.text))}}switch(t.operator){case 41:case 42:case 57:return Yl(i,t.operand),t.operator===41?(z$(i,2048)&&at(t.operand,P.Operator_0_cannot_be_applied_to_type_1,Mi(t.operator),rn(_l(i))),An):h6(i);case 55:Ng(i,t.operand);let o=E1(i,12582912);return o===4194304?Xo:o===8388608?gt:Nt;case 47:case 48:return XT(t.operand,Yl(i,t.operand),P.An_arithmetic_operand_must_be_of_type_any_number_bigint_or_an_enum_type)&&um(t.operand,P.The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access,P.The_operand_of_an_increment_or_decrement_operator_may_not_be_an_optional_property_access),h6(i)}return At}function h6(t){return Ki(t,2048)?Vo(t,3)||Ki(t,2344)?co:br:An}function q$(t,i,o,c){return console.debug("TODO - Implement me - checkDestructuringAssignment"),Cn}function y6(t,i){return(i.flags&98304)!==0||ZT(t,i)}function $$(t){return Zs(t,H$)}function H$(t){return t.flags&4?bs:t.flags&8?k:t===Bo||t===Xo||t.flags&114691||t.flags&128&&t.value===""||t.flags&256&&t.value===0||t.flags&2048&&t.value===0?t:Bn}function G$(){let t=Uv(i,o,c,f,p,m);return(ne,ae)=>{let Ge=t(ne,ae);return w.assertIsDefined(Ge),Ge};function i(ne,ae,Ge){return ae?(ae.stackIndex++,ae.skip=!1,F(ae,void 0),Q(ae,void 0)):ae={checkMode:Ge,skip:!1,stackIndex:0,typeStack:[void 0,void 0]},ne.operatorToken.kind===74&&(ne.left.kind===293||ne.left.kind===290)&&(ae.skip=!0,Q(ae,q$(ne.left,Lr(ne.right,Ge),Ge,!1))),ae}function o(ne,ae,Ge){if(!ae.skip)return S(ae,ne)}function c(ne,ae,Ge){if(!ae.skip){let nt=U(ae);w.assertIsDefined(nt),F(ae,nt),Q(ae,void 0);let wt=ne.kind;if(FD(wt)){let ht=Ge.parent;for(;ht.kind===289||K1(ht);)ht=ht.parent;(wt===58||ZP(ht))&&S6(Ge.left,nt,ZP(ht)?ht.thenStatement:void 0),Ng(nt,Ge.left)}}}function f(ne,ae,Ge){if(!ae.skip)return S(ae,ne)}function p(ne,ae){let Ge;if(ae.skip)Ge=U(ae);else{let nt=I(ae);w.assertIsDefined(nt);let wt=U(ae);w.assertIsDefined(wt),Ge=sH(ne.left,ne.operatorToken,ne.right,nt,wt,ae.checkMode,ne)}return ae.skip=!1,F(ae,void 0),Q(ae,void 0),ae.stackIndex--,Ge}function m(ne,ae,Ge){return Q(ne,ae),ne}function S(ne,ae){if(Ur(ae))return ae;Q(ne,Lr(ae,ne.checkMode))}function I(ne){return ne.typeStack[ne.stackIndex]}function F(ne,ae){ne.typeStack[ne.stackIndex]=ae}function U(ne){return ne.typeStack[ne.stackIndex+1]}function Q(ne,ae){ne.typeStack[ne.stackIndex+1]=ae}}function Q$(t){return t.flags&402653312?mr:t.flags&256?co:t.flags&2048?br:t.flags&1048576?Zs(t,Q$):t}function Y$(t){return Us(t,i=>pl(i,4194304))}function r1(t){switch(t=ws(t),t.kind){case 89:case 16:case 11:case 13:case 137:case 270:case 274:case 283:case 290:case 293:return!0;case 267:return r1(t.whenTrue)&&r1(t.whenFalse);case 269:return mf(t.operatorToken.kind)?!1:r1(t.left)&&r1(t.right);case 298:case 288:switch(t.operator){case 55:case 41:case 42:case 57:return!0}return!1;default:return!1}}function GT(t,i,o,c){Jt(t.declarations,f=>{rH(f,i,o,c.declarations)})}function Z$(t,i,...o){let c=t?fi(t,i,...o):ac(i,...o),f=Vn.lookup(c);return f||(Vn.add(c),c)}function Ff(t,i,o,c,f,p){return SI(t,i,ua,o,c,f,p,void 0)}function SI(t,i,o,c,f,p,m,S){return ml(t,i,o)?!0:!c||!YT(f,t,i,o,p,m,S)?Jp(t,i,o,c,p,m,S):!1}function bI(t){return!!(t.flags&16777216||t.flags&2097152&&kt(t.types,bI))}function Rf(t,i,o,c,f,p){return Jp(t,i,ua,o,c,f,p)}function X$(t,i,o,c,f,p,m){let S=Oi(i,0),I=Oi(i,1);for(let F of[I,S])if(kt(F,U=>{let Q=Ei(U);return!(Q.flags&131073)&&Jp(Q,o,c,void 0)})){let U=m||{};Rf(i,o,t,f,p,U);let Q=U.errors[U.errors.length-1];return Rs(Q,fi(t,F===I?P.Did_you_mean_to_use_new_with_this_expression:P.Did_you_mean_to_call_this_expression)),!0}return!1}function K$(t){return t.typeParameters||$c(t)||!t.body?!1:t.body.kind!==236?tc(t.body):!!k_(t.body,i=>!!i.expression&&tc(i.expression))}function kI(t){return XS(t)||K$(t)}function tc(t){switch(t.kind){case 270:case 283:case 169:return kI(t);case 293:return kt(t.properties,tc);case 290:return kt(t.elements,tc);case 267:return tc(t.whenTrue)||tc(t.whenFalse);case 269:return t.operatorToken.kind===59&&(tc(t.left)||tc(t.right));case 174:return tc(t.initializer);case 289:return tc(t.expression)}return!1}function QT(t){return t&&!!t.valueDeclaration&&xc(t.valueDeclaration)&&!tc(t.valueDeclaration)}function v6(t){return rn(t,void 0,64)}function T6(t,i){let o=QT(t.symbol)?rn(t,t.symbol.valueDeclaration):rn(t),c=QT(i.symbol)?rn(i,i.symbol.valueDeclaration):rn(i);return o===c&&(o=v6(t),c=v6(i)),[o,c]}function eH(t,i,o){let c=t,f=i,p=_l(t),m=_l(i);return o(p,m)||(c=p,f=m),[c,f]}function YT(t,i,o,c,f,p,m){if(!t||bI(o))return!1;if(!Jp(i,o,c,void 0)&&X$(t,i,o,c,f,p,m))return!0;switch(t.kind){case 289:return YT(t.expression,i,o,c,f,p,m);case 269:switch(t.operatorToken.kind){case 74:case 27:return YT(t.right,i,o,c,f,p,m)}break;case 293:console.warn("todo - elaborateError - ObjectLiteralExpression");case 290:return tH(t,i,o,c,p,m);case 283:return nH(t,i,o,c,p,m)}return!1}function tH(t,i,o,c,f,p){if(o.flags&402915260)return!1;RT(t,o,!1);let m=Pg(t,1,!0);return jg(),!1}function nH(t,i,o,c,f,p){if(uu(t.body)||kt(t.parameters,$2))return!1;let m=Mf(i);if(!m)return!1;let S=Oi(o,0);if(!Pr(S))return!1;let I=t.body,F=Ei(m),U=vn(Xt(S,Ei));if(!Jp(F,U,c,void 0)){let Q=I&&YT(I,F,U,c,void 0,f,p);if(Q)return Q;let ne=p||{};Jp(F,U,c,I,void 0,f,ne),ne.errors&&o.symbol&&Pr(o.symbol.declarations)&&Rs(ne.errors[ne.errors.length-1],fi(o.symbol.declarations[0],P.The_expected_type_comes_from_the_return_type_of_this_signature))}return!1}function um(t,i,o){let c=sg(t,7);return c.kind!==89&&!ia(c)?(at(t,i),!1):c.flags&4194304?(at(t,o),!1):!0}function rH(t,i,o,c){let f=hi(t)||t,p=Z$(f,i,o);for(let m of c||Oe){let S=hi(m)||m;if(S===f)continue;p.relatedInformation=p.relatedInformation||[];let I=fi(S,P._0_was_also_declared_here,o),F=fi(S,P.and_here);Pr(p.relatedInformation)>=5||kt(p.relatedInformation,U=>Oy(U,F)===0||Oy(U,I)===0)||Rs(p,Pr(p.relatedInformation)?F:I)}}function Cu(t){return t.flags&524288?fl(t).properties:Oe}function iH(t,i){let o=va(t)?nu(t):void 0;console.debug("TODO - Implement me - reportObjectPossiblyNullOrUndefinedError")}function Yl(t,i){return m3(t,i,iH)}function i1(t,i,o,...c){return at(t,o,...c)}function ZT(t,i){return ml(t,i,io)}function s1(t,i){return ZT(t,i)||ZT(i,t)}function XT(t,i,o,c=!1){return Si(i,Wr)?!0:(i1(t,!1,o),!1)}function Oae(t){if(Ys(t)&&t.resolvedTypeArguments?.length===1){let i=qs(t.resolvedTypeArguments);return i.flags&256&&i.value===0}return!1}function sH(t,i,o,c,f,p,m){let S=i.kind;switch(S){case 43:case 44:case 77:case 78:case 45:case 79:case 46:case 80:case 42:case 76:case 49:case 81:case 50:case 82:case 51:case 83:case 53:case 85:case 54:case 88:case 52:case 84:if(c===or||f===or)return or;c=Yl(c,t),f=Yl(f,o);let Ut;if(c.flags&528&&f.flags&528&&(Ut=Q(i.kind))!==void 0)return at(m||i,P.The_0_operator_is_not_allowed_for_boolean_types_Consider_using_1_instead,Mi(i.kind),Mi(Ut)),An;{let Pn=XT(t,c,P.The_left_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type,!0),pr=XT(o,f,P.The_right_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type,!0),Tr;return Ys(c)&&Ys(f)?Tr=c:Vo(c,3)&&Vo(f,3)||!(Ki(c,2048)||Ki(f,2048))?Tr=An:(nt(I),Tr=At),Pn&&pr&&ne(Tr),Tr}case 41:case 75:if(c===or||f===or)return or;!Vo(c,402653316)&&!Vo(f,402653316)&&(c=Yl(c,t),f=Yl(f,o));let It;if(Vo(c,2344,!0)&&Vo(f,2344,!0))It=An;else if(Vo(c,402653316,!0)||Vo(f,402653316,!0))It=mr;else if(Vo(c,12288,!0)&&Vo(f,12288,!0))It=ja;else if(qo(c)||qo(f))It=Ws(c)||Ws(f)?At:Cn;else if(Ys(c)&&Ys(f)){let Pn=qs(c.resolvedTypeArguments),pr=qs(f.resolvedTypeArguments);s1(Pn,pr)&&(It=c)}else jd(c)&&jd(f)&&(It=c);return It?(S===75&&ne(It),It):(nt((pr,Tr)=>Vo(pr,402655663)&&Vo(Tr,402655663)),Cn);case 29:case 32:case 33:case 34:return Nt;case 35:case 36:case 37:case 38:if(!(p&&p&64)){if((vP(t)||vP(o))&&(!Nr(t)||S===37||S===38)){let Pn=S===35||S===37;at(m,P.This_condition_will_always_return_0_since_JavaScript_compares_objects_by_reference_not_value,Pn?"false":"true")}ht(m,S,t,o),Ge((Pn,pr)=>y6(Pn,pr)||y6(pr,Pn))}return Nt;case 103:return oH(t,o,c,f);case 58:return pl(c,4194304)?vn([$$(G?c:_l(f)),f]):c;case 59:case 86:{let Pn=pl(c,8388608)?vn([Y$(c),f],2):c;return S===86&&ne(f),Pn}case 74:let ln=Ur(t.parent)?Oa(t.parent):0;return F(ln,f),ae(ln)?((!(f.flags&524288)||ln!==2&&ln!==6&&!$f(f)&&!($t(f)&1))&&ne(f),c):(ne(f),f);case 27:if(!oe.allowUnreachableCode&&r1(t)&&!U(t.parent)&&!zm(t.parent.parent)&&!Xn(t.parent,Ha)){let pr=$n(t).text,Tr=ts(pr,t.pos);at(t,P.Left_side_of_comma_operator_is_unused_and_has_no_side_effects)}return f;default:return w.fail()}function I(Ut,It){return Vo(Ut,2048)&&Vo(It,2048)}function F(Ut,It){if(Ut===2)for(let ln of Cu(It)){let Pn=Ln(ln);if(Pn.symbol&&Pn.symbol.flags&32){let pr=ln.name,Tr=hr(ln.valueDeclaration,pr,788968,void 0,!1);Tr?.declarations&&Tr.declarations.some(vM)&&(GT(Tr,P.Duplicate_identifier_0,pr,ln),GT(ln,P.Duplicate_identifier_0,pr,Tr))}}}function U(Ut){return Ut.parent.kind===289&&ff(Ut.left)&&Ut.left.text==="0"&&hs(Ut.parent.parent)&&Ut.parent.parent.expression===Ut.parent&&(ia(Ut.right)||Tt(Ut.right)&&Ut.right.text==="eval")}function Q(Ut){switch(Ut){case 53:case 85:return 59;case 54:case 88:return 38;case 52:case 84:return 58;default:return}}function ne(Ut){mf(S)&&r(It);function It(){let ln=c;um(t,P.The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access,P.The_left_hand_side_of_an_assignment_expression_may_not_be_an_optional_property_access)&&Ff(Ut,ln,t,o,void 0)}}function ae(Ut){switch(Ut){case 2:return!0;case 1:case 5:case 6:case 3:case 4:let It=qf(t);return!1;default:return!1}}function Ge(Ut){return Ut(c,f)?!1:(nt(Ut),!0)}function nt(Ut){let It=!1,ln=m||i;if(Ut){let ji=wC(c),Br=wC(f);It=!(ji===c&&Br===f)&&!!(ji&&Br)&&Ut(ji,Br)}let Pn=c,pr=f;!It&&Ut&&([Pn,pr]=eH(c,f,Ut));let[Tr,rs]=T6(Pn,pr);wt(ln,It,Tr,rs)||i1(ln,It,P.Operator_0_cannot_be_applied_to_types_1_and_2,Mi(i.kind),Tr,rs)}function wt(Ut,It,ln,Pn){switch(i.kind){case 37:case 35:case 38:case 36:return i1(Ut,It,P.This_comparison_appears_to_be_unintentional_because_the_types_0_and_1_have_no_overlap,ln,Pn);default:return}}function ht(Ut,It,ln,Pn){let pr=Rt(ws(ln)),Tr=Rt(ws(Pn));if(pr||Tr){let rs=at(Ut,P.This_condition_will_always_return_0,Mi(It===37||It===35?135:136));if(pr&&Tr)return;let ji=It===38||It===36?Mi(55):"",Br=pr?Pn:ln,zi=ws(Br);Rs(rs,fi(Br,P.Did_you_mean_0,`${ji}Number.isNaN(${va(zi)?nu(zi):"..."})`))}}function Rt(Ut){return!1}}function CI(t){return t=ws(t,!0),t.kind===279||t.kind===296||d_(t)}function oH(t,i,o,c){return o===or||c===or?or:(Rf(Yl(o,t),nr,t),Rf(Yl(c,i),ct,i)&&aH(c)&&at(i,P.Type_0_may_represent_a_primitive_value_which_is_not_permitted_as_the_right_operand_of_the_in_operator,rn(c)),Nt)}function aH(t){return Zl(t,i=>i===To||!!(i.flags&2097152)&&Jc(Lf(i)))}function S6(t,i,o){if(!G)return;c(t,o);function c(p,m){for(p=ws(p),f(p,m);Ur(p)&&p.operatorToken.kind===59;)p=ws(p.left),f(p,m)}function f(p,m){let S=K1(p)?ws(p.right):p;if(K1(S)){c(S,m);return}let I=S===p?i:Nd(S);if(I.flags&1024&&Ii(S)&&(Tn(S.expression).resolvedSymbol??Di).flags&384){at(S,P.This_condition_will_always_return_0,I.value?"true":"false");return}let F=Ii(S)&&CI(S.expression);if(!pl(I,4194304)||F||Oi(I,0).length===0)return;let Q=Tt(S)?S:Ii(S)?S.name:void 0,ne=Q&&gc(Q);if(!ne)return;ne&&Ur(p.parent)&&lH(p.parent,ne)||ne&&m&&cH(p,m,Q,ne)||at(S,P.This_condition_will_always_return_true_since_this_function_is_always_defined_Did_you_mean_to_call_it_instead)}}function cH(t,i,o,c){return!!Ns(i,function f(p){if(Tt(p)){let m=gc(p);if(m&&m===c){if(Tt(t)||Tt(o)&&Ur(o.parent))return!0;let S=o.parent,I=p.parent;for(;S&&I;){if(Tt(S)&&Tt(I))return gc(S)===gc(I);if(Ii(S)&&Ii(I)){if(gc(S.name)!==gc(I.name))return!1;I=I.expression,S=S.expression}else if(hs(S)&&hs(I))I=I.expression,S=S.expression;else return!1}}}return Ns(p,f)})}function lH(t,i){for(;Ur(t)&&t.operatorToken.kind===58;){if(Ns(t.right,function c(f){if(Tt(f)){let p=gc(f);if(p&&p===i)return!0}return Ns(f,c)}))return!0;t=t.parent}return!1}function pl(t,i){return E1(t,i)!==0}function b6(t,i){k6();let o=r;r=c=>c(),Xk(t,i),r=o}function k6(){for(let t of n)t();n=[]}function es(t,i,o){y++;let c=new l(t|33554432,i);return c.links=new OA,c.links.checkFlags=o||0,c}function qg(t,i,o=0,c,f){return f?p(f).getText():OP(p);function p(m){let S;o&262144?S=158:S=151;let I=fe.signatureToSignatureDeclaration(t,S,i,h3(o)|70221824|512),F=Xj(),U=i&&kc(i);return F.writeNode(4,I,U,ok(m)),m}}function Pu(t,i,o,c,f,p,m,S){let I=new d(Pt,S);return I.declaration=t,I.typeParameters=i,I.parameters=c,I.thisParameter=o,I.resolvedReturnType=f,I.resolvedTypePredicate=p,I.minArgumentCount=m,I.resolvedMinArgumentCount=void 0,I.target=void 0,I.mapper=void 0,I.compositeSignatures=void 0,I.compositeKind=void 0,I}function wa(t,i,o,c,f){return xu(dl(16,t),i,o,c,f)}function xu(t,i,o,c,f){let p=t;return p.members=i,p.properties=Oe,p.callSignatures=o,p.constructSignatures=c,p.indexInfos=f,i!==j&&(p.properties=o1(i)),p}function Lae(t,i){let o=es(788968,i),c=a1(524288,o);return c.objectFlags=t,c.instantiations=new Map,c.resolvedBaseTypes=[],c.members=bi(),c}function dl(t,i){let o=a1(524288,i);return o.objectFlags=t,o.members=void 0,o.properties=void 0,o.callSignatures=void 0,o.constructSignatures=void 0,o.indexInfos=void 0,o}function o1(t){let i;return t.forEach((o,c)=>{uH(o,c)&&(i||(i=[])).push(o)}),i||Oe}function a1(t,i){let o=wn(t);return o.symbol=i,o}function uH(t,i){return C6(t)}function C6(t,i){return!!(t.flags&111551||t.flags&2097152&&fm(t,!i)&111551)}function fm(t,i,o){return t.flags}function fH(t,i,o){return!Tt(t)||t.text!==i||u3(t)||$b(t),!1}function pH(t){return t==="string"||t==="int"||t==="object"||t==="float"||t==="mixed"||t==="mapping"||t==="unknown"||t==="bytes"||t==="buffer"}function PI(t,i=901119){return t?(t.flags&(2097152|i))===2097152||!!(t.flags&2097152&&t.flags&67108864):!1}function Ud(t,i){return!i&&PI(t)?Uc(t):t}function Uc(t){w.assert((t.flags&2097152)!==0,"Should only get Alias here.");let i=jt(t);if(i.aliasTarget)i.aliasTarget===gu&&(i.aliasTarget=Di);else{i.aliasTarget=gu;let o=pm(t);if(!o)return w.fail();let c=O6(o);i.aliasTarget===gu?i.aliasTarget=c||Di:at(o,P.Circular_definition_of_import_alias_0,wi(t))}return i.aliasTarget}function dH(t){if(jt(t).aliasTarget!==gu)return Uc(t)}function wi(t,i,o,c=4,f){let p=70221824;c&2&&(p|=128),c&1&&(p|=512),c&8&&(p|=16384),c&32&&(p|=134217728),c&16&&(p|=1073741824);let m=c&4?fe.symbolToNode:fe.symbolToEntityName;return f?S(f).getText():OP(S);function S(I){let F=m(t,o,i,p),U=i?.kind===176?Zj():pg(),Q=i&&$n(i);return U.writeNode(4,F,Q,I),I}}function P6(t,i,o,c){return i.tracker.trackSymbol(t,i.enclosingDeclaration,o),_H(t,i,o,c)}function _H(t,i,o,c){let f;return!(t.flags&262144)&&(i.enclosingDeclaration||i.flags&64)&&!(i.flags&134217728)?(f=w.checkDefined(m(t,o,!0)),w.assert(f&&f.length>0)):f=[t],f;function m(S,I,F){let U=c1(S,i.enclosingDeclaration,I,!!(i.flags&128)),Q;if(!U||NI(U[0],i.enclosingDeclaration,U.length===1?I:zd(I))){let ae=OI(U?U[0]:S,i.enclosingDeclaration,I);if(Pr(ae)){Q=ae.map(wt=>{});let Ge=ae.map((wt,ht)=>ht);Ge.sort(ne);let nt=Ge.map(wt=>ae[wt]);for(let wt of nt){let ht=m(wt,zd(I),!1);if(ht){if(wt.exports&&wt.exports.get("export=")&&Rp(wt.exports.get("export="),S)){U=ht;break}U=ht.concat(U||[x6(wt,S)||S]);break}}}}if(U)return U;if(F||!(S.flags&6144))return!F&&!c&&Jt(S.declarations,eS)?void 0:[S];function ne(ae,Ge){let nt=Q[ae],wt=Q[Ge];if(nt&&wt){let ht=N_(wt);return N_(nt)===ht?i2.countPathComponents(nt)-i2.countPathComponents(wt):ht?-1:1}return 0}}}function xI(t,i){let o=jt(t).nameType;if(o&&o.flags&384){let c=""+o.value;return!y_(c,au(oe))&&!Hp(c)?`"${W_(c,34)}"`:Hp(c)&&no(c,"-")?`[${c}]`:c}}function KT(t,i){if(i?.remappedSymbolReferences?.has(Yi(t))&&(t=i.remappedSymbolReferences.get(Yi(t))),i&&t.name==="default"&&!(i.flags&16384)&&(!(i.flags&16777216)||!t.declarations))return"default";if(t.declarations&&t.declarations.length){let c=Ya(t.declarations,p=>hi(p)?p:void 0),f=c&&hi(c);if(c&&f){if(Ia(f)&&!(Es(t)&4096)){let p=jt(t).nameType;if(p&&p.flags&384){let m=xI(t,i);if(m!==void 0)return m}}return sa(f)}if(c||(c=t.declarations[0]),c.parent&&c.parent.kind===237)return sa(c.parent.name);switch(c.kind){case 274:case 270:case 283:return i&&!i.encounteredError&&!(i.flags&131072)&&(i.encounteredError=!0),c.kind===274?"(Anonymous class)":"(Anonymous function)"}}let o=xI(t,i);return o!==void 0?o:ya(t)}function eS(t){return!1}function mH(t){return ri(DI(t),Ep(t))}function DI(t){let i=t.flags&32||t.flags&16?t.valueDeclaration:t.declarations?.find(o=>{if(o.kind===155)return!0;if(o.kind!==237)return!1;let c=o.initializer;return!!c&&(c.kind===270||c.kind===283)});return w.assert(!!i,"Class was missing valueDeclaration -OR- non-class had no interface declarations"),Fg(i)}function Jd(t){return t?.flags&6256?k5(t,"resolvedExports"):t?.exports??j}function EI(t){let i=jt(t);if(!i.resolvedExports){let{exports:o}=RG(t);i.resolvedExports=o}return i.resolvedExports}function gH(t){let i=Ft(t),o=jt(i);if(!o.exportsChecked){let c=EI(i);o.exportsChecked=!0}}function Rp(t,i){if(gn(Ud(gn(t)))===gn(Ud(gn(i))))return t}function wI(t,i){return D6(t,i,111551,!1,!0).accessibility===0}function tS(t,i){let o;for(let c=t;c;c=c.parent){if(xl(c)&&c.locals&&(o=i(c.locals,void 0,!0,c)))return o;switch(c.kind){case 176:let f=Ft(c);if(o=i(f?.exports||j,void 0,!0,c))return o;break;case 274:let p;if((Ft(c).members||j).forEach((m,S)=>{m.flags&788968&&(p||(p=bi())).set(S,m)}),p&&(o=i(p,void 0,!1,c)))return o;break}}return i(Lt,void 0,!0)}function NI(t,i,o){let c=!1;return tS(i,f=>{let p=gn(f.get(t.name));if(!p)return!1;if(p===t)return!0;let m=p.flags&2097152&&!sf(p,171);return p=m?Uc(p):p,(m?fm(p):p.flags)&o?(c=!0,!0):!1}),c}function hH(t){if(t.declarations&&t.declarations.length){for(let i of t.declarations)switch(i.kind){case 152:continue;default:return!1}return!0}return!1}function zd(t){return t===111551?111551:1920}function c1(t,i,o,c,f=new Map){if(!(t&&!hH(t)))return;let p=jt(t),m=p.accessibleChainCache||(p.accessibleChainCache=new Map),S=tS(i,(ht,Rt,Ut,It)=>It),I=`${c?0:1}|${S&&Sa(S)}|${o}`;if(m.has(I))return m.get(I);let F=Yi(t),U=f.get(F);U||f.set(F,U=[]);let Q=tS(i,ne);return m.set(I,Q),Q;function ne(ht,Rt,Ut){if(!Tl(U,ht))return;let It=nt(ht,Rt,Ut);return U.pop(),It}function ae(ht,Rt){return!NI(ht,i,Rt)||!!c1(ht.parent,i,zd(Rt),c,f)}function Ge(ht,Rt,Ut){return(t===(Rt||ht)||gn(t)===gn(Rt||ht))&&!kt(ht.declarations,eS)&&(Ut||ae(gn(ht),o))}function nt(ht,Rt,Ut){return Ge(ht.get(t.name),void 0,Rt)?[t]:Qc(ht,ln=>{if(ln.flags&2097152&&ln.name!=="export="&&ln.name!=="default"&&(Rt||!sf(ln,171))){let Pn=Uc(ln),pr=wt(ln,Pn,Rt);if(pr)return pr}if(ln.name===t.name&&ln.exportSymbol&&Ge(gn(ln.exportSymbol),void 0,Rt))return[t]})||(ht===Lt?wt(_n,_n,Rt):void 0)}function wt(ht,Rt,Ut){if(Ge(ht,Rt,Ut))return[ht];let It=Jd(Rt),ln=It&&ne(It,!0);if(ln&&ae(ht,zd(o)))return[ht].concat(ln)}}function II(t,i){let o;if(!Ti(Yr(t.declarations,p=>p.kind!==89),c))return;return{accessibility:0,aliasesToMakeVisible:o};function c(p){if(!K(p)){if(Cs(p)&&lf(p.parent.parent)&&!Nu(p.parent.parent,2048)&&K(p.parent.parent.parent))return f(p,p.parent.parent);if(WF(p)&&!Nu(p,2048)&&K(p.parent))return f(p,p);if(ms(p)){if(t.flags&2097152&&Nr(p)&&p.parent?.parent&&Cs(p.parent.parent)&&p.parent.parent.parent?.parent&&lf(p.parent.parent.parent.parent)&&!Nu(p.parent.parent.parent.parent,2048)&&p.parent.parent.parent.parent.parent&&K(p.parent.parent.parent.parent.parent))return f(p,p.parent.parent.parent.parent);if(t.flags&2){let m=Xn(p,lf);return Nu(m,2048)?!0:K(m.parent)?f(p,m):!1}}return!1}return!0}function f(p,m){return i&&(Tn(p).isVisible=!0,o=o_(o,m)),!0}}function AI(t,i,o,c,f,p){if(!Pr(t))return;let m,S=!1;for(let I of t){let F=c1(I,i,c,!1);if(F){m=I;let ne=II(F[0],f);if(ne)return ne}if(p&&kt(I.declarations,eS)){if(f){S=!0;continue}return{accessibility:0}}let U=OI(I,i,c),Q=AI(U,i,o,o===I?zd(c):c,f,p);if(Q)return Q}if(S)return{accessibility:0};if(m)return{accessibility:1,errorSymbolName:wi(o,i,c),errorModuleName:m!==o?wi(m,i,1920):void 0}}function x6(t,i){if(t===nf(i))return i;let o=t.exports&&t.exports.get("export=");if(o&&Rp(o,i))return t;let c=Jd(t),f=c.get(i.name);return f&&Rp(f,i)?f:Qc(c,p=>{if(Rp(p,i))return p})}function yH(t,i){let o=!!Pr(t.declarations)&&qs(t.declarations);if(i&111551&&o&&o.parent&&Cs(o.parent)&&(Qa(o)&&o===o.parent.initializer||ap(o)&&o===o.parent.type))return Ft(o.parent)}function OI(t,i,o){let c=nf(t);if(c&&!(t.flags&262144))return I(c);let f=Vi(t.declarations,U=>{if(U.parent&&eS(U.parent))return Ft(U.parent)});if(!Pr(f))return;let p=Vi(f,U=>x6(U,t)?U:void 0),m=[],S=[];for(let U of p){let[Q,...ne]=I(U);m=ei(m,Q),S=Is(S,ne)}return ri(m,S);function I(U){let Q=Vi(U.declarations,F),ne=i&&vH(t,i),ae=yH(U,o);if(i&&U.flags&zd(o)&&c1(U,i,1920,!1))return ei(ri(ri([U],Q),ne),ae);let Ge=!(U.flags&zd(o))&&U.flags&788968&&bo(U).flags&524288&&o===111551?tS(i,wt=>Qc(wt,ht=>{if(ht.flags&zd(o)&&Ln(ht)===bo(U))return ht})):void 0,nt=Ge?[Ge,...Q,U]:[...Q,U];return nt=ei(nt,ae),nt=Is(nt,ne),nt}function F(U){return c&&void 0}}function Fae(t,i){}function vH(t,i){let o=$n(i),c=Sa(o),f=jt(t),p;if(f.extendedContainersByFile&&(p=f.extendedContainersByFile.get(c)))return p;if(f.extendedContainers)return f.extendedContainers;let m=e.getSourceFiles();for(let S of m){let I=Ft(S);x6(I,t)&&(p=ei(p,I))}return f.extendedContainers=p||Oe}function D6(t,i,o,c,f){if(t&&i){let p=AI([t],i,t,o,c,f);return p||{accessibility:1,errorSymbolName:wi(t,i,o)}}return{accessibility:0}}function TH(t,i){return D6(t,i,788968,!1,!0).accessibility===0}function LI(t){return t.charCodeAt(0)===95&&t.charCodeAt(1)===95&&t.charCodeAt(2)!==95&&t.charCodeAt(2)!==64&&t.charCodeAt(2)!==35}function SH(t){let i=[],o=0;for(let c=0;c<t.length;c++){let f=t[c];o|=f.flags,f.flags&98304||i.push(f)}return o&32768&&i.push(Zn),i||t}function nS(t){console.debug("TODO - getHomomorphicTypeVariable")}function bH(t){if(t.symbol&&t.symbol.flags&2048&&t.symbol.declarations){let i=QD(t.symbol.declarations[0].parent)}}function l1(t,i){if(!t.isolatedSignatureType){let o=t.declaration?.kind,c=!1,f=dl(134217744,es(16,"__function"));t.declaration&&!qi(t.declaration)&&(f.symbol.declarations=[t.declaration],f.symbol.valueDeclaration=t.declaration),i||(i=t.declaration&&Fg(t.declaration,!0)),f.outerTypeParameters=i,f.members=j,f.properties=Oe,f.callSignatures=c?Oe:[t],f.constructSignatures=c?[t]:Oe,f.indexInfos=Oe,t.isolatedSignatureType=f}return t.isolatedSignatureType}function kH(t,i,o="arg"){return t?(w.assert(Tt(t.name)),t.name.text):`${o}_${i}`}function FI(t,i){if($a(t)){let f=t.parameters.length-1,p=t.parameters[f].name,m=Ln(t.parameters[f]);if(vi(m))return[o(m,f,p)];if(!i&&m.flags&1048576&&Ti(m.types,vi))return Xt(m.types,S=>o(S,f,p))}return[t.parameters];function o(f,p,m){let S=fs(f),I=c(f,m),F=Xt(S,(U,Q)=>{let ne=I&&I[Q]?I[Q]:t1(t,p+Q,f),ae=f.target.elementFlags[Q],Ge=ae&12?32768:ae&2?16384:0,nt=es(1,ne,Ge);return nt.links.type=ae&4?Qs(U):U,nt});return ri(t.parameters.slice(0,p),F)}function c(f,p){let m=new Map;return Xt(f.target.labeledElementDeclarations,(S,I)=>{let F=kH(S,I,p),U=m.get(F);return U===void 0?(m.set(F,1),F):(m.set(F,U+1),`${F}_${U}`)})}}function RI(t,i){let o=Tn(t).resolvedSymbol;if(o)return o;let c=t;if(i){let f=t.parent;hp(f)&&t===f.name&&(c=D(f))}return hr(c,t.text,3257279,void 0,!0)}function CH(t,i){let o=_s(t,Tt);if(o){let c=RI(o,!1);if(c){if(c.flags&1048576){let p=gn(c.exportSymbol);if(!i&&p.flags&944&&!(p.flags&3))return;c=p}let f=nf(c);if(f){if(f.flags&512&&f.valueDeclaration?.kind===176){let p=f.valueDeclaration,m=$n(o);return p!==m?void 0:p}w.fail("not implemented")}}}}function PH(t){return Lt.has(t)}function xH(){return{getReferencedExportContainer:CH,hasGlobalName:PH}}function DH(t){return jn(t)}function Mp(t){let i=E6(t);return i!==Wa&&i!==Pa?i:void 0}function E6(t){if(t.default)t.default===ea&&(t.default=Pa);else if(t.target){let i=E6(t.target);t.default=i?zn(i,t.mapper):Wa}else{t.default=ea;let i=t.symbol&&Jt(t.symbol.declarations,c=>ru(c)&&c.default),o=i?jn(i):Wa;t.default===ea&&(t.default=o)}return t.default}function rS(t){let i=Ta(t);if(i)return i}function EH(t){let i=rS(t);if(!i)return!1;let o=jn(i);return m1(o)}function MI(t){let i;return t.parent.kind===280&&!Zp(t.parent)||t.parent.kind===147||t.parent.kind===167&&t.parent.parameterName===t?i=1160127:t.kind===146||t.kind===286||t.parent.kind===146&&t.parent.left===t||t.parent.kind===286&&t.parent.expression===t||t.parent.kind===281&&t.parent.expression===t?i=1920:i=788968,i}function wH(t){return!1}function NH(t,i,o=!0){let c=MI(t),f=Gp(t),p=hr(i,f.text,c,void 0,!1);return p&&p.flags&262144&&c&788968?{accessibility:0}:p?II(p,o)||{accessibility:1,errorSymbolName:wl(f),errorNode:f}:{accessibility:3,errorSymbolName:wl(f),errorNode:f}}function IH(t){return!Ii(t)||!Tt(t.name)||!Ii(t.expression)&&!Tt(t.expression)?!1:Tt(t.expression)?go(t.expression)==="Symbol"&&_a(t.expression)===(Ja("Symbol",1160127,void 0)||Di):Tt(t.expression.expression)?go(t.expression.name)==="Symbol"&&go(t.expression.expression)==="globalThis"&&_a(t.expression.expression)===_n:!1}function jI(t){return(AH(t)||OH(t))&&!EH(t)}function w6(t){if(!gs(t))return!1;if(t.initializer){let o=Ai(t.parent),c=t.parent.parameters.indexOf(t);return w.assert(c>=0),c>=ul(o,3)}let i=Yp(t.parent);return i?!t.type&&!t.dotDotDotToken&&t.parent.parameters.indexOf(t)>=WT(i).length:!1}function AH(t){return!!G&&!w6(t)&&!Pc(t)&&!!t.initializer&&!Nu(t,167)}function OH(t){return G&&w6(t)&&(Pc(t)||!t.initializer)&&Nu(t,167)}function LH(t){return Qi(t)||Ry(t)}function BI(t){return Qi(t)?FH(t):t.initializer?t.initializer:void 0}function FH(t){let i;if(t&&!Eo(t.body)){if(Sc(t)&3)return;let o=t.body;o&&uu(o)?k_(o,c=>{if(!i)i=c.expression;else return i=void 0,!0}):i=o}return i}function WI(t){let i=t.flags&1048576?t.types[0]:t;return!!(i.flags&32768)&&i!==Jn}function RH(t){let i=$c(t);if(i)return i}function N6(t){let i;return t.locals&&t.locals.forEach(o=>{o.flags&262144&&(i=ei(i,bo(o)))}),i}function I6(t,i,o,c){return D6(t,i,o,c,!0)}function MH(){return{symbolToExpression:(L,B,ce,Ae,st)=>qe(ce,Ae,st,et=>_o(L,et,B)),symbolToEntityName:(L,B,ce,Ae,st)=>qe(ce,Ae,st,et=>ve(L,et,B,!1)),symbolToNode:(L,B,ce,Ae,st)=>qe(ce,Ae,st,et=>AS(L,et,B)),typeToTypeNode:(L,B,ce,Ae)=>qe(B,ce,Ae,st=>t(L,st)),symbolToTypeParameterDeclarations:(L,B,ce,Ae)=>qe(B,ce,Ae,st=>void 0),signatureToSignatureDeclaration:(L,B,ce,Ae,st)=>qe(ce,Ae,st,et=>Ds(L,B,et)),symbolToParameterDeclaration:(L,B,ce,Ae)=>qe(B,ce,Ae,st=>un(L,st)),typeParameterToDeclaration:(L,B,ce,Ae)=>qe(B,ce,Ae,st=>F(L,st))};function t(L,B){let ce=B.flags,Ae=Bi(L,B);return B.flags=ce,Ae}function i(L){let B=Ve.createIdentifier(L.name);return L.parent?Ve.createQualifiedName(i(L.parent),B):B}function o(L,B,ce){return(!qi(B)||!(B.flags&16)||!L.enclosingFile||L.enclosingFile!==$n(ka(B)))&&(B=Ve.cloneNode(B)),B===ce||!ce?B:!L.enclosingFile||L.enclosingFile!==$n(ka(ce))?uf(B,ce):Ho(uf(B,ce),ce)}function c(L,B,ce){if(kt(L)){if(f(B))if(ce){if(L.length>2)return[t(L[0],B),Ve.createTypeReferenceNode(`... ${L.length-2} more ...`,void 0),t(L[L.length-1],B)]}else return[Ve.createTypeReferenceNode("...",void 0)];let st=!(B.flags&64)?Rl():void 0,et=[],xt=0;for(let pn of L){if(xt++,f(B)&&xt+2<L.length-1){et.push(Ve.createTypeReferenceNode(`... ${L.length-xt} more ...`,void 0));let sr=t(L[L.length-1],B);sr&&et.push(sr);break}B.approximateLength+=2;let Gn=t(pn,B);Gn&&(et.push(Gn),st&&BF(Gn)&&st.add(Gn.typeName.text,[pn,et.length-1]))}if(st){let pn=B.flags;B.flags|=64,st.forEach(Gn=>{if(!jF(Gn,([sr],[Fr])=>p(sr,Fr)))for(let[sr,Fr]of Gn)et[Fr]=t(sr,B)}),B.flags=pn}return et}}function f(L){return L.truncating?L.truncating:L.truncating=L.approximateLength>(L.flags&1?J7:Eb)}function p(L,B){return L===B||!!L.symbol&&L.symbol===B.symbol||!!L.aliasSymbol&&L.aliasSymbol===B.aliasSymbol}function m(L,B,ce){w.assert(L&&0<=B&&B<L.length);let Ae=L[B],st=Yi(Ae);if(ce.typeParameterSymbolList?.has(st))return;ce.mustCreateTypeParameterSymbolList&&(ce.mustCreateTypeParameterSymbolList=!1,ce.typeParameterSymbolList=new Set(ce.typeParameterSymbolList)),ce.typeParameterSymbolList.add(st);let et;if(ce.flags&512&&B<L.length-1){let xt=Ae,pn=L[B+1];if(Es(pn)&1){let Gn=mH(xt.flags&2097152?Uc(xt):xt);et=c(Xt(Gn,sr=>Ef(sr,pn.links.mapper)),ce)}else et=void 0}return et}function S(L,B){}function I(L,B,ce,Ae){let st=P6(L,B,ce,!(B.flags&16384)),et=ce===111551,xt=sr(st,st.length-1,0);if(l_(xt))return xt;let pn=Tt(xt)?xt:xt.right,Gn=Ym(pn);return Ph(pn,void 0),Ve.createTypeReferenceNode(xt,Gn);function sr(Fr,Hi,Fs){let ot=Hi===Fr.length-1?Ae:m(Fr,Hi,B),Hr=Fr[Hi],Ot=Fr[Hi-1],Nn;if(Hi===0)B.flags|=16777216,Nn=KT(Hr,B),B.approximateLength+=(Nn?Nn.length:0)+1,B.flags^=16777216;else if(Ot&&Jd(Ot)){let Wt=Jd(Ot);Qc(Wt,(er,q)=>{if(Rp(er,Hr)&&!K_(q)&&q!=="export=")return Nn=q,!0})}if(Nn===void 0){let Wt=Ya(Hr.declarations,hi);if(Wt&&Ia(Wt)&&Am(Wt.expression)){let er=sr(Fr,Hi-1,Fs);return Am(er)&&w.fail("implement me"),er}Nn=KT(Hr,B)}if(B.approximateLength+=Nn.length+1,!(B.flags&16)&&Ot&&Du(Ot)&&Du(Ot).get(Hr.name)&&Rp(Du(Ot).get(Hr.name),Hr)){let Wt=sr(Fr,Hi-1,Fs);l_(Wt),w.fail("implement me")}let Sr=oa(Ve.createIdentifier(Nn),16777216);if(ot&&Ph(Sr,Ve.createNodeArray(ot)),Sr.symbol=Hr,Hi>Fs){let Wt=sr(Fr,Hi-1,Fs);return Am(Wt)?Ve.createQualifiedName(Wt,Sr):w.fail("Impossible construct - an export of an indexed access cannot be reachable")}return Sr}}function F(L,B,ce=ga(L)){let Ae=ce&&ae(ce,ne(L),B);return U(L,B,Ae)}function U(L,B,ce){let Ae=B.flags;B.flags&=-513;let st=Ve.createModifiersFromModifierFlags(Q(L)),et=vc(L,B),xt=Mp(L),pn=xt&&t(xt,B);return B.flags=Ae,Ve.createTypeParameterDeclaration(st,et,ce,pn)}function Q(L){return 0}function ne(L){return Vi(Yr(L.symbol&&L.symbol.declarations,ru),B1)[0]}function ae(L,B,ce){return B&&Rt(ce,B,L)||t(L,ce)}function Ge(L,B,ce){return ce===B}function nt(L,B){if(!($t(B)&4)||!sp(L))return!0;W0(L);let ce=Tn(L).resolvedSymbol,Ae=ce&&bo(ce);return!Ae||Ae!==B.target?!0:Pr(L.typeArguments)>=ku(B.target.typeParameters)}function wt(L,B,ce){let Ae=DH(B);if(!L.mapper)return Ae;let st=zn(Ae,L.mapper);return ce&&st!==Ae?void 0:st}function ht(L){let B=sf(L,149);if(B)return B;if(!D_(L))return sf(L,220)}function Rt(L,B,ce,Ae=L.enclosingDeclaration,st=wt(L,B,!0)){if(st&&Ge(Ae,ce,st)&&nt(B,ce)){let et=ji(L,B);if(et)return et}}function Ut(L){return Qi(L)||ip(L)}function It(L,B){let ce=wt(L,B);return t(ce,L)}function ln(L){return Qi(L)||ip(L)?Ai(L).parameters:void 0}function Pn(L){return Qi(L)||ip(L)?Ai(L).typeParameters:Zb(L)?N6(L):[Df(Ft(L.typeParameter))]}function pr(L,B){if(ex(B))return L.mapper===void 0?!0:!!wt(L,B,!0);if(sp(B)){let ce=W0(B),Ae=Tn(B).resolvedSymbol;if(!Ae)return!1;if(Ae.flags&262144){let st=bo(Ae);if(L.mapper&&Ef(st,L.mapper)!==st)return!1}if(jb(B))return nt(B,ce)&&!Ww(B)&&Ae.flags&788968}return!0}function Tr(L,B){let ce=!1,Ae=Gp(L),st=MI(L),et;if(R9(Ae))return et=Ft(yh(Ae,!1,!1)),I6(et,Ae,st,!1).accessibility!==0&&(ce=!0,B.tracker.reportInaccessibleThisError()),{introducesError:ce,node:xt(L)};if(et=hc(Ae,st,!0,!0),B.enclosingDeclaration&&!(et&&et.flags&262144)){et=qd(et);let pn=hc(Ae,st,!0,!0,B.enclosingDeclaration);if(pn===Di||pn===void 0&&et!==void 0||pn&&et&&!Rp(qd(pn),et))return pn!==Di&&B.tracker.reportInferenceFallback(L),ce=!0,{introducesError:ce,node:L,sym:et};et=pn}if(et)return et.flags&1&&et.valueDeclaration&&(xm(et.valueDeclaration)||Pc(et.valueDeclaration))?{introducesError:ce,node:xt(L)}:(!(et.flags&262144)&&!Ru(L)&&I6(et,B.enclosingDeclaration,st,!1).accessibility!==0?(B.tracker.reportInferenceFallback(L),ce=!0):B.tracker.trackSymbol(et,B.enclosingDeclaration,st),{introducesError:ce,node:xt(L)});return{introducesError:ce,node:L};function xt(pn){if(pn===Ae){let sr=bo(et),Fr=et.flags&262144?vc(sr,B):Ve.cloneNode(pn);return Fr.symbol=et,o(B,oa(Fr,16777216),pn)}let Gn=Wm(pn,sr=>xt(sr),void 0);return Gn!==pn&&o(B,Gn,pn),Gn}}function rs(L,B,ce,Ae){let st=ce?111551:788968,et=hc(B,st,!0);if(!et)return;let xt=et.flags&2097152?Uc(et):et;if(I6(et,L.enclosingDeclaration,st,!1).accessibility===0)return I(xt,L,st,Ae)}function ji(L,B){s&&s.throwIfCancellationRequested&&s.throwIfCancellationRequested();let ce=!1,{finalizeBoundary:Ae,startRecoveryScope:st}=pn(),et=Na(B,xt,Vs);if(!Ae())return;if(dp(et)&&Ur(et.literal)){let ot=dt(et.literal).value;et.literal=Ve.createStringLiteral(ot)}return L.approximateLength+=B.end-B.pos,et;function xt(ot){if(ce)return ot;let Hr=st(),Ot=Ut(ot)?Gn(ot):void 0,Nn=Fs(ot);return Ot?.(),ce?Vs(ot)&&!u_(ot)?(Hr(),It(L,ot)):ot:Nn?o(L,Nn,ot):void 0}function pn(){let ot,Hr,Ot=L.tracker,Nn=L.trackedSymbols;L.trackedSymbols=void 0;let Sr=L.encounteredError;return L.tracker=new FA(L,{...Ot.inner,reportCyclicStructureError(){Wt(()=>Ot.reportCyclicStructureError())},reportInaccessibleThisError(){Wt(()=>Ot.reportInaccessibleThisError())},reportInaccessibleUniqueSymbolError(){Wt(()=>Ot.reportInaccessibleUniqueSymbolError())},reportLikelyUnsafeImportRequiredError(te){Wt(()=>Ot.reportLikelyUnsafeImportRequiredError(te))},reportNonSerializableProperty(te){Wt(()=>Ot.reportNonSerializableProperty(te))},trackSymbol(te,Pe,We){return(ot??(ot=[])).push([te,Pe,We]),!1},moduleResolverHost:L.tracker.moduleResolverHost},L.tracker.moduleResolverHost),{startRecoveryScope:er,finalizeBoundary:q};function Wt(te){ce=!0,(Hr??(Hr=[])).push(te)}function er(){let te=ot?.length??0,Pe=Hr?.length??0;return()=>{ce=!1,ot&&(ot.length=te),Hr&&(Hr.length=Pe)}}function q(){return L.tracker=Ot,L.trackedSymbols=Nn,L.encounteredError=Sr,Hr?.forEach(te=>te()),ce?!1:(ot?.forEach(([te,Pe,We])=>L.tracker.trackSymbol(te,Pe,We)),!0)}}function Gn(ot){return nh(L,ot,ln(ot),Pn(ot))}function sr(ot){let Hr=nb(ot);switch(Hr.kind){case 166:return Hi(Hr);case 261:return Fr(Hr)}return Na(ot,xt,Vs)}function Fr(ot){sr(ot.objectType)!==void 0&&w.fail("todo - update indexed access type node")}function Hi(ot){if(pr(L,ot)){let{introducesError:Hr,node:Ot}=Tr(ot.typeName,L),Nn=__(ot.typeArguments,xt,Vs);if(Hr){let Sr=rs(L,ot.typeName,!1,Nn);if(Sr)return o(L,Sr,ot.typeName)}else{let Sr=Ve.updateTypeReferenceNode(ot,Ot,Nn);return o(L,Sr,ot)}}}function Fs(ot){if(c_(ot))return Na(ot.type,xt,Vs);if(NM(ot)||ot.kind===198)return Ve.createKeywordTypeNode(97);if(IM(ot))return Ve.createKeywordTypeNode(102);if(tx(ot))return Ve.createArrayTypeNode(Na(ot.type,xt,Vs));if(R_(ot))return Ve.createTypeLiteralNode(Xt(ot.jsDocPropertyTags,Wt=>{let er=Na(Tt(Wt.name)?Wt.name:Wt.name.right,xt,Tt),q=nc(wt(L,ot),er.text),te=q&&Wt.typeExpression&&wt(L,Wt.typeExpression.type)!==q?t(q,L):void 0;return Ve.createPropertySignature(void 0,er,te||Wt.typeExpression&&Na(Wt.typeExpression.type,xt,Vs)||Ve.createKeywordTypeNode(97))}));if(sp(ot)&&Tt(ot.typeName)&&ot.typeName.text==="")return uf(Ve.createKeywordTypeNode(97),ot);if((AM(ot)||sp(ot))&&UP(ot))return Ve.createTypeLiteralNode([Ve.createIndexSignature(void 0,[Ve.createParameterDeclaration(void 0,void 0,"x",void 0,Na(ot.typeArguments[0],xt,Vs))],Na(ot.typeArguments[1],xt,Vs))]);if(bE(ot))return Ve.createFunctionTypeNode(__(ot.typeParameters,xt,ru),Xt(ot.parameters,(Wt,er)=>Ve.createParameterDeclaration(void 0,Nn(Wt),o(L,Ve.createIdentifier(Sr(Wt,er)),Wt),Ve.cloneNode(Wt.ampToken),Na(Wt.type,xt,Vs),void 0)),Na(ot.type,xt,Vs)||Ve.createKeywordTypeNode(97));if(ex(ot))return pr(L,ot)||(ce=!0),ot;if(ru(ot))return Ve.updateTypeParameterDeclaration(ot,__(ot.modifiers,xt,S_),o(L,vc(bo(Ft(ot)),L),ot),Na(ot.constraint,xt,Vs),Na(ot.default,xt,Vs));if(l_(ot)){let Wt=Fr(ot);return Wt||(ce=!0,ot)}if(sp(ot)){let Wt=Hi(ot);return Wt||(ce=!0,ot)}if(El(ot)&&ot.name.kind===147&&!q6(ot.name)){if(!qb(ot))return Hr(ot,xt);if(!(L.flags&1&&va(ot.name.expression)&&uS(ot.name).flags&1))return}if(Qi(ot)&&!ot.type||Cl(ot)&&!ot.type&&!ot.initializer||Kp(ot)&&!ot.type&&!ot.initializer||gs(ot)&&!ot.type&&!ot.initializer){let Wt=Hr(ot,xt);return Wt===ot&&(Wt=o(L,Ve.cloneNode(ot),ot)),Wt.type=Ve.createKeywordTypeNode(97),gs(ot)&&(Wt.modifiers=void 0),Wt}if(Ia(ot)&&va(ot.expression)){let{node:Wt,introducesError:er}=Tr(ot.expression,L);if(er){let q=rc(fr(ot.expression)),te=t(q,L),Pe;if(dp(te))Pe=te.literal;else{let We=zI(ot.expression),vt=typeof We.value=="string"?Ve.createStringLiteral(We.value,void 0):typeof We.value=="number"?Ve.createIntLiteral(We.value,0):void 0;if(!vt)return ot;Pe=vt}return Pe.kind===16&&y_(Pe.text,au(oe))?Ve.createIdentifier(Pe.text):Pe.kind===10&&!Pe.text.startsWith("-")?Pe:Ve.updateComputedPropertyName(ot,Pe)}else return Ve.updateComputedPropertyName(ot,Wt)}if(u_(ot)){let Wt;if(Tt(ot.parameterName)){let{node:er,introducesError:q}=Tr(ot.parameterName,L);ce=ce||q,Wt=er}else Wt=Ve.cloneNode(ot.parameterName);return Ve.updateTypePredicateNode(ot,void 0,Wt,Na(ot.type,xt,Vs))}if(ap(ot)){let Wt=Hr(ot,xt),er=o(L,Wt===ot?Ve.cloneNode(ot):Wt,ot),q=is(er);return oa(er,q|(L.flags&1024&&ap(ot)?0:1)),er}if(ss(ot)&&L.flags&268435456&&!ot.singleQuote){let Wt=Ve.cloneNode(ot);return Wt.singleQuote=!0,Wt}if(Zb(ot)){let Wt=Na(ot.checkType,xt,Vs),er=Gn(ot),q=Na(ot.extendsType,xt,Vs),te=Na(ot.trueType,xt,Vs);er();let Pe=Na(ot.falseType,xt,Vs);w.fail("todo - update conditional type node")}return Hr(ot,xt);function Hr(Wt,er){let q=!L.enclosingFile||L.enclosingFile!==$n(Wt);return Wm(Wt,er,void 0,q?Ot:void 0)}function Ot(Wt,er,q,te,Pe){let We=__(Wt,er,q,te,Pe);return We&&(We.pos!==-1||We.end!==-1)&&(We===Wt&&(We=Ve.createNodeArray(Wt.slice(),Wt.hasTrailingComma)),Aa(We,-1,-1)),We}function Nn(Wt){return Wt.dotDotDotToken||(Wt.type&&tx(Wt.type)?Ve.createToken(25):void 0)}function Sr(Wt,er){return Wt.name&&Tt(Wt.name)&&Wt.name.text==="this"?"this":Nn(Wt)?"args":`arg${er}`}}}function Br(L,B){return L.declarations&&Zr(L.declarations,ce=>!!rS(ce)&&(!B||!!Xn(ce,Ae=>Ae===B)))}function zi(L,B,ce,Ae,st){let et=ce;st&&(ce=Of(ce,!gs(Ae)));let xt=Rt(L,B,ce,Ae);if(xt)return st&&WI(ce)&&!Zl(wt(L,B),pn=>!!(pn.flags&32768))?Ve.createUnionTypeNode([xt,Ve.createKeywordTypeNode(96)]):xt;if(st&&et!==ce){let pn=Rt(L,B,et,Ae);if(pn)return Ve.createUnionTypeNode([pn,Ve.createKeywordTypeNode(96)])}}function dr(L,B,ce,Ae){let st=B&&(gs(B)||Pc(B))&&jI(B),et=L.enclosingDeclaration,xt=L.flags;if(B&&I9(B)&&!(L.flags&-2147483648)&&pt.serializeTypeOfDeclaration(B,L),L.flags|=-2147483648,et&&(!Ws(ce)||L.flags&1)){let Fr=B&&rS(B)?B:Br(Ae);if(Fr&&!tu(Fr)){let Hi=rS(Fr),Fs=st||!!(Ae.flags&4&&Ae.flags&16777216&&A9(Fr)&&Ae.links?.mappedType&&WI(ce)),ot=!u_(Hi)&&zi(L,Hi,ce,Fr,Fs);if(ot)return L.flags=xt,ot}}let pn=B??Ae.valueDeclaration??Ae.declarations?.[0],Gn=pn&&LH(pn)?BI(pn):void 0,sr=Po(L,Gn,ce,st);return L.flags=xt,sr}function Po(L,B,ce,Ae){let st=L.flags;B&&!(L.flags&-2147483648)&&pt.serializeTypeOfExpression(B,L,Ae),L.flags|=-2147483648;let et=po(L,B,ce,Ae);return L.flags=st,et}function po(L,B,ce,Ae){if(B){let st=Db(B)?B.type:d_(B)?xh(B):void 0;if(st){let et=zi(L,st,ce,B.parent,Ae);if(et)return et}}return Ae&&(ce=Of(ce)),t(ce,L)}function Qe(L,B,ce){return B&&B.name?B.name.kind===89?oa(Ve.cloneNode(B.name),16777216):B.name.kind===146?oa(Ve.cloneNode(B.name.right),16777216):Ae(B.name):ya(L);function Ae(st){return et(st);function et(xt){ce.tracker.canTrackSymbol&&Ia(xt)&&q6(xt)&&xe(xt.expression,ce.enclosingDeclaration,ce);let pn=Wm(xt,et,void 0,void 0,et);return ms(pn)&&(pn=Ve.updateBindingElement(pn,pn.dotDotDotToken,pn.propertyName,pn.name,void 0)),qi(pn)||(pn=Ve.cloneNode(pn)),oa(pn,16777217)}}}function xe(L,B,ce){if(!ce.tracker.canTrackSymbol)return;let Ae=Gp(L),st=hr(Ae,Ae.text,1160127,void 0,!0);st&&ce.tracker.trackSymbol(st,B,111551)}function un(L,B,ce){let Ae=ht(L),st=Ln(L),et=dr(B,Ae,st,L),xt=!(B.flags&8192)&&ce&&Ae&&uk(Ae)?Xt(F7(Ae),Ve.cloneNode):void 0,Gn=Ae&&X1(Ae)||Es(L)&32768?Ve.createToken(25):void 0,sr=Qe(L,Ae,B),Hi=Ve.createParameterDeclaration(xt,Gn,sr,void 0,et,void 0);return B.approximateLength+=ya(L).length+3,Hi}function Wn(L,B){if(L.thisParameter)return un(L.thisParameter,B);if(L.declaration&&Nr(L.declaration)){let ce=QS(L.declaration);if(ce&&ce.typeExpression)return Ve.createParameterDeclaration(void 0,void 0,"this",void 0,t(wt(B,ce.typeExpression),B))}}function En(L,B){let ce=L.flags&256,Ae=L.flags;ce&&(L.flags&=-257);let st,et=Ei(B);return et&&!(ce&&qo(et))?(B.declaration&&!(L.flags&-2147483648)&&pt.serializeReturnTypeForSignature(B.declaration,L),L.flags|=-2147483648,st=Er(L,B)):ce||(st=Ve.createKeywordTypeNode(97)),L.flags=Ae,st}function Qr(L,B){let ce=L.kind===1||L.kind===3?oa(Ve.createIdentifier(L.parameterName),16777216):void 0,Ae=L.type&&t(L.type,B);return Ve.createTypePredicateNode(void 0,ce,Ae)}function Er(L,B){let ce=Ea(B),Ae=Ei(B);if(L.enclosingDeclaration&&(!Ws(Ae)||L.flags&1)&&B.declaration&&!qi(B.declaration)){let et=RH(B.declaration);if(et){let xt=zi(L,et,Ae,L.enclosingDeclaration);if(xt)return xt}}if(ce)return Qr(ce,L);let st=B.declaration&&BI(B.declaration);return Po(L,st,Ae)}function Ds(L,B,ce,Ae){let st,et,xt=FI(L,!0)[0],pn=nh(ce,L.declaration,xt,L.typeParameters,L.parameters,L.mapper);ce.approximateLength+=3,ce.flags&32&&L.target&&L.mapper&&L.target.typeParameters?et=L.target.typeParameters.map(ot=>t(zn(ot,L.mapper),ce)):st=L.typeParameters&&L.typeParameters.map(ot=>F(ot,ce));let Gn=ce.flags;ce.flags&=-257;let sr=(kt(xt,ot=>ot!==xt[xt.length-1]&&!!(Es(ot)&32768))?L.parameters:xt).map(ot=>un(ot,ce,!1));ce.flags=Gn;let Fr=En(ce,L),Hi=Ae?.modifiers,Fs=B===151?Ve.createCallSignature(st,sr,Fr):B===156?Ve.createMethodSignature(Hi,Ae?.name??Ve.createIdentifier(""),void 0,st,sr,Fr):B===154?w.fail("todo-method decl"):B===150?Ve.createIndexSignature(Hi,sr,Fr):B===169?Ve.createFunctionDeclaration(Hi,Ae?.name?aa(Ae.name,Tt):Ve.createIdentifier(""),sr,Fr,void 0):B===270?Ve.createFunctionExpression(Hi,Ae?.name?aa(Ae.name,Tt):Ve.createIdentifier(""),sr,Fr,Ve.createBlock([])):B===271?w.fail("todo-arrow"):B===196?w.fail("todo-jsdoc function"):B===283?Ve.createInlineClosure(Ve.createBlock([])):B===158?Ve.createFunctionTypeNode(st,sr,Fr):w.assertNever(B);if(et&&(Fs.typeArguments=Ve.createNodeArray(et)),L.declaration?.kind===202&&L.declaration.parent.kind===218){let ot=wl(L.declaration.parent.parent,!0).slice(2,-2).split(/\r\n|\n|\r/).map(Hr=>Hr.replace(/^\s+/," ")).join(`
`);ib(Fs,3,ot,!0)}return pn?.(),Fs}function Bi(L,B){s&&s.throwIfCancellationRequested&&s.throwIfCancellationRequested();let ce=B.flags&8388608;if(B.flags&=-8388609,!L){if(!(B.flags&262144)){B.encounteredError=!0;return}return B.approximateLength+=3,Ve.createKeywordTypeNode(97)}if(B.flags&536870912||(L=dc(L)),L.flags&1)return L.aliasSymbol?Ve.createTypeReferenceNode(i(L.aliasSymbol),c(L.aliasTypeArguments,B)):L===Yo?ib(Ve.createKeywordTypeNode(97),3,"unresolved"):(B.approximateLength+=3,Ve.createKeywordTypeNode(L===Zo?129:97));if(L.flags&524288){if(L.aliasSymbol)return Ve.createTypeReferenceNode(i(L.aliasSymbol),c(L.aliasTypeArguments,B));if(L===Yo)return ib(Ve.createKeywordTypeNode(140),3,"unresolved");if(Ys(L)){let Ot=Bi(qs(L.resolvedTypeArguments),B);return Ve.createArrayTypeNode(Ot)}return jd(L)?(B.approximateLength+=3,Ve.createKeywordTypeNode(104)):(B.approximateLength+=3,Ve.createKeywordTypeNode(140))}if(L.flags&2)return Ve.createKeywordTypeNode(102);if(L.flags&4096)return B.approximateLength+=5,Ve.createKeywordTypeNode(107);if(L.flags&4)return B.approximateLength+=6,Ve.createKeywordTypeNode(94);if(L.flags&8)return B.approximateLength+=6,Ve.createKeywordTypeNode(92);if(L.flags&64)return B.approximateLength+=5,Ve.createKeywordTypeNode(93);if(L.flags&1056){if(L.symbol.flags&8){let Ot=nf(L.symbol),Nn=I(Ot,B,788968);if(bo(Ot)===L)return Nn;let Sr=ya(L.symbol);return y_(Sr,1)?Fs(Nn,Ve.createTypeReferenceNode(Sr,void 0)):w.fail("Unhandled type node kind returned from `symbolToTypeNode`.")}return I(L.symbol,B,788968)}if(L.flags&8192)return B.approximateLength+=L.value.length+3,Ve.createLiteralTypeNode(oa(Ve.createBytesLiteral(L.value),16777216));if(L.flags&128)return B.approximateLength+=L.value.length+2,Ve.createLiteralTypeNode(oa(Ve.createStringLiteral(L.value),16777216));if(L.flags&256){let Ot=L.value;return B.approximateLength+=(""+Ot).length,Ve.createLiteralTypeNode(Ot<0?Ve.createPrefixUnaryExpression(42,Ve.createIntLiteral(-Ot)):Ve.createIntLiteral(Ot))}if(L.flags&2048){let Ot=L.value;return B.approximateLength+=(""+Ot.toFixed()).length,Ve.createLiteralTypeNode(Ot<0?Ve.createPrefixUnaryExpression(42,Ve.createFloatLiteral(-Ot)):Ve.createFloatLiteral(Ot))}if(L.flags&512)return B.approximateLength+=L.intrinsicName.length,Ve.createLiteralTypeNode(L.intrinsicName==="true"?Ve.createIntLiteral(1):Ve.createIntLiteral(0));if(L.flags&16384)return B.approximateLength+=4,Ve.createKeywordTypeNode(105);if(L.flags&32768)return B.approximateLength+=9,Ve.createKeywordTypeNode(96);if(L.flags&67108864)return B.approximateLength+=6,Ve.createKeywordTypeNode(140);if(!ce&&L.aliasSymbol&&(B.flags&16384||TH(L.aliasSymbol,B.enclosingDeclaration))){let Ot=c(L.aliasTypeArguments,B);return LI(L.aliasSymbol.name)&&!(L.aliasSymbol.flags&32)?Ve.createTypeReferenceNode(Ve.createIdentifier(""),Ot):Pr(Ot)===1&&L.aliasSymbol===V.symbol?Ve.createArrayTypeNode(Ot[0]):I(L.aliasSymbol,B,788968,Ot)}let Ae=$t(L);if(Ae&4)return w.assert(!!(L.flags&524288)),L.node?sr(L,Hi):Hi(L);if(L.flags&262144||Ae&3){if(L.flags&262144&&ki(B.inferTypeParameters,L))return w.fail("implement");if(B.flags&4&&L.flags&262144){let Nn=vc(L,B);return B.approximateLength+=go(Nn).length,Ve.createTypeReferenceNode(Ve.createIdentifier(go(Nn)),void 0)}if(L.symbol)return I(L.symbol,B,788968);let Ot=(L===Ic||L===Ul)&&g&&g.symbol?(L===Ul?"sub-":"super-")+ya(g.symbol):"?";return Ve.createTypeReferenceNode(Ve.createIdentifier(Ot),void 0)}if(L.flags&1048576&&L.origin&&(L=L.origin),L.flags&3145728){let Ot=SH(L.types);if(Pr(Ot)===1)return t(Ot[0],B);let Nn=c(Ot,B,!0);if(Nn&&Nn.length>0)return Ve.createUnionTypeNode(Nn);!B.encounteredError&&!(B.flags&262144)&&(B.encounteredError=!0);return}if(Ae&48)return w.assert(!!(L.flags&524288)),Gn(L);if(L.flags&4194304&&w.fail("implement"),L.flags&134217728||L.flags&268435456||L.flags&8388608||L.flags&16777216||L.flags&33554432)return w.fail("Should be unreachable.");return;function st(Ot){return Ot.flags&1048576?B.visitedTypes?.has(zs(Ot))?(B.flags&131072||(B.encounteredError=!0,B.tracker?.reportCyclicStructureError?.()),yc(B)):sr(Ot,Nn=>t(Nn,B)):t(Ot,B)}function et(Ot){return!!nS(Ot)}function xt(Ot){return!!Ot.target&&et(Ot.target)&&!et(Ot)}function pn(Ot){w.fail("implement me")}function Gn(Ot){let Nn=Ot.id,Sr=Ot.symbol;if(Sr){if(!!($t(Ot)&8388608)){let te=Ot.node;return B.visitedTypes?.has(Nn)?yc(B):sr(Ot,Fr)}if(B.visitedTypes?.has(Nn)){let q=bH(Ot);return q?I(q,B,788968):yc(B)}else return sr(Ot,Fr)}else return Fr(Ot);function Wt(){if(!!(Sr.flags&16)&&(Sr.parent||Jt(Sr.declarations,q=>q.parent.kind===176)))return(!!(B.flags&4096)||B.visitedTypes?.has(Nn))&&(!(B.flags&8)||wI(Sr,B.enclosingDeclaration))}}function sr(Ot,Nn){let Sr=Ot.id,Wt=$t(Ot)&16&&Ot.symbol&&Ot.symbol.flags&32,er=$t(Ot)&4&&Ot.node?"N"+Sa(Ot.node):Ot.flags&16777216?"N"+Sa(Ot.root.node):Ot.symbol?(Wt?"+":"")+Yi(Ot.symbol):void 0;B.visitedTypes||(B.visitedTypes=new Set),er&&!B.symbolDepth&&(B.symbolDepth=new Map);let q=B.enclosingDeclaration&&Tn(B.enclosingDeclaration),te=`${zs(Ot)}|${B.flags}`;q&&(q.serializedTypes||(q.serializedTypes=new Map));let Pe=q?.serializedTypes?.get(te);if(Pe)return Pe.trackedSymbols?.forEach(([lr,qr,dn])=>B.tracker.trackSymbol(lr,qr,dn)),Pe.truncating&&(B.truncating=!0),B.approximateLength+=Pe.addedLength,Qt(Pe.node);let We;if(er){if(We=B.symbolDepth.get(er)||0,We>10)return yc(B);B.symbolDepth.set(er,We+1)}B.visitedTypes.add(Sr);let vt=B.trackedSymbols;B.trackedSymbols=void 0;let Ue=B.approximateLength,ft=Nn(Ot),Ht=B.approximateLength-Ue;return!B.reportedDiagnostic&&!B.encounteredError&&q?.serializedTypes?.set(te,{node:ft,truncating:B.truncating,addedLength:Ht,trackedSymbols:B.trackedSymbols}),B.visitedTypes.delete(Sr),er&&B.symbolDepth.set(er,We),B.trackedSymbols=vt,ft;function Qt(lr){return!qi(lr)&&_s(lr)===lr?lr:o(B,Ve.cloneNode(Wm(lr,Qt,void 0,Qn,Qt)),lr)}function Qn(lr,qr,dn,xn,Cr){return lr&&lr.length===0?Ho(Ve.createNodeArray(void 0,lr.hasTrailingComma),lr):__(lr,qr,dn,xn,Cr)}}function Fr(Ot){let Nn=fl(Ot);if(!Nn.properties.length&&!Nn.indexInfos.length){if(!Nn.callSignatures.length&&!Nn.constructSignatures.length)return B.approximateLength+=2,oa(Ve.createTypeLiteralNode(void 0),1);if(Nn.callSignatures.length===1&&!Nn.constructSignatures.length){let te=Nn.callSignatures[0];return Ds(te,158,B)}}let Sr=Yr(Nn.constructSignatures,te=>!!(te.flags&4));if(kt(Sr)){let te=Xt(Sr,We=>l1(We)),Pe=Nn.callSignatures.length+(Nn.constructSignatures.length-Sr.length)+Nn.indexInfos.length+(B.flags&2048?Kf(Nn.properties,We=>!(We.flags&4194304)):Pr(Nn.properties));w.fail("not supported")}let Wt=B.flags;B.flags|=4194304;let er=Hr(Nn);B.flags=Wt;let q=Ve.createTypeLiteralNode(er);return B.approximateLength+=2,oa(q,B.flags&1024?0:1),q}function Hi(Ot){let Nn=fs(Ot);if(Ot.target===V||Ot.target===Ye){if(B.flags&2){let er=t(Nn[0],B);return Ve.createTypeReferenceNode(Ot.target===V?"Array":"ReadonlyArray",[er])}let Sr=t(Nn[0],B);return Ve.createArrayTypeNode(Sr)}else if(Ot.target.objectFlags&8){Nn=xo(Nn,(Sr,Wt)=>Gu(Sr,!!(Ot.target.elementFlags[Wt]&2))),console.debug("todo - tuple type"),B.encounteredError=!0;return}else{if(B.flags&2048&&Ot.symbol.valueDeclaration&&ho(Ot.symbol.valueDeclaration)&&!wI(Ot.symbol,B.enclosingDeclaration))return Gn(Ot);{let Sr=Ot.target.outerTypeParameters,Wt=0,er;if(Sr){let We=Sr.length;for(;Wt<We;){let vt=Wt,Ue=uN(Sr[Wt]);do Wt++;while(Wt<We&&uN(Sr[Wt])===Ue);if(!uP(Sr,Nn,vt,Wt)){let ft=c(Nn.slice(vt,Wt),B),Ht=B.flags;B.flags|=16;let Qt=I(Ue,B,788968,ft);B.flags=Ht,er=er?Fs(er,Qt):Qt}}}let q;if(Nn.length>0){let We=(Ot.target.typeParameters||Oe).length;q=c(Nn.slice(Wt,We),B)}let te=B.flags;B.flags|=16;let Pe=I(Ot.symbol,B,788968,q);return B.flags=te,er?Fs(er,Pe):Pe}}}function Fs(Ot,Nn){{let Sr=Ot.typeArguments,Wt=Ot.typeName;Tt(Wt)?Sr!==Ym(Wt)&&(Wt=Ph(Ve.cloneNode(Wt),Sr)):w.fail("implement me"),Sr=Nn.typeArguments;let er=ot(Nn);for(let q of er)Wt=Ve.createQualifiedName(Wt,q);w.fail("implement me")}}function ot(Ot){let Nn=Ot.typeName,Sr=[];for(;!Tt(Nn);)Sr.unshift(Nn.right),Nn=Nn.left;return Sr.unshift(Nn),Sr}function Hr(Ot){if(f(B))return[Ve.createPropertySignature(void 0,"...",void 0)];let Nn=[];for(let er of Ot.callSignatures)console.debug("todo - callsig");for(let er of Ot.indexInfos)Nn.push(na(er,B,Ot.objectFlags&1024?yc(B):void 0));let Sr=Ot.properties;if(!Sr)return Nn;let Wt=0;for(let er of Sr){if(Wt++,B.flags&2048){if(er.flags&4194304)continue;Sl(er)&6&&B.tracker.reportPrivateInBaseOfClassExpression&&B.tracker.reportPrivateInBaseOfClassExpression(er.name)}if(f(B)&&Wt+2<Sr.length-1){Nn.push(Ve.createPropertySignature(void 0,`... ${Sr.length-Wt} more ...`,void 0)),Ni(Sr[Sr.length-1],B,Nn);break}Ni(er,B,Nn)}return Nn.length?Nn:void 0}}function Ni(L,B,ce){console.warn("implement me");let Ae=!!(Es(L)&8192)}function na(L,B,ce){let Ae=JF(L)||"x",st=t(L.keyType,B),et=Ve.createParameterDeclaration(void 0,void 0,Ae,void 0,st,void 0);return ce||(ce=t(L.type||Cn,B)),!L.type&&!(B.flags&2097152)&&(B.encounteredError=!0),B.approximateLength+=Ae.length+4,Ve.createIndexSignature(void 0,[et],ce)}function yc(L){return L.approximateLength+=3,L.flags&1?Ve.createKeywordTypeNode(97):Ve.createTypeReferenceNode(Ve.createIdentifier("..."),void 0)}function hl(L){let B=L.mustCreateTypeParameterSymbolList,ce=L.mustCreateTypeParametersNamesLookups;L.mustCreateTypeParameterSymbolList=!0,L.mustCreateTypeParametersNamesLookups=!0;let Ae=L.typeParameterNames,st=L.typeParameterNamesByText,et=L.typeParameterNamesByTextNextNameCount,xt=L.typeParameterSymbolList;return()=>{L.typeParameterNames=Ae,L.typeParameterNamesByText=st,L.typeParameterNamesByTextNextNameCount=et,L.typeParameterSymbolList=xt,L.mustCreateTypeParameterSymbolList=B,L.mustCreateTypeParametersNamesLookups=ce}}function rf(L,B,ce){let Ae=hr(B.enclosingDeclaration,L,788968,void 0,!1);return Ae&&Ae.flags&262144?Ae!==ce.symbol:!1}function vc(L,B){if(B.flags&4&&B.typeParameterNames){let st=B.typeParameterNames.get(zs(L));if(st)return st}let ce=ve(L.symbol,B,788968,!0);if(!(ce.kind&89))return Ve.createIdentifier("(Missing type parameter)");let Ae=L.symbol?.declarations?.[0];if(Ae&&ru(Ae)&&(ce=o(B,ce,Ae.name)),B.flags&4){let st=ce.text,et=B.typeParameterNamesByTextNextNameCount?.get(st)||0,xt=st;for(;B.typeParameterNamesByText?.has(xt)||rf(xt,B,L);)et++,xt=`${st}_${et}`;if(xt!==st){let pn=Ym(ce);ce=Ve.createIdentifier(xt),Ph(ce,pn)}B.mustCreateTypeParametersNamesLookups&&(B.mustCreateTypeParametersNamesLookups=!1,B.typeParameterNames=new Map(B.typeParameterNames),B.typeParameterNamesByTextNextNameCount=new Map(B.typeParameterNamesByTextNextNameCount),B.typeParameterNamesByText=new Set(B.typeParameterNamesByText)),B.typeParameterNamesByTextNextNameCount.set(st,et),B.typeParameterNames.set(zs(L),ce),B.typeParameterNamesByText.add(xt)}return ce}function nh(L,B,ce,Ae,st,et){let xt=hl(L),pn,Gn,sr=L.enclosingDeclaration,Fr=L.mapper;if(et&&(L.mapper=et),L.enclosingDeclaration&&B){let Hi=function(Fs,ot){w.assert(L.enclosingDeclaration);let Hr;Tn(L.enclosingDeclaration).fakeScopeForSignatureDeclaration===Fs?Hr=L.enclosingDeclaration:L.enclosingDeclaration.parent&&Tn(L.enclosingDeclaration.parent).fakeScopeForSignatureDeclaration===Fs&&(Hr=L.enclosingDeclaration.parent),w.assertOptionalNode(Hr,uu);let Ot=Hr?.locals??bi(),Nn,Sr;if(ot((Wt,er)=>{if(Hr){let q=Ot.get(Wt);q?Sr=ei(Sr,{name:Wt,oldSymbol:q}):Nn=ei(Nn,Wt)}Ot.set(Wt,er)}),Hr)return function(){Jt(Nn,er=>Ot.delete(er)),Jt(Sr,er=>Ot.set(er.name,er.oldSymbol))};{let Wt=Ve.createBlock(Oe);Tn(Wt).fakeScopeForSignatureDeclaration=Fs,Wt.locals=Ot,ic(Wt,L.enclosingDeclaration),L.enclosingDeclaration=Wt}};pn=kt(ce)?Hi("params",Fs=>{if(ce)for(let ot=0;ot<ce.length;ot++){let Hr=ce[ot],Ot=st?.[ot];st&&Ot!==Hr?(Fs(Hr.name,Di),Ot&&Fs(Ot.name,Di)):Jt(Hr.declarations,Nn=>{if(gs(Nn)&&ds(Nn.name))return Sr(Nn.name),!0;return;function Sr(er){Jt(er.elements,q=>{switch(q.kind){case 266:return Wt(q);default:return w.assertNever(q)}})}function Wt(er){if(ds(er.name))return Sr(er.name);let q=Ft(er);Fs(q.name,q)}})||Fs(Hr.name,Hr)}}):void 0,L.flags&4&&kt(Ae)&&(Gn=Hi("typeParams",Fs=>{for(let ot of Ae??Oe){let Hr=vc(ot,L).text;Fs(Hr,ot.symbol)}}))}return()=>{pn?.(),Gn?.(),xt(),L.enclosingDeclaration=sr,L.mapper=Fr}}function _o(L,B,ce){let Ae=P6(L,B,ce);return st(Ae,Ae.length-1);function st(et,xt){let pn=et[xt];xt===0&&(B.flags|=16777216);let Gn=KT(pn,B);xt===0&&(B.flags^=16777216);let sr=Gn.charCodeAt(0);if(xt===0||PF(Gn,ie)){let Fr=oa(Ve.createIdentifier(Gn),16777216);return Fr.symbol=pn,xt>0?Ve.createPropertyAccessExpression(st(et,xt-1),Fr):Fr}else{sr===91&&(Gn=Gn.substring(1,Gn.length-1),sr=Gn.charCodeAt(0));let Fr;if(qD(sr)&&!(pn.flags&8)?Fr=Ve.createStringLiteral(gf(Gn).replace(/\\./g,Hi=>Hi.substring(1)),sr===39):""+ +Gn===Gn&&(Fr=Ve.createIntLiteral(+Gn)),!Fr){let Hi=oa(Ve.createIdentifier(Gn),16777216);Hi.symbol=pn,Fr=Hi}return Ve.createElementAccessExpression(st(et,xt-1),Fr)}}}function AS(L,B,ce){if(B.flags&1073741824){if(L.valueDeclaration){let st=hi(L.valueDeclaration);if(st&&Ia(st))return st}let Ae=jt(L).nameType}return _o(L,B,ce)}function ve(L,B,ce,Ae){let st=P6(L,B,ce);return Ae&&st.length!==1&&!B.encounteredError&&!(B.flags&65536)&&(B.encounteredError=!0),et(st,st.length-1);function et(xt,pn){let Gn=xt[pn];pn===0&&(B.flags|=16777216);let sr=KT(Gn,B);pn===0&&(B.flags^=16777216);let Fr=oa(Ve.createIdentifier(sr),16777216);return Fr.symbol=Gn,pn>0?Ve.createQualifiedName(et(xt,pn-1),Fr):Fr}}function qe(L,B,ce,Ae){let st=ce?.trackSymbol?ce.moduleResolverHost:B&134217728?cte(e):void 0,et={enclosingDeclaration:L,enclosingFile:L&&$n(L),flags:B||0,tracker:void 0,encounteredError:!1,reportedDiagnostic:!1,visitedTypes:void 0,symbolDepth:void 0,inferTypeParameters:void 0,approximateLength:0,trackedSymbols:void 0,bundled:!1,truncating:!1,usedSymbolNames:void 0,remappedSymbolNames:void 0,remappedSymbolReferences:void 0,reverseMappedStack:void 0,mustCreateTypeParameterSymbolList:!0,typeParameterSymbolList:void 0,mustCreateTypeParametersNamesLookups:!0,typeParameterNames:void 0,typeParameterNamesByText:void 0,typeParameterNamesByTextNextNameCount:void 0,mapper:void 0};et.tracker=new FA(et,ce,st);let xt=Ae(et);return et.truncating&&et.flags&1&&et.tracker.reportTruncationError(),et.encounteredError?void 0:xt}}function Vd(t,i,o,c){let f=P.Cannot_find_object_0;return jH(t,i,o,c?void 0:f)}function jH(t,i,o,c,f=!1){let p=ss(i)?i.text:hs(i)&&o&&rC(o)?o.value:dt(i)?.value??"";return p===""?Cn.getSymbol():BH(t,p,c,i,f)}function BH(t,i,o,c,f=!1){let p=$n(t),m=1,S=1,I=e.getResolvedModule(p,i,m)?.resolvedModule,F=I&&BE(oe,I,p),U=I&&!F&&e.getSourceFile(I.resolvedFileName);if(U){if(F&&at(c,F,i,I.resolvedFileName),U.symbol){let ne=Ln(U.symbol);return d6(ne),gn(U.symbol)}o&&at(c,P.File_0_is_not_a_module,U.fileName);return}if(o)if(F)at(c,F,i,I.resolvedFileName);else{let ne=N_(i)&&!P0(i);at(c,o,i)}return;function Q(ne){return JD(i,ne)}}function A6(t,i){return t}function O6(t,i=!1){switch(t.kind){case 273:case 276:w.fail("not implemented yet");case 175:return hc(t.name,901119,!0,i);case 174:return UI(t.initializer,i);case 281:case 286:return WH(t,i);default:return w.fail()}}function UI(t,i){if(!Am(t)&&!va(t))return;let o=hc(t,901119,!0,i);return o||(Fo(t),Tn(t).resolvedSymbol)}function WH(t,i){if(Ur(t.parent)&&t.parent.left===t&&t.parent.operatorToken.kind===74)return UI(t.parent.right,i)}function pm(t){return t.declarations&&JO(t.declarations,UH)}function UH(t){return ia(t)&&Ur(t.parent)&&t.parent.left===t&&t.parent.operatorToken.kind===74&&JI(t.parent.right)||t.kind===175||t.kind===174&&JI(t.initializer)||t.kind===237&&Ny(t)}function JI(t){return sF(t)}function JH(t,i,o){if(o&111551){if(pH(i)){let p=t.parent.parent;return at(t,P._0_only_refers_to_a_type_but_is_being_used_as_a_value_here,i),!0}let c=Ud(hr(t,i,788544,void 0,!1)),f=c&&fm(c);if(c&&f!==void 0&&!(f&111551)){let p=i;return at(t,P._0_only_refers_to_a_type_but_is_being_used_as_a_value_here,p),!0}}return!1}function zI(t,i){let o=hc(t,111551,!0);if(!o)return Xs(void 0);if(t.kind===89){let c=t;if(T8(c.text)&&o===Ja(c.text,111551,void 0))return Xs(+c.text,!1)}if(zH(o)){let c=o.valueDeclaration;if(c&&Cs(c)&&!c.type&&c.initializer&&(!i||c!==i&&iS(c,i))){let f=dt(c.initializer,c);return i&&$n(i)!==$n(c)?Xs(f.value,!1,!0,!0):Xs(f.value,f.isSyntacticallyString,f.resolvedOtherFiles,!0)}}return Xs(void 0)}function zH(t){return(t.flags&3)!==0}function VH(t,i){let o=t.expression;if(va(o)&&_f(t.argumentExpression)){let c=hc(o,111551,!0);if(c&&c.flags&384){let f=t.argumentExpression.text;c.exports.get(f)&&w.fail("no enum members")}}return Xs(void 0)}function qH(t,i,o){if(o&788584){let c=Ud(hr(t,i,111127,void 0,!1));if(c&&!(c.flags&1920))return at(t,P._0_refers_to_a_value_but_is_being_used_as_a_type_here_Did_you_mean_typeof_0,i),!0}return!1}function VI(t,i,o){return!!i&&!!Xn(t,c=>c===i||(c===o||Qi(c)&&(!Yp(c)||Sc(c)&3)?"quit":!1))}function iS(t,i){let o=$n(t),c=$n(i),f=Rm(t);if(o!==c){if(t.flags&33554432||m(i,t))return!0;let I=e.getSourceFiles();return I.indexOf(o)<=I.indexOf(c)}if(i.flags&16777216||$b(i)||Qw(i))return!0;if(t.pos<=i.pos){if(t.kind===266){let I=p_(i,266);return I?Xn(I,ms)!==Xn(t,ms)||t.pos<I.pos:iS(p_(t,237),i)}else{if(t.kind===237)return!p(t,i);if(ho(t))return!Xn(i,F=>F===t?"quit":Ia(F)?F.parent.parent===t:"quit");if(Cl(t))return!S(t,i,!1)}return!0}if(m(i,t))return!0;return!1;function p(I,F){switch(I.parent.parent.kind){case 242:case 243:case 244:if(VI(F,I,f))return!0;break}let U=I.parent.parent;return zm(U)&&VI(F,U.expression,f)}function m(I,F){return!!Xn(I,U=>{if(U===f)return"quit";if(Qi(U))return!0;let Q=to(U.parent,Cl);return!!(Q&&Q.initializer===U&&!(F.kind===152&&!Wy(F)))})}function S(I,F,U){return F.end>I.end?!1:Xn(F,ne=>{if(ne===I)return"quit";switch(ne.kind){case 271:return!0;case 152:return U&&Cl(I)&&ne.parent===I.parent?"quit":!0;case 236:switch(ne.parent.kind){case 154:return!0;default:return!1}default:return!1}})===void 0}}function $H(t,i,o){return w.assert(i!==void 0,"outername should always be defined"),Hs(t,i,o,void 0,!1,!1)}function HH(t,i,o){let c=X_(t,i,o);if(c)return c;let f;return t===Lt?f=Vi(["string","number","boolean","object","bigint","symbol"],m=>t.has(m.charAt(0).toUpperCase()+m.slice(1))?es(524288,m):void 0).concat(as(t.values())):f=as(t.values()),qI(i,f,o)}function qI(t,i,o){return Uh(t,i,c);function c(f){let p=ya(f);if(!no(p,'"')){if(f.flags&o)return p;if(f.flags&2097152){let m=dH(f);if(m&&m.flags&o)return p}}}}function GH(t,i,o,c,f,p){w.assertIsDefined(t);let m=Tt(o.left)?o.left.text:void 0,S;if(m===void 0)S=es(0,"__missing");else if(S=t.get(m),!S)t.set(m,S=es(2,m,4096)),p&&(S.isReplaceableByMethod=!0);else{if(p&&!S.isReplaceableByMethod)return S;if(S.flags&f){if(S.isReplaceableByMethod)t.set(m,S=es(0,m));else if(!(c&3&&S.flags&67108864)){El(o)&&ic(o.name,o);let I=S.flags&2?P.Cannot_redeclare_block_scoped_variable_0:P.Duplicate_identifier_0,F=!0,U=!1;Pr(S.declarations);let Q=[],ne=hi(o)||o;Jt(S.declarations,(Ge,nt)=>{let wt=hi(Ge)||Ge,ht=F?fi(wt,I,sa(ne)):fi(wt,I)});let ae=F?fi(ne,I,sa(o)):fi(ne,I);Vn.add(Rs(ae,...Q)),S=es(0,m)}}}return o.symbol=S,S.name!=="__missing"&&P5(S,o,2),wb(S,o),S.parent?w.assert(S.parent===i,"Existing symbol parent should match new one"):S.parent=i,S}function QH(t,i,o,c){w.assert(!t||t.parent);let f=Li(i)?i:i.text;if(t?.parent&&pp(t.parent)&&t.parent.left===i){let p=t.parent,m=lF(t.parent);m.locals||(m.locals=bi());let S=qf(m);return GH(m.locals,S,p,3,0)}r(()=>{if(!t||t.parent.kind!==203&&!fH(t,f,i)&&!JH(t,f,o)&&!qH(t,f,o)){let p,m;if(!m&&si<xi&&(p=$H(t,f,o),p)){let S=wi(p),I=P.Cannot_find_name_0_Did_you_mean_1,F=$r(t,I,L6(i),S);F.canonicalHead=aF(c,L6(i)),sS(!0,F),p.valueDeclaration&&Rs(F,fi(p.valueDeclaration,P._0_is_declared_here,S))}!p&&!m&&i&&at(t,c,L6(i)),si++}})}function sS(t,i){t?Vn.add(i):_i.add({...i,category:2})}function L6(t){return Li(t)?t:sa(t)}function qd(t){return gn(t&&(t.flags&1048576)!==0&&t.exportSymbol||t)}function YH(t,i){if(w.assert(!!(t.flags&3||t.flags&32||t.flags&384)),t.flags&67108881&&t.flags&32)return;let o=t.declarations?.find(c=>ID(c)||pp(c));if(o===void 0)return w.fail("checkResolvedBlockScopedVariable could not find block-scoped declaration");if(!(o.flags&33554432)&&!iS(o,i)){let c,f=sa(hi(o));t.flags&3?c=at(i,P.Block_scoped_variable_0_used_before_its_declaration,f):t.flags&32&&(c=at(i,P.Class_0_used_before_its_declaration,f)),c&&Rs(c,fi(o,P._0_is_declared_here,f))}}function ZH(t,i,o,c,f,p){r(()=>{let m=i.name,S=c&&ti(c)&&BD(c);if(t&&(o&2||(o&32||o&384)&&(o&111551)===111551)){let I=qd(i);(I.flags&2||I.flags&32||I.flags&384)&&YH(I,t)}})}function $I(t){switch(t.text){case"bytes":case"buffer":return P.Cannot_find_0_Do_you_need_to_change_your_driver_type;default:return t.parent?.kind===175?P.No_value_exists_in_scope_for_the_shorthand_property_0_Either_declare_one_or_provide_an_initializer:P.Cannot_find_name_0}}function _a(t,i=1160127){let o=Tn(t);return o.resolvedSymbol||(o.resolvedSymbol=!Eo(t)&&hr(t,t,i,$I(t),!YS(t),!1)||Di),o.resolvedSymbol}function nf(t){return gn(t.parent&&qn(t.parent))}function u1(t){return Ze===t||(Ze=t,Ct=ig(t)),Ct}function $g(t){return!!(u1(t)&536870912)}function f1(t){let i=nf(t);return i&&Pr(t.declarations)>1?i.flags&64?kt(t.declarations,$g):Ti(t.declarations,$g):!!t.valueDeclaration&&$g(t.valueDeclaration)||Pr(t.declarations)&&Ti(t.declarations,$g)}function XH(t){w.assert((t.flags&2097152)!==0,"Should only get Alias here.");let i=jt(t);if(!i.immediateTarget){let o=pm(t);if(!o)return w.fail();i.immediateTarget=O6(o,!0)}return i.immediateTarget}function Hg(t,i,o){let c=fi(t,P._0_is_deprecated,o);return HI(i,c)}function HI(t,i){let o=Array.isArray(t)?Jt(t,hP):hP(t);return o&&Rs(i,fi(o,P.The_declaration_was_marked_as_deprecated_here)),_i.add(i),i}function GI(t,i){if(!(t.flags&2097152)||f1(t)||!pm(t))return t;let o=Uc(t);if(o===Di)return o;for(;t.flags&2097152;){let c=XH(t);if(c){if(c===o)break;if(c.declarations&&Pr(c.declarations))if(f1(c)){Hg(i,c.declarations,c.name);break}else{if(t===o)break;t=c}}else break}return o}function ko(t,i){switch(i.kind){case 289:return ko(t,i.expression);case 269:return pp(i)&&ko(t,i.left)||Ur(i)&&i.operatorToken.kind===27&&ko(t,i.right)}switch(t.kind){case 89:return i.kind===89&&_a(t)===_a(i)||(Cs(i)||ms(i))&&Ft(_a(t).declarations[0])===Ft(i);case 71:return i.kind===71;case 289:return ko(t.expression,i);case 286:case 281:let o=zp(t);if(o!==void 0){let c=ia(i)?zp(i):void 0;if(c!==void 0)return c===o&&ko(t.expression,i.expression)}if(Ha(t)&&Ha(i)&&Tt(t.argumentExpression)&&Tt(i.argumentExpression)){let c=_a(t.argumentExpression);if(c===_a(i.argumentExpression)&&h4(c)&&!QI(c))return ko(t.expression,i.expression)}break;case 269:return Ur(t)&&t.operatorToken.kind===27&&ko(t.right,i)}return!1}function QI(t){return!l3(t,void 0)}function YI(t,i){for(;ia(t);)if(t=t.expression,ko(t,i))return!0;return!1}function ZI(t,i){return ko(t,i)||YI(t,i)}function XI(t,i){if(t.arguments){for(let o of t.arguments)if(ZI(i,o))return!0}return!!(t.expression.kind===286&&ZI(i,t.expression.expression))}function F6(t,i){if(i.flags&8208){let o=Xn(t.parent,c=>!ia(c))||t.parent;return v_(o)?op(o)&&Tt(t)&&XI(o,t):Ti(i.declarations,c=>!Qi(c)||$g(c))}return!0}function KI(t,i){let o=qd(i),c=GI(o,t);f1(c)&&F6(t,c)&&c.declarations&&Hg(t,c.declarations,t.text);let f=o.valueDeclaration;if(f&&o.flags&32&&ho(f)&&f.name!==t){let p=yh(t,!1,!1);for(;p.kind!==176&&p.parent!==f;)p=yh(p,!1,!1);p.kind!==176&&(Tn(f).flags|=262144,Tn(p).flags|=262144,Tn(t).flags|=536870912)}tG(t,i)}function KH(t,i){return!!Xn(t,o=>o===i?"quit":Qi(o)||o.parent&&Cl(o.parent)&&o.parent.initializer===o)}function e5(t){return Xn(t,i=>!i||EP(i)?"quit":$S(i,!1))}function eG(t,i){return Xn(t,o=>o===i?"quit":o===i.initializer||o===i.condition||o===i.incrementor||o===i.statement)}function tG(t,i){if((i.flags&34)===0||!i.valueDeclaration||ti(i.valueDeclaration)||i.valueDeclaration.parent.kind===255)return;let o=Rm(i.valueDeclaration),c=KH(t,o),f=e5(o);if(f){if(c){let p=!0;if(XP(o)){let m=p_(i.valueDeclaration,238);if(m&&m.parent===o){let S=eG(t.parent,o);if(S){let I=Tn(S);I.flags|=8192;let F=I.capturedBlockScopeBindings||(I.capturedBlockScopeBindings=[]);Tl(F,i),S===o.initializer&&(p=!1)}}}p&&(Tn(f).flags|=4096)}if(XP(o)){let p=p_(i.valueDeclaration,238);p&&p.parent===o&&nG(t,o)&&(Tn(i.valueDeclaration).flags|=65536)}Tn(i.valueDeclaration).flags|=32768}c&&(Tn(i.valueDeclaration).flags|=16384)}function nG(t,i){let o=t;for(;o.parent.kind===289;)o=o.parent;let c=!1;if(wu(o))c=!0;else if(o.parent.kind===298||o.parent.kind===288){let f=o.parent;c=f.operator===47||f.operator===48}return c?!!Xn(o,f=>f===i?"quit":f===i.statement):!1}function rG(t){return!!Xn(t,i=>{switch(i.kind){case 152:return!0;case 174:case 252:return!1;case 283:case 247:return"quit";default:return ep(i)?!1:"quit"}})}function iG(t){let i=t.valueDeclaration;return i?(ms(i)&&(i=Cb(i)),gs(i)?e6(i.parent):!1):!1}function sG(t){let i=jt(t);return i.type||(i.type=zn(Ln(i.target),i.mapper))}function oG(t){let i=jt(t);return i.type||(i.type=BC(t.links.propertyType,t.links.mappedType,t.links.constraintType)||yr),i.type}function aG(t){var i;if(!t.links.type){let o=t.links.mappedType;if(!If(t,0))return o.containsError=!0,At;let c=sm(o.target||o),f=NT(o.mapper,ec(o),t.links.keyType),p=zn(c,f),m=G&&t.flags&16777216&&!Ki(p,49152)?Of(p,!0):t.links.checkFlags&524288?WN(p):p;Nf()||(at(E,P.Type_of_property_0_circularly_references_itself_in_mapped_type_1,wi(t),rn(o)),m=At),(i=t.links).type??(i.type=m)}return t.links.type}function cG(t){let i=jt(t);if(i.localVarType&&X){let o=i.localVarType.get(X?.fileName);return o||(o=n5(t),i.localVarType.set(X?.fileName,o)),o}if(!i.type){let o=n5(t);return o?.flags&-2147483648&&X?((i.localVarType||(i.localVarType=new Map)).set(X.fileName,o),o):(!i.type&&!iG(t)&&(i.type=o),o)}return i.type}function R6(t,i){let o,c=!1,f=!1;if(!o){let m;if(t.declarations){let S;for(let I of t.declarations){let F=Ur(I)||hs(I)?I:ia(I)?Ur(I.parent)?I.parent:I:void 0;if(!F)continue;let U=ia(F)?LP(F):Oa(F);(U===4||Ur(F)&&z6(F,U))&&(f=!0),hs(F)||(S=_G(S,F,t,I)),S||(m||(m=[])).push(Ur(F)||hs(F)?pG(t,i,F,U):Bn)}o=S}if(!o){if(!Pr(m))return At;let S;if(f){let F=KN(t);F&&((S||(S=[])).push(F),c=!0)}let I=kt(S,F=>!!(F.flags&-98305))?S:m;o=vn(I)}}let p=rc(Wc(o,!1,f&&!c));return t.valueDeclaration&&Nr(t.valueDeclaration)&&Us(p,m=>!!(m.flags&-98305))===Bn?(so(t.valueDeclaration,Cn),Cn):p}function nc(t,i){let o=ni(t,i);return o?Ln(o):void 0}function Mf(t){return Vg(t,0,!1)}function lG(t){return uG(t,Bn)}function uG(t,i){return t.parameters.length>0?Ql(t,0):i}function fG(t,i){return!1}function pG(t,i,o,c){if(hs(o)){if(i)return Ln(i);let p=Fo(o.arguments[2]),m=nc(p,"value");if(m)return m;let S=nc(p,"get");if(S){let F=Mf(S);if(F)return Ei(F)}let I=nc(p,"set");if(I){let F=Mf(I);if(F)return lG(F)}return Cn}if(fG(o.left,o.right))return Cn;let f=i?Ln(i):Bd(Fo(o.right));if(f.flags&524288&&c===2&&t.name==="export="){let p=fl(f),m=bi();MF(p.members,m);let S=m.size;i&&!i.exports&&(i.exports=bi()),(i||t).exports.forEach((F,U)=>{let Q=m.get(U);if(Q&&Q!==F&&!(F.flags&2097152))if(F.flags&111551&&Q.flags&111551){if(F.valueDeclaration&&Q.valueDeclaration&&$n(F.valueDeclaration)!==$n(Q.valueDeclaration)){let ae=F.name,Ge=to(Q.valueDeclaration,El)?.name||Q.valueDeclaration;Rs(at(F.valueDeclaration,P.Duplicate_identifier_0,ae),fi(Ge,P._0_was_also_declared_here,ae)),Rs(at(Ge,P.Duplicate_identifier_0,ae),fi(F.valueDeclaration,P._0_was_also_declared_here,ae))}let ne=es(F.flags|Q.flags,U);ne.links.type=vn([Ln(F),Ln(Q)]),ne.valueDeclaration=Q.valueDeclaration,ne.declarations=ri(Q.declarations,F.declarations),m.set(U,ne)}else m.set(U,Fe(F,Q));else m.set(U,F)});let I=wa(S!==m.size?void 0:p.symbol,m,p.callSignatures,p.constructSignatures,p.indexInfos);if(S===m.size&&(f.aliasSymbol&&(I.aliasSymbol=f.aliasSymbol,I.aliasTypeArguments=f.aliasTypeArguments),$t(f)&4)){I.aliasSymbol=f.symbol;let F=fs(f);I.aliasTypeArguments=Pr(F)?F:void 0}return I.objectFlags|=cn([f])|$t(f)&20608,I.symbol&&I.symbol.flags&32&&f===jp(I.symbol)&&(I.objectFlags|=16777216),I}return MT(f)?(so(o,Ci),Ci):f}function t5(t,i){if(i){let o=jt(i);if(!o.inferredClassSymbol||!o.inferredClassSymbol.has(Yi(t))){let c=D_(t)?t:ee(t);return c.exports=c.exports||bi(),c.members=c.members||bi(),c.flags|=i.flags&32,i.exports?.size&&Vl(c.exports,i.exports),i.members?.size&&Vl(c.members,i.members),(o.inferredClassSymbol||(o.inferredClassSymbol=new Map)).set(Yi(c),c),c}return o.inferredClassSymbol.get(Yi(t))}}function Rae(t){}function dG(t){let i=jt(t),o=i;if(!i.declaredType){let c=t.flags&32?1:2,f=t5(t,t.valueDeclaration&&(t.valueDeclaration,void 0));f&&(t=f,i=f.links);let p=o.declaredType=i.declaredType=dl(c,t),m=Ep(t);p.objectFlags|=4,p.typeParameters=m,p.localTypeParameters=m,p.instantiations=new Map,p.instantiations.set(ma(p.typeParameters),p),p.target=p,p.resolvedTypeArguments=p.typeParameters,p.thisType=_c(t),p.thisType.isThisType=!0,p.thisType.constraint=p}return i.declaredType}function jp(t){let i=jt(t),o=i;if(!i.declaredType){let c=t.flags&32?1:2,f=t5(t,t.valueDeclaration&&(t.valueDeclaration,void 0));f&&(t=f,i=f.links);let p=o.declaredType=i.declaredType=dl(c,t),m=DI(t),S=Ep(t);(m||S||c===1)&&(p.objectFlags|=4,p.typeParameters=ri(m,S),p.outerTypeParameters=m,p.localTypeParameters=S,p.instantiations=new Map,p.instantiations.set(ma(p.typeParameters),p),p.target=p,p.resolvedTypeArguments=p.typeParameters,p.thisType=_c(t),p.thisType.isThisType=!0,p.thisType.constraint=p)}return i.declaredType}function _G(t,i,o,c){let f=Ta(i.parent);if(f){let p=rc(jn(f));if(t)!Ws(t)&&!Ws(p)&&!rm(t,p)&&Yw(void 0,t,c,p);else return p}if(o.parent?.valueDeclaration){let p=b5(o.parent);if(p.valueDeclaration){let m=Ta(p.valueDeclaration);if(m){let S=ni(jn(m),o.name);if(S)return Be(S)}}}return t}function n5(t){if(t===kn)return Cn;if(t.flags&134217728&&t.valueDeclaration){let c=Ft($n(t.valueDeclaration)),f=es(c.flags,"exports");f.declarations=c.declarations?c.declarations.slice():[],f.parent=t,f.links.target=c,c.valueDeclaration&&(f.valueDeclaration=c.valueDeclaration),c.members&&(f.members=new Map(c.members)),c.exports&&(f.exports=new Map(c.exports));let p=bi();return p.set("exports",f),wa(t,p,Oe,Oe,Oe)}w.assertIsDefined(t.valueDeclaration);let i=t.valueDeclaration;if(!If(t,0))return t.flags&512&&!(t.flags&67108864)?oS(t):p1(t);let o;if(Ur(i)||Nr(i)&&(hs(i)||Ii(i)&&Ur(i.parent)))o=R6(t);else if(Ii(i)||Ha(i)||Tt(i)||ss(i)||ff(i)||o0(i)||Yc(i)||ti(i)){if(t.flags&9136)return oS(t);o=i.parent&&Ur(i.parent)?R6(t):om(i)||Cn}else if(af(i))o=om(i)||r5(i);else if(vp(i))o=om(i)||Gg(i.name,0);else if(gs(i)||Cl(i)||Kp(i)||Cs(i)||ms(i)||v0(i))o=BT(i,!0);else if(s0(i))o=Cn;else return w.fail("Unhandled declaration kind! "+w.formatSyntaxKind(i.kind)+" for "+w.formatSymbol(t));return Nf()?o:t.flags&512&&!(t.flags&67108864)?oS(t):p1(t)}function p1(t){let i=t.valueDeclaration;if(i){if(Ta(i))return at(t.valueDeclaration,P._0_is_referenced_directly_or_indirectly_in_its_own_type_annotation,wi(t)),At;je&&(i.kind!==149||i.initializer)&&at(t.valueDeclaration,P._0_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_and_is_referenced_directly_or_indirectly_in_its_own_initializer,wi(t))}else if(t.flags&2097152){let o=pm(t);o&&at(o,P.Circular_definition_of_import_alias_0,wi(t))}return Cn}function r5(t,i){return Gg(t.initializer,i)}function Gg(t,i,o){let c=Lr(t,i,o);if(Qu(c)){let f=Js(c);if(f.isIntLiteral()&&f.value===0)return f}return CI(t)?c:YN(c,AT(Mc(t,void 0),t,void 0))}function Ln(t,i){let o=Es(t);return o&65536&&w.fail("TODO - getTypeOfSymbol"),o&1?sG(t):o&262144?aG(t):o&8192?oG(t):t.flags&7?cG(t):t.flags&9136?oS(t):t.flags&2097152?mG(t):At}function mG(t){let i=jt(t);if(!i.type){if(!If(t,0))return At;let o=Uc(t),c=t.declarations&&O6(pm(t),!0),f=Ya(c?.declarations,p=>WM(p)?om(p):void 0);if(i.type??(i.type=f||(fm(o)&111551?Ln(o):At)),!Nf())return p1(c??t),i.type??(i.type=At)}return i.type}function oS(t){let i=jt(t),o=i;return i.type||(o.type=i.type=gG(t)),i.type}function gG(t){let i=t.valueDeclaration;if(i&&(i.kind===269||ia(i)&&i.parent.kind===269))return R6(t);let o=dl(16,t);if(t.flags&32){let c=hG(t);return c?yi([o,c]):o}else return G&&t.flags&16777216?Of(o,!0):o}function hG(t){let i=M6(jp(t));return i?.flags&8650752?i:i?.flags&2097152?Zr(i.types,o=>!!(o.flags&8650752)):void 0}function Mae(t){return t.heritageClauses.length>0}function M6(t){if(!t.resolvedBaseConstructorType){let i=$1(t.symbol),o=i&&sy(i),c=Pd(t);if(!c)return t.resolvedBaseConstructorType=Zn;if(!If(t,1))return At;let f=Lr(c.expression);if(o&&c!==o&&(w.assert(!o.typeArguments),Lr(o.expression)),f.flags&2621440&&fl(f),!Nf())return at(t.symbol.valueDeclaration,P._0_is_referenced_directly_or_indirectly_in_its_own_base_expression,wi(t.symbol)),t.resolvedBaseConstructorType??(t.resolvedBaseConstructorType=At);!(f.flags&1)&&f!==tl&&console.debug("todo - implement this"),t.resolvedBaseConstructorType??(t.resolvedBaseConstructorType=f)}return t.resolvedBaseConstructorType}function i5(t){let i=t.parent;if(i){if(Ii(i)&&i.expression===t)return!1;let o=i.parent?.parent}return!0}function s5(t,i){if(PI(t,111551)){let o=Uc(t);fm(t,!0)&1160127&&yG(t)}}function yG(t){let i=jt(t);if(!i.referenced&&(i.referenced=!0,!pm(t)))return w.fail()}function o5(t){let i=_a(t);i&&i!==hn&&i!==Di&&s5(i,t)}function j6(t,i,o,c){if(!(t.flags&33554432))switch(i){case 1:return o5(t);case 2:return a5(t,o,c);case 0:{if(Tt(t)&&(ep(t)||vp(t.parent))&&i5(t)){if(GS(t.parent)&&(Ii(t.parent)?t.parent.expression:t.parent.left)!==t)return;o5(t);return}if(GS(t)){let f=t;for(;GS(f);)f=f.parent;return a5(t)}tu(t);return}default:w.assertNever(i,`Unhandled reference hint: ${i}`)}}function a5(t,i,o){let c=Ii(t)?t.expression:t.left;if(!Tt(c))return;let f=_a(c);if(!f||f===Di)return;let p=o||Fo(c);if(qo(p)||p===or){s5(f,t);return}let m=i;if(!m&&!o){let S=Ii(t)?t.name:t.right,I=!1,F=Hf(t),U=Uo(F!==0?rc(p):p);m=ni(U,S.text)}}function rc(t){return W6(t,void 0)}function c5(t,i,o){return{parent:t,propertyName:i,siblings:o,resolvedProperties:void 0}}function l5(t){if(!t.siblings){let i=[];for(let o of l5(t.parent))if(Fc(o)){let c=vu(o,t.propertyName);c&&t_(Ln(c),f=>{i.push(f)})}t.siblings=i}return t.siblings}function B6(t){if(!t.resolvedProperties){let i=bi();for(let o of t.types){for(let c of oo(o))if(!i.has(c.name)){let f=yu(t,c.name,!!(t.flags&2097152));f&&i.set(c.name,f)}if(t.flags&1048576&&So(o).length===0)break}t.resolvedProperties=o1(i)}return t.resolvedProperties}function oo(t){return t=xd(t),t.flags&3145728?B6(t):Cu(t)??Oe}function vG(t){if(!t.resolvedProperties){let i=new Map;for(let o of l5(t))if(Fc(o)&&!($t(o)&2097152))for(let c of oo(o))i.set(c.name,c);t.resolvedProperties=as(i.values())}return t.resolvedProperties}function TG(t,i){if(!(t.flags&4))return t;let o=Ln(t),c=i&&c5(i,t.name,void 0),f=W6(o,c);return f===o?t:xp(t,f)}function SG(t){let i=$i.get(t.name);if(i)return i;let o=xp(t,vo);return o.flags|=16777216,$i.set(t.name,o),o}function bG(t,i){let o=bi();for(let f of Cu(t))o.set(f.name,TG(f,i));if(i)for(let f of vG(i))o.has(f.name)||o.set(f.name,SG(f));let c=wa(t.symbol,o,Oe,Oe,xo(So(t),f=>jf(f.keyType,rc(f.type),f.isReadonly)));return c.objectFlags|=$t(t)&266240,c}function jf(t,i,o,c){return{keyType:t,type:i,isReadonly:o,declaration:c}}function W6(t,i){if($t(t)&196608){if(i===void 0&&t.widened)return t.widened;let o;if(t.flags&98305)o=Cn;else if(Fc(t))o=bG(t,i);else if(t.flags&1048576){let c=i||c5(void 0,void 0,t.types),f=xo(t.types,p=>p.flags&98304?p:W6(p,c));o=vn(f,kt(f,$f)?2:1)}else t.flags&2097152?o=yi(xo(t.types,rc)):bu(t)&&(o=Od(t.target,xo(fs(t),rc)));return o&&i===void 0&&(t.widened=o),o||t}return t}function Fo(t,i){if(i)return Lr(t,i);let o=Tn(t);if(!o.resolvedType){let c=Ie,f=bn;Ie=Te,bn=void 0,o.resolvedType=Lr(t,i),bn=f,Ie=c}return w.assertIsDefined(o.resolvedType),o.resolvedType}function kG(t,i,o){let c=Ln(t,o),f=t.valueDeclaration;if(f){if(ms(f)&&!f.initializer&&!f.dotDotDotToken&&f.parent.elements.length>=2){let p=f.parent.parent;p.kind===149&&console.log("TODO - getNarrowedTypeOfSymbol")}if(gs(f)&&!f.type&&!f.initializer&&!f.dotDotDotToken){let p=f.parent;if(p.parameters?.length>=2&&e6(p)){let m=Rg(p);if(m&&m.parameters.length===1&&$a(m)){let S=xd(zn(Ln(m.parameters[0]),im(p)?.nonFixingMapper));console.debug("todo - getNarrowedTypeOfSymbol")}}}}return c}function _l(t){return t.flags&128?mr:t.flags&256?co:t.flags&2048?br:t.flags&1048576?EG(t):t}function zs(t){return t.id}function aS(t){return t?Xi.get(t):void 0}function cS(t,i){return t&&Xi.set(t,i),i}function ma(t){let i="";if(t){let o=t.length,c=0;for(;c<o;){w.assertIsDefined(t[c]);let f=t[c].id,p=1;for(;c+p<o&&t[c+p].id===f+p;)p++;i.length&&(i+=","),i+=f,p>1&&(i+=":"+p),c+=p}}return i}function $d(t,i){return t?`@${Yi(t)}`+(i?`:${ma(i)}`:""):""}function vn(t,i=1,o,c,f){if(t.length===0)return Bn;if(t.length===1)return t[0];if(t.length===2&&!f&&(t[0].flags&1048576||t[1].flags&1048576)){let p=i===0?"N":i===2?"S":"L",m=t[0].id<t[1].id?0:1,S=t[m].id+p+t[1-m].id+$d(o,c),I=Yn.get(S);return I||(I=p5(t,i,o,c,void 0),Yn.set(S,I)),I}return p5(t,i,o,c,f)}function u5(t,i,o){let c;for(let f of o)f!==c&&(i=f.flags&1048576?u5(t,i|(CG(f)?1048576:0),f.types):PG(t,i,f),c=f);return i}function CG(t){return!!(t.flags&1048576&&(t.aliasSymbol||t.origin))}function PG(t,i,o){let c=o.flags;if(!(c&131072))if(i|=c&473694143,c&465829888&&(i|=33554432),c&2097152&&$t(o)&67108864&&(i|=536870912),o===Ts&&(i|=8388608),Ws(o)&&(i|=1073741824),!G&&c&98304)$t(o)&65536||(i|=4194304);else{let f=t.length,p=f&&o.id>t[f-1].id?~f:up(t,o,zs,vs);p<0&&t.splice(~p,0,o)}return i}function xG(t,i,o){let c=t.length;for(;c>0;){c--;let f=t[c],p=f.flags;(p&402653312&&i&4||p&256&&i&8||p&2048&&i&64||p&8192&&i&4096||o&&p&32768&&i&16384||Wp(f)&&mc(t,f.regularType))&&Qp(t,c)}}function zo(t){if($t(t)&32){let i=zc(t);if(Xg(i))return!0;let o=ol(t);if(o&&Xg(zn(o,tf(ec(t),i))))return!0}return!1}function DG(t,i){if(t.length<2)return t;let o=ma(t),c=Wl.get(o);if(c)return c;let f=i&&kt(t,I=>!!(I.flags&524288)&&!zo(I)&&$6(fl(I))),p=t.length,m=p,S=0;for(;m>0;){m--;let I=t[m];if(f||I.flags&469499904){if(I.flags&262144&&Lf(I).flags&1048576){ml(I,vn(Xt(t,Q=>Q===I?Bn:Q)),Wo)&&Qp(t,m);continue}let F=I.flags&61603840?Zr(oo(I),Q=>mt(Ln(Q))):void 0,U=F&&Js(Ln(F));for(let Q of t)if(I!==Q){if(S===1e5&&S/(p-m)*p>1e6){Dt?.instant(Dt.Phase.CheckTypes,"removeSubtypes_DepthLimit",{typeIds:t.map(ae=>ae.id)}),at(E,P.Expression_produces_a_union_type_that_is_too_complex_to_represent);return}if(S++,F&&Q.flags&61603840){let ne=nc(Q,F.name);if(ne&&mt(ne)&&Js(ne)!==U)continue}if(ml(I,Q,Wo)&&(!($t(hS(I))&1)||!($t(hS(Q))&1)||Vf(I,Q))){Qp(t,m);break}}}}return Wl.set(o,t),t}function f5(t,i){for(let o of i)if(o.flags&1048576){let c=o.origin;o.aliasSymbol||c&&!(c.flags&1048576)?Tl(t,o):c&&c.flags&1048576&&f5(t,c.types)}}function p5(t,i,o,c,f){let p=[],m=u5(p,0,t);if(i!==0){if(m&3)return m&1?m&8388608?Ts:m&1073741824?At:Cn:yr;if(m&32768&&p.length>=2&&p[0]===Zn&&p[1]===Jn&&Qp(p,1),(m&402656160||m&16384&&m&32768)&&xG(p,m,!!(i&2)),m&536870912&&wz(p),i===2&&(p=DG(p,!!(m&524288)),!p))return At;if(p.length===0)return m&65536?m&4194304?pe:tl:m&32768?m&4194304?Zn:O:Bn}if(!f&&m&1048576){let I=[];f5(I,t);let F=[];for(let Q of p)kt(I,ne=>mc(ne.types,Q))||F.push(Q);if(!o&&I.length===1&&F.length===0)return I[0];if(Tc(I,(Q,ne)=>Q+ne.types.length,0)+F.length===p.length){for(let Q of I)d1(F,Q);f=Hn(1048576,F)}}let S=(m&36323331?0:32768)|(m&2097152?16777216:0);return wp(p,S,o,c,f)}function d1(t,i){let o=up(t,i,zs,vs);return o<0?(t.splice(~o,0,i),!0):!1}function Zs(t,i,o){if(t.flags&131072)return t;if(!(t.flags&1048576))return i(t);let c=t.origin,f=c&&c.flags&1048576?c.types:t.types,p,m=!1;for(let S of f){let I=S.flags&1048576?Zs(S,i,o):i(S);m||(m=S!==I),I&&(p?p.push(I):p=[I])}return m?p&&vn(p,o?0:1):t}function EG(t){let i=`B${zs(t)}`;return aS(i)??cS(i,Zs(t,_l))}function U6(t,i,o){return mm(t)&&(t=t.baseType),!(o&&o&2)&&Zl(t,d5)&&(NG(t,i)||wG(i,o))?Zs(t,Lf):t}function d5(t){return t.flags&2097152?kt(t.types,d5):!!(t.flags&465829888&&Lf(t).flags&1146880)}function wG(t,i){let o=(Tt(t)||Ii(t)||Ha(t))&&(i&&i&32?Mc(t,8):Mc(t,void 0));return o&&!am(o)}function NG(t,i){let o=i.parent;return o.kind===286||o.kind===146||o.kind===272&&o.expression===i||o.kind===276&&o.expression===i||o.kind===281&&o.expression===i&&!(Zl(t,_5)&&Xg(Co(o.argumentExpression)))}function _5(t){return t.flags&2097152?kt(t.types,_5):!!(t.flags&465829888&&!Ki(Lf(t),98304))}function _1(t){return Xn(t.parent,i=>Qi(i)&&!Yp(i)||i.kind===176||i.kind===152)}function Bp(t,i){return Yl(Lr(t,i),t)}function m5(t){for(;t.parent.kind===289;)t=t.parent;return op(t.parent)&&t.parent.expression===t}function g5(t,i){let o=Bp(t.left);return J6(t,t.left,o,t.right,i)}function J6(t,i,o,c,f,p){let m=Tn(i).resolvedSymbol,S=Hf(t),I=o;o=Y===1&&Ys(o)?G0(o):o;let F=Uo(S!==0||m5(t)?rc(o):o),U=qo(F)||F===or,Q;if(U)return Tt(i)&&m&&j6(t,2,void 0,o),Ws(F)?At:F;if(Q=ni(F,c.text,!1,t.kind===146),!Q&&pR(i)){let ae=o.symbol;Q=hr(qs(ae.declarations),c.text,16,void 0,!1,!0),Q&&(Q.declarations.some(Ge=>(J(Ge)&2)===0)||(Q=void 0))}j6(t,2,Q,o);let ne;if(Q){let ae=GI(Q,c);f1(ae)&&F6(t,ae)&&ae.declarations&&Hg(c,ae.declarations,c.text),l6(Q,t,rI(i,m)),Tn(t).resolvedSymbol=Q,tI(t,i.kind===71,ey(t),F,Q),ne=p||YS(t)?Ed(Q):Ln(Q)}else{let ae=!Cc(c)&&S===0?Cf(F,c.text):void 0;if(!(ae&&ae.type))return Lg(o)?Cn:(c.text&&!AG(t)&&IG(c,o,!1),At);ae.isReadonly&&wu(t)&&at(t,P.Index_signature_in_type_0_only_permits_reading,rn(F)),ne=ae.type,ae.declaration&&$g(ae.declaration)&&Hg(c,[ae.declaration],c.text)}return eI(t,Q,ne,c,f)}function IG(t,i,o){let c,f;if(!Cc(t)&&i.flags&1048576&&!(i.flags&402784188)){for(let F of i.types)if(!ni(F,t.text)&&!Cf(F,t.text)){c=pi(c,P.Property_0_does_not_exist_on_type_1,sa(t),rn(F));break}}let p=sa(t),m=rn(i),S=R5(t,i);if(S!==void 0){let F=ya(S),U=o?P.Property_0_may_not_exist_on_type_1_Did_you_mean_2:P.Property_0_does_not_exist_on_type_1_Did_you_mean_2;c=pi(c,U,p,m,F),f=S.valueDeclaration&&fi(S.valueDeclaration,P._0_is_declared_here,F)}else{let F=P.Property_0_does_not_exist_on_type_1;c=pi(h5(c,i),F,p,m)}let I=s_(kc(t,!1),t,c);f&&Rs(I,f),sS(!o||c.code!==P.Property_0_may_not_exist_on_type_1_Did_you_mean_2.code,I)}function h5(t,i){return i.flags&2097152&&$t(i)&33554432&&w.fail("never intersection"),t}function AG(t){let i=y5(t);return!1}function y5(t){switch(t.kind){case 89:case 286:return t.parent?y5(t.parent):void 0;default:return}}function OG(t,i){return G&&i.kind===149&&i.initializer&&pl(t,16777216)&&!LG(i)?gl(t,524288):t}function LG(t){let i=Tn(t);if(i.parameterInitializerContainsUndefined===void 0){if(!If(t,8))return p1(t.symbol),!0;let o=!!pl(Mg(t,0),16777216);if(!Nf())return p1(t.symbol),!0;i.parameterInitializerContainsUndefined??(i.parameterInitializerContainsUndefined=o)}return i.parameterInitializerContainsUndefined}function v5(t,i,o){let c=_a(t,o);if(c===Di)return At;if(KI(t,c),c===hn)return rG(t)?At:Ln(c);i5(t)&&j6(t,1);let f=qd(c),p=f.valueDeclaration,m=kG(f,t,i),S=Hf(t);if(S&&!(f.flags&3)){let Rt=f.flags&16?P.Cannot_assign_to_0_because_it_is_a_function:P.Cannot_assign_to_0_because_it_is_not_a_variable;return at(t,Rt,wi(c)),At}let I=f.flags&2097152;if(f.flags&3){if(S===1)return wP(t)?_l(m):m}else if(I)p=pm(c);else return m;if(!p)return m;m=U6(m,t,i);let F=p.kind===149,U=_1(p),Q=_1(t),ne=Q!==U,ae=c.flags&134217728,Ge=m===ls||m===vr;for(;Q!==U&&(Q.kind===270||Q.kind===283||v8(Q))&&(m!==vr||h4(f)&&l3(f,t));)Q=_1(Q);let nt=F||I||ne||ae||FG(t,p)||m!==ls&&m!==vr&&(!G||(m.flags&16387)!==0)||p.flags&33554432,wt=nt?F?OG(m,p):m:Ge?Zn:Of(m),ht=qp(t,m,wt,Q);if(!Q5(t)&&(m===ls||m===vr)){if(ht===ls||ht===vr)return lS(ht)}else if(!nt&&!m1(m)&&m1(ht))return at(t,P.Variable_0_is_used_before_being_assigned,wi(c)),m;return S?_l(ht):ht}function m1(t){return!!((t.flags&1048576?t.types[0]:t).flags&32768)}function lS(t){return t===ls?Cn:t===vr?Ci:t}function FG(t,i){if(ms(i)){let o=Xn(t,ms);return o&&o===i}}function T5(t){let{parent:i}=t;return i.kind===289||i.kind===269&&i.operatorToken.kind===74&&i.left===t||i.kind===269&&i.operatorToken.kind===27&&i.right===t?T5(i):t}function Wp(t){return!!(t.flags&2976)&&t.freshType===t}function Qg(t,i,o,c){let f=t.flags,p=i.flags;return p&1||f&131072||p&2&&!(o===Wo&&f&1)?!0:p&131072?!1:!!(f&256&&t.value===0||f&402653316&&p&4||f&2344&&p&8||f&528&&p&16||f&528&&p&8||f&4096&&p&4096||f&8192&&p&4096||f&32768&&(!G&&!(p&3145728)||p&49152)||f&65536&&(!G&&!(p&3145728)||p&65536)||f&524288&&p&67108864&&!(o===Wo&&Jc(t)&&!($t(t)&8192))||f&524288&&t.symbol?.flags&16&&t.symbol?.name==="__function"&&p&524288&&i===Mr||(o===ua||o===io)&&(f&1||jG(i)))}function Du(t){return t?.flags&6256?k5(t,"resolvedMembers"):t?.members||j}function S5(t,i,o,c){i&&i.forEach((f,p)=>{if(p==="default")return;let m=t.get(p);if(!m)t.set(p,f),o&&c&&o.set(p,{specifierText:wl(c.moduleSpecifier)});else if(o&&c&&m&&Ud(m)!==Ud(f)){let S=o.get(p);S.exportsWithDuplicate?S.exportsWithDuplicate.push(c):S.exportsWithDuplicate=[c]}})}function RG(t){let i=[],o=new Set;return t=A6(t),{exports:f(t)||j,undefined:void 0};function f(p,m){if(!m&&p?.exports&&p.exports.forEach((F,U)=>o.add(U)),!(p&&p.exports&&Tl(i,p)))return;let S=new Map(p.exports),I=p.exports.get("__export");if(I){let F=bi(),U=new Map;if(I.declarations)for(let Q of I.declarations){let ne=Vd(Q,Q.moduleSpecifier,void 0),ae=f(ne,m||Q.isTypeOnly);S5(F,ae,U,Q)}U.forEach(({exportsWithDuplicate:Q},ne)=>{if(!(ne==="export="||!(Q&&Q.length)||S.has(ne)))for(let ae of Q)Vn.add(fi(ae,P.Module_0_has_already_exported_a_member_named_1_Consider_explicitly_re_exporting_to_resolve_the_ambiguity,U.get(ne).specifierText,ne))}),S5(S,F)}return S}}function b5(t){return(t.valueDeclaration?.kind===283||t.valueDeclaration?.kind===270)&&qf(t.valueDeclaration.parent)||t}function z6(t,i=Oa(t)){if(i===4)return!0;if(!Nr(t)||i!==5||!Tt(t.left.expression))return!1;let o=t.left.expression.text,c=hr(t.left,o,111551,void 0,!0,!0);return DF(c?.valueDeclaration)}function V6(t){let i=hi(t);return!!i&&q6(i)}function k5(t,i){let o=jt(t);if(!o[i]){let c=t.flags&1536?t.exports:t.members;o[i]=c||j;let f=bi();for(let S of t.declarations||Oe){let I=xF(S);if(I)for(let F of I)V6(F)&&C5(t,c,f,F)}let p=b5(t).assignmentDeclarationMembers;if(p){let S=as(p.values());for(let I of S){let F=Oa(I);F===3||Ur(I)&&z6(I,F)||F===9||F===6||V6(I)&&C5(t,c,f,I)}}let m=MG(c,f);if(t.flags&33554432&&o.cjsExportMerged&&t.declarations)for(let S of t.declarations){let I=jt(S.symbol)[i];if(!m){m=I;continue}I&&I.forEach((F,U)=>{let Q=m.get(U);if(!Q)m.set(U,F);else{if(Q===F)return;m.set(U,Fe(Q,F))}})}o[i]=m||j}return o[i]}function C5(t,i,o,c){w.assert(!!c.symbol,"The member is expected to have a symbol.");let f=Tn(c);if(!f.resolvedSymbol){f.resolvedSymbol=c.symbol;let p=Ur(c)?c.left:c.name,m=Ha(p)?Fo(p.argumentExpression):uS(p);if(Qf(m)){let S=Gf(m),I=c.symbol.flags,F=o.get(S);F||o.set(S,F=es(0,S,4096));let U=i&&i.get(S);if(!(t.flags&32)&&F.flags&Oo(I)){let Q=U?ri(U.declarations,F.declarations):F.declarations,ne=S||sa(p);Jt(Q,ae=>at(hi(ae)||ae,P.Property_0_was_also_declared_here,ne)),at(p||c,P.Duplicate_property_0,ne),F=es(0,S,4096)}return F.links.nameType=m,P5(F,c,I),F.parent?w.assert(F.parent===t,"Existing symbol parent should match new one"):F.parent=t,f.resolvedSymbol=F}}return f.resolvedSymbol}function P5(t,i,o){w.assert(!!(Es(t)&4096),"Expected a late-bound symbol."),t.flags|=o,jt(i.symbol).lateSymbol=t,t.declarations?i.symbol.isReplaceableByMethod||t.declarations.push(i):t.declarations=[i],o&111551&&(!t.valueDeclaration||t.valueDeclaration.kind!==i.kind)&&(t.valueDeclaration=i)}function q6(t){if(!Ia(t)&&!Ha(t))return!1;let i=Ia(t)?t.expression:t.argumentExpression;return va(i)&&Qf(Ia(t)?uS(t):Fo(i))}function uS(t){let i=Tn(t.expression);if(!i.resolvedType){if((ap(t.parent.parent)||ho(t.parent.parent))&&Ur(t.expression)&&t.expression.operatorToken.kind===103)return i.resolvedType=At;if(i.resolvedType=Lr(t.expression),Cl(t.parent)&&Sk(t.parent.parent)){let o=Rm(t.parent.parent),c=e5(o);c&&(Tn(c).flags|=4096,Tn(t).flags|=32768,Tn(t.parent.parent).flags|=32768)}(i.resolvedType.flags&98304||!Vo(i.resolvedType,402655660)&&!Si(i.resolvedType,nr))&&at(t,P.A_computed_property_name_must_be_of_type_string_number_symbol_or_any)}return i.resolvedType}function MG(t,i){if(!t?.size)return i;if(!i?.size)return t;let o=bi();return Vl(o,t),Vl(o,i),o}function Jc(t){return!!($t(t)&16&&(t.members&&$6(t)||t.symbol&&t.symbol.flags&2048&&Du(t.symbol).size===0))}function $6(t){return t!==mi&&(t.properties?.length||0)===0&&(t.callSignatures?.length||0)===0&&(t.constructSignatures?.length||0)===0&&(t.indexInfos?.length||0)===0}function jG(t){if(G&&t.flags&1048576){if(!(t.objectFlags&33554432)){let i=t.types;t.objectFlags|=33554432|(i.length>=3&&i[0].flags&32768&&i[1].flags&65536&&kt(i,Jc)?67108864:0)}return!!(t.objectFlags&67108864)}return!1}function ml(t,i,o){if(Wp(t)&&(t=t.regularType),Wp(i)&&(i=i.regularType),t===i||t.flags&256&&t.value===0)return!0;if(o!==lo){if(o===io&&!(i.flags&131072)&&Qg(i,t,o)||Qg(t,i,o))return!0}else if(!((t.flags|i.flags)&61865984)){if(t.flags!==i.flags)return!1;if(t.flags&67358815)return!0}if(t.flags&524288&&i.flags&524288){let c=o.get(_S(t,i,0,o,!1));if(c!==void 0)return!!(c&1)}if(t.flags&469499904||i.flags&469499904){let c=Jp(t,i,o,void 0);return x5(t,i)&&!c&&t.flags&524288&&i.flags&524288?!0:c}return!1}function x5(t,i){return!be&&!(D5(t)&&D5(i))}function D5(t){return t?.symbol?.flags&8388608}function H6(t){if(t.flags&16)return!1;if(t.flags&3145728)return!!Jt(t.types,H6);if(t.flags&465829888){let i=Bf(t);if(i&&i!==t)return H6(i)}return mt(t)||!!(t.flags&134217728)||!!(t.flags&268435456)}function Bf(t){return t.flags&262144?ga(t):t.flags&8388608?WG(t):t.flags&16777216?BG(t):Ls(t)}function BG(t){return fS(t)?w5(t):void 0}function WG(t){return fS(t)?UG(t):void 0}function fS(t){return Z6(t)!==Pa}function UG(t){if(a4(t))return Y6(t.objectType,t.indexType);let i=G6(t.indexType);if(i&&i!==t.indexType){let c=Ad(t.objectType,i,t.accessFlags);if(c)return c}let o=G6(t.objectType);if(o&&o!==t.objectType)return Ad(o,t.indexType,t.accessFlags)}function G6(t){let i=Vc(t,!1);return i!==t?i:Bf(t)}function Q6(t){if(t.flags&524288&&!E4(t)){if($t(t)&4&&t.node)return t.node;if(t.symbol&&!($t(t)&16&&t.symbol.flags&32))return t.symbol;if(vi(t))return t.target}if(t.flags&262144)return t.symbol;if(t.flags&8388608){do t=t.objectType;while(t.flags&8388608);return t}return t.flags&16777216?t.root:t}function Y6(t,i){let o=Jo([ec(t)],[i]),c=wf(t.mapper,o),f=zn(sm(t.target||t),c),p=H5(t)>0||(am(t)?gm(v1(t))>0:JG(t,i));return Wc(f,!0,p)}function JG(t,i){let o=Ls(i);return!!o&&kt(oo(t),c=>!!(c.flags&16777216)&&Si(J0(c,384),o))}function Z6(t){if(t.resolvedBaseConstraint)return t.resolvedBaseConstraint;let i=[];return t.resolvedBaseConstraint=o(t);function o(p){if(!p.immediateBaseConstraint){if(!If(p,4))return Pa;let m,S=Q6(p);if((i.length<10||i.length<50&&!ki(i,S))&&(i.push(S),m=f(Vc(p,!1)),i.pop()),!Nf()){if(p.flags&262144){let I=$C(p);if(I){let F=at(I,P.Type_parameter_0_has_a_circular_constraint,rn(p));E&&!iy(I,E)&&!iy(E,I)&&Rs(F,fi(E,P.Circularity_originates_in_type_at_this_location))}}m=Pa}p.immediateBaseConstraint??(p.immediateBaseConstraint=m||Wa)}return p.immediateBaseConstraint}function c(p){let m=o(p);return m!==Wa&&m!==Pa?m:void 0}function f(p){if(p.flags&262144){let m=zg(p);return p.isThisType||!m?m:c(m)}if(p.flags&3145728){let m=p.types,S=[],I=!1;for(let F of m){let U=c(F);U?(U!==F&&(I=!0),S.push(U)):I=!0}return I?p.flags&1048576&&S.length===m.length?vn(S):p.flags&2097152&&S.length?yi(S):void 0:p}if(p.flags&4194304)return nr;if(p.flags&268435456){let m=c(p.type);return m&&m!==p.type?U5(p.symbol,m):mr}if(p.flags&8388608){if(a4(p))return c(Y6(p.objectType,p.indexType));let m=c(p.objectType),S=c(p.indexType),I=m&&S&&Ad(m,S,p.accessFlags);return I&&c(I)}if(p.flags&16777216){let m=w5(p);return m&&c(m)}if(p.flags&33554432)return c(u4(p));if(Wf(p)){let m=Xt(Qd(p),(S,I)=>{let F=S.flags&262144&&p.target.elementFlags[I]&8&&c(S)||S;return F!==S&&qa(F,U=>bu(U)&&!Wf(U))?F:S});return Eu(m,p.target.elementFlags,p.target.readonly,p.target.labeledElementDeclarations)}return p}}function zG(t){if(t.resolvedConstraintOfDistributive!==void 0)return t.resolvedConstraintOfDistributive||void 0;if(t.root.isDistributive&&t.restrictiveInstantiation!==t){let i=Vc(t.checkType,!1),o=i===t.checkType?Bf(i):i;if(o&&o!==t.checkType){let c=gN(t,Rd(t.root.checkType,o,t.mapper),!0);if(!(c.flags&131072))return t.resolvedConstraintOfDistributive=c,c}}t.resolvedConstraintOfDistributive=!1}function Hd(t){return t.resolvedTrueType||(t.resolvedTrueType=zn(jn(t.root.node.trueType),t.mapper))}function VG(t){return t.resolvedInferredTrueType||(t.resolvedInferredTrueType=t.combinedMapper?zn(jn(t.root.node.trueType),t.combinedMapper):Hd(t))}function Gd(t){return t.resolvedFalseType||(t.resolvedFalseType=zn(jn(t.root.node.falseType),t.mapper))}function E5(t){if(!t.resolvedDefaultConstraint){let i=VG(t),o=Gd(t);t.resolvedDefaultConstraint=qo(i)?o:qo(o)?i:vn([i,o])}return t.resolvedDefaultConstraint}function w5(t){return zG(t)||E5(t)}function qG(t,i){let o=i.types.filter(c=>!!(c.flags&128));return Uh(t.value,o,c=>c.value)}function X6(t){if(!($t(t)&4)||!($t(t.target)&3))return;if($t(t)&33554432)return $t(t)&67108864?t.cachedEquivalentBaseType:void 0;t.objectFlags|=33554432;let i=t.target;if($t(i)&1){let f=Pd(i);if(f&&f.expression.kind!==89&&f.expression.kind!==286)return}let o=$u(i);if(o.length!==1||Du(t.symbol).size)return;let c=Pr(i.typeParameters)?zn(o[0],Jo(i.typeParameters,fs(t).slice(0,i.typeParameters.length))):o[0];return Pr(fs(t))>Pr(i.typeParameters)&&console.debug("todo - implement this - typeref"),t.objectFlags|=67108864,t.cachedEquivalentBaseType=c}function K6(t){if(t.flags&524288){let i=fl(t);return i.callSignatures?.length===0&&i.constructSignatures.length===0&&i.indexInfos.length===0&&i.properties.length>0&&Ti(i.properties,o=>!!(o.flags&16777216))}return t.flags&33554432?K6(t.baseType):t.flags&2097152?Ti(t.types,K6):!1}function e4(t){return Oi(t,0).length!==0||Oi(t,1).length!==0}function $G(t,i,o){for(let c of oo(t))if(t4(i,c.name,o))return!0;return!1}function t4(t,i,o){if(t.flags&524288&&(vu(t,i)||Cf(t,i)||K_(i)&&Lc(t,mr)))return!0;if(t.flags&3145728&&Yg(t)){for(let c of t.types)if(t4(c,i,o))return!0}return!1}function Yg(t){return!!(t.flags&524288&&!($t(t)&512)||t.flags&67108864||t.flags&33554432&&Yg(t.baseType)||t.flags&1048576&&kt(t.types,Yg)||t.flags&2097152&&Ti(t.types,Yg))}function Zg(t,i){return Us(t,o=>(o.flags&i)!==0)}function N5(t,i){let o=yS(t),c=o&&nc(i,o);return c&&vS(t,c)}function HG(t,i){let o=bi();for(let c of Cu(t)){let f=Ln(c),p=i(f);o.set(c.name,p===f?c:xp(c,p))}return o}function g1(t){if(!(Fc(t)&&$t(t)&8192))return t;let i=t.regularType;if(i)return i;let o=t,c=HG(t,g1),f=wa(o.symbol,c,o.callSignatures,o.constructSignatures,o.indexInfos);return f.flags=o.flags,f.objectFlags|=o.objectFlags&-8193,t.regularType=f,f}function GG(t,i){if(t.flags&1048576){for(let o of t.types)if(!mc(i.types,o))return!1;return!0}return mc(i.types,t)}function dm(t,i){return!!(t===i||t.flags&131072||i.flags&1048576&&GG(t,i))}function I5(t,i){if(t&&t.flags&1048576){let o=Bs(t,i);if(o&&Es(o)&2)return o.links.isDiscriminantProperty===void 0&&(o.links.isDiscriminantProperty=(o.links.checkFlags&192)===192&&!am(Ln(o))),!!o.links.isDiscriminantProperty}return!1}function A5(t,i){let o;for(let c of t)if(I5(i,c.name)){if(o){o.push(c);continue}o=[c]}return o}function O5(t,i){let o;return nc(t,i)||(o=Cf(t,i)?.type)&&Wc(o,!0,!0)}function QG(t,i,o){let c=t.types,f=c.map(m=>m.flags&402784188?0:-1);for(let[m,S]of i){let I=!1;for(let F=0;F<c.length;F++)if(f[F]){let U=O5(c[F],S);U&&Zl(m(),Q=>!!o(Q,U))?I=!0:f[F]=3}for(let F=0;F<c.length;F++)f[F]===3&&(f[F]=I?0:-1)}let p=ki(f,0)?vn(c.filter((m,S)=>f[S]),0):t;return p.flags&131072?t:p}function L5(t,i,o){if(i.flags&1048576&&t.flags&2621440){let c=N5(i,t);if(c)return c;let f=oo(t);if(f){let p=A5(f,i);if(p){let m=QG(i,Xt(p,S=>[()=>Ln(S),S.name]),o);if(m!==i)return m}}}}function YG(t){if(Ki(t,67108864)){let i=Us(t,o=>!(o.flags&402784188));if(!(i.flags&131072))return i}return t}function ZG(t,i,o,c,f){return qo(c)?!0:nI(t,i,o,c,f)}function F5(t,i,o){return ZG(t,t.kind===286&&t.expression.kind===71,!1,i,o)}function R5(t,i){let o=oo(i)??Oe;if(typeof t!="string"){let c=t.parent;Ii(c)&&(o=Yr(o,f=>F5(c,i,f))),t=go(t)}return qI(t,o,111551)}function M5(t,i){let o=R5(t,i);return o&&ya(o)}function j5(t){let i;for(;($t(t)&96)===96&&(i=v1(t))&&(i.symbol||i.flags&2097152&&kt(i.types,o=>!!o.symbol));)t=i;return t}function B5(t,i){return($t(t)&96)===96&&(t=j5(t)),t.flags&2097152?kt(t.types,o=>B5(o,i)):Q6(t)===i}function _m(t,i,o,c=3){if(o>=c){if(($t(t)&96)===96&&(t=j5(t)),t.flags&2097152)return kt(t.types,S=>_m(S,i,o,c));let f=Q6(t),p=0,m=0;for(let S=0;S<o;S++){let I=i[S];if(B5(I,f)){if(I.id>=m&&(p++,p>=c))return!0;m=I.id}}}return!1}function XG(t,i){let o=dc(t);if(o!==t)return o;if(t.flags&2097152&&KG(t)){let c=xo(t.types,f=>T1(f,i));if(c!==t.types)return yi(c)}return t}function KG(t){let i=!1,o=!1;for(let c of t.types)if(i||(i=!!(c.flags&465829888)),o||(o=!!(c.flags&98304)||Jc(c)),i&&o)return!0;return!1}function W5(t,i){let o=`${zs(t)}>${zs(i)}`,c=us.get(o);if(c)return c;let f=wn(33554432);return f.baseType=t,f.constraint=i,us.set(o,f),f}function n4(t){return r4(t)?W5(t,yr):t}function r4(t){return!!(t.flags&3145728&&kt(t.types,r4)||t.flags&33554432&&!mm(t)&&r4(t.baseType)||t.flags&524288&&!Jc(t)||t.flags&432275456)}function mm(t){return!!(t.flags&33554432&&t.constraint.flags&2)}function U5(t,i){w.fail("not implemented - getStringMappingType")}function i4(t,i,o,c){let f=bo(t);if(f===Zo){let F=ote.get(t.name);if(F!==void 0&&i&&i.length===1)return F===4?n4(i[0]):U5(t,i[0])}let p=jt(t),m=p.typeParameters,S=ma(i)+$d(o,c),I=p.instantiations.get(S);return I||p.instantiations.set(S,I=cN(f,Jo(m,Lp(i,m,ku(m),Nr(t.valueDeclaration))),o,c)),I}function h1(t,i,o){let c=tf(i,o),f=bo(t);if(Ws(f))return f;let p=t.flags&524288?i4(t,Bc(jt(t).typeParameters,c)):Od(f,Bc(f.typeParameters,c));return Cp.add(zs(p)),p}function pS(t){return Cp.has(zs(t))}function eQ(t,i){let o,c=!1;for(let f of t)if(f.flags&465829888){let p=Bf(f);for(;p&&p.flags&21233664;)p=Bf(p);p&&(o=ei(o,p),i&&(o=ei(o,f)))}else(f.flags&469892028||Jc(f))&&(c=!0);if(o&&(i||c)){if(c)for(let f of t)(f.flags&469892028||Jc(f))&&(o=ei(o,f));return T1(yi(o,2),!1)}}function tQ(t,i){let o=Pl(t.elementFlags,c=>!(c&i));return o>=0?o:t.elementFlags.length}function y1(t,i){return t.elementFlags.length-Sb(t.elementFlags,o=>!(o&i))-1}function Wf(t){return vi(t)&&!!(t.target.combinedFlags&8)}function*J5(t,i,o,c){let f=oo(i);for(let p of f)if(o||!(p.flags&16777216||Es(p)&48)){let m=ni(t,p.name);if(!m)yield p;else if(c){let S=Ln(p);if(S.flags&101280){let I=Ln(m);I.flags&1||Js(I)===Js(S)||(yield p)}}}}function s4(t,i,o,c){return oL(J5(t,i,o,c))}function o4(t,i){if(Es(t)&6){for(let o of t.links.containingType.types){let c=ni(o,t.name),f=c&&o4(c,i);if(f)return f}return}return i(t)}function nQ(t,i){return o4(t,o=>{let c=K0(o);return c?g4(c,i):!1})}function rQ(t,i){return!o4(i,o=>Sl(o)&4?!nQ(t,K0(o)):!1)}function dS(t){let i=$t(t);return t.flags&2097152?Ti(t.types,dS):!!(t.symbol&&(t.symbol.flags&7040)!==0&&!(t.symbol.flags&32)&&!e4(t))||!!(i&4194304)||!!(i&1024&&dS(t.source))}function z5(t){return!!(t.flags&524288)&&!zo(t)}function V5(t){return Wf(t)&&t.target.elementFlags.length===1}function zc(t){return t.constraintType||(t.constraintType=ga(ec(t))||At)}function q5(t){return vn(ei(aL(t.target.fixedLength,i=>rl(""+i)),ll(t.target.readonly?Ye:V)))}function Xg(t){return!!(Ug(t)&8388608)}function $5(t,i){return t?i?yi([t,i]):t:i}function Up(t,i,o){if($t(t)&4){let c=t.target,f=fs(t);return Pr(c.typeParameters)===Pr(f)?Od(c,ri(f,[i||c.thisType])):t}else if(t.flags&2097152){let c=xo(t.types,f=>Up(f,i,o));return c!==t.types?yi(c):t}return o?Uo(t):t}function a4(t){let i;return!!(t.flags&8388608&&$t(i=t.objectType)&32&&!zo(i)&&Xg(t.indexType)&&!(Et(i)&8)&&!i.declaration.nameType)}function iQ(t){return!!($t(t)&32&&Et(t)&4)}function H5(t){let i=Et(t);return i&8?-1:i&4?1:0}function v1(t){if(!t.modifiersType){let i=Og(t.declaration),o=zc(i),c=o&&o.flags&262144?ga(o):o;t.modifiersType=c&&c.flags&4194304?zn(c.type,t.mapper):yr}return t.modifiersType}function gm(t){if($t(t)&32)return H5(t)||gm(v1(t));if(t.flags&2097152){let i=gm(t.types[0]);return Ti(t.types,(o,c)=>c===0||gm(o)===i)?i:0}return 0}function c4(t){return t===V||t===Ye||t.objectFlags&8?Z:M3(t.symbol,t.typeParameters)}function sQ(t){return t.flags&1048576?t.types.length:1}function oQ(t,i){for(let o=0;o<i.length;o++)if((i[o]&7)===1&&t[o].flags&16384)return!0;return!1}function aQ(t){return B1(t.declaration.typeParameter)}function cQ(t){let i=aQ(t);return console.debug("todo - isMappedTypeWithKeyofConstraintDeclaration"),!1}function lQ(t,i,o,c){for(let f of oo(t))c(J0(f,i));if(t.flags&1)c(mr);else for(let f of So(t))(!o||f.keyType.flags&134217732)&&c(f.keyType)}function Jp(t,i,o,c,f,p,m){let S,I,F,U,Q,ne,ae=0,Ge=0,nt=0,wt=0,ht=!1,Rt=0,Ut=0,It,ln,Pn=16e6-o.size>>3;w.assert(o!==lo||!c,"no error reporting in identity checking");let pr=xe(t,i,3,!!c,f);if(ln&&Br(),ht){let q=_S(t,i,0,o,!1);o.set(q,2|(Pn<=0?32:64)),Dt?.instant(Dt.Phase.CheckTypes,"checkTypeRelatedTo_DepthLimit",{sourceId:t.id,targetId:i.id,depth:Ge,targetDepth:nt});let te=Pn<=0?P.Excessive_complexity_comparing_types_0_and_1:P.Excessive_stack_depth_comparing_types_0_and_1,Pe=at(c||E,te,rn(t),rn(i));m&&(m.errors||(m.errors=[])).push(Pe)}else if(S){if(p){let Pe=p();Pe&&(VF(Pe,S),S=Pe)}let te=s_(kc(c),c,S,void 0);I&&Rs(te,...I),m&&(m.errors||(m.errors=[])).push(te),(!m||!m.skipLogging)&&Vn.add(te)}return c&&m&&m.skipLogging&&pr===0&&w.assert(!!m.errors,"missed opportunity to interact with error."),pr!==0;function Tr(q){S=q.errorInfo,It=q.lastSkippedInfo,ln=q.incompatibleStack,Rt=q.overrideNextErrorInfo,Ut=q.skipParentCounter,I=q.relatedInfo}function rs(){return{errorInfo:S,lastSkippedInfo:It,incompatibleStack:ln?.slice(),overrideNextErrorInfo:Rt,skipParentCounter:Ut,relatedInfo:I?.slice()}}function ji(q,te){if(Dt&&q.flags&3145728&&te.flags&3145728){let Pe=q,We=te;if(Pe.objectFlags&We.objectFlags&32768)return;let vt=Pe.types.length,Ue=We.types.length;vt*Ue>1e6&&Dt.instant(Dt.Phase.CheckTypes,"traceUnionsOrIntersectionsTooLarge_DepthLimit",{sourceId:q.id,sourceSize:vt,targetId:te.id,targetSize:Ue,pos:c?.pos,end:c?.end})}}function Br(){let q=ln||[];ln=void 0;let te=It;if(It=void 0,q.length===1){dr(...q[0]),te&&zi(void 0,...te);return}let Pe="",We=[];for(;q.length;){let[vt,...Ue]=q.pop();switch(vt.code){case P.Types_of_property_0_are_incompatible.code:{Pe.indexOf("new ")===0&&(Pe=`(${Pe})`);let ft=""+Ue[0];Pe.length===0?Pe=`${ft}`:y_(ft,au(oe))?Pe=`${Pe}.${ft}`:ft[0]==="["&&ft[ft.length-1]==="]"?Pe=`${Pe}${ft}`:Pe=`${Pe}[${ft}]`;break}case P.Call_signature_return_types_0_and_1_are_incompatible.code:case P.Call_signatures_with_no_arguments_have_incompatible_return_types_0_and_1.code:{if(Pe.length===0){let ft=vt;vt.code===P.Call_signatures_with_no_arguments_have_incompatible_return_types_0_and_1.code&&(ft=P.Call_signature_return_types_0_and_1_are_incompatible),We.unshift([ft,Ue[0],Ue[1]])}else Pe=`${Pe}()`;break}case P.Type_at_position_0_in_source_is_not_compatible_with_type_at_position_1_in_target.code:{We.unshift([P.Type_at_position_0_in_source_is_not_compatible_with_type_at_position_1_in_target,Ue[0],Ue[1]]);break}case P.Type_at_positions_0_through_1_in_source_is_not_compatible_with_type_at_position_2_in_target.code:{We.unshift([P.Type_at_positions_0_through_1_in_source_is_not_compatible_with_type_at_position_2_in_target,Ue[0],Ue[1],Ue[2]]);break}default:return w.fail(`Unhandled Diagnostic: ${vt.code}`)}}Pe?dr(Pe[Pe.length-1]===")"?P.The_types_returned_by_0_are_incompatible_between_these_types:P.The_types_of_0_are_incompatible_between_these_types,Pe):We.shift();for(let[vt,...Ue]of We){let ft=vt.elidedInCompatabilityPyramid;vt.elidedInCompatabilityPyramid=!1,dr(vt,...Ue),vt.elidedInCompatabilityPyramid=ft}te&&zi(void 0,...te)}function zi(q,te,Pe){ln&&Br();let[We,vt]=T6(te,Pe),Ue=te,ft=We;if(Qu(te)&&!H6(Pe)&&(Ue=_l(te),ft=v6(Ue)),(Pe.flags&8388608&&!(te.flags&8388608)?Pe.objectType.flags:Pe.flags)&262144&&Pe!==Ic&&Pe!==Ul){let Qt=Ls(Pe),Qn;Qt&&(Si(Ue,Qt)||(Qn=Si(te,Qt)))?dr(P._0_is_assignable_to_the_constraint_of_type_1_but_1_could_be_instantiated_with_a_different_subtype_of_constraint_2,Qn?We:ft,vt,rn(Qt)):(S=void 0,dr(P._0_could_be_instantiated_with_an_arbitrary_type_which_could_be_unrelated_to_1,vt,ft))}if(!q)if(o===io)q=P.Type_0_is_not_comparable_to_type_1;else if(We===vt)q=P.Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated;else{if(te.flags&128&&Pe.flags&1048576){let Qt=qG(te,Pe);if(Qt){dr(P.Type_0_is_not_assignable_to_type_1_Did_you_mean_2,ft,vt,rn(Qt));return}}q=P.Type_0_is_not_assignable_to_type_1}dr(q,ft,vt)}function dr(q,...te){w.assert(!!c),ln&&Br(),!q.elidedInCompatabilityPyramid&&(Ut===0?S=pi(S,q,...te):Ut--)}function Po(q,te,Pe){return vi(q)?q.target.readonly&&w1(te)?(Pe&&dr(P.The_type_0_is_readonly_and_cannot_be_assigned_to_the_mutable_type_1,rn(q),rn(te)),!1):bu(te):ym(q)&&w1(te)?(Pe&&dr(P.The_type_0_is_readonly_and_cannot_be_assigned_to_the_mutable_type_1,rn(q),rn(te)),!1):vi(te)?Ys(q):!0}function po(q,te){let Pe=QT(q.symbol)?rn(q,q.symbol.valueDeclaration):rn(q),We=QT(te.symbol)?rn(te,te.symbol.valueDeclaration):rn(te);(Fn===q&&mr===te||cr===q&&co===te||On===q&&br===te)&&dr(P._0_is_a_primitive_but_1_is_a_wrapper_object_Prefer_using_0_when_possible,We,Pe)}function Qe(q,te,Pe,We,vt){let Ue=!!X6(q),ft=!!X6(te);Pe=q.aliasSymbol||Ue?q:Pe,We=te.aliasSymbol||ft?te:We;let Ht=Rt>0;if(Ht&&Rt--,Pe.flags&524288&&We.flags&524288){let Qt=S;Po(Pe,We,!0),S!==Qt&&(Ht=!!S)}if(Pe.flags&524288&&We.flags&402784188?po(Pe,We):Pe.symbol&&Pe.flags&524288&&x===Pe?dr(P.The_Object_type_is_assignable_to_very_few_other_types_Did_you_mean_to_use_the_any_type_instead):S=h5(S,te),!vt&&Ht){let Qt=rs();zi(vt,Pe,We);let Qn;S&&S!==Qt.errorInfo&&(Qn={code:S.code,messageText:S.messageText}),Tr(Qt),Qn&&S&&(S.canonicalHead=Qn),It=[Pe,We];return}if(zi(vt,Pe,We),Pe.flags&262144&&Pe.symbol?.declarations?.[0]&&!Bf(Pe)){let Qt=UC(Pe);if(Qt.constraint=zn(We,tf(Pe,Qt)),fS(Qt)){let Qn=rn(We,Pe.symbol.declarations[0]);_o(fi(Pe.symbol.declarations[0],P.This_type_parameter_might_need_an_extends_0_constraint,Qn))}}}function xe(q,te,Pe=3,We=!1,vt,Ue=0){if(q===te)return-1;if(q.flags&524288&&te.flags&402784188)return o===io&&!(te.flags&131072)&&Qg(te,q,o)||Qg(q,te,o,We?dr:void 0)?-1:(We&&Qe(q,te,q,te,vt),0);let ft=T1(q,!1),Ht=T1(te,!0);if(ft===Ht)return-1;if(o===lo)return ft.flags!==Ht.flags?0:ft.flags&67358815?-1:(ji(ft,Ht),er(ft,Ht,!1,0,Pe));if(ft.flags&262144&&Bf(ft)===Ht)return-1;if(ft.flags&470302652&&Ht.flags&1048576){let Qt=Ht.types,Qn=Qt.length===2&&Qt[0].flags&98304?Qt[1]:Qt.length===3&&Qt[0].flags&98304&&Qt[1].flags&98304?Qt[2]:void 0;if(Qn&&!(Qn.flags&98304)&&(Ht=T1(Qn,!0),ft===Ht))return-1}if(o===io&&!(Ht.flags&131072)&&Qg(Ht,ft,o)||Qg(ft,Ht,o,We?dr:void 0))return-1;if(ft.flags&469499904||Ht.flags&469499904){if(!(Ue&2)&&Fc(ft)&&$t(ft)&8192&&na(ft,Ht,We))return We&&zi(vt,ft,te.aliasSymbol?te:Ht),0;if((o!==io||mt(ft))&&!(Ue&2)&&ft.flags&405405628&&ft!==x&&Ht.flags&2621440&&K6(Ht)&&(oo(ft).length>0||e4(ft))&&!$G(ft,Ht,!1)){if(We){let dn=rn(q.aliasSymbol?q:ft),xn=rn(te.aliasSymbol?te:Ht),Cr=Oi(ft,0),ps=Oi(ft,1);Cr.length>0&&xe(Ei(Cr[0]),Ht,1,!1)||ps.length>0&&xe(Ei(ps[0]),Ht,1,!1)?dr(P.Value_of_type_0_has_no_properties_in_common_with_type_1_Did_you_mean_to_call_it,dn,xn):dr(P.Type_0_has_no_properties_in_common_with_type_1,dn,xn)}return 0}ji(ft,Ht);let qr=ft.flags&1048576&&ft.types.length<4&&!(Ht.flags&1048576)||Ht.flags&1048576&&Ht.types.length<4&&!(ft.flags&469499904)?Er(ft,Ht,We,Ue):er(ft,Ht,We,Ue,Pe);if(qr)return qr}return We&&Qe(q,te,ft,Ht,vt),0}function un(q,te,Pe,We){let vt=q.types;if(q.flags&1048576&&mc(vt,te))return-1;let Ue=vt.length;for(let ft=0;ft<Ue;ft++){let Ht=xe(vt[ft],te,1,Pe&&ft===Ue-1,void 0,We);if(Ht)return Ht}return 0}function Wn(q,te){return q.flags&1048576&&te.flags&1048576&&!(q.types[0].flags&32768)&&te.types[0].flags&32768?Zg(te,-32769):te}function En(q,te,Pe,We){let vt=-1,Ue=q.types,ft=Wn(q,te);for(let Ht=0;Ht<Ue.length;Ht++){let Qt=Ue[Ht];if(ft.flags&1048576&&Ue.length>=ft.types.length&&Ue.length%ft.types.length===0){let lr=xe(Qt,ft.types[Ht%ft.types.length],3,!1,void 0,We);if(lr){vt&=lr;continue}}let Qn=xe(Qt,te,1,Pe,void 0,We);if(!Qn)return 0;vt&=Qn}return vt}function Qr(q,te,Pe,We){let vt=te.types;if(te.flags&1048576){if(mc(vt,q))return-1;if(o!==io&&$t(te)&32768&&!(q.flags&1024)&&(q.flags&2432||(o===Ua||o===Wo)&&q.flags&256)){let ft=q===q.regularType?q.freshType:q.regularType,Ht=q.flags&128?mr:q.flags&256?co:q.flags&2048?br:q.flags&4096?ja:void 0;return Ht&&mc(vt,Ht)||ft&&mc(vt,ft)?-1:0}let Ue=N5(te,q);if(Ue){let ft=xe(q,Ue,2,!1,void 0,We);if(ft)return ft}}for(let Ue of vt){let ft=xe(q,Ue,2,!1,void 0,We);if(ft)return ft}if(Pe){let Ue=uo(q,te,xe);Ue&&xe(q,Ue,2,!0,void 0,We)}return 0}function Er(q,te,Pe,We){if(q.flags&1048576){if(te.flags&1048576){let vt=q.origin;if(vt&&vt.flags&2097152&&te.aliasSymbol&&ki(vt.types,te))return-1;let Ue=te.origin;if(Ue&&Ue.flags&1048576&&q.aliasSymbol&&ki(Ue.types,q))return-1}return o===io?un(q,te,Pe&&!(q.flags&402784188),We):En(q,te,Pe&&!(q.flags&402784188),We)}if(te.flags&1048576)return Qr(g1(q),te,Pe&&!(q.flags&402784188)&&!(te.flags&402784188),We);if(te.flags&2097152)return Ds(q,te,Pe,2);if(o===io&&te.flags&402784188){let vt=xo(q.types,Ue=>Ue.flags&465829888?Ls(Ue)||yr:Ue);if(vt!==q.types){if(q=yi(vt),q.flags&131072)return 0;if(!(q.flags&2097152))return xe(q,te,1,!1)||xe(te,q,1,!1)}}return un(q,te,!1,1)}function Ds(q,te,Pe,We){let vt=-1,Ue=te.types;for(let ft of Ue){let Ht=xe(q,ft,2,Pe,void 0,We);if(!Ht)return 0;vt&=Ht}return vt}function Bi(q,te){return q.valueDeclaration&&te.valueDeclaration&&q.valueDeclaration.parent===te.valueDeclaration}function Ni(q,...te){dr(q,...te),Ut++}function na(q,te,Pe){if(!Yg(te)||!je&&$t(te)&4096||(o===ua||o===io)&&(dm(x,te)||$f(te)))return!1;let We=te,vt;te.flags&1048576&&(We=L5(q,te,xe)||YG(te),vt=We.flags&1048576?We.types:[We]);for(let Ue of oo(q))if(Bi(Ue,q.symbol)){if(!t4(We,Ue.name,!1)){if(Pe){let ft=Us(We,Yg);if(!c)return w.fail();let Ht=q.symbol?.declarations&&Fa(q.symbol.declarations),Qt;if(Ue.valueDeclaration&&Xn(Ue.valueDeclaration,Qn=>Qn===Ht)&&$n(Ht)===$n(c)){let lr=Ue.valueDeclaration.name;c=lr,Tt(lr)&&(Qt=M5(lr,ft))}Qt!==void 0?Ni(P.Object_literal_may_only_specify_known_properties_but_0_does_not_exist_in_type_1_Did_you_mean_to_write_2,wi(Ue),rn(ft),Qt):Ni(P.Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1,wi(Ue),rn(ft))}return!0}if(vt&&!xe(Ln(Ue),yc(vt,Ue.name),3,Pe))return Pe&&vc(P.Types_of_property_0_are_incompatible,wi(Ue)),!0}return!1}function yc(q,te){return vn(Tc(q,(We,vt)=>{vt=Uo(vt);let Ue=vt.flags&3145728?yu(vt,te):vu(vt,te),ft=Ue&&Ln(Ue)||Cf(vt,te)?.type||Zn;return ei(We,ft)},void 0)||Oe)}function hl(q,te){if(!te||q.length===0)return q;let Pe;for(let We=0;We<q.length;We++)te.has(q[We].name)?Pe||(Pe=q.slice(0,We)):Pe&&Pe.push(q[We]);return Pe||q}function rf(q,te,Pe){if(!(q.flags&524288&&te.flags&524288))return 0;let We=hl(Cu(q),Pe),vt=hl(Cu(te),Pe);if(We.length!==vt.length)return 0;let Ue=-1;for(let ft of We){let Ht=vu(te,ft.name);if(!Ht)return 0;let Qt=kg(ft,Ht,xe);if(!Qt)return 0;Ue&=Qt}return Ue}function vc(q,...te){Rt++,It=void 0,(ln||(ln=[])).push([q,...te])}function nh(q,te){let Pe=O4(q,0),We=O4(q,1),vt=Cu(q);return vt&&(Pe?.length||We?.length)&&!vt.length?!!(Oi(te,0).length&&Pe.length||Oi(te,1).length&&We.length):!0}function _o(q){w.assert(!!S),I?I.push(q):I=[q]}function AS(q,te,Pe,We){let vt=!1,Ue=as(J5(q,te,We,!1));if((!f||f.code!==P.Class_0_incorrectly_implements_interface_1.code&&f.code!==P.Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclass.code)&&(vt=!0),Ue.length===1){let ft=wi(Pe,void 0,0,20);dr(P.Property_0_is_missing_in_type_1_but_required_in_type_2,ft,...T6(q,te)),Pr(Pe.declarations)&&_o(fi(Pe.declarations[0],P._0_is_declared_here,ft)),vt&&S&&Rt++}else Po(q,te,!1)&&(Ue.length>5?dr(P.Type_0_is_missing_the_following_properties_from_type_1_Colon_2_and_3_more,rn(q),rn(te),Xt(Ue.slice(0,4),ft=>wi(ft)).join(", "),Ue.length-4):dr(P.Type_0_is_missing_the_following_properties_from_type_1_Colon_2,rn(q),rn(te),Xt(Ue,ft=>wi(ft)).join(", ")),vt&&S&&Rt++)}function ve(q,te,Pe,We,vt){let Ue=G&&!!(Es(te)&48),ft=Wc(Be(te),!1,Ue),Ht=Pe(q);return xe(Ht,ft,3,We,void 0,vt)}function qe(q,te,Pe,We,vt,Ue,ft,Ht){let Qt=Sl(Pe),Qn=Sl(We);if(Qt&2||Qn&2){if(Pe.valueDeclaration!==We.valueDeclaration)return Ue&&(Qt&2&&Qn&2?dr(P.Types_have_separate_declarations_of_a_private_property_0,wi(We)):dr(P.Property_0_is_private_in_type_1_but_not_in_type_2,wi(We),rn(Qt&2?q:te),rn(Qt&2?te:q))),0}else if(Qn&4){if(!rQ(Pe,We))return Ue&&dr(P.Property_0_is_protected_but_type_1_is_not_a_class_derived_from_2,wi(We),rn(K0(Pe)||q),rn(K0(We)||te)),0}else if(Qt&4)return Ue&&dr(P.Property_0_is_protected_in_type_1_but_public_in_type_2,wi(We),rn(q),rn(te)),0;if(o===Wo&&Dp(Pe)&&!Dp(We))return 0;let lr=ve(Pe,We,vt,Ue,ft);return lr?!Ht&&Pe.flags&16777216&&We.flags&106500&&!(We.flags&16777216)?(Ue&&dr(P.Property_0_is_optional_in_type_1_but_required_in_type_2,wi(We),rn(q),rn(te)),0):lr:(Ue&&vc(P.Types_of_property_0_are_incompatible,wi(We)),0)}function L(q,te,Pe,We,vt,Ue){if(o===lo)return rf(q,te,We);let ft=-1;if(vi(te)){if(bu(q)){if(!te.target.readonly&&(ym(q)||vi(q)&&q.target.readonly))return 0;let qr=Jf(q),dn=Jf(te),xn=vi(q)?q.target.combinedFlags&4:4,Cr=te.target.combinedFlags&4,ps=vi(q)?q.target.minLength:0,$o=te.target.minLength;if(!xn&&qr<$o)return Pe&&dr(P.Source_has_0_element_s_but_target_requires_1,qr,$o),0;if(!Cr&&dn<ps)return Pe&&dr(P.Source_has_0_element_s_but_target_allows_only_1,ps,dn),0;if(!Cr&&(xn||dn<qr))return Pe&&(ps<$o?dr(P.Target_requires_0_element_s_but_source_may_have_fewer,$o):dr(P.Target_allows_only_0_element_s_but_source_may_have_more,dn)),0;let ha=fs(q),rh=fs(te),vm=tQ(te.target,11),n_=y1(te.target,11),ih=te.target.hasRestElement,A1=!!We;for(let Xl=0;Xl<qr;Xl++){let sh=vi(q)?q.target.elementFlags[Xl]:4,z3=qr-1-Xl,Tm=ih&&Xl>=vm?dn-1-Math.min(z3,n_):Xl,Sm=te.target.elementFlags[Tm];if(Sm&8&&!(sh&8))return Pe&&dr(P.Source_provides_no_match_for_variadic_element_at_position_0_in_target,Tm),0;if(sh&8&&!(Sm&12))return Pe&&dr(P.Variadic_element_at_position_0_in_source_does_not_match_element_at_position_1_in_target,Xl,Tm),0;if(Sm&1&&!(sh&1))return Pe&&dr(P.Source_provides_no_match_for_required_element_at_position_0_in_target,Tm),0;if(A1&&((sh&12||Sm&12)&&(A1=!1),A1&&We?.has(""+Xl)))continue;let cZ=Gu(ha[Xl],!!(sh&Sm&2)),V3=rh[Tm],lZ=sh&8&&Sm&4?Qs(V3):Gu(V3,!!(Sm&2)),q3=xe(cZ,lZ,3,Pe,void 0,Ue);if(!q3)return Pe&&(dn>1||qr>1)&&(ih&&Xl>=vm&&z3>=n_&&vm!==qr-n_-1?vc(P.Type_at_positions_0_through_1_in_source_is_not_compatible_with_type_at_position_2_in_target,vm,qr-n_-1,Tm):vc(P.Type_at_position_0_in_source_is_not_compatible_with_type_at_position_1_in_target,Xl,Tm)),0;ft&=q3}return ft}if(te.target.combinedFlags&12)return 0}let Ht=(o===Ua||o===Wo)&&!Fc(q)&&!MT(q)&&!vi(q),Qt=s4(q,te,Ht,!1);if(Qt)return Pe&&nh(q,te)&&AS(q,te,Qt,Ht),0;if(Fc(te)){for(let qr of hl(oo(q),We))if(!vu(te,qr.name)&&!(Ln(qr).flags&32768))return Pe&&dr(P.Property_0_does_not_exist_on_type_1,wi(qr),rn(te)),0}let Qn=oo(te),lr=vi(q)&&vi(te);for(let qr of hl(Qn,We)){let dn=qr.name;if(!(qr.flags&4194304)&&(!lr||Hp(dn)||dn==="length")&&(!vt||qr.flags&16777216)){let xn=ni(q,dn);if(xn&&xn!==qr){let Cr=qe(q,te,xn,qr,Be,Pe,Ue,o===io);if(!Cr)return 0;ft&=Cr}}}return ft}function B(q,te){let Pe=So(q),We=So(te);if(Pe.length!==We.length)return 0;for(let vt of We){let Ue=Lc(q,vt.keyType);if(!(Ue&&xe(Ue.type,vt.type,3)&&Ue.isReadonly===vt.isReadonly))return 0}return-1}function ce(q,te,Pe,We,vt){if(o===lo)return B(q,te);let Ue=So(te),ft=kt(Ue,Qt=>Qt.keyType===mr),Ht=-1;for(let Qt of Ue){let Qn=o!==Wo&&!Pe&&ft&&Qt.type.flags&1?-1:zo(q)&&ft?xe(Ae(q),Qt.type,3,We):st(q,Qt,We,vt);if(!Qn)return 0;Ht&=Qn}return Ht}function Ae(q){return q.templateType||(q.templateType=q.declaration.type?zn(Wc(jn(q.declaration.type),!0,!!(Et(q)&4)),q.mapper):At)}function st(q,te,Pe,We){let vt=pa(q,te.keyType);return vt?et(vt,te,Pe,We):!(We&1)&&(o!==Wo||$t(q)&8192)&&dS(q)?pn(q,te,Pe,We):(Pe&&dr(P.Index_signature_for_type_0_is_missing_in_type_1,rn(te.keyType),rn(q)),0)}function et(q,te,Pe,We){let vt=xe(q.type,te.type,3,Pe,void 0,We);return!vt&&Pe&&(q.keyType===te.keyType?dr(P._0_index_signatures_are_incompatible,rn(q.keyType)):dr(P._0_and_1_index_signatures_are_incompatible,rn(q.keyType),rn(te.keyType))),vt}function xt(q,te,Pe){if(Pe||!(Sl(q)&6)){let We=jt(qn(q)).nameType;if(!We){let vt=hi(q.valueDeclaration);We=q.name==="default"?rl("default"):vt&&Kd(vt)||(Fh(q)?void 0:rl(ya(q)))}if(We&&We.flags&te)return We}return Bn}function pn(q,te,Pe,We){let vt=-1,Ue=te.keyType,ft=q.flags&2097152?B6(q):Cu(q);for(let Ht of ft)if(Hu(xt(Ht,384),Ue)){let Qt=Be(Ht),Qn=_e||Qt.flags&32768||Ue===An||!(Ht.flags&16777216)?Qt:gl(Qt,524288),lr=xe(Qn,te.type,3,Pe,void 0,We);if(!lr)return Pe&&dr(P.Property_0_is_incompatible_with_index_signature,wi(Ht)),0;vt&=lr}for(let Ht of So(q))if(Hu(Ht.keyType,Ue)){let Qt=et(Ht,te,Pe,We);if(!Qt)return 0;vt&=Qt}return vt}function Gn(q,te,Pe,We){let vt=rs(),Ue=Wt(q,te,Pe,We,vt);if(o!==lo){if(!Ue&&(q.flags&2097152||q.flags&262144&&te.flags&1048576)){let ft=eQ(q.flags&2097152?q.types:[q],!!(te.flags&1048576));ft&&qa(ft,Ht=>Ht!==q)&&(Ue=xe(ft,te,1,!1,void 0,We))}Ue&&!(We&2)&&te.flags&2097152&&!a6(te)&&q.flags&2621440?(Ue&=L(q,te,Pe,void 0,!1,0),Ue&&Fc(q)&&$t(q)&8192&&(Ue&=ce(q,te,!1,Pe,0))):Ue&&z5(te)&&!bu(te)&&q.flags&2097152&&Uo(q).flags&3670016&&!kt(q.types,ft=>ft===te||!!($t(ft)&262144))&&(Ue&=L(q,te,Pe,void 0,!0,We))}return Ue&&Tr(vt),Ue}function sr(q,te){let Pe=-1,We=q.types;for(let vt of We){let Ue=Qr(vt,te,!1,0);if(!Ue)return 0;Pe&=Ue}return Pe}function Fr(q,te,Pe){if(o===io||(o===lo?Et(q)===Et(te):gm(q)<=gm(te))){let vt,Ue=zc(te),ft=zn(zc(q),gm(q)<0?nl:zu);if(vt=xe(Ue,ft,3,Pe)){let Ht=Jo([ec(q)],[ec(te)]);if(zn(ol(q),Ht)===zn(ol(te),Ht))return vt&xe(zn(Ae(q),Ht),Ae(te),3,Pe)}}return 0}function Hi(q,te,Pe){let We=Oi(q,Pe),vt=Oi(te,Pe);if(We.length!==vt.length)return 0;let Ue=-1;for(let ft=0;ft<We.length;ft++){let Ht=LT(We[ft],vt[ft],!1,!1,!1,xe);if(!Ht)return 0;Ue&=Ht}return Ue}function Fs(q,te){return q.parameters.length===0&&te.parameters.length===0?(Pe,We)=>vc(P.Call_signatures_with_no_arguments_have_incompatible_return_types_0_and_1,rn(Pe),rn(We)):(Pe,We)=>vc(P.Call_signature_return_types_0_and_1_are_incompatible,rn(Pe),rn(We))}function ot(q,te,Pe,We,vt,Ue){let ft=o===Ua?16:o===Wo?24:0;return o6(Pe?Q0(q):q,Pe?Q0(te):te,ft,We,dr,Ue,Ht,zu);function Ht(Qt,Qn,lr){return xe(Qt,Qn,3,lr,void 0,vt)}}function Hr(q,te,Pe,We,vt){if(o===lo)return Hi(q,te,Pe);if(te===mi||q===mi)return-1;let Ue=!1,ft=!1,Ht=Oi(q,Ue&&Pe===1?0:Pe),Qt=Oi(te,ft&&Pe===1?0:Pe);Pe===1&&Ht.length&&Qt.length&&console.debug("todo - constructor");let Qn=-1,lr=Fs,qr=$t(q),dn=$t(te);if(qr&64&&dn&64&&q.symbol===te.symbol||qr&4&&dn&4&&q.target===te.target){w.assertEqual(Ht.length,Qt.length);for(let xn=0;xn<Qt.length;xn++){let Cr=ot(Ht[xn],Qt[xn],!0,We,vt,lr(Ht[xn],Qt[xn]));if(!Cr)return 0;Qn&=Cr}}else if(Ht.length===1&&Qt.length===1){let xn=o===io,Cr=qs(Ht),ps=qs(Qt);Qn=ot(Cr,ps,xn,We,vt,lr(Cr,ps))}else e:for(let xn of Qt){let Cr=rs(),ps=We;for(let $o of Ht){let ha=ot($o,xn,!0,ps,vt,lr($o,xn));if(ha){Qn&=ha,Tr(Cr);continue e}ps=!1}return ps&&dr(P.Type_0_provides_no_match_for_the_signature_1,rn(q),qg(xn,void 0,void 0,Pe)),0}return Qn}function Ot(q,te){let Pe=oo(q),We=A5(Pe,te);if(!We)return 0;let vt=1;for(let lr of We)if(vt*=sQ(Be(lr)),vt>25)return Dt?.instant(Dt.Phase.CheckTypes,"typeRelatedToDiscriminatedType_DepthLimit",{sourceId:q.id,targetId:te.id,numCombinations:vt}),0;let Ue=new Array(We.length),ft=new Set;for(let lr=0;lr<We.length;lr++){let qr=We[lr],dn=Be(qr);Ue[lr]=dn.flags&1048576?dn.types:[dn],ft.add(qr.name)}let Ht=cL(Ue),Qt=[];for(let lr of Ht){let qr=!1;e:for(let dn of te.types){for(let xn=0;xn<We.length;xn++){let Cr=We[xn],ps=ni(dn,Cr.name);if(!ps)continue e;if(Cr===ps)continue;if(!qe(q,te,Cr,ps,ha=>lr[xn],!1,0,G||o===io))continue e}Tl(Qt,dn,j_),qr=!0}if(!qr)return 0}let Qn=-1;for(let lr of Qt)if(Qn&=L(q,lr,!1,ft,!1,0),Qn&&(Qn&=Hr(q,lr,0,!1,0),Qn&&(Qn&=Hr(q,lr,1,!1,0),Qn&&!(vi(q)&&vi(lr))&&(Qn&=ce(q,lr,!1,!1,0)))),!Qn)return Qn;return Qn}function Nn(q=Oe,te=Oe,Pe=Oe,We,vt){if(q.length!==te.length&&o===lo)return 0;let Ue=q.length<=te.length?q.length:te.length,ft=-1;for(let Ht=0;Ht<Ue;Ht++){let Qt=Ht<Pe.length?Pe[Ht]:1,Qn=Qt&7;if(Qn!==4){let lr=q[Ht],qr=te[Ht],dn=-1;if(Qt&8?dn=o===lo?xe(lr,qr,3,!1):OT(lr,qr):Qn===1?dn=xe(lr,qr,3,We,void 0,vt):Qn===2?dn=xe(qr,lr,3,We,void 0,vt):Qn===3?(dn=xe(qr,lr,3,!1),dn||(dn=xe(lr,qr,3,We,void 0,vt))):(dn=xe(lr,qr,3,We,void 0,vt),dn&&(dn&=xe(qr,lr,3,We,void 0,vt))),!dn)return 0;ft&=dn}}return ft}function Sr(q,te){let Pe=Uo(v1(te)),We=[];return lQ(Pe,384,!1,vt=>void We.push(zn(q,NT(te.mapper,ec(te),vt)))),vn(We)}function Wt(q,te,Pe,We,vt){let Ue,ft,Ht=!1,Qt=q.flags,Qn=te.flags;if(o===lo){if(Qt&3145728){let dn=sr(q,te);return dn&&(dn&=sr(te,q)),dn}if(Qt&4194304)return xe(q.type,te.type,3,!1);if(Qt&8388608&&(Ue=xe(q.objectType,te.objectType,3,!1))&&(Ue&=xe(q.indexType,te.indexType,3,!1))||Qt&16777216&&q.root.isDistributive===te.root.isDistributive&&(Ue=xe(q.checkType,te.checkType,3,!1))&&(Ue&=xe(q.extendsType,te.extendsType,3,!1))&&(Ue&=xe(Hd(q),Hd(te),3,!1))&&(Ue&=xe(Gd(q),Gd(te),3,!1))||Qt&33554432&&(Ue=xe(q.baseType,te.baseType,3,!1))&&(Ue&=xe(q.constraint,te.constraint,3,!1)))return Ue;if(!(Qt&524288))return 0}else if(Qt&3145728||Qn&3145728){if(Ue=Er(q,te,Pe,We))return Ue;if(!(Qt&465829888||Qt&524288&&Qn&1048576||Qt&2097152&&Qn&467402752))return 0}if(Qt&17301504&&q.aliasSymbol&&q.aliasTypeArguments&&q.aliasSymbol===te.aliasSymbol&&!(pS(q)||pS(te))){let dn=R3(q.aliasSymbol);if(dn===Oe)return 1;let xn=jt(q.aliasSymbol).typeParameters,Cr=ku(xn),ps=Lp(q.aliasTypeArguments,xn,Cr,Nr(q.aliasSymbol.valueDeclaration)),$o=Lp(te.aliasTypeArguments,xn,Cr,Nr(q.aliasSymbol.valueDeclaration)),ha=qr(ps,$o,dn,We);if(ha!==void 0)return ha}if(V5(q)&&!q.target.readonly&&(Ue=xe(fs(q)[0],te,1))||V5(te)&&(te.target.readonly||w1(Ls(q)||q))&&(Ue=xe(q,fs(te)[0],2)))return Ue;if(Qn&262144){if($t(q)&32&&!q.declaration.nameType&&xe(ll(te),zc(q),3)&&!(Et(q)&4)){let dn=Ae(q),xn=jc(te,ec(q));if(Ue=xe(dn,xn,3,Pe))return Ue}if(o===io&&Qt&262144){let dn=ga(q);if(dn)for(;dn&&Zl(dn,xn=>!!(xn.flags&262144));){if(Ue=xe(dn,te,1,!1))return Ue;dn=ga(dn)}return 0}}else if(Qn&4194304){let dn=te.type;if(Qt&4194304&&(Ue=xe(dn,q.type,3,!1)))return Ue;if(vi(dn)){if(Ue=xe(q,q5(dn),2,Pe))return Ue}else{let xn=G6(dn);if(xn){if(xe(q,ll(xn,te.indexFlags|4),2,Pe)===-1)return-1}else if(zo(dn)){let Cr=ol(dn),ps=zc(dn),$o;if(Cr&&cQ(dn)){let ha=Sr(Cr,dn);$o=vn([ha,Cr])}else $o=Cr||ps;if(xe(q,$o,2,Pe)===-1)return-1}}}else if(Qn&8388608){if(Qt&8388608){if((Ue=xe(q.objectType,te.objectType,3,Pe))&&(Ue&=xe(q.indexType,te.indexType,3,Pe)),Ue)return Ue;Pe&&(ft=S)}if(o===ua||o===io){let dn=te.objectType,xn=te.indexType,Cr=Ls(dn)||dn,ps=Ls(xn)||xn;if(!a6(Cr)&&!Xg(ps)){let $o=4|(Cr!==dn?2:0),ha=Ad(Cr,ps,$o);if(ha){if(Pe&&ft&&Tr(vt),Ue=xe(q,ha,2,Pe,void 0,We))return Ue;Pe&&ft&&S&&(S=lr([ft])<=lr([S])?ft:S)}}}Pe&&(ft=void 0)}else if(zo(te)&&o!==lo){let dn=!!te.declaration.nameType,xn=Ae(te),Cr=Et(te);if(!(Cr&8)){if(!dn&&xn.flags&8388608&&xn.objectType===q&&xn.indexType===ec(te))return-1;if(!zo(q)){let ps=dn?ol(te):zc(te),$o=ll(q,2),ha=Cr&4,rh=ha?$5(ps,$o):void 0;if(ha?!(rh.flags&131072):xe(ps,$o,3)){let vm=Ae(te),n_=ec(te),ih=Zg(vm,-98305);if(!dn&&ih.flags&8388608&&ih.indexType===n_){if(Ue=xe(q,ih.objectType,2,Pe))return Ue}else{let A1=dn?rh||ps:rh?yi([rh,n_]):n_,Xl=jc(q,A1);if(Ue=xe(Xl,vm,3,Pe))return Ue}}ft=S,Tr(vt)}}}else Qn&16777216?console.debug("todo - targetFlags Conditional"):te.flags&268435456&&(q.flags&268435456||console.debug("todo - targetFlags StringMapping"));if(Qt&8650752){if(!(Qt&8388608&&Qn&8388608)){let dn=Bf(q)||yr;if(Ue=xe(dn,te,1,!1,void 0,We))return Ue;if(Ue=xe(Up(dn,q),te,1,Pe&&dn!==yr&&!(Qn&Qt&262144),void 0,We))return Ue;if(a4(q)){let xn=Bf(q.indexType);if(xn&&(Ue=xe(jc(q.objectType,xn),te,1,Pe)))return Ue}}}else if(Qt&4194304){let dn=VC(q.type,q.indexFlags)&&$t(q.type)&32;if(Ue=xe(nr,te,1,Pe&&!dn))return Ue;if(dn){let xn=q.type,ps=ol(xn)||zc(xn);if(Ue=xe(ps,te,1,Pe))return Ue}}else if(Qt&134217728&&!(Qn&524288)){if(!(Qn&134217728)){let dn=Ls(q);if(dn&&dn!==q&&(Ue=xe(dn,te,1,Pe)))return Ue}}else if(Qt&268435456)if(Qn&268435456){if(q.symbol!==te.symbol)return 0;if(Ue=xe(q.type,te.type,3,Pe))return Ue}else{let dn=Ls(q);if(dn&&(Ue=xe(dn,te,1,Pe)))return Ue}else if(Qt&16777216)console.debug("todo - sourceFlags Conditional");else{if(o!==Ua&&o!==Wo&&iQ(te)&&$f(q))return-1;if(zo(te))return zo(q)&&(Ue=Fr(q,te,Pe))?Ue:0;let dn=!!(Qt&402784188);if(o!==lo)q=Uo(q),Qt=q.flags;else if(zo(q))return 0;if($t(q)&4&&$t(te)&4&&q.target===te.target&&!vi(q)&&!(pS(q)||pS(te))){if(MT(q))return-1;let xn=c4(q.target);if(xn===Oe)return 1;let Cr=qr(fs(q),fs(te),xn,We);if(Cr!==void 0)return Cr}else{if(ym(te)?qa(q,bu):Ys(te)&&qa(q,xn=>vi(xn)&&!xn.target.readonly))return o!==lo?xe(Hl(q,An)||Cn,Hl(te,An)||Cn,3,Pe):0;if(Wf(q)&&vi(te)&&!Wf(te)){let xn=Lf(q);if(xn!==q)return xe(xn,te,1,Pe)}else if((o===Ua||o===Wo)&&$f(te)&&$t(te)&8192&&!$f(q))return 0}if(Qt&2621440&&Qn&524288){let xn=x5(q,te),Cr=!xn&&Pe&&S===vt.errorInfo&&!dn;if(Ue=L(q,te,Cr,void 0,!1,We),Ue&&(Ue&=Hr(q,te,0,Cr,We),Ue&&(Ue&=Hr(q,te,1,Cr,We),Ue&&(Ue&=ce(q,te,dn,Cr,We)))),Ht&&Ue)S=ft||S||vt.errorInfo;else if(Ue)return Ue;if(xn)return-1}if(Qt&2621440&&Qn&1048576){let xn=Zg(te,36175872);if(xn.flags&1048576){let Cr=Ot(q,xn);if(Cr)return Cr}}}return 0;function lr(dn){return dn?Tc(dn,(xn,Cr)=>xn+1+lr(Cr.next),0):0}function qr(dn,xn,Cr,ps){if(Ue=Nn(dn,xn,Cr,Pe,ps))return Ue;if(kt(Cr,ha=>!!(ha&24))){ft=void 0,Tr(vt);return}let $o=xn&&oQ(xn,Cr);if(Ht=!$o,Cr!==Oe&&!$o){if(Ht&&!(Pe&&kt(Cr,ha=>(ha&7)===0)))return 0;ft=S,Tr(vt)}}}function er(q,te,Pe,We,vt){if(ht)return 0;let Ue=_S(q,te,We,o,!1),ft=o.get(Ue);if(ft!==void 0&&!(Pe&&ft&2&&!(ft&96))){if(N){let xn=ft&24;xn&8&&zn(q,nl),xn&16&&zn(q,zu)}if(Pe&&ft&96){let xn=ft&32?P.Excessive_complexity_comparing_types_0_and_1:P.Excessive_stack_depth_comparing_types_0_and_1;dr(xn,rn(q),rn(te)),Rt++}return ft&1?-1:0}if(Pn<=0)return ht=!0,0;if(!F)F=[],U=new Set,Q=[],ne=[];else{if(U.has(Ue))return 3;let xn=Ue.startsWith("*")?_S(q,te,We,o,!0):void 0;if(xn&&U.has(xn))return 3;if(Ge===100||nt===100)return ht=!0,0}let Ht=ae;F[ae]=Ue,U.add(Ue),ae++;let Qt=wt;vt&1&&(Q[Ge]=q,Ge++,!(wt&1)&&_m(q,Q,Ge)&&(wt|=1)),vt&2&&(ne[nt]=te,nt++,!(wt&2)&&_m(te,ne,nt)&&(wt|=2));let Qn,lr=0;N&&(Qn=N,N=xn=>(lr|=xn?16:8,Qn(xn)));let qr;return wt===3?(Dt?.instant(Dt.Phase.CheckTypes,"recursiveTypeRelatedTo_DepthLimit",{sourceId:q.id,sourceIdStack:Q.map(xn=>xn.id),targetId:te.id,targetIdStack:ne.map(xn=>xn.id),depth:Ge,targetDepth:nt}),qr=3):(Dt?.push(Dt.Phase.CheckTypes,"structuredTypeRelatedTo",{sourceId:q.id,targetId:te.id}),qr=Gn(q,te,Pe,We),Dt?.pop()),N&&(N=Qn),vt&1&&Ge--,vt&2&&nt--,wt=Qt,qr?(qr===-1||Ge===0&&nt===0)&&dn(qr===-1||qr===3):(o.set(Ue,2|lr),Pn--,dn(!1)),qr;function dn(xn){for(let Cr=Ht;Cr<ae;Cr++)U.delete(F[Cr]),xn&&(o.set(F[Cr],1|lr),Pn--);ae=Ht}}}function T1(t,i){for(;;){let o=Wp(t)?t.regularType:Wf(t)?uQ(t,i):$t(t)&4?t.node?Od(t.target,fs(t)):X6(t)||t:t.flags&3145728?XG(t,i):t.flags&33554432?i?t.baseType:u4(t):t.flags&25165824?Vc(t,i):t;if(o===t)return o;t=o}}function uQ(t,i){let o=Qd(t),c=xo(o,f=>f.flags&25165824?Vc(f,i):f);return o!==c?l4(t.target,c):t}function Qd(t){let i=fs(t),o=Jf(t);return i.length===o?i:i.slice(0,o)}function l4(t,i){if(!(t.combinedFlags&14))return Od(t,i);if(t.combinedFlags&8){let U=Pl(i,(Q,ne)=>!!(t.elementFlags[ne]&8&&Q.flags&1179648));if(U>=0)return k3(Xt(i,(Q,ne)=>t.elementFlags[ne]&8?Q:yr))?Zs(i[U],Q=>l4(t,uL(i,U,Q))):At}let o=[],c=[],f=[],p=-1,m=-1,S=-1;for(let U=0;U<i.length;U++){let Q=i[U],ne=t.elementFlags[U];if(ne&8)if(Q.flags&1)F(Q,4,t.labeledElementDeclarations?.[U]);else if(Q.flags&58982400||zo(Q))F(Q,8,t.labeledElementDeclarations?.[U]);else if(vi(Q)){let ae=Qd(Q);if(ae.length+o.length>=1e4)return at(E,Zp(E)?P.Type_produces_a_tuple_type_that_is_too_large_to_represent:P.Expression_produces_a_tuple_type_that_is_too_large_to_represent),At;Jt(ae,(Ge,nt)=>F(Ge,Q.target.elementFlags[nt],Q.target.labeledElementDeclarations?.[nt]))}else F($p(Q)&&Hl(Q,An)||At,4,t.labeledElementDeclarations?.[U]);else F(Q,ne,t.labeledElementDeclarations?.[U])}for(let U=0;U<p;U++)c[U]&2&&(c[U]=1);m>=0&&m<S&&(o[m]=vn(xo(o.slice(m,S+1),(U,Q)=>c[m+Q]&8?jc(U,An):U)),o.splice(m+1,S-m),c.splice(m+1,S-m),f.splice(m+1,S-m));let I=P4(c,t.readonly,f);return I===Io?ns:c.length?Od(I,o):I;function F(U,Q,ne){Q&1&&(p=c.length),Q&4&&m<0&&(m=c.length),Q&6&&(S=c.length),o.push(Q&2?Wc(U,!0):U),c.push(Q),f.push(ne)}}function fQ(t,i,o){if(i.flags&1048576){let c=Xt(i.types,f=>Vc(jc(t,f),o));return o?yi(c):vn(c)}}function pQ(t,i){let o=i?"simplifiedForWriting":"simplifiedForReading";if(t[o])return t[o]===Pa?t:t[o];t[o]=Pa;let c=Vc(t.objectType,i),f=Vc(t.indexType,i),p=fQ(c,f,i);if(p)return t[o]=p;if(!(f.flags&465829888)){let m=BN(c,f,i);if(m)return t[o]=m}if(Wf(c)&&f.flags&2344){let m=b1(c,f.flags&8?0:c.target.fixedLength,0,i);if(m)return t[o]=m}return zo(c)&&zC(c)!==2?t[o]=Zs(Y6(c,t.indexType),m=>Vc(m,i)):t[o]=t}function G5(t,i){return!!(vn([$5(t,i),Bn]).flags&131072)}function dQ(t,i){let o=t.checkType,c=t.extendsType,f=Hd(t),p=Gd(t);if(p.flags&131072&&Su(f)===Su(o)){if(o.flags&1||Si(Fd(o),Fd(c)))return Vc(f,i);if(G5(o,c))return Bn}else if(f.flags&131072&&Su(p)===Su(o)){if(!(o.flags&1)&&Si(Fd(o),Fd(c)))return Bn;if(o.flags&1||G5(o,c))return Vc(p,i)}return t}function Vc(t,i){return t.flags&8388608?pQ(t,i):t.flags&16777216?dQ(t,i):t}function u4(t){return mm(t)?t.baseType:yi([t.constraint,t.baseType])}function _S(t,i,o,c,f){if(c===lo&&t.id>i.id){let m=t;t=i,i=m}let p=o?":"+o:"";return`${t.id},${i.id}${p}`}function Si(t,i){return ml(t,i,ua)}function Vo(t,i,o){return t.flags&i?!0:o&&t.flags&114691?!1:!!(i&2344)&&Si(t,co)||!!(i&2344)&&Si(t,br)||!!(i&402653316)&&Si(t,mr)||!!(i&12288)&&Si(t,ja)||!!(i&131072)&&Si(t,Bn)||!!(i&32768)&&Si(t,Zn)||!!(i&67108864)&&Si(t,ct)}function Q5(t){let i=T5(t),o=i.parent;return o.kind===281&&o.expression===i&&o.parent.kind===269&&o.parent.operatorToken.kind===74&&o.parent.left===o&&!wu(o.parent)&&Vo(Co(o.argumentExpression),2344)}function Co(t){let i=Z5(t);if(i)return i;if(t.flags&268435456&&bn){let f=bn[Sa(t)];if(f)return f}let o=yn,c=Lr(t,64);if(yn!==o){let f=bn||(bn=[]);f[Sa(t)]=c,Ch(t,t.flags|268435456)}return c}function _Q(t){return!1}function mQ(t){let i=Lr(t.expression),o=Ip(i,t.expression),c=Y5(i);return c&&xg(c,t,o!==i)}function Y5(t){let i=Mf(t);if(i&&!i.typeParameters)return Ei(i)}function Z5(t){if(d_(t)){let o=xh(t);return jn(o)}let i=ws(t,!0);if(d_(i)){let o=xh(i);return jn(o)}if(i=ws(t),hs(i)&&i.expression.kind!==71&&!_Q(i))return HS(i)?mQ(i):Y5(Bp(i.expression));if(Db(i))return jn(i.type);if(Dv(t))return Lr(t)}function Uf(t){return t.flags===0?t.type:t}function gQ(t){return t.flags&131072?vr:Qs(t.flags&1048576?vn(t.types,2):t)}function hQ(t){return t.finalArrayType||(t.finalArrayType=gQ(t.elementType))}function S1(t){return $t(t)&256?hQ(t):t}function gl(t,i){return Us(t,o=>pl(o,i))}function yQ(t){return _u(t.argumentExpression)?t.argumentExpression.text:va(t.argumentExpression)?vQ(t.argumentExpression):void 0}function vQ(t){let i=hc(t,111551,!0);if(!i||!(i.flags&8))return;let o=i.valueDeclaration;if(o===void 0)return;let c=om(o);if(c){let f=j0(c);if(f!==void 0)return f}if(uh(o)&&iS(o,t)){let f=eb(o);if(f){let p=ds(o.parent)?TQ(o):Co(f);return p&&j0(p)}}}function TQ(t){let i=t.dotDotDotToken?32:0,o=K5(t.parent.parent,i);return o&&SQ(t,o,!1)}function SQ(t,i,o){if(qo(i))return i;let c=t.parent;G&&t.flags&33554432&&xm(t)?i=i:G&&c.parent.initializer&&!pl(e3(c.parent.initializer),65536)&&(i=gl(i,524288));let f,p=zf(65|(t.dotDotDotToken?0:128),i,Zn,c),m=c.elements.indexOf(t);if(t.dotDotDotToken){let S=Zs(i,I=>I.flags&58982400?Lf(I):I);f=qa(S,vi)?Zs(S,I=>Kg(I,m)):Qs(p)}else if($p(i)){let S=Ka(m),I=32|(o||eN(t)?16:0),F=Ad(i,S,I,t.name)||At;f=bQ(t,F)}else f=p;return t.initializer?Ta(Cb(t))?G&&!pl(Mg(t,0),16777216)?p4(f):f:YC(t,vn([p4(f),Mg(t,0)],2)):f}function bQ(t,i){let o=f4(t);return o?qp(o,i):i}function kQ(t){let i=t.parent.parent;switch(i.kind){case 266:case 174:return f4(i);case 290:return f4(t.parent);case 237:return i.initializer;case 269:return i.right}}function CQ(t){let i=t.parent;return t.kind===174||t.kind===175?PQ(t.name):""+i.elements.indexOf(t)}function PQ(t){let i=Kd(t);return i.flags&384?""+i.value:void 0}function f4(t){let i=kQ(t);if(i&&ZS(i)&&i.flowNode){let o=CQ(t);if(o){let c=Ho(H1.createStringLiteral(o),t),f=fp(i)?i:H1.createParenthesizedExpression(i),p=Ho(H1.createElementAccessExpression(f,c),t);return ic(c,p),ic(p,t),f!==i&&ic(f,p),p.flowNode=i.flowNode,p}}}function Jf(t){return Pr(t.target.typeParameters)}function xQ(t){let i=X5(t);return i&&Qs(i)}function X5(t){return b1(t,t.target.fixedLength)}function b1(t,i,o=0,c=!1,f=!1){let p=Jf(t)-o;if(i<p){let m=fs(t),S=[];for(let I=i;I<p;I++){let F=m[I];S.push(t.target.elementFlags[I]&8?jc(F,An):F)}return c?yi(S):vn(S,f?0:1)}}function Kg(t,i,o=0){let c=t.target,f=Jf(t)-o;return i>c.fixedLength?xQ(t)||Eu(Oe):Eu(fs(t).slice(i,f),c.elementFlags.slice(i,f),!1,c.labeledElementDeclarations&&c.labeledElementDeclarations.slice(i,f))}function K5(t,i){if(i!==0)return $0(t,!1,i);let o=Ft(t);return o&&jt(o).type||$0(t,!1,i)}function zp(t){if(Ii(t))return t.name.text;if(Ha(t))return yQ(t);if(!ms(t)&&gs(t))return""+t.parent.parameters.indexOf(t)}function mS(t,i,o,c){switch(t.kind){case 89:let f=_a(t);return f!==Di?`${c?Sa(c):"-1"}|${zs(i)}|${zs(o)}|${Yi(f)}`:void 0;case 289:return mS(t.expression,i,o,c);case 146:let p=mS(t.left,i,o,c);return p&&`${p}.${t.right.text}`;case 286:case 281:let m=zp(t);if(m!==void 0){let S=mS(t.expression,i,o,c);return S&&`${S}.${m}`}if(Ha(t)&&Tt(t.argumentExpression)){let S=_a(t.argumentExpression)}break;case 265:case 169:case 270:case 283:return`${Sa(t)}#${zs(i)}`}}function DQ(t){let i=Xn(t,yP),o=$n(t),c=qm(o,i.statements.pos);Vn.add(Iu(o,c.start,c.length,P.The_containing_function_or_module_body_is_too_large_for_control_flow_analysis))}function e3(t){return Tn(t).resolvedType||Co(t)}function EQ(t){return t.initializer?e3(t.initializer):t.parent.parent.kind===244&&wQ(t.parent.parent)||At}function wQ(t){return zf(13,Bp(t.expression),Zn,t.expression)}function k1(t){return t&&(oe.noUncheckedIndexedAccess?vn([t,Jn]):t)}function zf(t,i,o,c){return qo(i)?i:em(t,i,o,c,!0)||Cn}function t3(t,i){return k1(zf(65,t,Zn,void 0))||At}function NQ(t){let i=t.parent,o=n3(i.parent),c=t3(o,i.elements.indexOf(t));return IQ(c,t.initializer)}function IQ(t,i){return i?vn([p4(t),Co(i)]):t}function AQ(t){return!!(t.flags&465829888)&&Ki(Ls(t)||yr,32768)}function p4(t){let i=Zl(t,AQ)?Zs(t,o=>o.flags&465829888?Lf(o):o):t;return gl(i,524288)}function n3(t){return t.kind===237?EQ(t):NQ(t)}function d4(t){return zf(13,Bp(t.expression),Zn,t.expression)}function _4(t){let{parent:i}=t;switch(i.kind){case 244:return d4(i)||At;case 269:return RQ(i);case 290:return FQ(i,t);case 174:return LQ(i);case 175:w.fail("implement")}return At}function OQ(t,i){let o=Kd(i),c=Gf(o);return nc(t,c)||k1(Cf(t,c)?.type)||At}function LQ(t){return OQ(_4(t.parent),t.name)}function FQ(t,i){return t3(_4(t),t.elements.indexOf(i))}function RQ(t){return Co(t.right)}function Yd(t,i){return i?{flags:0,type:t.flags&131072?or:t}:t}function Zd(t){return t.flags===0}function MQ(t){return t.kind===237&&t.initializer&&QC(t.initializer)||t.kind!==266&&t.parent.kind===269&&QC(t.parent.right)}function jQ(t){let i=dl(256);return i.elementType=t,i}function m4(t){return ro[t.id]||(ro[t.id]=jQ(t))}function BQ(t,i){if(t===i)return t;if(i.flags&131072)return i;let o=`A${zs(t)},${zs(i)}`;return aS(o)??cS(o,WQ(t,i))}function WQ(t,i){let o=Us(t,f=>UQ(i,f)),c=i.flags&512&&Wp(i)?Zs(o,Fp):o;return Si(i,c)?c:t}function UQ(t,i){if(!(t.flags&1048576))return Si(t,i);for(let o of t.types)if(Si(o,i))return!0;return!1}function Xd(t){switch(t.kind){case 289:return Xd(t.expression);case 269:switch(t.operatorToken.kind){case 74:case 86:return Xd(t.left);case 27:return Xd(t.right)}}return t}function JQ(t){let i=!1;for(let o of t)if(!(o.flags&131072)){if(!($t(o)&256))return!1;i=!0}return i}function zQ(t){return $t(t)&256?t.elementType:Bn}function r3(t){return t===fc?yr:t}function VQ(t){return jr||(jr=Ja("NonNullable",524288,void 0)||Di),jr!==Di?i4(jr,[t]):yi([t,ns])}function hm(t,i){let o=r3(gl(G&&t.flags&2?fc:t,i));if(G)switch(i){case 2097152:case 4194304:return Zs(o,c=>pl(c,262144)?VQ(c):c);default:console.debug("todo - getAdjustedTypeWithFacts")}return o}function C1(t,i){return!1}function i3(t,i){return Ki(t,134217804)&&Ki(i,402655616)?Zs(t,o=>o.flags&4?Zg(i,402653316):o.flags&8?Zg(i,264):o.flags&64?Zg(i,2112):o):t}function s3(t){let i=Lf(t);return i.flags&2097152?kt(i.types,mt):mt(i)}function qQ(t){return t.kind===299?Js(Co(t.expression)):Bn}function gS(t){let i=Tn(t);if(!i.switchTypes){i.switchTypes=[];for(let o of t.caseBlock.clauses)i.switchTypes.push(qQ(o))}return i.switchTypes}function $Q(t){return t.flags&2097152&&Zr(t.types,mt)||t}function Vp(t,i){return ml(t,i,Ua)}function o3(t){return!!(t.flags&524288)&&Oi(t,0).length>0}function Vf(t,i){return t.flags&1048576?Ti(t.types,o=>Vf(o,i)):i.flags&1048576?kt(i.types,o=>Vf(t,o)):t.flags&2097152?kt(t.types,o=>Vf(o,i)):t.flags&58982400?Vf(Ls(t)||yr,i):Jc(i)?!!(t.flags&67633152):i===x?!!(t.flags&67633152)&&!Jc(t):i===R?!!(t.flags&524288)&&HQ(t):g4(t,hS(i))||Ys(i)&&!ym(i)&&Vf(t,Ye)}function ym(t){return!!($t(t)&4)&&t.target===Ye}function hS(t){return $t(t)&4?t.target:t}function HQ(t){let i=fl(t);return!!(i.callSignatures.length||i.constructSignatures.length||i.members.get("bind")&&Vp(t,R))}function g4(t,i){return o(t);function o(c){if($t(c)&7){let f=hS(c);return f===i||kt($u(f),o)}else if(c.flags&2097152)return kt(c.types,o);return!1}}function yS(t){let i=t.types;if(!(i.length<10||$t(t)&32768||Kf(i,o=>!!(o.flags&59506688))<10)){if(t.keyPropertyName===void 0){let o=Jt(i,f=>f.flags&59506688?Jt(oo(f),p=>mt(Ln(p))?p.name:void 0):void 0),c=o&&GQ(i,o);t.keyPropertyName=c?o:"",t.constituentMap=c}return t.keyPropertyName.length?t.keyPropertyName:void 0}}function GQ(t,i){let o=new Map,c=0;for(let f of t)if(f.flags&61603840){let p=nc(f,i);if(p){if(!Qu(p))return;let m=!1;t_(p,S=>{let I=zs(Js(S)),F=o.get(I);F?F!==yr&&(o.set(I,yr),m=!0):o.set(I,f)}),m||c++}}return c>=10&&c*2>=t.length?o:void 0}function vS(t,i){let o=t.constituentMap?.get(zs(Js(i)));return o!==yr?o:void 0}function P1(t,i){return ml(t,i,Wo)}function QQ(t,i){if(t.kind===1||t.kind===3)return i.arguments[t.parameterIndex];let o=ws(i.expression);return ia(o)?ws(o.expression):void 0}function a3(t){let i=Tn(t);if(i.contextFreeType)return i.contextFreeType;RT(t,Cn,!1);let o=i.contextFreeType=Lr(t,4);return jg(),o}function qp(t,i,o=i,c,f=to(t,ZS)?.flowNode){let p,m=!1,S=0;if(Gt)return At;if(!f)return i;yn++;let I=yt,F=Uf(ne(f));yt=I;let U=$t(F)&256&&Q5(t)?vr:S1(F);if(U===No&&!(U.flags&131072)&&gl(U,2097152).flags&131072)return i;return U;function Q(){return m?p:(m=!0,p=mS(t,i,o,c))}function ne(ve){if(S===2e3)return Dt?.instant(Dt.Phase.CheckTypes,"getTypeAtFlowNode_DepthLimit",{flowId:ve.id}),Gt=!0,DQ(t),At;S++;let qe;for(;;){let L=ve.flags;if(L&4096){for(let ce=I;ce<yt;ce++)if(it[ce]===ve)return S--,Re[ce];qe=ve}let B;if(L&16){if(B=Ge(ve),!B){ve=ve.antecedent;continue}}else if(L&512){if(B=wt(ve),!B){ve=ve.antecedent;continue}}else if(L&96)B=It(ve);else if(L&128)B=ln(ve);else if(L&12){if(ve.antecedent.length===1){ve=ve.antecedent[0];continue}B=L&4?Pn(ve):pr(ve)}else if(L&256){if(B=Ut(ve),!B){ve=ve.antecedent;continue}}else if(L&1024){let ce=ve.node.target,Ae=ce.antecedent;ce.antecedent=ve.node.antecedents,B=ne(ve.antecedent),ce.antecedent=Ae}else if(L&2){let ce=ve.node;if(ce&&ce!==c&&t.kind!==286&&t.kind!==281){ve=ce.flowNode;continue}B=o}else B=lS(i);return qe&&(it[yt]=qe,Re[yt]=B,yt++),S--,B}}function ae(ve){let qe=ve.node;return U6(qe.kind===237||qe.kind===266?n3(qe):_4(qe),t)}function Ge(ve){let qe=ve.node;if(ko(t,qe)){if(!Y0(ve))return No;if(Hf(qe)===2){let B=ne(ve.antecedent);return Yd(_l(Uf(B)),Zd(B))}if(i===ls||i===vr||i===Nc||i===la||jd(i)){if(MQ(qe))return m4(Bn);let B=Bd(ae(ve));return Si(B,i)?B:Ci}let L=wP(qe)?_l(i):i;return L.flags&1048576?BQ(L,ae(ve)):L}if(YI(t,qe))return Y0(ve)?i:No;if(Cs(qe)&&qe.parent.parent.kind===244&&(ko(t,qe.parent.parent.expression)||C1(qe.parent.parent.expression,t)))return S1(Uf(ne(ve.antecedent)))}function nt(ve,qe){let L=ws(qe,!0);if(L.kind===135)return No;if(L.kind===269){if(L.operatorToken.kind===58)return nt(nt(ve,L.left),L.right);if(L.operatorToken.kind===59)return vn([nt(ve,L.left),nt(ve,L.right)])}return _o(ve,L,!0)}function wt(ve){let qe=JT(ve.node);if(qe){let L=Ea(qe);if(L&&L.kind===3){let B=ne(ve.antecedent),ce=S1(Uf(B)),Ae=L.type?ht(ce,L,ve.node,!0):L.kind===3&&L.parameterIndex>=0&&L.parameterIndex<ve.node.arguments.length?nt(ce,ve.node.arguments[L.parameterIndex]):ce;return Ae===ce?B:Yd(Ae,Zd(B))}if(Ei(qe).flags&131072)return No}}function ht(ve,qe,L,B){if(qe.type&&!(qo(ve)&&(qe.type===x||qe.type===R))){let ce=QQ(qe,L);if(ce){if(ko(t,ce))return rf(ve,qe.type,B,!1);G&&C1(ce,t)&&(B&&!pl(qe.type,65536)||!B&&qa(qe.type,A3))&&(ve=hm(ve,2097152));let Ae=ji(ce,ve);if(Ae)return Br(ve,Ae,st=>rf(st,qe.type,B,!1))}}return ve}function Rt(ve,qe){let L=g1(_l(a3(qe)));return dm(L,ve.elementType)?ve:m4(vn([ve.elementType,L]))}function Ut(ve){if(i===ls||i===vr){let qe=ve.node,L=qe.kind===272?qe.expression.expression:qe.left.expression;if(ko(t,Xd(L))){let B=ne(ve.antecedent),ce=Uf(B);if($t(ce)&256){let Ae=ce;if(console.warn("TODO - getTypeAtFlowArrayMutation"),qe.kind===272)for(let st of qe.arguments)Ae=Rt(Ae,st);else{let st=a3(qe.left.argumentExpression);Vo(st,2344)&&(Ae=Rt(Ae,qe.right))}return Ae===ce?B:Yd(Ae,Zd(B))}return B}}}function It(ve){let qe=ne(ve.antecedent),L=Uf(qe);if(L.flags&131072)return qe;let B=(ve.flags&32)!==0,ce=S1(L),Ae=_o(ce,ve.node,B);return Ae===ce?qe:Yd(Ae,Zd(qe))}function ln(ve){let qe=ws(ve.node.switchStatement.expression),L=ne(ve.antecedent),B=Uf(L);if(ko(t,qe))B=Ds(B,ve.node);else if(qe.kind===136)B=na(B,ve.node);else{let ce=ji(qe,B);ce&&(B=dr(B,ce,ve.node))}return Yd(B,Zd(L))}function Pn(ve){let qe=[],L=!1,B=!1,ce;for(let Ae of ve.antecedent){if(!ce&&Ae.flags&128&&Ae.node.clauseStart===Ae.node.clauseEnd){ce=Ae;continue}let st=ne(Ae),et=Uf(st);if(et===i&&i===o)return et;Tl(qe,et),dm(et,o)||(L=!0),Zd(st)&&(B=!0)}if(ce){let Ae=ne(ce),st=Uf(Ae);if(!(st.flags&131072)&&!ki(qe,st)&&!ZN(ce.node.switchStatement)){if(st===i&&i===o)return st;qe.push(st),dm(st,o)||(L=!0),Zd(Ae)&&(B=!0)}}return Yd(Tr(qe,L?2:1),B)}function pr(ve){let qe=qN(ve),L=$e[qe]||($e[qe]=new Map),B=Q();if(!B)return i;let ce=L.get(B);if(ce)return ce;for(let pn=Ie;pn<Te;pn++)if(we[pn]===ve&&Je[pn]===B&&ze[pn].length)return Yd(Tr(ze[pn],1),!0);let Ae=[],st=!1,et;for(let pn of ve.antecedent){let Gn;if(!et)Gn=et=ne(pn);else{we[Te]=ve,Je[Te]=B,ze[Te]=Ae,Te++;let Fr=bn;bn=void 0,Gn=ne(pn),bn=Fr,Te--;let Hi=L.get(B);if(Hi)return Hi}let sr=Uf(Gn);if(Tl(Ae,sr),dm(sr,o)||(st=!0),sr===i)break}let xt=Tr(Ae,st?2:1);return Zd(et)?Yd(xt,!0):(L.set(B,xt),xt)}function Tr(ve,qe){if(JQ(ve))return m4(vn(Xt(ve,zQ)));let L=r3(vn(xo(ve,S1),qe));return L!==i&&L.flags&i.flags&1048576&&eu(L.types,i.types)?i:L}function rs(ve){if(ds(t)||gh(t)||hh(t)){if(Tt(ve)){let L=_a(ve).valueDeclaration;if(L&&(ms(L)||gs(L))&&t===L.parent&&!L.initializer&&!L.dotDotDotToken)return L}}else if(ia(ve)){if(ko(t,ve.expression))return ve}else if(Tt(ve)){let qe=_a(ve)}}function ji(ve,qe){if(i.flags&1048576||qe.flags&1048576){let L=rs(ve);if(L){let B=zp(L);if(B){let ce=i.flags&1048576&&dm(qe,i)?i:qe;if(I5(ce,B))return L}}}}function Br(ve,qe,L){let B=zp(qe);if(B===void 0)return ve;let ce=!1,Ae=G&&(ce||zF(qe))&&Ki(ve,98304),st=nc(Ae?gl(ve,2097152):ve,B);if(!st)return ve;st=Ae&&ce?Of(st):st;let et=L(st);return Us(ve,xt=>{let pn=O5(xt,B)||yr;return!(pn.flags&131072)&&!(et.flags&131072)&&s1(et,pn)})}function zi(ve,qe,L,B,ce){if((L===37||L===38)&&ve.flags&1048576){let Ae=yS(ve);if(Ae&&Ae===zp(qe)){let st=vS(ve,Co(B));if(st)return L===(ce?37:38)?st:mt(nc(st,Ae)||yr)?sT(ve,st):ve}}return Br(ve,qe,Ae=>En(Ae,L,B,ce))}function dr(ve,qe,L){if(L.clauseStart<L.clauseEnd&&ve.flags&1048576&&yS(ve)===zp(qe)){let B=gS(L.switchStatement).slice(L.clauseStart,L.clauseEnd),ce=vn(Xt(B,Ae=>vS(ve,Ae)||yr));if(ce!==yr)return ce}return Br(ve,qe,B=>Ds(B,L))}function Po(ve,qe,L){if(ko(t,qe))return hm(ve,L?4194304:8388608);G&&L&&C1(qe,t)&&(ve=hm(ve,2097152));let B=ji(qe,ve);return B?Br(ve,B,ce=>gl(ce,L?4194304:8388608)):ve}function po(ve,qe,L){let B=ni(ve,qe);return B?!!(B.flags&16777216||Es(B)&48)||L:!!Cf(ve,qe)||!L}function Qe(ve,qe,L){console.debug("todo - narrowTypeByInKeyword");let B=Gf(qe);return Zl(ve,Ae=>po(Ae,B,!0))?Us(ve,Ae=>po(Ae,B,L)):ve}function xe(ve,qe,L,B,ce){let Ae=L.text!="0"&&L.text!=="";return ce=ce!==(Ae===!0)!=(B!==38&&B!==36),_o(ve,qe,ce)}function un(ve,qe,L){switch(qe.operatorToken.kind){case 74:case 86:return Po(_o(ve,qe.right,L),qe.left,L);case 35:case 36:case 37:case 38:let B=qe.operatorToken.kind,ce=Xd(qe.left),Ae=Xd(qe.right);if(ko(t,ce))return En(ve,B,Ae,L);if(ko(t,Ae))return En(ve,B,ce,L);G&&(C1(ce,t)?ve=Wn(ve,B,Ae,L):C1(Ae,t)&&(ve=Wn(ve,B,ce,L)));let st=ji(ce,ve);if(st)return zi(ve,st,B,Ae,L);let et=ji(Ae,ve);if(et)return zi(ve,et,B,ce,L);if(yc(ce))return hl(ve,B,Ae,L);if(yc(Ae))return hl(ve,B,ce,L);if(xy(Ae)&&!ia(ce))return xe(ve,ce,Ae,B,L);if(xy(ce)&&!ia(Ae))return xe(ve,Ae,ce,B,L);break;case 103:let xt=Xd(qe.right);if(kS(ve)&&ia(t)&&ko(t.expression,xt)){let pn=Co(qe.left);if(Qf(pn)&&zp(t)===Gf(pn))return gl(ve,L?524288:65536)}if(ko(t,xt)){let pn=Co(qe.left);if(Qf(pn))return Qe(ve,pn,L)}break;case 27:return _o(ve,qe.right,L);case 58:return L?_o(_o(ve,qe.left,!0),qe.right,!0):vn([_o(ve,qe.left,!1),_o(ve,qe.right,!1)]);case 59:return L?vn([_o(ve,qe.left,!0),_o(ve,qe.right,!0)]):_o(_o(ve,qe.left,!1),qe.right,!1)}return ve}function Wn(ve,qe,L,B){let ce=qe===35||qe===37,Ae=qe===35||qe===36?98304:32768,st=Co(L);return ce!==B&&qa(st,xt=>!!(xt.flags&Ae))||ce===B&&qa(st,xt=>!(xt.flags&(3|Ae)))?hm(ve,2097152):ve}function En(ve,qe,L,B){if(ve.flags&1)return ve;(qe===36||qe===38)&&(B=!B);let ce=Co(L),Ae=qe===35||qe===36;if(ce.flags&98304){if(!G)return ve;let st=Ae?B?262144:2097152:ce.flags&65536?B?131072:1048576:B?65536:524288;return hm(ve,st)}if(B){if(!Ae&&(ve.flags&2||Zl(ve,Jc))){if(ce.flags&469893052||Jc(ce))return ce;if(ce.flags&524288)return ct}let st=Us(ve,et=>s1(et,ce));return i3(st,ce)}return mt(ce)?Us(ve,st=>!(s3(st)&&s1(st,ce))):ve}function Qr(ve,qe,L){return L?Bi(ve,qe.text):hm(ve,lte.get(qe.text)||32768)}function Er(ve,{switchStatement:qe,clauseStart:L,clauseEnd:B},ce){return L!==B&&Ti(gS(qe).slice(L,B),ce)?gl(ve,2097152):ve}function Ds(ve,{switchStatement:qe,clauseStart:L,clauseEnd:B}){let ce=gS(qe);if(!ce.length)return ve;let Ae=ce.slice(L,B),st=L===B||ki(Ae,Bn);if(ve.flags&2&&!st){let Gn;for(let sr=0;sr<Ae.length;sr+=1){let Fr=Ae[sr];if(Fr.flags&469893052)Gn!==void 0&&Gn.push(Fr);else if(Fr.flags&524288)Gn===void 0&&(Gn=Ae.slice(0,sr)),Gn.push(ct);else return ve}return vn(Gn===void 0?Ae:Gn)}let et=vn(Ae),xt=et.flags&131072?Bn:i3(Us(ve,Gn=>s1(et,Gn)),et);if(!st)return xt;let pn=Us(ve,Gn=>!(s3(Gn)&&ki(ce,Gn.flags&32768?Zn:Js($Q(Gn)))));return xt.flags&131072?pn:vn([xt,pn])}function Bi(ve,qe){switch(qe){case"string":return Ni(ve,mr,1);case"number":return Ni(ve,An,2);case"bigint":return Ni(ve,br,4);case"boolean":return Ni(ve,Nt,8);case"object":return ve.flags&1?ve:vn([Ni(ve,ct,32),Ni(ve,pe,131072)]);case"function":return ve.flags&1?ve:Ni(ve,R,64);case"undefined":return Ni(ve,Zn,65536)}return Ni(ve,ct,128)}function Ni(ve,qe,L){return Zs(ve,B=>ml(B,qe,Wo)?pl(B,L)?B:Bn:Vp(qe,B)?qe:pl(B,L)?yi([B,qe]):Bn)}function na(ve,{switchStatement:qe,clauseStart:L,clauseEnd:B}){let ce=Pl(qe.caseBlock.clauses,et=>et.kind===301),Ae=L===B||ce>=L&&ce<B;for(let et=0;et<L;et++){let xt=qe.caseBlock.clauses[et];xt.kind===299&&(ve=_o(ve,xt.expression,!1))}if(Ae){for(let et=B;et<qe.caseBlock.clauses.length;et++){let xt=qe.caseBlock.clauses[et];xt.kind===299&&(ve=_o(ve,xt.expression,!1))}return ve}let st=qe.caseBlock.clauses.slice(L,B);return vn(Xt(st,et=>et.kind===299?_o(ve,et.expression,!0):Bn))}function yc(ve){return(Ii(ve)&&go(ve.name)==="constructor"||Ha(ve)&&ss(ve.argumentExpression)&&ve.argumentExpression.text==="constructor")&&ko(t,ve.expression)}function hl(ve,qe,L,B){if(B?qe!==35&&qe!==37:qe!==36&&qe!==38)return ve;let ce=Co(L);if(!o3(ce))return ve;let Ae=ni(ce,"prototype");if(!Ae)return ve;let st=Ln(Ae),et=qo(st)?void 0:st;if(!et||et===x||et===R)return ve;if(qo(ve))return et;return Us(ve,pn=>xt(pn,et));function xt(pn,Gn){return pn.flags&524288&&$t(pn)&1||Gn.flags&524288&&$t(Gn)&1?pn.symbol===Gn.symbol:Vp(pn,Gn)}}function rf(ve,qe,L,B){let ce=ve.flags&1048576?`N${zs(ve)},${zs(qe)},${(L?1:0)|(B?2:0)}`:void 0;return aS(ce)??cS(ce,vc(ve,qe,L,B))}function vc(ve,qe,L,B){if(!L){if(ve===qe)return Bn;if(B)return Us(ve,xt=>!Vf(xt,qe));let et=rf(ve,qe,!0,!1);return Us(ve,xt=>!dm(xt,et))}if(ve.flags&3||ve===qe)return qe;let ce=B?Vf:Vp,Ae=ve.flags&1048576?yS(ve):void 0,st=Zs(qe,et=>{let xt=Ae&&nc(et,Ae),pn=xt&&vS(ve,xt),Gn=Zs(pn||ve,B?sr=>Vf(sr,et)?sr:Vf(et,sr)?et:Bn:sr=>P1(sr,et)?sr:P1(et,sr)?et:Vp(sr,et)?sr:Vp(et,sr)?et:Bn);return Gn.flags&131072?Zs(ve,sr=>Ki(sr,465829888)&&ce(et,Ls(sr)||yr)?yi([sr,et]):Bn):Gn});return st.flags&131072?Vp(qe,ve)?qe:Si(ve,qe)?ve:Si(qe,ve)?qe:yi([ve,qe]):st}function nh(ve,qe,L){if(XI(qe,t)){let B=L||!HS(qe)?JT(qe):void 0,ce=B&&Ea(B);if(ce&&ce.kind===1)return ht(ve,ce,qe,L)}if(kS(ve)&&ia(t)&&Ii(qe.expression)){let B=qe.expression;if(ko(t.expression,Xd(B.expression))&&Tt(B.name)&&B.name.text==="hasOwnProperty"&&qe.arguments.length===1){let ce=qe.arguments[0];if(_f(ce)&&zp(t)===ce.text)return gl(ve,L?524288:65536)}}return ve}function _o(ve,qe,L){switch(qe.kind){case 89:if(!ko(t,qe)&&T<5){let ce=_a(qe).valueDeclaration;if(ce&&Cs(ce)&&!ce.type&&ce.initializer){T++;let Ae=_o(ve,ce.initializer,L);return T--,Ae}}case 71:case 286:case 281:return Po(ve,qe,L);case 272:return nh(ve,qe,L);case 289:return _o(ve,qe.expression,L);case 269:return un(ve,qe,L);case 298:if(qe.operator===55)return _o(ve,qe.operand,!L);break}return ve}function AS(ve,qe,L){if(ko(t,qe))return hm(ve,L?2097152:262144);let B=ji(qe,ve);return B?Br(ve,B,ce=>gl(ce,L?2097152:262144)):ve}}function TS(t){return tu(t)||ti(t)}function YQ(t){return!!Xn(t.parent,i=>TS(i)&&!!(Tn(i).flags&131072))}function c3(t){switch(t.kind){case 89:if(wu(t)){let i=_a(t);if(h4(i)&&i.lastAssignmentPos!==Number.MAX_VALUE){let o=Xn(t,TS),c=Xn(i.valueDeclaration,TS);i.lastAssignmentPos=o===c?ZQ(t,i.valueDeclaration):Number.MAX_VALUE}}return}Vs(t)||Ns(t,c3)}function ZQ(t,i){let o=t.pos;for(;t&&t.pos>i.pos;){switch(t.kind){case 242:case 247:case 253:case 245:case 246:case 243:case 244:case 256:o=t.end}t=t.parent}return o}function l3(t,i){let o=Xn(t.valueDeclaration,TS);if(!o)return!1;let c=Tn(o);return c.flags&131072||(c.flags|=131072,YQ(o)||c3(o)),!t.lastAssignmentPos||i&&t.lastAssignmentPos<i.pos}function XQ(t){return!0}function h4(t){let i=t.valueDeclaration&&t.valueDeclaration;return!!i&&(gs(i)||Cs(i)&&XQ(i))}function qf(t){return T_(t)?Ft(t):void 0}function KQ(t){for(;t.parent.kind===286;)t=t.parent;return t.parent.kind===280}function eY(t){if(Ru(t))return qf(t.parent);for(;bF(t);)t=t.parent;if(KQ(t)){let i=0;t.parent.kind===280?i=Zp(t)?788968:111551:i=1920,i|=2097152;let o=va(t)?hc(t,i,!0):void 0;if(o)return o}if(t.parent.kind===220)return JP(t.parent);if(t.parent.kind===148&&t.parent.parent.kind===224){let i=K9(t.parent);return i&&i.symbol}if(ep(t)){if(Eo(t))return;let i=Xn(t,$x(kb,jM,BM)),o=i?901119:hs(t.parent)&&t.parent.expression===t||kE(t.parent)?16:111551;if(t.kind===89){let c=hc(t,o,!0,!0,T0(t));if(!c&&i)debugger;return c}else if(t.kind===286||t.kind===146){let c=Tn(t);return c.resolvedSymbol||(t.kind===286?(wd(t,0),c.resolvedSymbol||(c.resolvedSymbol=tY(Fo(t.expression,128),Kd(t.name)))):g5(t,0),!c.resolvedSymbol&&i&&iu(t)&&w.fail("TODO - Implement me - getSymbolOfNameOrPropertyAccessExpression")),c.resolvedSymbol}debugger}else if(u3(t)){let i=t.parent.kind===166?788968:1920,o=hc(t,i,!1,!0);return o&&o!==Di?o:vT(t)}if(t.parent.kind===167)return hc(t,1)}function u3(t){for(;t.parent.kind===146;)t=t.parent;return t.parent.kind===166}function Kd(t){if(Cc(t))return Bn;if(ff(t)||o0(t))return Js(Lr(t));if(Ia(t))return Js(uS(t));let i=Hm(t);return i!==void 0?rl(i):xc(t)?Js(Lr(t)):Bn}function tY(t,i){let o=L0(t,i);if(o.length&&t.members){let c=SS(fl(t).members);if(o===So(t))return c;if(c){let f=jt(c),p=Vi(o,S=>S.declaration),m=Xt(p,Sa).join(",");if(f.filteredIndexSymbolCache||(f.filteredIndexSymbolCache=new Map),f.filteredIndexSymbolCache.has(m))return f.filteredIndexSymbolCache.get(m);{let S=es(131072,"__index");return S.declarations=Vi(o,I=>I.declaration),S.parent=t.aliasSymbol?t.aliasSymbol:t.symbol?t.symbol:gc(S.declarations[0].parent),f.filteredIndexSymbolCache.set(m,S),S}}}}function SS(t){return t.get("__index")}function nY(t,i){if(TT(t.parent)){let o=rY(t.parent);if(o)return hr(o,t,i,void 0,!0)}}function rY(t){if(Xn(t,f=>Fv(f)||f.flags&16777216?pd(f):"quit"))return;let o=wy(t);o&&(hh(o)||af(o))&&Ur(o.parent.parent)&&Oa(o.parent.parent)===6&&Ft(o.parent.parent.left)&&console.debug("todo - getAssignmentDeclarationLocation");let c=Bb(t);if(c&&Qi(c)){let f=Ft(c);return f&&f.valueDeclaration}}function hc(t,i,o,c,f){if(Eo(t))return;let p=1920|(Nr(t)?i&111551:0),m;if(t.kind===89){let S=$I(Gp(t)),I=Nr(t)&&!qi(t)?nY(t,i):void 0;if(m=gn(hr(f||t,t,i,o||I?void 0:S,!0,!1)),!m)return gn(I)}else if(t.kind===146||t.kind===286){let S=t.kind===146?t.left:t.expression,I=t.kind===146?t.right:t.name,F=hc(S,p,o,!1,f);if(!F||Eo(I))return;if(F===Di)return F;if(F.valueDeclaration&&Nr(F.valueDeclaration)&&Cs(F.valueDeclaration)&&F.valueDeclaration.initializer,m=gn(X_(Jd(F),I.text,i)),!m&&F.flags&2097152&&(m=gn(X_(Jd(Uc(F)),I.text,i))),!m){if(!o){let U=y4(F),Q=sa(I),ne=iu(t)&&iY(t);if(x&&i&788968&&ne&&sY(ne)){at(ne,P._0_refers_to_a_value_but_is_being_used_as_a_type_here_Did_you_mean_typeof_0,nu(ne));return}debugger}return}}else w.assertNever(t,"Unknown entity name kind.");return m.flags&i||c?m:Uc(m)}function y4(t,i){return t.parent?y4(t.parent,i)+"."+wi(t):wi(t,i,void 0,36)}function iY(t){for(;iu(t.parent);)t=t.parent;return t}function sY(t){let i=Gp(t),o=hr(i,i,111551,void 0,!0);if(o){for(;iu(i.parent);){let c=Ln(o);if(o=ni(c,i.parent.right.text),!o)return;i=i.parent}return o}}function f3(t,i){for(let o of t)switch(o.kind){case 176:case 236:case 240:case 243:case 244:_3(o,i);break;case 270:case 169:case 283:case 154:o.body&&_3(o,i);break;case 271:case 156:case 241:case 151:case 158:oY(o,i);break;default:w.assertNever(o,"Node should not have been registered for unused identifiers check")}}function oY(t,i){let o=Ft(t).declarations;if(!o||jo(o)!==t)return;let c=fh(t),f=new Set;for(let p of c){if(!p3(p))continue;let m=go(p.name),{parent:S}=p;if(S.kind!==259&&S.typeParameters.every(p3)){if(Im(f,S)){let I=kc(S),F=Ll(S)?_8(S):m8(I,S.typeParameters),Q=S.typeParameters.length===1?[P._0_is_declared_but_its_value_is_never_read,m]:[P.All_type_parameters_are_unused];i(p,1,Iu(I,F.pos,F.end-F.pos,...Q))}}else i(p,1,fi(p,P._0_is_declared_but_its_value_is_never_read,m))}}function p3(t){return!(gn(t.symbol).isReferenced&262144)&&!x1(t.name)}function jae(t,i){for(let o of t.members)switch(o.kind){case 154:case 152:let c=Ft(o);!c.isReferenced&&(b_(o,2)||El(o)&&Cc(o.name))&&!(o.flags&33554432)&&i(o,0,fi(o.name,P._0_is_declared_but_its_value_is_never_read,wi(c)));break;case 150:break;default:w.fail("Unexpected class member")}}function x1(t){return Tt(t)&&go(t).charCodeAt(0)===95}function aY(t){return(ms(t)||Cs(t)&&zm(t.parent.parent))&&x1(t.name)}function d3(t,i,o,c){let f=String(c(i)),p=t.get(f);p?p[1].push(o):t.set(f,[i,[o]])}function cY(t){return to(t,gs)}function lY(t,i,o){let c=hi(t)||t,f=P._0_is_declared_but_its_value_is_never_read;o(t,0,fi(c,f,i))}function _3(t,i){let o=new Map,c=new Map;t.locals.forEach(f=>{if(!(f.flags&262144?!(f.flags&3&&!(f.isReferenced&3)):f.isReferenced||f.exportSymbol)&&f.declarations){for(let p of f.declarations)if(!aY(p))if(Cs(p)){let m=u1(p)&1,S=hi(p);(!S||!x1(S))&&d3(c,p.parent,p,Sa)}else{let m=f.valueDeclaration&&cY(f.valueDeclaration),S=f.valueDeclaration&&hi(f.valueDeclaration);m&&S?x1(S)||(ms(p)&&Xy(p.parent)?d3(o,p.parent,p,Sa):i(m,1,fi(S,P._0_is_declared_but_its_value_is_never_read,ya(f)))):lY(p,ya(f),i)}}}),c.forEach(([f,p])=>{if(f.declarations?.length===p?.length)i(f,0,p.length===1?fi(qs(p).name,P._0_is_declared_but_its_value_is_never_read,v4(qs(p).name)):fi(f.parent.kind===242?f.parent:f,P.All_variables_are_unused));else for(let m of p)i(m,0,fi(m,P._0_is_declared_but_its_value_is_never_read,v4(m.name)))})}function v4(t){switch(t.kind){case 89:return go(t);case 265:return v4(aa(qs(t.elements),ms).name);default:return w.assertNever(t)}}function D1(t,i,o){let c=Tn(t),f=c.resolvedSignature;if(f&&f!==Ko&&!i)return f;let p=ye;f||(ye=le.length),c.resolvedSignature=Ko;let m=sZ(t,i,o||0);return ye=p,m!==Ko&&(c.resolvedSignature!==Ko&&(m=c.resolvedSignature),c.resolvedSignature=Ie===Te?m:f),m}function uY(t,i){let o=new Set,c=[];J3(i,()=>bS(t,c,void 0,0));for(let f of c)o.add(f);c.length=0,L4(i,()=>bS(t,c,void 0,0));for(let f of c)o.add(f);return as(o)}function bS(t,i,o,c){let f=_s(t,v_);ue=o;let p=f?D1(f,i,c):void 0;return ue=void 0,p}function qo(t){return t&&(t.flags&1)!==0}function E1(t,i){return T4(t,i)&i}function $f(t){return t.flags&524288?$6(fl(t)):t.flags&67108864?!0:t.flags&1048576?kt(t.types,$f):t.flags&2097152?Ti(t.types,$f):!1}function T4(t,i){t.flags&467927040&&(t=Ls(t)||yr);let o=t.flags;if(o&268435460)return G?16317953:16776705;if(o&134217856){let c=o&128&&t.value==="";return G?c?12123649:7929345:c?12582401:16776705}if(o&4096)return G?16317953:16776705;if(o&40)return G?16317698:16776450;if(o&256){let c=t.value===0;return G?c?12123394:7929090:c?12582146:16776450}if(o&2048){let c=t.value===0;return G?c?12122884:7928580:c?12581636:16775940}return o&16?G?16316168:16774920:o&524288?(i&(G?83427327:83886079))===0?0:$t(t)&16&&$f(t)?G?83427327:83886079:G?7888800:16736160:o&16384?9830144:o&32768?26607360:o&65536?42917664:o&67108864?G?7888800:16736160:o&131072?0:o&1048576?Tc(t.types,(c,f)=>c|T4(f,i),0):o&2097152?fY(t,i):83886079}function fY(t,i){let o=Ki(t,402784188),c=0,f=134217727;for(let p of t.types)if(!(o&&p.flags&524288)){let m=T4(p,i);c|=m,f&=m}return c&8256|f&134209471}function m3(t,i,o){if(G&&t.flags&2){if(va(i)){let f=nu(i);if(f.length<100)return at(i,P._0_is_of_type_unknown,f),At}return at(i,P.Object_is_of_type_unknown),At}let c=E1(t,50331648);if(c&50331648){o(i,c);let f=t;return f.flags&229376?At:f}return t}function pY(t,i){at(t,i&16777216?i&33554432?P.Cannot_invoke_an_object_which_is_possibly_null_or_undefined:P.Cannot_invoke_an_object_which_is_possibly_undefined:P.Cannot_invoke_an_object_which_is_possibly_null)}function dY(t){return t.expression.kind===89&&t.expression.text==="$"}function g3(t,i){if(i&2){let o=im(t);o.flags|=4}}function _Y(t){return!!(t.typeParameters&&o3(Ei(t)))}function mY(t,i,o,c){return qo(t)||qo(i)&&!!(t.flags&262144)||!o&&!c&&!(i.flags&1048576)&&!(dc(i).flags&131072)&&Si(t,R)}function gY(t,i,o){if(dY(t)&&Y===1&&Xn(t,Au))return ui;let c,f=Lr(t.expression,void 0,void 0,16);if(HS(t)?console.debug("todo - call chain"):c=0,f=m3(f,t.expression,pY),f===or)return pc;let p=Uo(f);if(Ws(p))return IS(t);let m=Oi(p,0),S=Oi(p,1).length;if(mY(f,p,m.length,S))return!Ws(f)&&t.typeArguments&&at(t,P.Untyped_function_calls_may_not_accept_type_arguments),qT(t);if(!m.length){if(S)at(t,P.Value_of_type_0_is_not_callable_Did_you_mean_to_include_new,rn(f));else{let I;if(t.arguments.length===1){let F=$n(t).text;Mo(F.charCodeAt(ts(F,t.expression.end,!0)-1))&&(I=fi(t.expression,P.Are_you_missing_a_semicolon))}rZ(t.expression,p,0,I)}return IS(t)}return o&8&&!t.typeArguments&&m.some(_Y)?(g3(t,o),Ko):m.some(I=>Nr(I.declaration)&&!!SP(I.declaration))?(at(t,P.Value_of_type_0_is_not_callable_Did_you_mean_to_include_new,rn(f)),IS(t)):W3(t,m,i,o,c)}function hY(t,i,o){let c=X0(t),f=Oi(c,0);return W3(t,f,i,o,0)}function h3(t=0){return t&848330095}function rn(t,i,o=1064960,c=S0("")){let p=fe.typeToTypeNode(t,i,h3(o)|70221824|0);if(p===void 0)return console.warn("expected a type node but didn't get one"),"<never>";let m=t!==Yo?pg():Yj(),S=i&&$n(i);m.writeNode(4,p,S,c);let I=c.getText(),F=Eb*2;return F&&I&&I.length>=F?I.substr(0,F-3)+"...":I}function yY(t,i,o){let c,f,p=0,m,S=-1,I;w.assert(!i.length);for(let F of t){let U=F.declaration&&Ft(F.declaration),Q=F.declaration&&F.declaration.parent;!f||U===f?c&&Q===c?m=m+1:(c=Q,m=p):(m=p=i.length,c=Q),f=U,RA(F)||ute(F)?(S++,I=S,p++):I=m,i.splice(I,0,F)}}function eh(t){let i=$n(t),o=Tn(i);o.flags&1?w.assert(!o.deferredNodes,"A type-checked file should have no deferred nodes."):(o.deferredNodes||(o.deferredNodes=new Set),o.deferredNodes.add(t))}function vY(t,i,o,c,f){return w.assert(i.length>0),eh(t),c||i.length===1||i.some(p=>!!p.typeParameters)?SY(t,i,o,f):xY(i)}function TY(t,i){let o=-1,c=-1;for(let f=0;f<t.length;f++){let p=t[f],m=Va(p);if(Gl(p)||m>=i)return f;m>c&&(c=m,o=f)}return o}function SY(t,i,o,c){let f=TY(i,ue===void 0?o.length:ue),p=i[f],{typeParameters:m}=p;if(!m)return p;let S=cI(t)?t.typeArguments:void 0,I=S?NS(p,bY(S,m,Nr(t))):kY(t,m,p,o,c);return i[f]=I,I}function bY(t,i,o){let c=t.map(an);for(;c.length>i.length;)c.pop();for(;c.length<i.length;)c.push(Mp(i[c.length])||ga(i[c.length])||XC(o));return c}function kY(t,i,o,c,f){let p=I1(i,o,Nr(t)?2:0),m=k4(t,o,c,f|4|8,p);return NS(o,m)}function y3(t,i){return v3(t,vn(i,2))}function v3(t,i){return xp(qs(t),i)}function CY(t){let i=t.parameters.length;return $a(t)?i-1:i}function PY(t){if($a(t)){let o=Ln(t.parameters[t.parameters.length-1]);return o&&Hl(o,An)}}function xY(t){let i=Vi(t,I=>I.thisParameter),o;i.length&&(o=y3(i,i.map(q0)));let{min:c,max:f}=$F(t,CY),p=[];for(let I=0;I<f;I++){let F=Vi(t,U=>$a(U)?I<U.parameters.length-1?U.parameters[I]:jo(U.parameters):I<U.parameters.length?U.parameters[I]:void 0);w.assert(F.length!==0),p.push(y3(F,Vi(t,U=>Md(U,I))))}let m=Vi(t,I=>$a(I)?jo(I.parameters):void 0),S=1024;if(m.length!==0){let I=Qs(vn(Vi(t,PY),2));p.push(v3(m,I)),S|=1}return t.some(RA)&&(S|=2),Pu(t[0].declaration,void 0,o,p,yi(t.map(Ei)),void 0,c,S)}function DY(t,i,o){let c=o.flags;return c&2097152?T3(t,i,o.types):(Jc(o)?i&16777216||(i|=16777216,t.set(o.id.toString(),o)):(c&3?(o===Ts&&(i|=8388608),Ws(o)&&(i|=1073741824)):(G||!(c&98304))&&(o===Jn&&(i|=262144,o=Zn),t.has(o.id.toString())||(o.flags&101280&&i&101280&&(i|=67108864),t.set(o.id.toString(),o))),i|=c&473694143),i)}function T3(t,i,o){for(let c of o)i=DY(t,i,Js(c));return i}function EY(t,i){let o=t.length;for(;o>0;){o--;let c=t[o];(c.flags&4&&i&402653312||c.flags&8&&i&256||c.flags&64&&i&2048||c.flags&4096&&i&8192||c.flags&16384&&i&32768||Jc(c)&&i&470302652)&&Qp(t,o)}}function wY(t,i){for(let o of t)if(!mc(o.types,i)){if(i===Jn)return mc(o.types,Zn);if(i===Zn)return mc(o.types,Jn);let c=i.flags&128?mr:i.flags&288?An:i.flags&2048?br:void 0;if(!c||!mc(o.types,c))return!1}return!0}function NY(t){let i,o=Pl(t,m=>!!($t(m)&32768));if(o<0)return!1;let c=o+1;for(;c<t.length;){let m=t[c];$t(m)&32768?((i||(i=[t[o]])).push(m),Qp(t,c)):c++}if(!i)return!1;let f=[],p=[];for(let m of i)for(let S of m.types)if(d1(f,S)&&wY(i,S)){if(S===Zn&&p.length&&p[0]===Jn)continue;if(S===Jn&&p.length&&p[0]===Zn){p[0]=Jn;continue}d1(p,S)}return t[o]=wp(p,32768),!0}function kS(t){return t===Jn||!!(t.flags&1048576)&&t.types[0]===Jn}function S3(t,i){for(let o=0;o<t.length;o++)t[o]=Us(t[o],c=>!(c.flags&i))}function b3(t){return Tc(t,(i,o)=>o.flags&1048576?i*o.types.length:o.flags&131072?0:i,1)}function k3(t){let i=b3(t);return i>=1e5?(Dt?.instant(Dt.Phase.CheckTypes,"checkCrossProductUnion_DepthLimit",{typeIds:t.map(o=>o.id),size:i}),at(E,P.Expression_produces_a_union_type_that_is_too_complex_to_represent),!1):!0}function IY(t,i){let o=b3(t),c=[];for(let f=0;f<o;f++){let p=t.slice(),m=f;for(let I=t.length-1;I>=0;I--)if(t[I].flags&1048576){let F=t[I].types,U=F.length;p[I]=F[m%U],m=Math.floor(m/U)}let S=yi(p,i);S.flags&131072||c.push(S)}return c}function C3(t){return!(t.flags&3145728)||t.aliasSymbol?1:t.flags&1048576&&t.origin?C3(t.origin):S4(t.types)}function S4(t){return Tc(t,(i,o)=>i+C3(o),0)}function AY(t,i,o,c){let f=wn(2097152);return f.objectFlags=i|cn(t,98304),f.types=t,f.aliasSymbol=o,f.aliasTypeArguments=c,f}function P3(t){return!!(t.flags&402653184)}function yi(t,i=0,o,c){let f=new Map,p=T3(f,0,t),m=as(f.values()),S=0;if(p&131072)return ki(m,or)?or:Bn;if(G&&p&98304&&p&84410368||p&67108864&&p&402783164||p&402653316&&p&67238712||p&2344&&p&469889684||p&64&&p&469889684||p&49152&&p&469842876)return Bn;if(p&1)return p&8388608?Ts:p&1073741824?At:Cn;if(!G&&p&98304)return p&16777216?Bn:p&32768?Zn:pe;if((p&4&&p&402653312||p&8&&p&256||p&64&&p&2048||p&4096&&p&8192||p&16384&&p&32768||p&16777216&&p&470302652)&&(i&1||EY(m,p)),p&262144&&(m[m.indexOf(Zn)]=Jn),m.length===0)return yr;if(m.length===1)return m[0];if(m.length===2&&!(i&2)){let U=m[0].flags&8650752?0:1,Q=m[U],ne=m[1-U];if(Q.flags&8650752&&(ne.flags&469893052&&!P3(ne)||p&16777216)){let ae=Ls(Q);if(ae&&qa(ae,Ge=>!!(Ge.flags&469893052)||Jc(Ge))){if(P1(ae,ne))return Q;if(!(ae.flags&1048576&&Zl(ae,Ge=>P1(Ge,ne)))&&!P1(ne,ae))return Bn;S=67108864}}}let I=ma(m)+(i&2?"*":$d(o,c)),F=xs.get(I);if(!F){if(p&1048576)if(NY(m))F=yi(m,i,o,c);else if(Ti(m,U=>!!(U.flags&1048576&&U.types[0].flags&32768))){let U=kt(m,kS)?Jn:Zn;S3(m,32768),F=vn([yi(m,i),U],1,o,c)}else if(Ti(m,U=>!!(U.flags&1048576&&(U.types[0].flags&65536||U.types[1].flags&65536))))S3(m,65536),F=vn([yi(m,i),pe],1,o,c);else if(m.length>=4){let U=Math.floor(m.length/2);F=yi([yi(m.slice(0,U),i),yi(m.slice(U),i)],i,o,c)}else{if(!k3(m))return At;let U=IY(m,i),Q=kt(U,ne=>!!(ne.flags&2097152))&&S4(U)>S4(m)?Hn(2097152,m):void 0;F=vn(U,1,o,c,Q)}else F=AY(m,S,o,c);xs.set(I,F)}return F}function CS(t){if($a(t)){let i=Ln(t.parameters[t.parameters.length-1]);if(!vi(i))return qo(i)?Ci:i;if(i.target.combinedFlags&12)return Kg(i,i.target.fixedLength)}}function th(t){let i=CS(t);return i&&!Ys(i)&&!qo(i)?i:void 0}function b4(t){return t=ws(t),t}function $p(t){return Ys(t)||!(t.flags&98304)&&Si(t,kr)}function x3(t){return t.flags&1048576?Zs(t,x3):t.flags&1||w1(Ls(t)||t)?t:vi(t)?Eu(Qd(t),t.target.elementFlags,!1,t.target.labeledElementDeclarations):Eu([t],[8])}function D3(t){return t&&t.mapper}function E3(t){return{typeParameter:t.typeParameter,candidates:t.candidates&&t.candidates.slice(),contraCandidates:t.contraCandidates&&t.contraCandidates.slice(),inferredType:t.inferredType,priority:t.priority,topLevel:t.topLevel,isFixed:t.isFixed,impliedArity:t.impliedArity}}function OY(t,i=0){return t&&w4(Xt(t.inferences,E3),t.signature,t.flags|i,t.compareTypes)}function e_(t){return!!(t.candidates||t.contraCandidates)}function LY(t){let i=Yr(t.inferences,e_);return i.length?w4(Xt(i,E3),t.signature,t.flags,t.compareTypes):void 0}function k4(t,i,o,c,f){let p=Ti(i.typeParameters,U=>!!Mp(U)),m=Mc(t,p?8:0);if(m){let U=Ei(i);if(cl(U)){let Q=im(t);if(!(!p&&Mc(t,8)!==m)){let nt=D3(OY(Q,1)),wt=zn(m,nt),ht=Mf(wt),Rt=ht&&ht.typeParameters?l1(A4(ht,ht.typeParameters)):wt;Af(f.inferences,Rt,U,128)}let ae=I1(i.typeParameters,i,f.flags),Ge=zn(m,Q&&Q.returnMapper);Af(ae.inferences,Ge,U),f.returnMapper=kt(ae.inferences,e_)?D3(LY(ae)):void 0}}let S=th(i),I=S?Math.min(Va(i)-1,o.length):o.length;if(S&&S.flags&262144){let U=Zr(f.inferences,Q=>Q.typeParameter===S);U&&(U.impliedArity=Pl(o,PS,I)<0?o.length-I:void 0)}let F=Sf(i);F&&cl(F)&&console.debug("todo - inferTypeArguments thisType");for(let U=0;U<I;U++){let Q=o[U];if(Q.kind!==297){let ne=Ql(i,U);if(cl(ne)){let ae=H0(Q,ne,f,c);Af(f.inferences,ae,ne)}}}if(S&&cl(S)){let U=C4(o,I,o.length,S,f,c);Af(f.inferences,U,S)}return FN(f)}function C4(t,i,o,c,f,p){if(i>=o-1){let U=t[o-1];if(PS(U)){let Q=H0(U.expression,c,f,p);return $p(Q)?x3(Q):Qs(zf(33,Q,Zn,U.kind===294?U.expression:U),!1)}else return Co(U)}let S=[],I=[],F=[];for(let U=i;U<o;U++){let Q=t[U];if(PS(Q)){let ne=Lr(Q.expression);$p(ne)?(S.push(ne),I.push(8)):(S.push(zf(33,ne,Zn,Q.kind===294?Q.expression:Q)),I.push(4))}else{let ne=jc(c,Ka(U-i),256),ae=H0(Q,ne,f,p),Ge=Ki(ne,406978492);S.push(Ge?Js(ae):Bd(ae)),I.push(1)}Q.kind===275&&Q.tupleNameSource?F.push(Q.tupleNameSource):F.push(void 0)}return Eu(S,I,!1,F)}function Eu(t,i,o=!1,c=[]){let f=P4(i||Xt(t,p=>1),o,c);return f===Io?ns:t.length?MC(f,t):f}function P4(t,i,o){if(t.length===1&&t[0]&4)return i?Ye:V;let c=Xt(t,p=>p&1?"#":p&2?"?":p&4?".":"*").join()+(i?"R":"")+(kt(o,p=>!!p)?","+Xt(o,p=>p?Sa(p):"_").join(","):""),f=Ui.get(c);return f||Ui.set(c,f=FY(t,i,o)),f}function FY(t,i,o){let c=t.length,f=Kf(t,Q=>!!(Q&9)),p,m=[],S=0;if(c){p=new Array(c);for(let Q=0;Q<c;Q++){let ne=p[Q]=_c(),ae=t[Q];if(S|=ae,!(S&12)){let Ge=es(4|(ae&2?16777216:0),""+Q,i?8:0);Ge.links.tupleLabelDeclaration=o?.[Q],Ge.links.type=ne,m.push(Ge)}}}let I=m.length,F=es(4,"length",i?8:0);if(S&12)F.links.type=An;else{let Q=[];for(let ne=f;ne<=c;ne++)Q.push(Ka(ne));F.links.type=vn(Q)}m.push(F);let U=dl(12);return U.typeParameters=p,U.outerTypeParameters=void 0,U.localTypeParameters=p,U.instantiations=new Map,U.instantiations.set(ma(U.typeParameters),U),U.target=U,U.resolvedTypeArguments=U.typeParameters,U.thisType=_c(),U.thisType.isThisType=!0,U.thisType.constraint=U,U.declaredProperties=m,U.declaredCallSignatures=Oe,U.declaredConstructSignatures=Oe,U.declaredIndexInfos=Oe,U.elementFlags=t,U.minLength=f,U.fixedLength=I,U.hasRestElement=!!(S&12),U.combinedFlags=S,U.readonly=i,U.labeledElementDeclarations=o,U}function RY(t){return w1(t)||!(t.flags&98305)&&Si(t,Ci)}function w1(t){return Ys(t)&&!ym(t)||vi(t)&&!t.target.readonly}function vi(t){return!!($t(t)&4&&t.target.objectFlags&8)}function MY(t,i,o,c){let f=H1.createSyntheticExpression(i,o,c);return Ho(f,t),ic(f,t),f}function N1(t,i,o,c,f,p,m,S){let I={errors:void 0,skipLogging:!0},F=jV(o),U=P.Argument_of_type_0_is_not_assignable_to_parameter_of_type_1,Q=th(o),ne=Q?Math.min(Va(o)-1,i.length):i.length;for(let Ge=0;Ge<ne;Ge++){let nt=i[Ge],wt=Ql(o,Ge),ht=H0(nt,wt,void 0,f),Rt=f&4?g1(ht):ht,Ut=S?zn(Rt,S.nonFixingMapper):Rt,It=b4(nt);if(!SI(Ut,wt,c,p?It:void 0,It,U,m,I))return w.assert(!p||!!I.errors,"parameter should have errors when reporting errors"),ae(nt,Ut,wt),I.errors||Oe}if(Q){let Ge=C4(i,ne,i.length,Q,void 0,f),nt=i.length-ne,wt=p?nt===0?t:nt===1?b4(i[ne]):Aa(MY(t,Ge),i[ne].pos,i[i.length-1].end):void 0;if(!Jp(Ge,Q,c,wt,U,void 0,I))return w.assert(!p||!!I.errors,"rest parameter should have errors when reporting errors"),ae(wt,Ge,Q),I.errors||Oe}return;function ae(Ge,nt,wt){Ge&&p&&I.errors&&I.errors.length}}function jY(t){return op(t)?Ii(t.expression)?t.expression.name:t.expression:t}function PS(t){return!!t&&t.kind===294}function x4(t){return Pl(t,PS)}function xS(t,i,...o){if(hs(t)){let{sourceFile:c,start:f,length:p}=U3(t);return"message"in i?Iu(c,f,p,i,...o):NP(c,i)}else return"message"in i?fi(t,i,...o):s_($n(t),t,i)}function w3(t,i,o,c){let f=x4(o);if(f>-1)return fi(o[f],P.A_spread_argument_must_either_have_a_tuple_type_or_be_passed_to_a_rest_parameter);let p=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,S=Number.NEGATIVE_INFINITY,I=Number.POSITIVE_INFINITY,F;for(let ae of i){let Ge=ul(ae),nt=Va(ae);Ge<p&&(p=Ge,F=ae),m=Math.max(m,nt),Ge<o.length&&Ge>S&&(S=Ge),o.length<nt&&nt<I&&(I=nt)}let U=kt(i,Gl),Q=U?p:p<m?p+"-"+m:p,ne=U?P.Expected_at_least_0_arguments_but_got_1:P.Expected_0_arguments_but_got_1;if(p<o.length&&o.length<m){if(c){let ae=pi(void 0,P.No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments,o.length,S,I);return ae=pi(ae,c),xS(t,ae)}return xS(t,P.No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments,o.length,S,I)}else if(o.length<p){let ae;if(c){let nt=pi(void 0,ne,Q,o.length);nt=pi(nt,c),ae=xS(t,nt)}else ae=xS(t,ne,Q,o.length);let Ge=F?.declaration?.parameters[F.thisParameter?o.length+1:o.length];if(Ge&&!(Ge.flags&4)){let nt=ds(Ge.name)?[P.An_argument_matching_this_binding_pattern_was_not_provided]:X1(Ge)?[P.Arguments_for_the_rest_parameter_0_were_not_provided,go(Gp(Ge.name))]:[P.An_argument_for_0_was_not_provided,Ge.name?go(Gp(Ge.name)):o.length],wt=fi(Ge,...nt);return Rs(ae,wt)}return ae}else if(o.length){let ae=Ve.createNodeArray(o.slice(m)),Ge=kc(qs(ae)),nt=qs(ae).pos,wt=jo(ae).end;if(wt===nt&&wt++,Aa(ae,nt,wt),c){let ht=pi(void 0,ne,Q,o.length);return ht=pi(ht,c),z1(Ge,ae,ht)}return V1(Ge,ae,ne,Q,o.length)}}function N3(t,i,o,c){let f=Nr(t.declaration),p=t.typeParameters,m=Lp(Xt(i,jn),p,ku(p),f),S;for(let I=0;I<i.length;I++){w.assert(p[I]!==void 0,"Should not call checkTypeArguments with too many type arguments");let F=ga(p[I]);if(F){let U=o&&c?()=>pi(void 0,P.Type_0_does_not_satisfy_the_constraint_1):void 0,Q=c||P.Type_0_does_not_satisfy_the_constraint_1;S||(S=Jo(p,m));let ne=m[I];if(!Rf(ne,Up(zn(F,S),ne),o?i[I]:void 0,Q,U))return}}return m}function I3(t,i){let o=Pr(t.typeParameters),c=ku(t.typeParameters);return!kt(i)||i.length>=c&&i.length<=o}function BY(t){return!!(t.flags&49155)}function DS(t,i,o,c=!1){let f,p=!1,m=Va(o),S=ul(o);if(t.arguments){f=c?i.length+1:i.length,p=!t.arguments.isComplete;let I=x4(i);if(I>=0)return I>=ul(o)&&(Gl(o)||I<Va(o))}else return w.assert(t.kind===276),ul(o)===0;if(!Gl(o)&&f>m)return!1;if(p||f>=S)return!0;for(let I=f;I<S;I++){let F=Ql(o,I);if(Us(F,Nr(t)&&!G?BY:xN).flags&131072)return!1}return!0}function WY(t){return t.typeParameters?t.implementationSignatureCache||(t.implementationSignatureCache=UY(t)):t}function UY(t){return t.typeParameters?lm(t,Jo([],[])):t}function D4(t){return{typeParameter:t,candidates:void 0,contraCandidates:void 0,inferredType:void 0,priority:void 0,topLevel:!0,isFixed:!1,impliedArity:void 0}}function I1(t,i,o,c){return w4(t.map(D4),i,o,c||Oc)}function E4(t){return!!($t(t)&16512)}function JY(t){if(t.length>1){let i=Yr(t,E4);if(i.length){let o=vn(i,2);return ri(Yr(t,c=>!E4(c)),[o])}}return t}function w4(t,i,o,c){let f={inferences:t,signature:i,flags:o,compareTypes:c,mapper:nl,nonFixingMapper:nl};return f.mapper=XY(f),f.nonFixingMapper=YY(f),f}function zY(t){let i;for(let o of t)if(!(o.flags&131072)){let c=_l(o);if(i??(i=c),c===o||c!==i)return!1}return!0}function A3(t){return pl(t,50331648)}function O3(t,i){let o=i&~t.flags&98304;return o===0?t:vn(o===32768?[t,Zn]:o===65536?[t,pe]:[t,Zn,pe])}function L3(t){return Tc(t,(i,o)=>i|(o.flags&1048576?L3(o.types):o.flags),0)}function F3(t){return Tc(t.symbol?.declarations,(i,o)=>i|ld(o),0)&49152}function VY(t){if(t.length===1)return t[0];let i=G?xo(t,c=>Us(c,f=>!(f.flags&98304))):t,o=zY(i)?vn(i):Tc(i,(c,f)=>Vp(c,f)?f:c);return i===t?o:O3(o,L3(t)&98304)}function R3(t){return M3(t,jt(t).typeParameters)}function M3(t,i=Oe){let o=jt(t);if(!o.variances){Dt?.push(Dt.Phase.CheckTypes,"getVariancesWorker",{arity:i.length,id:zs(bo(t))});let c=he,f=ye;he||(he=!0,ye=le.length),o.variances=Oe;let p=[];for(let m of i){let S=F3(m),I=S&32768?S&16384?0:1:S&16384?2:void 0;if(I===void 0){let F=!1,U=!1,Q=N;N=Ge=>Ge?U=!0:F=!0;let ne=h1(t,m,Jl),ae=h1(t,m,zl);I=(Si(ae,ne)?1:0)|(Si(ne,ae)?2:0),I===3&&Si(h1(t,m,vf),ne)&&(I=4),N=Q,(F||U)&&(F&&(I|=8),U&&(I|=16))}p.push(I)}c||(he=!1,ye=f),o.variances=p,Dt?.pop({variances:p.map(w.formatVariance)})}return o.variances}function qY(t){let i=ga(t);return!!i&&Ki(i.flags&16777216?E5(i):i,406978492)}function $Y(t,i){let o=Ea(t);return o?!!o.type&&Wg(o.type,i):Wg(Ei(t),i)}function HY(t,i){let o=JY(t.candidates),c=qY(t.typeParameter),f=!c&&t.topLevel&&(t.isFixed||!$Y(i,t.typeParameter)),p=c?xo(o,Js):f?xo(o,Bd):o,m=t.priority&416?vn(p,2):VY(p);return rc(m)}function GY(t){return t.priority&416?yi(t.contraCandidates):QY(t.contraCandidates)}function QY(t){return Tc(t,(i,o)=>Vp(o,i)?o:i)}function ga(t){return fS(t)?zg(t):void 0}function N4(t,i){let o=t.inferences[i];if(!o.inferredType){let c,f;if(t.signature){let m=o.candidates?HY(o,t.signature):void 0,S=o.contraCandidates?GY(o):void 0;if(m||S){let I=m&&(!S||!(m.flags&131073)&&kt(o.contraCandidates,F=>Si(m,F))&&Ti(t.inferences,F=>F!==o&&ga(F.typeParameter)!==o.typeParameter||Ti(F.candidates,U=>Si(U,m))));c=I?m:S,f=I?S:m}else if(t.flags&1)c=or;else{let I=Mp(o.typeParameter);I&&(c=zn(I,OV(AV(t,i),t.nonFixingMapper)))}}else c=j3(o);o.inferredType=c||XC(!!(t.flags&2));let p=ga(o.typeParameter);if(p){let m=zn(p,t.nonFixingMapper);(!c||!t.compareTypes(c,Up(m,c)))&&(o.inferredType=f&&t.compareTypes(f,Up(m,f))?f:m)}}return o.inferredType}function j3(t){return t.candidates?vn(t.candidates,2):t.contraCandidates?yi(t.contraCandidates):void 0}function I4(t,i){return w.attachDebugPrototypeIfDebug({kind:2,sources:t,targets:i})}function YY(t){return I4(Xt(t.inferences,i=>i.typeParameter),Xt(t.inferences,(i,o)=>()=>N4(t,o)))}function ZY(t){if(t.intraExpressionInferenceSites){for(let{node:i,type:o}of t.intraExpressionInferenceSites)Mc(i,2)&&w.fail("implement me");t.intraExpressionInferenceSites=void 0}}function ES(t){for(let i of t)i.isFixed||(i.inferredType=void 0)}function XY(t){return I4(Xt(t.inferences,i=>i.typeParameter),Xt(t.inferences,(i,o)=>()=>(i.isFixed||(ZY(t),ES(t.inferences),i.isFixed=!0),N4(t,o))))}function wS(t,i,o,c){let f=A4(t,Lp(i,t.typeParameters,ku(t.typeParameters),o));if(c){let p=B3(Ei(f));if(p){let m=V0(p);m.typeParameters=c;let S=V0(f);return S.resolvedReturnType=l1(m),S}}return f}function A4(t,i){let o=t.instantiations||(t.instantiations=new Map),c=ma(i),f=o.get(c);return f||o.set(c,f=NS(t,i)),f}function NS(t,i){return lm(t,KY(t,i),!0)}function KY(t,i){return Jo(xo(t.typeParameters,o=>o.mapper?zn(o,o.mapper):o),i)}function B3(t){return Vg(t,0,!1)||Vg(t,1,!1)}function W3(t,i,o,c,f,p){let F=!M&&!o,U;nR(t)||(U=t.typeArguments,t.expression.kind!==71&&Jt(U,Dn));let Q=o||[];yY(i,Q,f),w.assert(Q.length,"Revert #54442 and add a testcase with whatever triggered this");let ne=WT(t),ae=Q.length===1&&!Q[0].typeParameters,Ge=!ae&&kt(ne,tc)?4:0,nt,wt,ht,Rt,Ut=!!(c&16)&&t.kind===272&&t.arguments.hasTrailingComma;if(Q.length>1&&(Rt=ln(Q,Ua,ae,Ut)),Rt||(Rt=ln(Q,ua,ae,Ut)),Rt)return Rt;if(Rt=vY(t,Q,ne,!!o,c),Tn(t).resolvedSignature=Rt,F)if(nt)if(nt.length===1||nt.length>3){let Pn=nt[nt.length-1],pr;nt.length>3&&(pr=pi(pr,P.The_last_overload_gave_the_following_error),pr=pi(pr,P.No_overload_matches_this_call)),p&&(pr=pi(pr,p));let Tr=N1(t,ne,Pn,ua,0,!0,()=>pr,void 0);if(Tr)for(let rs of Tr)Pn.declaration&&nt.length>3&&Rs(rs,fi(Pn.declaration,P.The_last_overload_is_declared_here)),It(Pn,rs),Vn.add(rs);else w.fail("No error for last overload signature")}else{let Pn=[],pr=0,Tr=Number.MAX_VALUE,rs=0,ji=0;for(let po of nt){let xe=N1(t,ne,po,ua,0,!0,()=>pi(void 0,P.Overload_0_of_1_2_gave_the_following_error,ji+1,Q.length,qg(po)),void 0);xe?(xe.length<=Tr&&(Tr=xe.length,rs=ji),pr=Math.max(pr,xe.length),Pn.push(xe)):w.fail("No error for 3 or fewer overload signatures"),ji++}let Br=pr>1?Pn[rs]:kp(Pn);w.assert(Br.length>0,"No errors reported for 3 or fewer overload signatures");let zi=pi(Xt(Br,HF),P.No_overload_matches_this_call);p&&(zi=pi(zi,p));let dr=[...ao(Br,po=>po.relatedInformation)],Po;if(Ti(Br,po=>po.start===Br[0].start&&po.length===Br[0].length&&po.file===Br[0].file)){let{file:po,start:Qe,length:xe}=Br[0];Po={file:po,start:Qe,length:xe,code:zi.code,category:zi.category,messageText:zi,relatedInformation:dr}}else Po=s_($n(t),jY(t),zi,dr);It(nt[0],Po),Vn.add(Po)}else if(wt)Vn.add(w3(t,[wt],ne,p));else if(ht)N3(ht,t.typeArguments,!0,p);else{let Pn=Yr(i,pr=>I3(pr,U));Pn.length===0?Vn.add(eZ(t,i,U,p)):Vn.add(w3(t,Pn,ne,p))}return Rt;function It(Pn,pr){let Tr=nt,rs=wt,ji=ht,Br=Pn.declaration?.symbol?.declarations||Oe,dr=Br.length>1?Zr(Br,Po=>tu(Po)&&x_(Po.body)):void 0;if(dr){let Po=Ai(dr),po=!Po.typeParameters;ln([Po],ua,po)&&Rs(pr,fi(dr,P.The_call_would_have_succeeded_against_this_implementation_but_implementation_signatures_of_overloads_are_not_externally_visible))}nt=Tr,wt=rs,ht=ji}function ln(Pn,pr,Tr,rs=!1){if(nt=void 0,wt=void 0,ht=void 0,Tr){let ji=Pn[0];if(kt(U)||!DS(t,ne,ji,rs))return;if(N1(t,ne,ji,pr,0,!1,void 0,void 0)){nt=[ji];return}return ji}for(let ji=0;ji<Pn.length;ji++){let Br=Pn[ji];if(!I3(Br,U)||!DS(t,ne,Br,rs))continue;let zi,dr;if(Br.typeParameters){let po=Br.typeParameters[0].symbol.declarations?.[0]?.parent||(Br.declaration&&jm(Br.declaration)?Br.declaration.parent:Br.declaration);po&&Xn(t,xe=>xe===po)&&(Br=WY(Br));let Qe;if(kt(U)){if(Qe=N3(Br,U,!1),!Qe){ht=Br;continue}}else dr=I1(Br.typeParameters,Br,Nr(t)?2:0),Qe=Bc(k4(t,Br,ne,Ge|8,dr),dr.nonFixingMapper),Ge|=dr.flags&4?8:0;if(zi=wS(Br,Qe,Nr(Br.declaration),dr&&dr.inferredTypeParameters),th(Br)&&!DS(t,ne,zi,rs)){wt=zi;continue}}else zi=Br;if(N1(t,ne,zi,pr,Ge,!1,void 0,dr)){(nt||(nt=[])).push(zi);continue}if(Ge){if(Ge=0,dr){let Po=Bc(k4(t,Br,ne,Ge,dr),dr.mapper);if(zi=wS(Br,Po,Nr(Br.declaration),dr.inferredTypeParameters),th(Br)&&!DS(t,ne,zi,rs)){wt=zi;continue}}if(N1(t,ne,zi,pr,Ge,!1,void 0,dr)){(nt||(nt=[])).push(zi);continue}}return Pn[ji]=zi,zi}}}function eZ(t,i,o,c){let f=o.length;if(i.length===1){let S=i[0],I=ku(S.typeParameters),F=Pr(S.typeParameters);if(c){let U=pi(void 0,P.Expected_0_type_arguments_but_got_1,I<F?I+"-"+F:I,f);return U=pi(U,c),z1($n(t),o,U)}return V1($n(t),o,P.Expected_0_type_arguments_but_got_1,I<F?I+"-"+F:I,f)}let p=-1/0,m=1/0;for(let S of i){let I=ku(S.typeParameters),F=Pr(S.typeParameters);I>f?m=Math.min(m,I):F<f&&(p=Math.max(p,F))}if(p!==-1/0&&m!==1/0){if(c){let S=pi(void 0,P.No_overload_expects_0_type_arguments_but_overloads_do_exist_that_expect_either_1_or_2_type_arguments,f,p,m);return S=pi(S,c),z1($n(t),o,S)}return V1($n(t),o,P.No_overload_expects_0_type_arguments_but_overloads_do_exist_that_expect_either_1_or_2_type_arguments,f,p,m)}if(c){let S=pi(void 0,P.Expected_0_type_arguments_but_got_1,p===-1/0?m:p,f);return S=pi(S,c),z1($n(t),o,S)}return V1($n(t),o,P.Expected_0_type_arguments_but_got_1,p===-1/0?m:p,f)}function tZ(t,i,o){let c,f=o===0;if(i.flags&1048576){let m=i.types,S=!1;for(let I of m)if(Oi(I,o).length!==0){if(S=!0,c)break}else if(c||(c=pi(c,f?P.Type_0_has_no_call_signatures:P.Type_0_has_no_construct_signatures,rn(I)),c=pi(c,f?P.Not_all_constituents_of_type_0_are_callable:P.Not_all_constituents_of_type_0_are_constructable,rn(i))),S)break;S||(c=pi(void 0,f?P.No_constituent_of_type_0_is_callable:P.No_constituent_of_type_0_is_constructable,rn(i))),c||(c=pi(c,f?P.Each_member_of_the_union_type_0_has_signatures_but_none_of_those_signatures_are_compatible_with_each_other:P.Each_member_of_the_union_type_0_has_construct_signatures_but_none_of_those_signatures_are_compatible_with_each_other,rn(i)))}else c=pi(c,f?P.Type_0_has_no_call_signatures:P.Type_0_has_no_construct_signatures,rn(i));let p=f?P.This_expression_is_not_callable:P.This_expression_is_not_constructable;return{messageChain:pi(c,p),relatedMessage:void 0}}function U3(t){let i=kc(t),{start:o,length:c}=H2(i,Ii(t.expression)?t.expression.name:t.expression);return{start:o,length:c,sourceFile:i}}function nZ(t,i,o){t.symbol}function rZ(t,i,o,c){let{messageChain:f,relatedMessage:p}=tZ(t,i,o),m=s_(kc(t),t,f);if(p&&Rs(m,fi(t,p)),hs(t.parent)){let{start:S,length:I}=U3(t.parent);m.start=S,m.length=I}Vn.add(m),nZ(i,o,c?Rs(m,c):m)}function O4(t,i){if(t.flags&3670016){let o=fl(t);return i===0?o.callSignatures:o.constructSignatures}return Oe}function t_(t,i){return t.flags&1048576?Jt(t.types,i):i(t)}function Zl(t,i){return t.flags&1048576?kt(t.types,i):i(t)}function qa(t,i){return t.flags&1048576?Ti(t.types,i):i(t)}function Bae(t,i){return t.flags&3145728?Ti(t.types,i):i(t)}function iZ(t){return!t||!V.symbol||!Ye.symbol?!1:!!Rp(t,V.symbol)||!!Rp(t,Ye.symbol)}function Oi(t,i){let o=O4(xd(t),i);if(i===0&&!Pr(o)&&t.flags&1048576){if(t.arrayFallbackSignatures)return t.arrayFallbackSignatures;let c;qa(t,f=>!!f.symbol?.parent&&iZ(f.symbol.parent)&&(c?c===f.symbol.name:(c=f.symbol.name,!0)))&&w.fail("TODO - implement me - getSignaturesOfType"),t.arrayFallbackSignatures=o}return o||Oe}function IS(t){return qT(t),Ao}function sZ(t,i,o){switch(t.kind){case 272:return gY(t,i,o);case 276:return oZ(t,i,o);case 283:return hY(t,i,o);case 269:w.fail("implement me")}w.assertNever(t,"Branch in 'resolveSignature' should be unreachable.")}function oZ(t,i,o){let c=t.expression&&xc(t.expression)?Bp(t.expression):Cn;if(c===or)return pc;if(c=Uo(c),Ws(c))return IS(t);if(qo(c))return t.typeArguments&&at(t,P.Untyped_function_calls_may_not_accept_type_arguments),qT(t);console.debug("TODO - implement me - resolveNewExpression")}function aZ(t){if(t&&t.kind===175)return hc(t.name,2208703)}function J3(t,i){let o=Xn(t,v_);if(o){let f=t;do Tn(f).skipDirectInference=!0,f=f.parent;while(f&&f!==o)}M=!0;let c=L4(t,i);if(M=!1,o){let f=t;do Tn(f).skipDirectInference=void 0,f=f.parent;while(f&&f!==o)}return c}function L4(t,i){if(t=Xn(t,TP),t){let o=[],c=[];for(;t;){let p=Tn(t);if(o.push([p,p.resolvedSignature]),p.resolvedSignature=void 0,Ub(t)){let m=jt(Ft(t)),S=m.type;c.push([m,S]),m.type=void 0}t=Xn(t.parent,TP)}let f=i();for(let[p,m]of o)p.resolvedSignature=m;for(let[p,m]of c)p.type=m;return f}return i()}}var OA=class{};function Sa(e){return e.id||(e.id=NA,NA++),e.id}function ate(){this.flags=0}var HM=(e=>(e[e.Normal=0]="Normal",e[e.Contextual=1]="Contextual",e[e.Inferential=2]="Inferential",e[e.SkipContextSensitive=4]="SkipContextSensitive",e[e.SkipGenericFunctions=8]="SkipGenericFunctions",e[e.IsForSignatureHelp=16]="IsForSignatureHelp",e[e.RestBindingElement=32]="RestBindingElement",e[e.TypeOnly=64]="TypeOnly",e[e.StringLiteralAsObject=128]="StringLiteralAsObject",e))(HM||{});function Yi(e){return e.id||(e.id=wA,wA++),e.id}function LA(e){if(e.parent)switch(e.parent.kind){default:return Ru(e)}}var GM=(e=>(e[e.None=0]="None",e[e.TypeofEQString=1]="TypeofEQString",e[e.TypeofEQNumber=2]="TypeofEQNumber",e[e.TypeofEQFloat=4]="TypeofEQFloat",e[e.TypeofEQBoolean=8]="TypeofEQBoolean",e[e.TypeofEQSymbol=16]="TypeofEQSymbol",e[e.TypeofEQObject=32]="TypeofEQObject",e[e.TypeofEQFunction=64]="TypeofEQFunction",e[e.TypeofEQHostObject=128]="TypeofEQHostObject",e[e.TypeofNEString=256]="TypeofNEString",e[e.TypeofNENumber=512]="TypeofNENumber",e[e.TypeofNEBigInt=1024]="TypeofNEBigInt",e[e.TypeofNEBoolean=2048]="TypeofNEBoolean",e[e.TypeofNESymbol=4096]="TypeofNESymbol",e[e.TypeofNEObject=8192]="TypeofNEObject",e[e.TypeofNEFunction=16384]="TypeofNEFunction",e[e.TypeofNEHostObject=32768]="TypeofNEHostObject",e[e.EQUndefined=65536]="EQUndefined",e[e.EQNull=131072]="EQNull",e[e.EQUndefinedOrNull=262144]="EQUndefinedOrNull",e[e.NEUndefined=524288]="NEUndefined",e[e.NENull=1048576]="NENull",e[e.NEUndefinedOrNull=2097152]="NEUndefinedOrNull",e[e.Truthy=4194304]="Truthy",e[e.Falsy=8388608]="Falsy",e[e.IsUndefined=16777216]="IsUndefined",e[e.IsNull=33554432]="IsNull",e[e.IsUndefinedOrNull=50331648]="IsUndefinedOrNull",e[e.All=134217727]="All",e[e.BaseStringStrictFacts=3735041]="BaseStringStrictFacts",e[e.BaseStringFacts=12582401]="BaseStringFacts",e[e.StringStrictFacts=16317953]="StringStrictFacts",e[e.StringFacts=16776705]="StringFacts",e[e.BytesStrictFacts=16317953]="BytesStrictFacts",e[e.BytesFacts=16776705]="BytesFacts",e[e.EmptyStringStrictFacts=12123649]="EmptyStringStrictFacts",e[e.EmptyStringFacts=12582401]="EmptyStringFacts",e[e.NonEmptyStringStrictFacts=7929345]="NonEmptyStringStrictFacts",e[e.NonEmptyStringFacts=16776705]="NonEmptyStringFacts",e[e.BaseNumberStrictFacts=3734786]="BaseNumberStrictFacts",e[e.BaseNumberFacts=12582146]="BaseNumberFacts",e[e.NumberStrictFacts=16317698]="NumberStrictFacts",e[e.NumberFacts=16776450]="NumberFacts",e[e.ZeroNumberStrictFacts=12123394]="ZeroNumberStrictFacts",e[e.ZeroNumberFacts=12582146]="ZeroNumberFacts",e[e.NonZeroNumberStrictFacts=7929090]="NonZeroNumberStrictFacts",e[e.NonZeroNumberFacts=16776450]="NonZeroNumberFacts",e[e.BaseBigIntStrictFacts=3734276]="BaseBigIntStrictFacts",e[e.BaseBigIntFacts=12581636]="BaseBigIntFacts",e[e.BigIntStrictFacts=16317188]="BigIntStrictFacts",e[e.BigIntFacts=16775940]="BigIntFacts",e[e.ZeroBigIntStrictFacts=12122884]="ZeroBigIntStrictFacts",e[e.ZeroBigIntFacts=12581636]="ZeroBigIntFacts",e[e.NonZeroBigIntStrictFacts=7928580]="NonZeroBigIntStrictFacts",e[e.NonZeroBigIntFacts=16775940]="NonZeroBigIntFacts",e[e.BaseBooleanStrictFacts=3733256]="BaseBooleanStrictFacts",e[e.BaseBooleanFacts=12580616]="BaseBooleanFacts",e[e.BooleanStrictFacts=16316168]="BooleanStrictFacts",e[e.BooleanFacts=16774920]="BooleanFacts",e[e.FalseStrictFacts=12121864]="FalseStrictFacts",e[e.FalseFacts=12580616]="FalseFacts",e[e.TrueStrictFacts=7927560]="TrueStrictFacts",e[e.TrueFacts=16774920]="TrueFacts",e[e.SymbolStrictFacts=7925520]="SymbolStrictFacts",e[e.SymbolFacts=16772880]="SymbolFacts",e[e.ObjectStrictFacts=7888800]="ObjectStrictFacts",e[e.ObjectFacts=16736160]="ObjectFacts",e[e.FunctionStrictFacts=7880640]="FunctionStrictFacts",e[e.FunctionFacts=16728e3]="FunctionFacts",e[e.VoidFacts=9830144]="VoidFacts",e[e.UndefinedFacts=26607360]="UndefinedFacts",e[e.NullFacts=42917664]="NullFacts",e[e.EmptyObjectStrictFacts=83427327]="EmptyObjectStrictFacts",e[e.EmptyObjectFacts=83886079]="EmptyObjectFacts",e[e.UnknownFacts=83886079]="UnknownFacts",e[e.AllTypeofNE=556800]="AllTypeofNE",e[e.OrFactsMask=8256]="OrFactsMask",e[e.AndFactsMask=134209471]="AndFactsMask",e))(GM||{}),FA=class QM{constructor(n,r,s){for(this.moduleResolverHost=void 0,this.inner=void 0,this.disableTrackSymbol=!1;r instanceof QM;)r=r.inner;this.inner=r,this.moduleResolverHost=s,this.context=n,this.canTrackSymbol=!!this.inner?.trackSymbol}trackSymbol(n,r,s){var a;if(this.inner?.trackSymbol&&!this.disableTrackSymbol){if(this.inner.trackSymbol(n,r,s))return this.onDiagnosticReported(),!0;n.flags&262144||((a=this.context).trackedSymbols??(a.trackedSymbols=[])).push([n,r,s])}return!1}reportInaccessibleThisError(){this.inner?.reportInaccessibleThisError&&(this.onDiagnosticReported(),this.inner.reportInaccessibleThisError())}reportPrivateInBaseOfClassExpression(n){this.inner?.reportPrivateInBaseOfClassExpression&&(this.onDiagnosticReported(),this.inner.reportPrivateInBaseOfClassExpression(n))}reportInaccessibleUniqueSymbolError(){this.inner?.reportInaccessibleUniqueSymbolError&&(this.onDiagnosticReported(),this.inner.reportInaccessibleUniqueSymbolError())}reportCyclicStructureError(){this.inner?.reportCyclicStructureError&&(this.onDiagnosticReported(),this.inner.reportCyclicStructureError())}reportLikelyUnsafeImportRequiredError(n){this.inner?.reportLikelyUnsafeImportRequiredError&&(this.onDiagnosticReported(),this.inner.reportLikelyUnsafeImportRequiredError(n))}reportTruncationError(){this.inner?.reportTruncationError&&(this.onDiagnosticReported(),this.inner.reportTruncationError())}reportNonlocalAugmentation(n,r,s){this.inner?.reportNonlocalAugmentation&&(this.onDiagnosticReported(),this.inner.reportNonlocalAugmentation(n,r,s))}reportNonSerializableProperty(n){this.inner?.reportNonSerializableProperty&&(this.onDiagnosticReported(),this.inner.reportNonSerializableProperty(n))}onDiagnosticReported(){this.context.reportedDiagnostic=!0}reportInferenceFallback(n){this.inner?.reportInferenceFallback&&this.inner.reportInferenceFallback(n)}};function cte(e){return{getCommonSourceDirectory:e.getCommonSourceDirectory?()=>e.getCommonSourceDirectory():()=>"",getCurrentDirectory:()=>e.getCurrentDirectory(),useCaseSensitiveFileNames:mo(e,e.useCaseSensitiveFileNames),fileExists:n=>e.fileExists(n),getFileIncludeReasons:()=>e.getFileIncludeReasons(),readFile:e.readFile?n=>e.readFile(n):void 0}}function $a(e){return!!(e.flags&1)}var lte=new Map(Object.entries({string:256,number:512,bigint:1024,boolean:2048,symbol:4096,undefined:524288,object:8192,function:16384}));function RA(e){return!!(e.flags&2)}function ute(e){return!!(e.flags&16)}var As="/",YM="\\",MA="://",fte=/\\/g;function ZM(e){return e===47||e===92}function pte(e){return $v(e)<0}function sc(e){return $v(e)>0}function bk(e){let n=$v(e);return n>0&&n===e.length}function a0(e){return $v(e)!==0}function N_(e){return/^\.\.?($|[\\/])/.test(e)}function dte(e){return!a0(e)&&!N_(e)}function P0(e){return wc(e).includes(".")}function el(e,n){return w.assertIsDefined(e),e.length>n.length&&Ec(e,n)}function kk(e,n){for(let r of n)if(el(e,r))return!0;return!1}function Ck(e){return e.length>0&&ZM(e.charCodeAt(e.length-1))}function jA(e){return e>=97&&e<=122||e>=65&&e<=90}function _te(e,n){let r=e.charCodeAt(n);if(r===58)return n+1;if(r===37&&e.charCodeAt(n+1)===51){let s=e.charCodeAt(n+2);if(s===97||s===65)return n+3}return-1}function $v(e){if(!e)return 0;let n=e.charCodeAt(0);if(n===47||n===92){if(e.charCodeAt(1)!==n)return 1;let s=e.indexOf(n===47?As:YM,2);return s<0?e.length:s+1}if(jA(n)&&e.charCodeAt(1)===58){let s=e.charCodeAt(2);if(s===47||s===92)return 3;if(e.length===2)return 2}let r=e.indexOf(MA);if(r!==-1){let s=r+MA.length,a=e.indexOf(As,s);if(a!==-1){let l=e.slice(0,r),u=e.slice(s,a);if(l==="file"&&(u===""||u==="localhost")&&jA(e.charCodeAt(a+1))){let d=_te(e,a+2);if(d!==-1){if(e.charCodeAt(d)===47)return~(d+1);if(d===e.length)return~d}}return~(a+1)}return~e.length}return 0}function fu(e){let n=$v(e);return n<0?~n:n}function li(e){e=cc(e);let n=fu(e);return n===e.length?e:(e=J_(e),e.slice(0,Math.max(n,e.lastIndexOf(As))))}function wc(e,n,r){if(e=cc(e),fu(e)===e.length)return"";e=J_(e);let a=e.slice(Math.max(fu(e),e.lastIndexOf(As)+1)),l=n!==void 0&&r!==void 0?c0(a,n,r):void 0;return l?a.slice(0,a.length-l.length):a}function BA(e,n,r){if(no(n,".")||(n="."+n),e.length>=n.length&&e.charCodeAt(e.length-n.length)===46){let s=e.slice(e.length-n.length);if(r(s,n))return s}}function mte(e,n,r){if(typeof n=="string")return BA(e,n,r)||"";for(let s of n){let a=BA(e,s,r);if(a)return a}return""}function c0(e,n,r){if(n)return mte(J_(e),n,r?gp:gg);let s=wc(e),a=s.lastIndexOf(".");return a>=0?s.substring(a):""}function gte(e,n){let r=e.substring(0,n),s=e.substring(n).split(As);return s.length&&!wo(s)&&s.pop(),[r,...s]}function pu(e,n=""){return e=ii(n,e),gte(e,fu(e))}function x0(e,n){return e.length===0?"":(e[0]&&of(e[0]))+e.slice(1,n).join(As)}function cc(e){return e.includes("\\")?e.replace(fte,As):e}function dd(e){if(!kt(e))return[];let n=[e[0]];for(let r=1;r<e.length;r++){let s=e[r];if(s&&s!=="."){if(s===".."){if(n.length>1){if(n[n.length-1]!==".."){n.pop();continue}}else if(n[0])continue}n.push(s)}}return n}function ii(e,...n){e&&(e=cc(e));for(let r of n)r&&(r=cc(r),!e||fu(r)!==0?e=r:e=of(e)+r);return e}function I_(e,...n){return di(kt(n)?ii(e,...n):cc(e))}function Hv(e,n){return dd(pu(e,n))}function Wi(e,n){return x0(Hv(e,n))}function di(e){if(e=cc(e),!Xb.test(e))return e;let n=e.replace(/\/\.\//g,"/").replace(/^\.\//,"");if(n!==e&&(e=n,!Xb.test(e)))return e;let r=x0(dd(pu(e)));return r&&Ck(e)?of(r):r}function hte(e){return e.length===0?"":e.slice(1).join(As)}function nx(e,n){return hte(Hv(e,n))}function Ra(e,n,r){let s=sc(e)?di(e):Wi(e,n);return r(s)}function J_(e){return Ck(e)?e.substr(0,e.length-1):e}function of(e){return Ck(e)?e:e+As}function XM(e){return!a0(e)&&!N_(e)?"./"+e:e}function yte(e,n,r,s){let a=r!==void 0&&s!==void 0?c0(e,r,s):c0(e);return a?e.slice(0,e.length-a.length)+(no(n,".")?n:"."+n):e}var Xb=/(?:\/\/)|(?:^|\/)\.\.?(?:$|\/)/;function PE(e,n,r){if(e===n)return 0;if(e===void 0)return-1;if(n===void 0)return 1;let s=e.substring(0,fu(e)),a=n.substring(0,fu(n)),l=A2(s,a);if(l!==0)return l;let u=e.substring(s.length),d=n.substring(a.length);if(!Xb.test(u)&&!Xb.test(d))return r(u,d);let _=dd(pu(e)),y=dd(pu(n)),h=Math.min(_.length,y.length);for(let v=1;v<h;v++){let b=r(_[v],y[v]);if(b!==0)return b}return vs(_.length,y.length)}function vte(e,n){return PE(e,n,Dc)}function Tte(e,n){return PE(e,n,A2)}function Pk(e,n,r,s){return typeof r=="string"?(e=ii(r,e),n=ii(r,n)):typeof r=="boolean"&&(s=r),PE(e,n,I2(s))}function ug(e,n,r,s){if(typeof r=="string"?(e=ii(r,e),n=ii(r,n)):typeof r=="boolean"&&(s=r),e===void 0||n===void 0)return!1;if(e===n)return!0;let a=dd(pu(e)),l=dd(pu(n));if(l.length<a.length)return!1;let u=s?gp:gg;for(let d=0;d<a.length;d++)if(!(d===0?gp:u)(a[d],l[d]))return!1;return!0}function Ste(e,n,r){let s=r(e),a=r(n);return no(s,a+"/")||no(s,a+"\\")}function KM(e,n,r,s){let a=dd(pu(e)),l=dd(pu(n)),u;for(u=0;u<a.length&&u<l.length;u++){let y=s(a[u]),h=s(l[u]);if(!(u===0?gp:r)(y,h))break}if(u===0)return l;let d=l.slice(u),_=[];for(;u<a.length;u++)_.push("..");return["",..._,...d]}function Gv(e,n,r){w.assert(fu(e)>0==fu(n)>0,"Paths must either both be absolute or both be relative");let l=KM(e,n,(typeof r=="boolean"?r:!1)?gp:gg,typeof r=="function"?r:Gi);return x0(l)}function xk(e,n,r){return sc(e)?Dk(n,e,n,r,!1):e}function bte(e,n,r){return XM(Gv(li(e),n,r))}function Dk(e,n,r,s,a){let l=KM(I_(r,e),I_(r,n),gg,s),u=l[0];if(a&&sc(u)){let d=u.charAt(0)===As?"file://":"file:///";l[0]=d+u}return x0(l)}function Ek(e,n){for(;;){let r=n(e);if(r!==void 0)return r;let s=li(e);if(s===e)return;e=s}}function Kb(e){return Ec(e,"/node_modules")}function Na(e,n,r,s){if(e===void 0)return e;let a=n(e),l;if(a!==void 0)return Gr(a)?l=(s||Cte)(a):l=a,w.assertNode(l,r),l}function __(e,n,r,s,a){if(e===void 0)return e;let l=e.length;(s===void 0||s<0)&&(s=0),(a===void 0||a>l-s)&&(a=l-s);let u,d=-1,_=-1;s>0||a<l?u=e.hasTrailingComma&&s+a===l:(d=e.pos,_=e.end,u=e.hasTrailingComma);let y=ej(e,n,r,s,a);if(y!==e){let h=Ve.createNodeArray(y,u);return Aa(h,d,_),h}return e}function kte(e,n,r,s,a){if(e===void 0)return e;let l=e.length;return(s===void 0||s<0)&&(s=0),(a===void 0||a>l-s)&&(a=l-s),ej(e,n,r,s,a)}function ej(e,n,r,s,a){let l,u=e.length;(s>0||a<u)&&(l=[]);for(let d=0;d<a;d++){let _=e[d+s],y=_!==void 0?n?n(_):_:void 0;if((l!==void 0||y===void 0||y!==_)&&(l===void 0&&(l=e.slice(0,d),w.assertEachNode(l,r)),y))if(Gr(y))for(let h of y)w.assertNode(h,r),l.push(h);else w.assertNode(y,r),l.push(y)}return l||(w.assertEachNode(e,r),e)}function Cte(e){return w.assert(e.length<=1,"Too many nodes written to output."),Tv(e)}function Wm(e,n,r=cy,s=__,a,l=Na){if(e===void 0)return;let u=void 0;return u===void 0?e:u(e,n,r,s,l,a)}function Pte(e,n,r,s,a){var{enter:l,exit:u}=a.extendedDiagnostics?Yx("Source Map","beforeSourcemap","afterSourcemap"):Zx,d=[],_=[],y=new Map,h,v=[],b,T=[],E="",g=0,M=0,N=0,z=0,X=0,j=0,Z=!1,le=0,de=0,se=0,ye=0,he=0,oe=0,ie=!1,Y=!1,_e=!1;return{getSources:()=>d,addSource:G,setSourceContent:ke,addName:re,addMapping:qt,appendSourceMap:fe,toJSON:Bt,toString:()=>JSON.stringify(Bt())};function G(tt){l();let me=Dk(s,tt,e.getCurrentDirectory(),e.getCanonicalFileName,!0),dt=y.get(me);return dt===void 0&&(dt=_.length,_.push(me),d.push(tt),y.set(me,dt)),u(),dt}function ke(tt,me){if(l(),me!==null){for(h||(h=[]);h.length<tt;)h.push(null);h[tt]=me}u()}function re(tt){l(),b||(b=new Map);let me=b.get(tt);return me===void 0&&(me=v.length,v.push(tt),b.set(tt,me)),u(),me}function be(tt,me){return!ie||le!==tt||de!==me}function rt(tt,me,dt){return tt!==void 0&&me!==void 0&&dt!==void 0&&se===tt&&(ye>me||ye===me&&he>dt)}function qt(tt,me,dt,Lt,Vt,_n){w.assert(tt>=le,"generatedLine cannot backtrack"),w.assert(me>=0,"generatedCharacter cannot be negative"),w.assert(dt===void 0||dt>=0,"sourceIndex cannot be negative"),w.assert(Lt===void 0||Lt>=0,"sourceLine cannot be negative"),w.assert(Vt===void 0||Vt>=0,"sourceCharacter cannot be negative"),l(),(be(tt,me)||rt(dt,Lt,Vt))&&(Mt(),le=tt,de=me,Y=!1,_e=!1,ie=!0),dt!==void 0&&Lt!==void 0&&Vt!==void 0&&(se=dt,ye=Lt,he=Vt,Y=!0,_n!==void 0&&(oe=_n,_e=!0)),u()}function fe(tt,me,dt,Lt,Vt,_n){w.assert(tt>=le,"generatedLine cannot backtrack"),w.assert(me>=0,"generatedCharacter cannot be negative"),l();let hn=[],kn,ue=DE(dt.mappings);for(let Ze of ue){if(_n&&(Ze.generatedLine>_n.line||Ze.generatedLine===_n.line&&Ze.generatedCharacter>_n.character))break;if(Vt&&(Ze.generatedLine<Vt.line||Vt.line===Ze.generatedLine&&Ze.generatedCharacter<Vt.character))continue;let Ct,on,Vr,Vn;if(Ze.sourceIndex!==void 0){if(Ct=hn[Ze.sourceIndex],Ct===void 0){let Se=dt.sources[Ze.sourceIndex],De=dt.sourceRoot?ii(dt.sourceRoot,Se):Se,Ne=ii(li(Lt),De);hn[Ze.sourceIndex]=Ct=G(Ne),dt.sourcesContent&&typeof dt.sourcesContent[Ze.sourceIndex]=="string"&&ke(Ct,dt.sourcesContent[Ze.sourceIndex])}on=Ze.sourceLine,Vr=Ze.sourceCharacter,dt.names&&Ze.nameIndex!==void 0&&(kn||(kn=[]),Vn=kn[Ze.nameIndex],Vn===void 0&&(kn[Ze.nameIndex]=Vn=re(dt.names[Ze.nameIndex])))}let _i=Ze.generatedLine-(Vt?Vt.line:0),xr=_i+tt,si=Vt&&Vt.line===Ze.generatedLine?Ze.generatedCharacter-Vt.character:Ze.generatedCharacter,xi=_i===0?si+me:si;qt(xr,xi,Ct,on,Vr,Vn)}u()}function pt(){return!Z||g!==le||M!==de||N!==se||z!==ye||X!==he||j!==oe}function je(tt){T.push(tt),T.length>=1024&&Yt()}function Mt(){if(!(!ie||!pt())){if(l(),g<le){do je(59),g++;while(g<le);M=0}else w.assertEqual(g,le,"generatedLine cannot backtrack"),Z&&je(44);Me(de-M),M=de,Y&&(Me(se-N),N=se,Me(ye-z),z=ye,Me(he-X),X=he,_e&&(Me(oe-j),j=oe)),Z=!0,u()}}function Yt(){T.length>0&&(E+=String.fromCharCode.apply(void 0,T),T.length=0)}function Bt(){return Mt(),Yt(),{version:3,file:n,sourceRoot:r,sources:_,names:v,mappings:E,sourcesContent:h}}function Me(tt){tt<0?tt=(-tt<<1)+1:tt=tt<<1;do{let me=tt&31;tt=tt>>5,tt>0&&(me=me|32),je(wte(me))}while(tt>0)}}var xte=/\/\/[@#] source[M]appingURL=(.+)\r?\n?$/,tj=/^\/\/[@#] source[M]appingURL=(.+)\r?\n?$/,nj=/^\s*(\/\/[@#] .*)?$/;function xE(e,n){return{getLineCount:()=>n.length,getLineText:r=>e.substring(n[r],n[r+1])}}function rj(e){for(let n=e.getLineCount()-1;n>=0;n--){let r=e.getLineText(n),s=tj.exec(r);if(s)return s[1].trimEnd();if(!r.match(nj))break}}function Dte(e){return typeof e=="string"||e===null}function ij(e){return e!==null&&typeof e=="object"&&e.version===3&&typeof e.file=="string"&&typeof e.mappings=="string"&&Gr(e.sources)&&Ti(e.sources,Li)&&(e.sourceRoot===void 0||e.sourceRoot===null||typeof e.sourceRoot=="string")&&(e.sourcesContent===void 0||e.sourcesContent===null||Gr(e.sourcesContent)&&Ti(e.sourcesContent,Dte))&&(e.names===void 0||e.names===null||Gr(e.names)&&Ti(e.names,Li))}function sj(e){try{let n=JSON.parse(e);if(ij(n))return n}catch{}}function DE(e){let n=!1,r=0,s=0,a=0,l=0,u=0,d=0,_=0,y;return{get pos(){return r},get error(){return y},get state(){return h(!0,!0)},next(){for(;!n&&r<e.length;){let N=e.charCodeAt(r);if(N===59){s++,a=0,r++;continue}if(N===44){r++;continue}let z=!1,X=!1;if(a+=M(),E())return v();if(a<0)return T("Invalid generatedCharacter found");if(!g()){if(z=!0,l+=M(),E())return v();if(l<0)return T("Invalid sourceIndex found");if(g())return T("Unsupported Format: No entries after sourceIndex");if(u+=M(),E())return v();if(u<0)return T("Invalid sourceLine found");if(g())return T("Unsupported Format: No entries after sourceLine");if(d+=M(),E())return v();if(d<0)return T("Invalid sourceCharacter found");if(!g()){if(X=!0,_+=M(),E())return v();if(_<0)return T("Invalid nameIndex found");if(!g())return T("Unsupported Error Format: Entries after nameIndex")}}return{value:h(z,X),done:n}}return v()},[Symbol.iterator](){return this}};function h(N,z){return{generatedLine:s,generatedCharacter:a,sourceIndex:N?l:void 0,sourceLine:N?u:void 0,sourceCharacter:N?d:void 0,nameIndex:z?_:void 0}}function v(){return n=!0,{value:void 0,done:!0}}function b(N){y===void 0&&(y=N)}function T(N){return b(N),v()}function E(){return y!==void 0}function g(){return r===e.length||e.charCodeAt(r)===44||e.charCodeAt(r)===59}function M(){let N=!0,z=0,X=0;for(;N;r++){if(r>=e.length)return b("Error in decoding base64VLQFormatDecode, past the mapping string"),-1;let j=Nte(e.charCodeAt(r));if(j===-1)return b("Invalid character in VLQ"),-1;N=(j&32)!==0,X=X|(j&31)<<z,z+=5}return(X&1)===0?X=X>>1:(X=X>>1,X=-X),X}}function Ete(e,n){return e===n||e.generatedLine===n.generatedLine&&e.generatedCharacter===n.generatedCharacter&&e.sourceIndex===n.sourceIndex&&e.sourceLine===n.sourceLine&&e.sourceCharacter===n.sourceCharacter&&e.nameIndex===n.nameIndex}function oj(e){return e.sourceIndex!==void 0&&e.sourceLine!==void 0&&e.sourceCharacter!==void 0}function wte(e){return e>=0&&e<26?65+e:e>=26&&e<52?97+e-26:e>=52&&e<62?48+e-52:e===62?43:e===63?47:w.fail(`${e}: not a base64 value`)}function Nte(e){return e>=65&&e<=90?e-65:e>=97&&e<=122?e-97+26:e>=48&&e<=57?e-48+52:e===43?62:e===47?63:-1}function WA(e){return e.sourceIndex!==void 0&&e.sourcePosition!==void 0}function UA(e,n){return e.generatedPosition===n.generatedPosition&&e.sourceIndex===n.sourceIndex&&e.sourcePosition===n.sourcePosition}function Ite(e,n){return w.assert(e.sourceIndex===n.sourceIndex),vs(e.sourcePosition,n.sourcePosition)}function Ate(e,n){return vs(e.generatedPosition,n.generatedPosition)}function Ote(e){return e.sourcePosition}function Lte(e){return e.generatedPosition}function aj(e,n,r){let s=li(r),a=n.sourceRoot?Wi(n.sourceRoot,s):s,l=Wi(n.file,s),u=e.getSourceFileLike(l),d=n.sources.map(z=>Wi(z,a)),_=new Map(d.map((z,X)=>[e.getCanonicalFileName(z),X])),y,h,v;return{getSourcePosition:N,getGeneratedPosition:M};function b(z){let X=u!==void 0?Sy(u,z.generatedLine,z.generatedCharacter,!0):-1,j,Z;if(oj(z)){let le=e.getSourceFileLike(d[z.sourceIndex]);j=n.sources[z.sourceIndex],Z=le!==void 0?Sy(le,z.sourceLine,z.sourceCharacter,!0):-1}return{generatedPosition:X,source:j,sourceIndex:z.sourceIndex,sourcePosition:Z,nameIndex:z.nameIndex}}function T(){if(y===void 0){let z=DE(n.mappings),X=as(z,b);z.error!==void 0?(e.log&&e.log(`Encountered error while decoding sourcemap: ${z.error}`),y=Oe):y=X}return y}function E(z){if(v===void 0){let X=[];for(let j of T()){if(!WA(j))continue;let Z=X[j.sourceIndex];Z||(X[j.sourceIndex]=Z=[]),Z.push(j)}v=X.map(j=>hy(j,Ite,UA))}return v[z]}function g(){if(h===void 0){let z=[];for(let X of T())z.push(X);h=hy(z,Ate,UA)}return h}function M(z){let X=_.get(e.getCanonicalFileName(z.fileName));if(X===void 0)return z;let j=E(X);if(!kt(j))return z;let Z=Wh(j,z.pos,Ote,vs);Z<0&&(Z=~Z);let le=j[Z];return le===void 0||le.sourceIndex!==X?z:{fileName:l,pos:le.generatedPosition}}function N(z){let X=g();if(!kt(X))return z;let j=Wh(X,z.pos,Lte,vs);j<0&&(j=~j);let Z=X[j];return Z===void 0||!WA(Z)?z:{fileName:d[Z.sourceIndex],pos:Z.sourcePosition}}}var rx={getSourcePosition:Gi,getGeneratedPosition:Gi},nd={ConfigFile:"Config file",ExtendedConfigFile:"Extended config file",SourceFile:"Source file",MissingFile:"Missing file",WildcardDirectory:"Wild card directory",FailedLookupLocations:"Failed Lookup Locations",AffectingFileLocation:"File location affecting resolution",TypeRoots:"Type roots",ConfigFileOfReferencedProject:"Config file of referened project",ExtendedConfigOfReferencedProject:"Extended config file of referenced project",WildcardDirectoryOfReferencedProject:"Wild card directory of referenced project",PackageJson:"package.json file",ClosedScriptInfo:"Closed Script info",ConfigFileForInferredRoot:"Config file for the inferred project root",NodeModules:"node_modules for closed script infos and package.jsons affecting module specifier cache",MissingSourceMapFile:"Missing source map file",NoopConfigFileForInferredRoot:"Noop Config file for the inferred project root",MissingGeneratedFile:"Missing generated file",NodeModulesForModuleSpecifierCache:"node_modules for module specifier cache invalidation",TypingInstallerLocationFile:"File location for typing installer",TypingInstallerLocationDirectory:"Directory location for typing installer"};function oy(e,n){let r=Li(e)?e:e.fileName;return n?n(r):r}function cj(e,n){let r=e.getFileIncludeReasons(),s=a=>xk(a,e.getCurrentDirectory(),e.getCanonicalFileName);for(let a of e.getSourceFiles())n(`${oy(a,s)}`),r.get(a.path)?.forEach(l=>n(`  ${IE(e,l,s).messageText}`)),EE(a,s)?.forEach(l=>n(`  ${l.messageText}`))}var iv={close:ys},e2=()=>iv;function lj(e,n){let r=_p(":"+e.line,"\x1B[90m");return a0(e.fileName)&&a0(n)?Gv(n,e.fileName,!1)+r:e.fileName+r}function uj(e){return Yr(e,r=>r.category===1).map(r=>{if(r.file!==void 0)return`${r.file.fileName}`}).map(r=>{if(r===void 0)return;let s=Zr(e,a=>a.file!==void 0&&a.file.fileName===r);if(s!==void 0){let{line:a}=$s(s.file,s.start);return{fileName:r,line:a+1}}})}function fj(e,n,r,s){if(e===0)return"";let a=n.filter(h=>h!==void 0),l=a.map(h=>`${h.fileName}:${h.line}`).filter((h,v,b)=>b.indexOf(h)===v),u=a[0]&&lj(a[0],s.getCurrentDirectory()),d;e===1?d=n[0]!==void 0?[P.Found_1_error_in_0,u]:[P.Found_1_error]:d=l.length===0?[P.Found_0_errors,e]:l.length===1?[P.Found_0_errors_in_the_same_file_starting_at_Colon_1,e,u]:[P.Found_0_errors_in_1_files,e,l.length];let _=ac(...d),y=l.length>1?Fte(a,s):"";return`${r}${Uu(_.messageText,r)}${r}${r}${y}`}function Fte(e,n){let r=e.filter((v,b,T)=>b===T.findIndex(E=>E?.fileName===v?.fileName));if(r.length===0)return"";let s=v=>Math.log(v)*Math.LOG10E+1,a=r.map(v=>[v,Kf(e,b=>b.fileName===v.fileName)]),l=a.reduce((v,b)=>Math.max(v,b[1]||0),0),u=P.Errors_Files.message,d=u.split(" ")[0].length,_=Math.max(d,s(l)),y=Math.max(s(l)-d,0),h="";return h+=" ".repeat(y)+u+`
`,a.forEach(v=>{let[b,T]=v,E=Math.log(T)*Math.LOG10E+1|0,g=E<_?" ".repeat(_-E):"",M=lj(b,n.getCurrentDirectory());h+=`${g}${T}  ${M}
`}),h}function EE(e,n){let r;return e.path!==e.resolvedPath&&(r??(r=[])).push(pi(void 0,P.File_is_output_of_project_reference_source_0,oy(e.originalFileName,n))),BD(e)&&e.impliedNodeFormat,r}function wE(e,n){let r=e.getCompilerOptions().configFile;if(!r?.configFileSpecs?.validatedFilesSpec)return;let s=e.getCanonicalFileName(n),a=li(Wi(r.fileName,e.getCurrentDirectory())),l=Pl(r.configFileSpecs.validatedFilesSpec,u=>e.getCanonicalFileName(Wi(u,a))===s);return l!==-1?r.configFileSpecs.validatedFilesSpecBeforeSubstitution[l]:void 0}function NE(e,n){let r=e.getCompilerOptions().configFile;if(!r?.configFileSpecs?.validatedIncludeSpecs)return;if(r.configFileSpecs.isDefaultIncludeSpec)return!0;let s=el(n,".json"),a=li(Wi(r.fileName,e.getCurrentDirectory())),l=e.useCaseSensitiveFileNames(),u=Pl(r?.configFileSpecs?.validatedIncludeSpecs,d=>{if(s&&!Ec(d,".json"))return!1;let _=V9(d,a,"files");return!!_&&Gm(`(${_})$`,l).test(n)});return u!==-1?r.configFileSpecs.validatedIncludeSpecsBeforeSubstitution[u]:void 0}function IE(e,n,r){let s=e.getCompilerOptions();if(tp(n)){let a=Rh(e,n),l=Xm(a)?a.file.text.substring(a.pos,a.end):`"${a.text}"`,u;switch(w.assert(Xm(a)||n.kind===4,"Only synthetic references are imports"),n.kind){case 4:Xm(a)?u=P.Imported_via_0_from_file_1:u=P.Imported_via_0_from_file_1_to_import_jsx_and_jsxs_factory_functions;break;case 5:w.assert(!a.packageId),u=P.Referenced_via_0_from_file_1;break;case 6:case 8:w.assert(!a.packageId),u=P.Library_referenced_via_0_from_file_1;break;default:w.assertNever(n)}return pi(void 0,u,l,oy(a.file,r),a.packageId&&Xh(a.packageId))}switch(n.kind){case 0:if(!s.configFile?.configFileSpecs)return pi(void 0,P.Root_file_specified_for_compilation);let a=Wi(e.getRootFileNames()[n.index],e.getCurrentDirectory());if(wE(e,a))return pi(void 0,P.Part_of_files_list_in_lpcconfig_json);let u=NE(e,a);return Li(u)?pi(void 0,P.Matched_by_include_pattern_0_in_1,u,oy(s.configFile,r)):pi(void 0,u?P.Matched_by_default_include_pattern_Asterisk_Asterisk_Slash_Asterisk:P.Root_file_specified_for_compilation);case 2:case 3:let d=n.kind===3,_=w.checkDefined(e.getResolvedProjectReferences()?.[n.index]);return pi(void 0,s.outFile?d?P.Output_from_referenced_project_0_included_because_1_specified:P.Source_from_referenced_project_0_included_because_1_specified:d?P.Output_from_referenced_project_0_included_because_module_is_specified_as_none:P.Source_from_referenced_project_0_included_because_module_is_specified_as_none,oy(_.sourceFile.fileName,r),s.outFile?"--outFile":"--out");case 7:{if(n.index!==void 0)return pi(void 0,P.Library_0_specified_in_compilerOptions,s.lib[n.index]);let y=L8(au(s)),h=y?[P.Default_library_for_target_0,y]:[P.Default_library];return pi(void 0,...h)}default:w.fail("Unknown include kind")}}var JA=Ms?{getCurrentDirectory:()=>Ms.getCurrentDirectory(),getNewLine:()=>Ms.newLine,getCanonicalFileName:ca(Ms.useCaseSensitiveFileNames)}:void 0;function ix(e,n){let r=e===Ms&&JA?JA:{getCurrentDirectory:()=>e.getCurrentDirectory(),getNewLine:()=>e.newLine,getCanonicalFileName:ca(e.useCaseSensitiveFileNames)};if(!n)return a=>e.write(Wj(a,r));let s=new Array(1);return a=>{s[0]=a,e.write($j(s,r)+r.getNewLine()),s[0]=void 0}}function G1(e){let n=e?.fallbackPolling;return{watchFile:n!==void 0?n:1}}function M_(e){e.watcher.close()}function sx(e,n,r){if(!e.getDirectories||!e.readDirectory)return;let s=new Map,a=ca(r);return{useCaseSensitiveFileNames:r,fileExists:T,readFile:(de,se)=>e.readFile(de,se),directoryExists:e.directoryExists&&E,getDirectories:M,readDirectory:N,createDirectory:e.createDirectory&&g,writeFile:e.writeFile&&b,addOrDeleteFileOrDirectory:X,addOrDeleteFile:j,clearCache:le,realpath:e.realpath&&z};function l(de){return Ra(de,n,a)}function u(de){return s.get(of(de))}function d(de){let se=u(li(de));return se&&(se.sortedAndCanonicalizedFiles||(se.sortedAndCanonicalizedFiles=se.files.map(a).sort(),se.sortedAndCanonicalizedDirectories=se.directories.map(a).sort()),se)}function _(de){return wc(di(de))}function y(de,se){if(!e.realpath||of(l(e.realpath(de)))===se){let ye={files:Xt(e.readDirectory(de,void 0,void 0,["*.*"]),_)||[],directories:e.getDirectories(de)||[]};return s.set(of(se),ye),ye}if(e.directoryExists?.(de))return s.set(se,!1),!1}function h(de,se){se=of(se);let ye=u(se);if(ye)return ye;try{return y(de,se)}catch{w.assert(!s.has(of(se)));return}}function v(de,se){return up(de,se,Gi,Dc)>=0}function b(de,se,ye){let he=l(de),oe=d(he);return oe&&Z(oe,_(de),!0),e.writeFile(de,se,ye)}function T(de){let se=l(de),ye=d(se);return ye&&v(ye.sortedAndCanonicalizedFiles,a(_(de)))||e.fileExists(de)}function E(de){let se=l(de);return s.has(of(se))||e.directoryExists(de)}function g(de){let se=l(de),ye=d(se);if(ye){let he=_(de),oe=a(he),ie=ye.sortedAndCanonicalizedDirectories;sd(ie,oe,Dc)&&ye.directories.push(he)}e.createDirectory(de)}function M(de){let se=l(de),ye=h(de,se);return ye?ye.directories.slice():e.getDirectories(de)}function N(de,se,ye,he,oe){let ie=l(de),Y=h(de,ie),_e;if(Y!==void 0)return i8(de,se,ye,he,r,n,oe,G,z);return e.readDirectory(de,se,ye,he,oe);function G(re){let be=l(re);if(be===ie)return Y||ke(re,be);let rt=h(re,be);return rt!==void 0?rt||ke(re,be):zD}function ke(re,be){if(_e&&be===ie)return _e;let rt={files:Xt(e.readDirectory(re,void 0,void 0,["*.*"]),_)||Oe,directories:e.getDirectories(re)||Oe};return be===ie&&(_e=rt),rt}}function z(de){return e.realpath?e.realpath(de):de}function X(de,se){if(u(se)!==void 0){le();return}let he=d(se);if(!he)return;if(!e.directoryExists){le();return}let oe=_(de),ie={fileExists:e.fileExists(de),directoryExists:e.directoryExists(de)};return ie.directoryExists||v(he.sortedAndCanonicalizedDirectories,a(oe))?le():Z(he,oe,ie.fileExists),ie}function j(de,se,ye){if(ye===1)return;let he=d(se);he&&Z(he,_(de),ye===0)}function Z(de,se,ye){let he=de.sortedAndCanonicalizedFiles,oe=a(se);if(ye)sd(he,oe,Dc)&&de.files.push(se);else{let ie=up(he,oe,Gi,Dc);if(ie>=0){he.splice(ie,1);let Y=de.files.findIndex(_e=>a(_e)===oe);de.files.splice(Y,1)}}}function le(){s.clear()}}var pj=(e=>(e[e.Update=0]="Update",e[e.RootNamesAndUpdate=1]="RootNamesAndUpdate",e[e.Full=2]="Full",e))(pj||{});function dj(e,n,r){s8(n,e.getMissingFilePaths(),{createNewValue:r,onDeleteValue:$m})}function _j(e,n,r){n?s8(e,new Map(Object.entries(n)),{createNewValue:s,onDeleteValue:M_,onExistingValue:a}):n0(e,M_);function s(l,u){return{watcher:r(l,u),flags:u}}function a(l,u,d){l.flags!==u&&(l.watcher.close(),e.set(d,s(d,u)))}}function mj({watchedDirPath:e,fileOrDirectory:n,fileOrDirectoryPath:r,configFileName:s,options:a,program:l,extraFileExtensions:u,currentDirectory:d,useCaseSensitiveFileNames:_,writeLog:y,toPath:h,getScriptKind:v}){let b=UE(r);if(!b)return y(`Project: ${s} Detected ignored path: ${n}`),!0;if(r=b,r===e)return!1;if(P0(r)&&!(t9(n,a,u)||N()))return y(`Project: ${s} Detected file add/remove of non supported extension: ${n}`),!0;if(FR(n,a.configFile.configFileSpecs,Wi(li(s),d),_,d))return y(`Project: ${s} Detected excluded file: ${n}`),!0;if(!l)return!1;let T=md(r),E=Gr(l)?void 0:Rte(l)?l.getProgramOrUndefined():l,g=!E&&!Gr(l)?l:void 0;if(M(T+".lpc")||M(T+".h"))return y(`Project: ${s} Detected output file: ${n}`),!0;return!1;function M(z){return E?!!E.getSourceFileByPath(z):g?g.getState().fileInfos.has(z):!!Zr(l,X=>h(X)===z)}function N(){if(!v)return!1;switch(v(n)){case 1:return!0;case 0:return!1}}}function Rte(e){return!!e.getState}var gj=(e=>(e[e.None=0]="None",e[e.TriggerOnly=1]="TriggerOnly",e[e.Verbose=2]="Verbose",e))(gj||{});function hj(e,n,r,s){Cj(n===2?r:ys);let a={watchFile:(g,M,N,z)=>e.watchFile(g,M,N,z),watchDirectory:(g,M,N,z)=>e.watchDirectory(g,M,(N&1)!==0,z)},l=n!==0?{watchFile:T("watchFile"),watchDirectory:T("watchDirectory")}:void 0,u=n===2?{watchFile:v,watchDirectory:b}:l||a,d=n===2?h:e2;return{watchFile:_("watchFile"),watchDirectory:_("watchDirectory")};function _(g){return(M,N,z,X,j,Z)=>RR(M,g==="watchFile"?X?.excludeFiles:X?.excludeDirectories,y(),e.getCurrentDirectory?.()||"")?d(M,z,X,j,Z):u[g].call(void 0,M,N,z,X,j,Z)}function y(){return typeof e.useCaseSensitiveFileNames=="boolean"?e.useCaseSensitiveFileNames:e.useCaseSensitiveFileNames()}function h(g,M,N,z,X){return r(`ExcludeWatcher:: Added:: ${E(g,M,N,z,X,s)}`),{close:()=>r(`ExcludeWatcher:: Close:: ${E(g,M,N,z,X,s)}`)}}function v(g,M,N,z,X,j){r(`FileWatcher:: Added:: ${E(g,N,z,X,j,s)}`);let Z=l.watchFile(g,M,N,z,X,j);return{close:()=>{r(`FileWatcher:: Close:: ${E(g,N,z,X,j,s)}`),Z.close()}}}function b(g,M,N,z,X,j){let Z=`DirectoryWatcher:: Added:: ${E(g,N,z,X,j,s)}`;r(Z);let le=Zi(),de=l.watchDirectory(g,M,N,z,X,j),se=Zi()-le;return r(`Elapsed:: ${se}ms ${Z}`),{close:()=>{let ye=`DirectoryWatcher:: Close:: ${E(g,N,z,X,j,s)}`;r(ye);let he=Zi();de.close();let oe=Zi()-he;r(`Elapsed:: ${oe}ms ${ye}`)}}}function T(g){return(M,N,z,X,j,Z)=>a[g].call(void 0,M,(...le)=>{let de=`${g==="watchFile"?"FileWatcher":"DirectoryWatcher"}:: Triggered with ${le[0]} ${le[1]!==void 0?le[1]:""}:: ${E(M,z,X,j,Z,s)}`;r(de);let se=Zi();N.call(void 0,...le);let ye=Zi()-se;r(`Elapsed:: ${ye}ms ${de}`)},z,X,j,Z)}function E(g,M,N,z,X,j){return`WatchInfo: ${g} ${M} ${JSON.stringify(N)} ${j?j(z,X):X===void 0?z:`${z} ${X}`}`}}function yj(e,n){n.forEach(r=>{r.projects.delete(e)&&r.close()})}function vj(e){let n=5381;for(let r=0;r<e.length;r++)n=(n<<5)+n+e.charCodeAt(r);return n.toString()}function Mte(){Error.stackTraceLimit<100&&(Error.stackTraceLimit=100)}var Tj=(e=>(e[e.Created=0]="Created",e[e.Changed=1]="Changed",e[e.Deleted=2]="Deleted",e))(Tj||{}),AE=(e=>(e[e.High=2e3]="High",e[e.Medium=500]="Medium",e[e.Low=250]="Low",e))(AE||{}),ba=new Date(0);function wk(e,n){return e.getModifiedTime(n)||ba}function OE(e){return{250:e.Low,500:e.Medium,2e3:e.High}}var t2={Low:32,Medium:64,High:256},n2=OE(t2),r2=OE(t2);function jte(e){if(!e.getEnvironmentVariable)return;let n=a("TSC_WATCH_POLLINGINTERVAL",AE);n2=l("TSC_WATCH_POLLINGCHUNKSIZE",t2)||n2,r2=l("TSC_WATCH_UNCHANGEDPOLLTHRESHOLDS",t2)||r2;function r(u,d){return e.getEnvironmentVariable(`${u}_${d.toUpperCase()}`)}function s(u){let d;return _("Low"),_("Medium"),_("High"),d;function _(y){let h=r(u,y);h&&((d||(d={}))[y]=Number(h))}}function a(u,d){let _=s(u);if(_)return y("Low"),y("Medium"),y("High"),!0;return!1;function y(h){d[h]=_[h]||d[h]}}function l(u,d){let _=s(u);return(n||_)&&OE(_?{...d,..._}:d)}}function Sj(e,n,r,s,a){let l=r;for(let d=n.length;s&&d;u(),d--){let _=n[r];if(_){if(_.isClosed){n[r]=void 0;continue}}else continue;s--;let y=Jte(_,wk(e,_.fileName));if(_.isClosed){n[r]=void 0;continue}a?.(_,r,y),n[r]&&(l<r&&(n[l]=_,n[r]=void 0),l++)}return r;function u(){r++,r===n.length&&(l<r&&(n.length=l),r=0,l=0)}}function Bte(e){let n=[],r=[],s=d(250),a=d(500),l=d(2e3);return u;function u(M,N,z){let X={fileName:M,callback:N,unchangedPolls:0,mtime:wk(e,M)};return n.push(X),b(X,z),{close:()=>{X.isClosed=!0,vv(n,X)}}}function d(M){let N=[];return N.pollingInterval=M,N.pollIndex=0,N.pollScheduled=!1,N}function _(M,N){N.pollIndex=h(N,N.pollingInterval,N.pollIndex,n2[N.pollingInterval]),N.length?g(N.pollingInterval):(w.assert(N.pollIndex===0),N.pollScheduled=!1)}function y(M,N){h(r,250,0,r.length),_(M,N),!N.pollScheduled&&r.length&&g(250)}function h(M,N,z,X){return Sj(e,M,z,X,j);function j(Z,le,de){de?(Z.unchangedPolls=0,M!==r&&(M[le]=void 0,T(Z))):Z.unchangedPolls!==r2[N]?Z.unchangedPolls++:M===r?(Z.unchangedPolls=1,M[le]=void 0,b(Z,250)):N!==2e3&&(Z.unchangedPolls++,M[le]=void 0,b(Z,N===250?500:2e3))}}function v(M){switch(M){case 250:return s;case 500:return a;case 2e3:return l}}function b(M,N){v(N).push(M),E(N)}function T(M){r.push(M),E(250)}function E(M){v(M).pollScheduled||g(M)}function g(M){v(M).pollScheduled=e.setTimeout(M===250?y:_,M,M===250?"pollLowPollingIntervalQueue":"pollPollingIntervalQueue",v(M))}}function Wte(e,n,r,s){let a=Rl(),l=s?new Map:void 0,u=new Map,d=ca(n);return _;function _(h,v,b,T){let E=d(h);a.add(E,v).length===1&&l&&l.set(E,r(h)||ba);let g=li(E)||".",M=u.get(g)||y(li(h)||".",g,T);return M.referenceCount++,{close:()=>{M.referenceCount===1?(M.close(),u.delete(g)):M.referenceCount--,a.remove(E,v)}}}function y(h,v,b){let T=e(h,1,(E,g)=>{if(!Li(g))return;let M=Wi(g,h),N=d(M),z=M&&a.get(N);if(z){let X,j=1;if(l){let Z=l.get(N);if(E==="change"&&(X=r(M)||ba,X.getTime()===Z.getTime()))return;X||(X=r(M)||ba),l.set(N,X),Z===ba?j=0:X===ba&&(j=2)}for(let Z of z)Z(M,j,X)}},!1,500,b);return T.referenceCount=0,u.set(v,T),T}}function Ute(e){let n=[],r=0,s;return a;function a(d,_){let y={fileName:d,callback:_,mtime:wk(e,d)};return n.push(y),u(),{close:()=>{y.isClosed=!0,vv(n,y)}}}function l(){s=void 0,r=Sj(e,n,r,n2[250]),u()}function u(){!n.length||s||(s=e.setTimeout(l,2e3,"pollQueue"))}}function zA(e,n,r,s,a){let u=ca(n)(r),d=e.get(u);return d?d.callbacks.push(s):e.set(u,{watcher:a((_,y,h)=>e.get(u)?.callbacks.slice().forEach(v=>v(_,y,h))),callbacks:[s]}),{close:()=>{let _=e.get(u);_&&(!O2(_.callbacks,s)||_.callbacks.length||(e.delete(u),M_(_)))}}}function Jte(e,n){let r=e.mtime.getTime(),s=n.getTime();return r!==s?(e.mtime=n,e.callback(e.fileName,bj(r,s),n),!0):!1}function bj(e,n){return e===0?0:n===0?2:1}var LE=["/node_modules/.","/.git","/.#"],kj=ys;function ay(e){return kj(e)}function Cj(e){kj=e}function zte({watchDirectory:e,useCaseSensitiveFileNames:n,getCurrentDirectory:r,getAccessibleSortedChildDirectories:s,fileSystemEntryExists:a,realpath:l,setTimeout:u,clearTimeout:d}){let _=new Map,y=Rl(),h=new Map,v,b=I2(!n),T=ca(n);return(se,ye,he,oe)=>he?E(se,oe,ye):e(se,ye,he,oe);function E(se,ye,he,oe){let ie=T(se),Y=_.get(ie);Y?Y.refCount++:(Y={watcher:e(se,G=>{le(G,ye)||(ye?.synchronousWatchDirectory?(_.get(ie)?.targetWatcher||g(se,ie,G),Z(se,ie,ye)):M(se,ie,G,ye))},!1,ye),refCount:1,childWatches:Oe,targetWatcher:void 0,links:void 0},_.set(ie,Y),Z(se,ie,ye)),oe&&(Y.links??(Y.links=new Set)).add(oe);let _e=he&&{dirName:se,callback:he};return _e&&y.add(ie,_e),{dirName:se,close:()=>{let G=w.checkDefined(_.get(ie));_e&&y.remove(ie,_e),oe&&G.links?.delete(oe),G.refCount--,!G.refCount&&(_.delete(ie),G.links=void 0,M_(G),j(G),G.childWatches.forEach($m))}}}function g(se,ye,he,oe){let ie,Y;Li(he)?ie=he:Y=he,y.forEach((_e,G)=>{if(!(Y&&Y.get(G)===!0)&&(G===ye||no(ye,G)&&ye[G.length]===As))if(Y)if(oe){let ke=Y.get(G);ke?ke.push(...oe):Y.set(G,oe.slice())}else Y.set(G,!0);else _e.forEach(({callback:ke})=>ke(ie))}),_.get(ye)?.links?.forEach(_e=>{let G=ke=>ii(_e,Gv(se,ke,T));Y?g(_e,T(_e),Y,oe?.map(G)):g(_e,T(_e),G(ie))})}function M(se,ye,he,oe){let ie=_.get(ye);if(ie&&a(se,1)){N(se,ye,he,oe);return}g(se,ye,he),j(ie),X(ie)}function N(se,ye,he,oe){let ie=h.get(ye);ie?ie.fileNames.push(he):h.set(ye,{dirName:se,options:oe,fileNames:[he]}),v&&(d(v),v=void 0),v=u(z,1e3,"timerToUpdateChildWatches")}function z(){v=void 0,ay(`sysLog:: onTimerToUpdateChildWatches:: ${h.size}`);let se=Zi(),ye=new Map;for(;!v&&h.size;){let oe=h.entries().next();w.assert(!oe.done);let{value:[ie,{dirName:Y,options:_e,fileNames:G}]}=oe;h.delete(ie);let ke=Z(Y,ie,_e);_.get(ie)?.targetWatcher||g(Y,ie,ye,ke?void 0:G)}ay(`sysLog:: invokingWatchers:: Elapsed:: ${Zi()-se}ms:: ${h.size}`),y.forEach((oe,ie)=>{let Y=ye.get(ie);Y&&oe.forEach(({callback:_e,dirName:G})=>{Gr(Y)?Y.forEach(_e):_e(G)})});let he=Zi()-se;ay(`sysLog:: Elapsed:: ${he}ms:: onTimerToUpdateChildWatches:: ${h.size} ${v}`)}function X(se){if(!se)return;let ye=se.childWatches;se.childWatches=Oe;for(let he of ye)he.close(),X(_.get(T(he.dirName)))}function j(se){se?.targetWatcher&&(se.targetWatcher.close(),se.targetWatcher=void 0)}function Z(se,ye,he){let oe=_.get(ye);if(!oe)return!1;let ie=di(l(se)),Y,_e;return b(ie,se)===0?Y=VO(a(se,1)?Vi(s(se),re=>{let be=Wi(re,se);return!le(be,he)&&b(be,di(l(be)))===0?be:void 0}):Oe,oe.childWatches,(re,be)=>b(re,be.dirName),G,$m,ke):oe.targetWatcher&&b(ie,oe.targetWatcher.dirName)===0?(Y=!1,w.assert(oe.childWatches===Oe)):(j(oe),oe.targetWatcher=E(ie,he,void 0,se),oe.childWatches.forEach($m),Y=!0),oe.childWatches=_e||Oe,Y;function G(re){let be=E(re,he);ke(be)}function ke(re){(_e||(_e=[])).push(re)}}function le(se,ye){return kt(LE,he=>de(se,he))||xj(se,ye,n,r)}function de(se,ye){return se.includes(ye)?!0:n?!1:T(se).includes(ye)}}var Pj=(e=>(e[e.File=0]="File",e[e.Directory=1]="Directory",e))(Pj||{});function Vte(e){return(n,r,s)=>e(r===1?"change":"rename","",s)}function qte(e,n,r){return(s,a,l)=>{s==="rename"?(l||(l=r(e)||ba),n(e,l!==ba?0:2,l)):n(e,1,l)}}function xj(e,n,r,s){return!1}function VA(e,n,r,s,a){return(l,u)=>{if(l==="rename"){let d=u?di(ii(e,u)):e;(!u||!xj(d,r,s,a))&&n(d)}}}function Dj({pollingWatchFileWorker:e,getModifiedTime:n,setTimeout:r,clearTimeout:s,fsWatchWorker:a,fileSystemEntryExists:l,useCaseSensitiveFileNames:u,getCurrentDirectory:d,fsSupportsRecursiveFsWatch:_,getAccessibleSortedChildDirectories:y,realpath:h,tscWatchFile:v,useNonPollingWatchers:b,tscWatchDirectory:T,inodeWatching:E,fsWatchWithTimestamp:g,sysLog:M}){let N=new Map,z=new Map,X=new Map,j,Z,le,de,se=!1;return{watchFile:ye,watchDirectory:_e};function ye(fe,pt,je,Mt){Mt=ie(Mt,b);let Yt=w.checkDefined(Mt.watchFile);switch(Yt){case 0:return re(fe,pt,250,void 0);case 1:return re(fe,pt,je,void 0);case 2:return he()(fe,pt,je,void 0);case 3:return oe()(fe,pt,void 0,void 0);case 4:return be(fe,0,qte(fe,pt,n),!1,je,G1(Mt));case 5:return le||(le=Wte(be,u,n,g)),le(fe,pt,je,G1(Mt));default:w.assertNever(Yt)}}function he(){return j||(j=Bte({getModifiedTime:n,setTimeout:r}))}function oe(){return Z||(Z=Ute({getModifiedTime:n,setTimeout:r}))}function ie(fe,pt){if(fe&&fe.watchFile!==void 0)return fe;switch(v){case"PriorityPollingInterval":return{watchFile:1};case"DynamicPriorityPolling":return{watchFile:2};case"UseFsEvents":return Y(4,1,fe);case"UseFsEventsWithFallbackDynamicPolling":return Y(4,2,fe);case"UseFsEventsOnParentDirectory":pt=!0;default:return pt?Y(5,1,fe):{watchFile:4}}}function Y(fe,pt,je){let Mt=je?.fallbackPolling;return{watchFile:fe,fallbackPolling:Mt===void 0?pt:Mt}}function _e(fe,pt,je,Mt){return _?be(fe,1,VA(fe,pt,Mt,u,d),je,500,G1(Mt)):(de||(de=zte({useCaseSensitiveFileNames:u,getCurrentDirectory:d,fileSystemEntryExists:l,getAccessibleSortedChildDirectories:y,watchDirectory:G,realpath:h,setTimeout:r,clearTimeout:s})),de(fe,pt,je,Mt))}function G(fe,pt,je,Mt){w.assert(!je);let Yt=ke(Mt),Bt=w.checkDefined(Yt.watchDirectory);switch(Bt){case 1:return re(fe,()=>pt(fe),500,void 0);case 2:return he()(fe,()=>pt(fe),500,void 0);case 3:return oe()(fe,()=>pt(fe),void 0,void 0);case 0:return be(fe,1,VA(fe,pt,Mt,u,d),je,500,G1(Yt));default:w.assertNever(Bt)}}function ke(fe){if(fe&&fe.watchDirectory!==void 0)return fe;switch(T){case"RecursiveDirectoryUsingFsWatchFile":return{watchDirectory:1};case"RecursiveDirectoryUsingDynamicPriorityPolling":return{watchDirectory:2};default:let pt=fe?.fallbackPolling;return{watchDirectory:0,fallbackPolling:pt!==void 0?pt:void 0}}}function re(fe,pt,je,Mt){return zA(N,u,fe,pt,Yt=>e(fe,Yt,je,Mt))}function be(fe,pt,je,Mt,Yt,Bt){return zA(Mt?X:z,u,fe,je,Me=>rt(fe,pt,Me,Mt,Yt,Bt))}function rt(fe,pt,je,Mt,Yt,Bt){let Me,tt;E&&(Me=fe.substring(fe.lastIndexOf(As)),tt=Me.slice(As.length));let me=l(fe,pt)?Lt():hn();return{close:()=>{me&&(me.close(),me=void 0)}};function dt(kn){me&&(M(`sysLog:: ${fe}:: Changing watcher to ${kn===Lt?"Present":"Missing"}FileSystemEntryWatcher`),me.close(),me=kn())}function Lt(){if(se)return M(`sysLog:: ${fe}:: Defaulting to watchFile`),_n();try{let kn=(pt===1||!g?a:qt)(fe,Mt,E?Vt:je);return kn.on("error",()=>{je("rename",""),dt(hn)}),kn}catch(kn){return se||(se=kn.code==="ENOSPC"),M(`sysLog:: ${fe}:: Changing to watchFile`),_n()}}function Vt(kn,ue){let Ze;if(ue&&Ec(ue,"~")&&(Ze=ue,ue=ue.slice(0,ue.length-1)),kn==="rename"&&(!ue||ue===tt||Ec(ue,Me))){let Ct=n(fe)||ba;Ze&&je(kn,Ze,Ct),je(kn,ue,Ct),E?dt(Ct===ba?hn:Lt):Ct===ba&&dt(hn)}else Ze&&je(kn,Ze),je(kn,ue)}function _n(){return ye(fe,Vte(je),Yt,Bt)}function hn(){return ye(fe,(kn,ue,Ze)=>{ue===0&&(Ze||(Ze=n(fe)||ba),Ze!==ba&&(je("rename","",Ze),dt(Lt)))},Yt,Bt)}}function qt(fe,pt,je){let Mt=n(fe)||ba;return a(fe,pt,(Yt,Bt,Me)=>{Yt==="change"&&(Me||(Me=n(fe)||ba),Me.getTime()===Mt.getTime())||(Mt=Me||n(fe)||ba,je(Yt,Bt,Mt))})}}function Ej(e){let n=e.writeFile;e.writeFile=(r,s,a)=>ME(r,s,!!a,(l,u,d)=>n.call(e,l,u,d),l=>e.createDirectory(l),l=>e.directoryExists(l))}var Ms=(()=>{let e="\uFEFF";function n(){let s=/^native |^\([^)]+\)$|^(internal[\\/]|[a-zA-Z0-9_\s]+(\.js)?$)/,a=require("fs"),l=require("path"),u=require("os"),d;try{d=require("crypto")}catch{d=void 0}let _,y="./profile.cpuprofile",h=process.platform==="darwin",v=process.platform==="linux"||h,b=u.platform(),T=ye(),E=a.realpathSync.native?process.platform==="win32"?fe:a.realpathSync.native:a.realpathSync,g=__filename.endsWith("sys.js")?l.join(l.dirname(__dirname),"__fake__.js"):__filename,M=process.platform==="win32"||h,N=Fl(()=>process.cwd()),{watchFile:z,watchDirectory:X}=Dj({pollingWatchFileWorker:oe,getModifiedTime:je,setTimeout,clearTimeout,fsWatchWorker:ie,useCaseSensitiveFileNames:T,getCurrentDirectory:N,fileSystemEntryExists:re,fsSupportsRecursiveFsWatch:M,getAccessibleSortedChildDirectories:Me=>G(Me).directories,realpath:pt,tscWatchFile:process.env.TSC_WATCHFILE,useNonPollingWatchers:!!process.env.TSC_NONPOLLING_WATCHER,tscWatchDirectory:process.env.TSC_WATCHDIRECTORY,inodeWatching:v,fsWatchWithTimestamp:h,sysLog:ay}),j={args:process.argv.slice(2),newLine:u.EOL,useCaseSensitiveFileNames:T,write(Me){process.stdout.write(Me)},getWidthOfTerminal(){return process.stdout.columns},writeOutputIsTTY(){return process.stdout.isTTY},readFile:Y,writeFile:_e,watchFile:()=>iv,watchDirectory:()=>iv,preferNonRecursiveWatch:!M,resolvePath:Me=>l.resolve(Me),fileExists:be,directoryExists:rt,getAccessibleFileSystemEntries:G,createDirectory(Me){if(!j.directoryExists(Me))try{a.mkdirSync(Me)}catch(tt){if(tt.code!=="EEXIST")throw tt}},getExecutingFilePath(){return g},getCurrentDirectory:N,getDirectories:qt,getEnvironmentVariable(Me){return process.env[Me]||""},readDirectory:ke,getModifiedTime:je,setModifiedTime:Mt,deleteFile:Yt,createHash:d?Bt:vj,createSHA256Hash:d?Bt:void 0,getMemoryUsage(){return global.gc&&global.gc(),process.memoryUsage().heapUsed},getFileSize(Me){try{let tt=Z(Me);if(tt?.isFile())return tt.size}catch{}return 0},exit(Me){se(()=>process.exit(Me))},enableCPUProfiler:le,disableCPUProfiler:se,cpuProfilingEnabled:()=>!!_||ki(process.execArgv,"--cpu-prof")||ki(process.execArgv,"--prof"),realpath:pt,debugMode:!!process.env.NODE_INSPECTOR_IPC||!!process.env.VSCODE_INSPECTOR_OPTIONS||kt(process.execArgv,Me=>/^--(inspect|debug)(-brk)?(=\d+)?$/i.test(Me))||!!process.recordreplay,tryEnableSourceMapsForHost(){try{require("source-map-support").install()}catch{}},setTimeout,clearTimeout,clearScreen:()=>{process.stdout.write("\x1Bc")},setBlocking:()=>{let Me=process.stdout?._handle;Me&&Me.setBlocking&&Me.setBlocking(!0)},base64decode:Me=>Buffer.from(Me,"base64").toString("utf8"),base64encode:Me=>Buffer.from(Me).toString("base64"),require:(Me,tt)=>{try{w.fail("implement me")}catch(me){return{module:void 0,modulePath:void 0,error:me}}}};return j;function Z(Me){return a.statSync(Me,{throwIfNoEntry:!1})}function le(Me,tt){if(_)return tt(),!1;let me=require("inspector");if(!me||!me.Session)return tt(),!1;let dt=new me.Session;return dt.connect(),dt.post("Profiler.enable",()=>{dt.post("Profiler.start",()=>{_=dt,y=Me,tt()})}),!0}function de(Me){let tt=0,me=new Map,dt=cc(l.dirname(g)),Lt=`file://${fu(dt)===1?"":"/"}${dt}`;for(let Vt of Me.nodes)if(Vt.callFrame.url){let _n=cc(Vt.callFrame.url);ug(Lt,_n,T)?Vt.callFrame.url=Dk(Lt,_n,Lt,ca(T),!0):s.test(_n)||(Vt.callFrame.url=(me.has(_n)?me:me.set(_n,`external${tt}.js`)).get(_n),tt++)}return Me}function se(Me){if(_&&_!=="stopping"){let tt=_;return _.post("Profiler.stop",(me,{profile:dt})=>{if(!me){try{Z(y)?.isDirectory()&&(y=l.join(y,`${new Date().toISOString().replace(/:/g,"-")}+P${process.pid}.cpuprofile`))}catch{}try{a.mkdirSync(l.dirname(y),{recursive:!0})}catch{}a.writeFileSync(y,JSON.stringify(de(dt)))}_=void 0,tt.disconnect(),Me()}),_="stopping",!0}else return Me(),!1}function ye(){return b==="win32"||b==="win64"?!1:!be(he(__filename))}function he(Me){return Me.replace(/\w/g,tt=>{let me=tt.toUpperCase();return tt===me?tt.toLowerCase():me})}function oe(Me,tt,me){a.watchFile(Me,{persistent:!0,interval:me},Lt);let dt;return{close:()=>a.unwatchFile(Me,Lt)};function Lt(Vt,_n){let hn=+_n.mtime==0||dt===2;if(+Vt.mtime==0){if(hn)return;dt=2}else if(hn)dt=0;else{if(+Vt.mtime==+_n.mtime)return;dt=1}tt(Me,dt,Vt.mtime)}}function ie(Me,tt,me){return a.watch(Me,M?{persistent:!0,recursive:!!tt}:{persistent:!0},me)}function Y(Me,tt){let me;try{me=a.readFileSync(Me)}catch{return}let dt=me.length;if(dt>=2&&me[0]===254&&me[1]===255){dt&=-2;for(let Lt=0;Lt<dt;Lt+=2){let Vt=me[Lt];me[Lt]=me[Lt+1],me[Lt+1]=Vt}return me.toString("utf16le",2)}return dt>=2&&me[0]===255&&me[1]===254?me.toString("utf16le",2):dt>=3&&me[0]===239&&me[1]===187&&me[2]===191?me.toString("utf8",3):me.toString("utf8")}function _e(Me,tt,me){me&&(tt=e+tt);let dt;try{dt=a.openSync(Me,"w"),a.writeSync(dt,tt,void 0,"utf8")}finally{dt!==void 0&&a.closeSync(dt)}}function G(Me){try{let tt=a.readdirSync(Me||".",{withFileTypes:!0}),me=[],dt=[];for(let Lt of tt){let Vt=typeof Lt=="string"?Lt:Lt.name;if(Vt==="."||Vt==="..")continue;let _n;if(typeof Lt=="string"||Lt.isSymbolicLink()){let hn=ii(Me,Vt);try{if(_n=Z(hn),!_n)continue}catch{continue}}else _n=Lt;_n.isFile()?me.push(Vt):_n.isDirectory()&&dt.push(Vt)}return me.sort(),dt.sort(),{files:me,directories:dt}}catch{return zD}}function ke(Me,tt,me,dt,Lt){return i8(Me,tt,me,dt,T,process.cwd(),Lt,G,pt)}function re(Me,tt){let me=Error.stackTraceLimit;Error.stackTraceLimit=0;try{let dt=Z(Me);if(!dt)return!1;switch(tt){case 0:return dt.isFile();case 1:return dt.isDirectory();default:return!1}}catch{return!1}finally{Error.stackTraceLimit=me}}function be(Me){return re(Me,0)}function rt(Me){return re(Me,1)}function qt(Me){return G(Me).directories.slice()}function fe(Me){return Me.length<260?a.realpathSync.native(Me):a.realpathSync(Me)}function pt(Me){try{return E(Me)}catch{return Me}}function je(Me){let tt=Error.stackTraceLimit;Error.stackTraceLimit=0;try{return Z(Me)?.mtime}catch{return}finally{Error.stackTraceLimit=tt}}function Mt(Me,tt){try{a.utimesSync(Me,tt,tt)}catch{return}}function Yt(Me){try{return a.unlinkSync(Me)}catch{return}}function Bt(Me){let tt=d.createHash("sha256");return tt.update(Me),tt.digest("hex")}}let r;return zx()&&(r=n()),r&&Ej(r),r})();function $te(e){Ms=e}Ms&&Ms.getEnvironmentVariable&&(jte(Ms),w.setAssertionLevel(/^development$/i.test(Ms.getEnvironmentVariable("NODE_ENV"))?1:0));Ms&&Ms.debugMode&&(w.isDebugging=!0);function FE(e,n,r,s,a){let l=Gr(e)?Hte(e,n,r,s,a):e,{rootNames:u,options:d,configFileParsingDiagnostics:_,projectReferences:y,typeScriptVersion:h}=l,{oldProgram:v}=l,b,T,E,g,M,N,z=new Map,X=Rl(),j,Z,le,de={},se={};var ye=v?.masterIncludeApply;let he,oe,ie,Y,_e,G,ke,re,be,rt=typeof d.maxNodeModuleJsDepth=="number"?d.maxNodeModuleJsDepth:0,qt=0,fe=new Map,pt=new Map;ci.mark("beforeProgram");let je=l.host||RE(d),Mt="TODO",Yt=Nb(),Bt=[],Me=je.getCurrentDirectory(),tt=new Map,me,dt,Lt=d.noLib,Vt=Fl(()=>je.getDefaultLibFileName(d)),_n,hn=new Map,kn=new Map,ue=je.useCaseSensitiveFileNames()?new Map:void 0,Ze=Rl(),Ct,on,Vr=je.hasInvalidatedResolutions||Lu;je.resolveModuleNameLiterals?(on=je.resolveModuleNameLiterals.bind(je),Ct=je.getModuleResolutionCache?.()):(Ct=fE(Me,yr,d),on=(k,x,R,V,Ce)=>Fj(k,x,R,V,Ce,je,Ct,Mj));let Vn=Jv({fileExists:k=>Ms.fileExists(k),readFile:k=>H(k),getCurrentDirectory:()=>Ms.getCurrentDirectory(),getIncludeDirs:Re,getCompilerOptions:()=>d}),_i,xr,si,{fileExists:xi,directoryExists:Se}=je,De=je.readFile.bind(je),Ne=Gte(v,d);if(v&&je.onAllFilesNeedReparse&&ck(v.getCompilerOptions(),d)){let k=v.getSourceFiles().filter(x=>!x.isDefaultLib).map(x=>x.fileName);je.onAllFilesNeedReparse(k)}let $e=je.hasInvalidatedLibResolutions||Lu,we,Je=!!je.useSourceOfProjectReferenceRedirect?.()&&!d.disableSourceOfProjectReferenceRedirect,ze;if(Dt?.push(Dt.Phase.Program,"tryReuseStructureFromOldProgram",{}),ze=Nt(),Dt?.pop(),ze!==2){if(b=[],T=[],y&&(_i||(_i=y.map(bs)),u.length),_n=O(d),u.length&&!Lt){let x=Vt();if(!d.lib&&x){let R=yt(x,!0,{kind:7});if(R&&R.parsedMacros){d.configDefines=d.configDefines||{};let V=R.parsedMacros;for(let[Ce,Ye]of V)d.configDefines[Ce]||(d.configDefines[Ce]=Ye)}}}_n=O(d);let k=-1;if(xi(d.masterFile)&&d.driverType===1){k=u.indexOf(d.masterFile),Dt?.push(Dt.Phase.Program,"processMasterFile");let x=yt(d.masterFile,!1,{kind:1,index:k}),R=J9(x);ye=R?wh(R):void 0,Dt?.pop()}if(Dt?.push(Dt.Phase.Program,"processRootFiles",{count:u.length}),Jt(u,(x,R)=>co(x,!1,!1,{kind:0,index:R})),Dt?.pop(),u.length&&!Lt){let x=Vt();!d.lib&&x?co(x,!0,!1,{kind:7}):Jt(d.lib,(R,V)=>{co(Le(R),!0,!1,{kind:7,index:V})})}E=L_(b,tl).concat(T),b=void 0,T=void 0,j=void 0}if(v&&je.onReleaseOldSourceFile){let k=v.getSourceFiles();for(let x of k){let R=Zn(x.resolvedPath);(Ne||!R||x.resolvedPath===x.path&&R.resolvedPath!==x.path)&&je.onReleaseOldSourceFile(x,v.getCompilerOptions(),!!Zn(x.path),R)}je.getParsedCommandLine||v.forEachResolvedProjectReference(x=>{oi(x.sourceFile.path)||je.onReleaseOldSourceFile(x.sourceFile,v.getCompilerOptions(),!1,void 0)})}v&&je.onReleaseParsedCommandLine&&cb(v.getProjectReferences(),v.getResolvedProjectReferences(),(k,x,R)=>{let V=x?.commandLine.projectReferences[R]||v.getProjectReferences()[R],Ce=sv(V);xr?.has(Os(Ce))||je.onReleaseParsedCommandLine(Ce,k,v.getCompilerOptions())}),v=void 0,G=void 0;let it={getRootFileNames:()=>u,getDriverType:()=>d.driverType,getSourceFile:Sn,getSourceFileByPath:Zn,getSourceFiles:()=>E,getMissingFilePaths:()=>kn,getModuleResolutionCache:()=>{},getFilesByNameMap:()=>hn,getCompilerOptions:()=>d,getSyntacticDiagnostics:Kt,getOptionsDiagnostics:mr,getGlobalDiagnostics:ja,getSemanticDiagnostics:gr,getSuggestionDiagnostics:Hs,getDeclarationDiagnostics:ct,getTypeChecker:mn,getCommonSourceDirectory:()=>Me,getCurrentDirectory:()=>Me,getNodeCount:()=>mn().getNodeCount(),getIdentifierCount:()=>mn().getIdentifierCount(),getSymbolCount:()=>mn().getSymbolCount(),getTypeCount:()=>mn().getTypeCount(),getInstantiationCount:()=>mn().getInstantiationCount(),getRelationCacheSizes:()=>mn().getRelationCacheSizes(),getFileProcessingDiagnostics:()=>he,isSourceFileFromExternalLibrary:Zt,isSourceFileDefaultLibrary:sn,getSourceFileFromReference:mu,resolvedModules:_e,resolvedLibReferences:ie,getResolvedModule:ur,getResolvedModuleFromModuleSpecifier:Gt,getResolvedTypeReferenceDirectiveFromTypeReferenceDirective:Rn,forEachResolvedModule:Xi,getCurrentPackagesMap:()=>be,getConfigFileParsingDiagnostics:bn,getProjectReferences:Kn,getResolvedProjectReferences:Rr,getResolvedProjectReferenceToRedirect:$i,getResolvedProjectReferenceByPath:oi,forEachResolvedProjectReference:tr,isSourceOfProjectReferenceRedirect:Ie,fileExists:xi,readFile:De,directoryExists:Se,realpath:je.realpath?.bind(je),useCaseSensitiveFileNames:()=>je.useCaseSensitiveFileNames(),getCanonicalFileName:yr,getFileIncludeReasons:()=>X,structureIsReused:ze,getIncludeDirs:Re,masterIncludeApply:ye,getConfigDefines:()=>_n};return ci.mark("afterProgram"),ci.measure("Program","beforeProgram","afterProgram"),Dt?.pop(),it;function Re(k){let x=d?.libIncludeDirs??Oe;if(ye){let R=d.rootDir??li(d.configFilePath),V=Gv(R,k,je.getCanonicalFileName),Ce=di(V),Ye=Xt(ye(Ce),ut=>ut!=":DEFAULT:"?I_(R,"."+ut):ut);if(Ye&&Ye.length){let ut=Ye.indexOf(":DEFAULT:");ut>=0?x=Ye.slice(0,ut).concat(x,Ye.slice(ut+1)):x=Ye}}return x}function H(k){return je.getSourceTextFromSnapshot(k)??Ms.readFile(k)}function Sn(k){return Zn(Os(k))}function Zt(k){return!!pt.get(k.path)}function sn(k){if(!k.isDeclarationFile)return!1;if(k.hasNoDefaultLib)return!0;if(!d.noLib)return!1;let x=je.useCaseSensitiveFileNames()?gg:gp;return d.lib?kt(d.lib,R=>x(k.fileName,ie.get(R).actual)):x(k.fileName,Vt())}function mn(){return M||(M=$M(it))}function Kt(k,x){return Pt(k,cs,x)}function gr(k,x){return Pt(k,Xr,x)}function Xr(k,x){return ri(Oj(Te(k,x),d),_r(k))}function cs(k){return k.parseDiagnostics?.slice()}function Xi(k,x){ro(_e,k,x)}function ro(k,x,R){R?k?.get(R.path)?.forEach((V,Ce,Ye)=>x(V,Ce,Ye,R.path)):k?.forEach((V,Ce)=>V.forEach((Ye,ut,Ar)=>x(Ye,ut,Ar,Ce)))}function $i(k){si===void 0&&(si=new Map,tr(R=>{Os(d.configFilePath)!==R.sourceFile.path&&R.commandLine.fileNames.forEach(V=>si.set(Os(V),R.sourceFile.path))}));let x=si.get(Os(k));return x&&oi(x)}function Ie(k){return Je&&!!$i(k)}function Te(k,x){return Yn(k,x,de,lt)}function yt(k,x,R){let V=pe(k,x,void 0,je,d,_n);return V.reportParsedDefines=!0,je.getSourceFile(k,V,Ye=>Jn(void 0,R,P.Cannot_read_file_0_Colon_1,[k,Ye]),Ne)}function Gt(k,x){return x??(x=$n(k)),w.assertIsDefined(x,"`moduleSpecifier` must have a `SourceFile` ancestor. Use `program.getResolvedModule` instead to provide the containing file and resolution mode."),ur(x,k.text,Xa(x,k))}function yn(k,x,R){return ke?.get(k.path)?.get(x,R)}function Rn(k,x){return yn(x,k.fileName,x.impliedNodeFormat)}function Rr(){return _i}function bn(){return _||Oe}function Kn(){return y}function ur(k,x,R){return w.assertIsDefined(k),x?_e?.get(k.path)?.get(jP(x),R):void 0}function _r(k){if(qy(k,d,it))return Oe;let x=At().getDiagnostics(k.fileName);return k.commentDirectives?.length?Un(k,k.commentDirectives,x).diagnostics:x}function Le(k){let x=ie?.get(k);if(x)return x.actual;let R=He(k);return(ie??(ie=new Map)).set(k,R),R.actual}function He(k){let x=Y?.get(k);if(x)return x;if(ze!==0&&v&&!$e(k)){let ut=v.resolvedLibReferences?.get(k);if(ut){if(ut.resolution&&td(d,je)){let Ar=ax(k),Fn=cx(d,Me,k);eo(je,ut.resolution.resolvedModule?ut.resolution.resolvedModule.packageId?P.Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package_ID_3:P.Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2:P.Reusing_resolution_of_module_0_from_1_of_old_program_it_was_not_resolved,Ar,Wi(Fn,Me),ut.resolution.resolvedModule?.resolvedFileName,ut.resolution.resolvedModule?.packageId&&Xh(ut.resolution.resolvedModule.packageId))}return(Y??(Y=new Map)).set(k,ut),ut}}let R=ax(k),V=cx(d,Me,k);Dt?.push(Dt.Phase.Program,"resolveLibrary",{resolveFrom:V}),ci.mark("beforeResolveLibrary");let Ce=we(R,V,d,k);ci.mark("afterResolveLibrary"),ci.measure("ResolveLibrary","beforeResolveLibrary","afterResolveLibrary"),Dt?.pop();let Ye={resolution:Ce,actual:Ce.resolvedModule?Ce.resolvedModule.resolvedFileName:ii(Mt,k)};return(Y??(Y=new Map)).set(k,Ye),Ye}function lt(k,x){return hr(()=>{if(qy(k,d,it))return Oe;let R=mn();w.assert(!!k.bindDiagnostics);let V=k.scriptKind!==1,Ce=k.bindDiagnostics,Ye=R.getDiagnostics(k,x);return nn(k,!V,Ce,Ye,k.jsDocDiagnostics)})}function nn(k,x,...R){let V=kp(R);if(!x||!k.commentDirectives?.length)return V;let{diagnostics:Ce,directives:Ye}=Un(k,k.commentDirectives,V);for(let ut of Ye.getUnusedExpectations())Ce.push(uR(k,ut.range,P.Unused_lpc_expect_error_directive));return Ce}function Un(k,x,R){let V=fR(k,x);return{diagnostics:R.filter(Ye=>Ir(Ye,V)===-1),directives:V}}function Ir(k,x){let{file:R,start:V}=k;if(!R)return-1;let Ce=Xc(R),Ye=m0(Ce,V).line-1;for(;Ye>=0;){if(x.markUsed(Ye))return Ye;let ut=R.text.slice(Ce[Ye],Ce[Ye+1]).trim();if(ut!==""&&!/^(\s*)\/\/(.*)$/.test(ut))return-1;Ye--}return-1}function Yn(k,x,R,V){let Ce=k?R.perFile?.get(k.path):R.allDiagnostics;if(Ce)return Ce;let Ye=V(k,x);return k?(R.perFile||(R.perFile=new Map)).set(k.path,Ye):R.allDiagnostics=Ye,Ye}function hr(k){try{return k()}catch(x){throw x instanceof Sv&&(M=void 0),x}}function Hs(k,x){return hr(()=>mn().getSuggestionDiagnostics(k,x))}function Pt(k,x,R){return Om(k?x(k,R):ao(it.getSourceFiles(),V=>(R&&R.throwIfCancellationRequested(),x(V,R))))}function oi(k){if(xr)return xr.get(k)||void 0}function tr(k){return jE(_i,k)}function Ui(k){let x=le?.get(k);return x===void 0&&(le??(le=new Map)).set(k,x=Nc(k)??!1),x||void 0}function Gs(){if(me===void 0){let k=xs();me=k&&to(k.initializer,Qa)||!1}return me||void 0}function xs(){return dt===void 0&&(dt=Vy(M8(d.configFile),"compilerOptions",Gi)||!1),dt||void 0}function Cn(k,x){let R=Gs();return R&&H9(R,k,x)}function la(k,x){return Vy(Gs(),k,x)}function ls(k,x){return la(k,R=>ss(R.initializer)&&R.initializer.text===x?R.initializer:void 0)}function Nc(k){if(tp(k)){let V=Rh(it,k),Ce;switch(k.kind){case 4:Ce=P.File_is_included_via_import_here;break;case 5:Ce=P.File_is_included_via_reference_here;break;case 6:Ce=P.File_is_included_via_type_library_reference_here;break;case 8:Ce=P.File_is_included_via_library_reference_here;break;default:w.assertNever(k)}return Xm(V)?Iu(V.file,V.pos,V.end-V.pos,Ce):void 0}if(!d.configFile)return;let x,R;switch(k.kind){case 0:if(!d.configFile.configFileSpecs)return;let V=Wi(u[k.index],Me),Ce=wE(it,V);if(Ce){x=zP(d.configFile,"files",Ce),R=P.File_is_matched_by_files_list_specified_here;break}let Ye=NE(it,V);if(!Ye||!Li(Ye))return;x=zP(d.configFile,"include",Ye),R=P.File_is_matched_by_include_pattern_specified_here;break;case 2:case 3:let ut=w.checkDefined(_i?.[k.index]),Ar=cb(y,_i,(vr,Ci,kr)=>vr===ut?{sourceFile:Ci?.sourceFile||d.configFile,index:kr}:void 0);if(!Ar)return;let{sourceFile:Fn,index:cr}=Ar,On=Bv(Fn,"references",vr=>qv(vr.initializer)?vr.initializer:void 0);return On&&On.elements.length>cr?Gc(Fn,On.elements[cr],k.kind===3?P.File_is_output_from_referenced_project_specified_here:P.File_is_source_from_referenced_project_specified_here):void 0;case 9:if(!d.types)return;x=Cn("types",k.typeReference),R=P.File_is_entry_point_of_type_library_specified_here;break;case 7:if(k.index!==void 0){x=Cn("lib",d.lib[k.index]),R=P.File_is_library_specified_here;break}let Mr=L8(au(d));x=Mr?ls("target",Mr):void 0,R=P.File_is_default_library_for_target_specified_here;break;case 1:x=ls("masterFile",d.masterFile),R=P.File_is_master_file_specified_here;break;default:w.assertNever(k)}return x&&Gc(d.configFile,x,R)}function Ts(k,x,R,V){let Ce,Ye=k&&X.get(k.path),ut,Ar,Fn=tp(x)?x:void 0,cr,On,Mr=k&&Z?.get(k.path),vr;Mr?(Mr.fileIncludeReasonDetails?(Ce=new Set(Ye),Ye?.forEach(ns)):Ye?.forEach(jr),On=Mr.redirectInfo):(Ye?.forEach(jr),On=k&&EE(k)),x&&jr(x);let Ci=Ce?.size!==Ye?.length;Fn&&Ce?.size===1&&(Ce=void 0),Ce&&Mr&&(Mr.details&&!Ci?vr=pi(Mr.details,R,...V||Oe):Mr.fileIncludeReasonDetails&&(Ci?Fi()?ut=ei(Mr.fileIncludeReasonDetails.next.slice(0,Ye.length),ut[0]):ut=[...Mr.fileIncludeReasonDetails.next,ut[0]]:Fi()?ut=Mr.fileIncludeReasonDetails.next.slice(0,Ye.length):cr=Mr.fileIncludeReasonDetails)),vr||(cr||(cr=Ce&&pi(ut,P.The_file_is_in_the_program_because_Colon)),vr=pi(On?cr?[cr,...On]:On:cr,R,...V||Oe)),k&&(Mr?(!Mr.fileIncludeReasonDetails||!Ci&&cr)&&(Mr.fileIncludeReasonDetails=cr):(Z??(Z=new Map)).set(k.path,Mr={fileIncludeReasonDetails:cr,redirectInfo:On}),!Mr.details&&!Ci&&(Mr.details=vr.next));let kr=Fn&&Rh(it,Fn);return kr&&Xm(kr)?Z2(kr.file,kr.pos,kr.end-kr.pos,vr,Ar):z9(vr,Ar);function jr(ui){Ce?.has(ui)||((Ce??(Ce=new Set)).add(ui),(ut??(ut=[])).push(IE(it,ui)),ns(ui))}function ns(ui){!Fn&&tp(ui)?Fn=ui:Fn!==ui&&(Ar=ei(Ar,Ui(ui)))}function Fi(){return Mr.fileIncludeReasonDetails.next?.length!==Ye?.length}}function In({reason:k}){let{file:x,pos:R,end:V}=Rh(it,k),Ce=x.libReferenceDirectives[k.index],Ye=Xte(Ce),ut=Jh(lP(Ye,"lib."),".d.ts"),Ar=Uh(ut,sb,Gi);return Iu(x,w.checkDefined(R),w.checkDefined(V)-R,Ar?P.Cannot_find_lib_definition_for_0_Did_you_mean_1:P.Cannot_find_lib_definition_for_0,Ye,Ar)}function At(){return Bt&&(he?.forEach(k=>{switch(k.kind){case 1:return Yt.add(Ts(k.file&&Zn(k.file),k.fileProcessingReason,k.diagnostic,k.args||Oe));case 0:return Yt.add(In(k));case 2:return k.diagnostics.forEach(x=>Yt.add(x));default:w.assertNever(k)}}),Bt.forEach(({file:k,diagnostic:x,args:R})=>Yt.add(Ts(k,void 0,x,R))),Bt=void 0,Z=void 0,le=void 0),Yt}function or(){if(!d.configFile)return Oe;let k=At().getDiagnostics(d.configFile.fileName);return tr(x=>{k=ri(k,At().getDiagnostics(x.sourceFile.fileName))}),k}function mr(){return Om(ri(At().getGlobalDiagnostics(),or()))}function ja(){return u.length?Om(mn().getGlobalDiagnostics().slice()):Oe}function mu(k,x){return Xo(ox(x.fileName,k.fileName),Sn)}function ar(k){if(ug(Mt,k.fileName,!1)){let x=wc(k.fileName);if(x==="lib.d.ts"||x==="lib.es6.d.ts")return 0;let R=Jh(lP(x,"lib."),".d.ts"),V=sb.indexOf(R);if(V!==-1)return V+1}return sb.length+2}function tl(k,x){return vs(ar(k),ar(x))}function co(k,x,R,V){Bn(di(k),x,R,void 0,V)}function br(k,x,R,V,Ce){Dt?.push(Dt.Phase.Program,"findSourceFile",{fileName:k,isDefaultLib:x||void 0,fileIncludeKind:Kx[V.kind]});let Ye=Ca(k,x,R,V,Ce);return Dt?.pop(),Ye}function Bn(k,x,R,V,Ce){Xo(k,Ye=>br(Ye,x,R,Ce,V),(Ye,...ut)=>Jn(void 0,Ce,Ye,ut),Ce)}function Jn(k,x,R,V){(he||(he=[])).push({kind:1,file:k&&k.path,fileProcessingReason:x,diagnostic:R,args:V})}function yr(k){return je.getCanonicalFileName(k)}function Os(k){return Ra(k,Me,yr)}function Yo(k,x,R){return k&&(!R||!tp(x)||!j?.has(x.file))?(X.add(k.path,x),!0):!1}function Ca(k,x,R,V,Ce){let Ye=Os(k),ut=k;if(hn.has(Ye)){let On=hn.get(Ye),Mr=Yo(On||void 0,V,!0);if(On&&Mr&&d.forceConsistentCasingInFileNames!==!1){let vr=On.fileName,Ci=je.useCaseSensitiveFileNames()?k:eg(k);Os(vr)!==Os(Ci)&&w.fail("implement me");let jr=nx(vr,Me),ns=nx(k,Me);jr!==ns&&Zo(k,On,V)}return On&&pt.get(On.path)&&qt===0?(pt.set(On.path,!1),d.noResolve||Io(On,x),d.noLib||void 0,fe.set(On.path,!1),uc(On)):On&&fe.get(On.path)&&qt<rt&&(fe.set(On.path,!1),uc(On)),On||void 0}let Ar,Fn=pe(k,x,void 0,je,d,_n),cr=je.getSourceFile(k,Fn,On=>Jn(void 0,V,P.Cannot_read_file_0_Colon_1,[k,On]),Ne);if(Ji(cr,Ye,k,Ar),cr){if(pt.set(Ye,qt>0),cr.fileName=k,cr.path=Ye,cr.resolvedPath=Os(k),cr.originalFileName=ut,Yo(cr,V,!1),je.useCaseSensitiveFileNames()){let On=eg(Ye),Mr=ue.get(On);Mr?Zo(k,Mr,V):ue.set(On,cr)}Lt=Lt||cr.hasNoDefaultLib&&!R,d.noResolve||Io(cr,x),d.noLib||void 0,uc(cr),x?(cr.isDefaultLib=!0,b.push(cr)):T.push(cr),(j??(j=new Set)).add(cr.path)}return cr}function Zo(k,x,R){!tp(R)&&kt(X.get(x.path),tp)?Jn(x,R,P.Already_included_file_name_0_differs_from_file_name_1_only_in_casing,[x.fileName,k]):Jn(x,R,P.File_name_0_differs_from_already_included_file_name_1_only_in_casing,[k,x.fileName])}function Zn(k){return hn.get(k)||void 0}function O(k){let x=new Map;k.playerFile&&x.set("__LPC_CONFIG_LIBFILES_PLAYER",`"${Mm(k.playerFile,k)}"`),k.masterFile&&x.set("__LPC_CONFIG_LIBFILES_MASTER",`"${Mm(k.masterFile,k)}"`),k.sefunFile&&x.set("__LPC_CONFIG_LIBFILES_SEFUN",`"${Mm(k.sefunFile,k)}"`);for(let R in k.configDefines||Z1)x.set(R,k.configDefines[R]);return x.set("__LANG_SVC__","1"),x}function pe(k,x,R,V,Ce,Ye){return{languageVersion:1,globalIncludes:(x||Ce.resolvedGlobalIncludeFiles?.some(ut=>ut==k)?void 0:Ce.globalIncludeFiles)||Oe,fileHandler:Vn,configDefines:Ye}}function ct(k,x){let R=it.getCompilerOptions();return Pt(k,fn,x)}function fn(k,x){return k.isDeclarationFile?[]:Or(k,x)}function Or(k,x){return Yn(k,x,se,Wr)}function Wr(k,x){return hr(()=>{let R=mn().getEmitResolver(k,x);return Gj(Jr(ys),R,k)||Oe})}function nr(k,x,R,V,Ce,Ye){je.writeFile(k,x,R,V,Ce,Ye)}function An(k){return tt.has(Os(k))}function Jr(k){return{getCanonicalFileName:yr,getCommonSourceDirectory:it.getCommonSourceDirectory,getCompilerOptions:it.getCompilerOptions,getCurrentDirectory:()=>Me,getSourceFile:it.getSourceFile,getSourceFileByPath:it.getSourceFileByPath,getSourceFiles:it.getSourceFiles,isSourceFileFromExternalLibrary:()=>!1,writeFile:k||nr,isEmitBlocked:An,readFile:x=>je.readFile(x),fileExists:x=>{let R=Os(x);return Zn(R)?!0:kn.has(R)?!1:je.fileExists(x)},realpath:mo(je,je.realpath),useCaseSensitiveFileNames:()=>je.useCaseSensitiveFileNames(),getBuildInfo:()=>it.getBuildInfo?.(),getSourceFileFromReference:(x,R)=>it.getSourceFileFromReference(x,R),redirectTargetsMap:Ze,getFileIncludeReasons:it.getFileIncludeReasons,createHash:mo(je,je.createHash),getModuleResolutionCache:()=>it.getModuleResolutionCache(),trace:mo(je,je.trace)}}function Ji(k,x,R,V){V?(Ss(R,V,k),Ss(R,x,k||!1)):Ss(R,x,k)}function Ss(k,x,R){hn.set(x,R),R!==void 0?kn.delete(x):kn.set(x,k)}function vo(k){k.resolutionDiagnostics?.length&&(he??(he=[])).push({kind:2,diagnostics:k.resolutionDiagnostics})}function No(k,x,R,V){if(je.resolveModuleNameLiterals||!je.resolveModuleNames)return vo(R);if(!Ct)return;let Ce=Wi(k.originalFileName,Me),Ye=li(Ce),Ar=Ct.getFromNonRelativeNameCache(x,V,Ye,void 0);Ar&&vo(Ar)}function uc(k){if(To(k),k.imports.length>0){let x=qA(k),R=G?.get(k.path)||Ba(x,k);R.length!==x.length&&console.warn("Not all modules resolved",R.length,x.length);let V=d,Ce=Yy();(_e??(_e=new Map)).set(k.path,Ce);for(let Ye=0;Ye<x.length;Ye++){if(!R[Ye]||!x[Ye]?.text)continue;let ut=R[Ye].resolvedModule,Ar=jP(x[Ye].text),Fn=1;if(Ce.set(Ar,Fn,R[Ye]),No(k,Ar,R[Ye],Fn),!ut)continue;let cr=ut.isExternalLibraryImport,On=!1,Mr=!1,vr=ut.resolvedFileName;cr&&qt++;let Ci=Mr&&qt>rt,kr=vr&&!BE(V,ut,k)&&!V.noResolve&&Ye<k.imports.length&&!Ci;Ci?fe.set(k.path,!0):kr&&br(vr,!1,!1,{kind:4,file:k.path,index:Ye},ut.packageId),cr&&qt--}}}function Ba(k,x){if(ze===0&&!x.ambientModuleNames?.length)return zr(k,x,void 0);let R,V,Ce,Ye=Qte,ut=v&&v.getSourceFile(x.fileName);for(let On=0;On<k.length;On++){let Mr=k[On];if(x===ut&&!Vr(x.path)){let Ci=v?.getResolvedModule(x,Mr.text,Xa(x,Mr));if(Ci?.resolvedModule){td(d,je)&&eo(je,Ci.resolvedModule.packageId?P.Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package_ID_3:P.Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2,Mr.text,Wi(x.originalFileName,Me),Ci.resolvedModule.resolvedFileName,Ci.resolvedModule.packageId&&Xh(Ci.resolvedModule.packageId)),(V??(V=new Array(k.length)))[On]=Ci,(Ce??(Ce=[])).push(Mr);continue}}let vr=!1;ki(x.ambientModuleNames,Mr.text)?(vr=!0,td(d,je)&&eo(je,P.Module_0_was_resolved_as_locally_declared_ambient_module_in_file_1,Mr.text,Wi(x.originalFileName,Me))):vr=cr(Mr),vr?(V||(V=new Array(k.length)))[On]=Ye:(R??(R=[])).push(Mr)}let Ar=R&&R.length?zr(R,x,Ce):Oe;if(!V)return w.assert(Ar.length===k.length),Ar;let Fn=0;for(let On=0;On<V.length;On++)V[On]||(V[On]=Ar[Fn],Fn++);return w.assert(Fn===Ar.length),V;function cr(On){let Mr=v?.getResolvedModule(x,On.text,Xa(x,On))?.resolvedModule,vr=Mr&&v.getSourceFile(Mr.resolvedFileName);if(Mr&&vr)return!1;let Ci=z.get(On.text);return Ci?(td(d,je)&&eo(je,P.Module_0_was_resolved_as_ambient_module_declared_in_1_since_this_file_was_not_modified,On.text,Ci),!0):!1}}function zr(k,x,R){if(!k.length)return Oe;let V=Wi(x.originalFileName,Me),Ce=void 0;Dt?.push(Dt.Phase.Program,"resolveModuleNamesWorker",{containingFileName:V}),ci.mark("beforeResolveModule");let Ye=on(k,V,Ce,d,x,R);return ci.mark("afterResolveModule"),ci.measure("ResolveModule","beforeResolveModule","afterResolveModule"),Dt?.pop(),Ye}function Xa(k,x){return 1}function To(k){if(k.imports)return;let x=H8(k),R=new Set,V,Ce,Ye,ut=k.pragmas?.get("this-object")??k.pragmas?.get("this_object");if(ut){let kr=j8(k,ut);kr&&kr.text?.length&&(V=ei(V,kr))}for(let kr of k.importCandidates)Fn(k,kr,!1);k.imports=V||Oe,k.ambientModuleNames=Ye||Oe;return;function Ar(kr){R.has(kr.text)||(R.add(kr.text),V=ei(V,kr))}function Fn(kr,jr,ns){if(_M(jr)&&jr.arguments?.length>=1&&ss(jr.arguments[0]))E_(jr,!1),Ar(jr.arguments[0]);else if(_E(jr))if(ss(jr.inheritClause))E_(jr,!1),Ar(jr.inheritClause);else{let Fi=On(jr.inheritClause),ui=Ve.createStringLiteral(Fi.join(""));ui.flags&=-17,Ho(ui,jr.inheritClause),Ar(ui)}else if(zv(jr)){if(jr.fileName){let Fi=Ve.createStringLiteral(jr.fileName);Aa(Fi,jr.content.pos,jr.content.end),Fi.flags&=-17,Fi.parent=jr,Ar(Fi)}}else if(Kte(jr)){let Fi=jr.typeExpression,ui=Fi?R_(Fi)?Fi:Fi.type&&u_(Fi.type)?Fi.type.type:Fi.type:void 0;if(ui){let Ao=cr(ui)||Oe;Jt(Ao,Ko=>{if(ss(Ko))Ar(Ko);else if(Ur(Ko)){let pc=On(Ko);if(pc.length){let Bl=Ve.createStringLiteral(pc.join(""));Bl.flags&=-17,Bl.parent=jr,Ar(Bl)}}})}}else if(Ii(jr)){let Fi=On(jr.expression);if(Fi.length){let ui=Ve.createStringLiteral(Fi.join(""));ui.flags&=-17,ui.parent=jr,Ar(ui)}}else if(Tg(jr)&&!jr.expression&&jr.arguments?.length){let Fi=qs(jr.arguments),ui=On(Fi);if(ui.length){let Ao=Ve.createStringLiteral(ui.join(""));Ao.flags&=-17,Ao.parent=jr,Ar(Ao)}}else if(hs(jr)&&Tt(jr.expression)&&jr.expression.text==="base_name"){let Fi=Mm(kr.fileName,d),ui=Ve.createStringLiteral(Fi);ui.flags&=-17,ui.parent=jr,Ar(ui)}}function cr(kr){if(dp(kr)&&ss(kr.literal))return[kr.literal];if(dp(kr)&&Ur(kr.literal))return[kr.literal];if((mk(kr)||mM(kr))&&kr.types.length)return ao(kr.types,cr);if(lp(kr)&&kr.elementType)return cr(kr.elementType)}function On(kr){let jr=[];return ss(kr)&&jr.push(kr.text),Hy(kr,ns=>{ss(ns)&&jr.push(ns.text)}),jr}function Mr(kr){}function vr(kr){return!Lv(kr)||Fv(kr)}function Ci(kr,jr){let ns=kr,Fi=ui=>{if(vr(ui)&&ui.pos<=jr&&(jr<ui.end||jr===ui.end&&ui.kind===1))return ui};for(;;){let ui=Kc(ns)&&Jt(ns.jsDoc,Fi)||Ns(ns,Fi);if(!ui)return ns;ns=ui}}}function fc(k){}function Io(k,x){Jt(k.referencedFiles,(R,V)=>{Bn(ox(R.fileName,k.fileName),x,!1,void 0,{kind:5,file:k.path,index:V})})}function Xo(k,x,R,V){if(P0(k)){let Ce=je.getCanonicalFileName(k),Ye=x(k);return R&&(Ye?tp(V)&&Ce===je.getCanonicalFileName(Zn(V.file).fileName)&&R(P.A_file_cannot_have_a_reference_to_itself):R(P.File_0_not_found,k)),Ye}else throw"implement this"}function Bo(k,x){return k.fileName===x.fileName}function gt(k,x){return k.kind===89?x.kind===89&&k.text===x.text:x.kind===16&&k.text===x.text}function js(){return!cb(v.getProjectReferences(),v.getResolvedProjectReferences(),(k,x,R)=>{let V=(x?x.commandLine.projectReferences:y)[R],Ce=bs(V);return k?!Ce||Ce.sourceFile!==k.sourceFile||!eu(k.commandLine.fileNames,Ce.commandLine.fileNames):Ce!==void 0},(k,x)=>{let R=x?oi(x.sourceFile.path).commandLine.projectReferences:y;return!eu(k,R,F8)})}function Nt(){if(!v)return 0;let k=v.getCompilerOptions();if(G9(k,d))return 0;let x=v.getRootFileNames();if(!eu(x,u)||!js())return 0;y&&(_i=y.map(bs));let R=[],V=[];if(ze=2,Qc(v.getMissingFilePaths(),Fn=>je.fileExists(Fn)))return 0;let Ce=v.getSourceFiles(),Ye;(Fn=>{Fn[Fn.Exists=0]="Exists",Fn[Fn.Modified=1]="Modified"})(Ye||(Ye={}));let ut=new Map;for(let Fn of Ce){let cr=pe(Fn.fileName,!1,Ct,je,d,v.getConfigDefines()),On=je.getSourceFileByPath?je.getSourceFileByPath(Fn.fileName,Fn.resolvedPath,cr,void 0,Ne):je.getSourceFile(Fn.fileName,cr,void 0,Ne);if(!On)return 0;let Mr;if(Mr=On!==Fn,On.path=Fn.path,On.originalFileName=Fn.originalFileName,On.resolvedPath=Fn.resolvedPath,On.fileName=Fn.fileName,Mr)Fn.impliedNodeFormat!==On.impliedNodeFormat?ze=1:eu(Fn.libReferenceDirectives,On.libReferenceDirectives,Bo)?Fn.hasNoDefaultLib!==On.hasNoDefaultLib?ze=1:eu(Fn.referencedFiles,On.referencedFiles,Bo)?(To(On),eu(Fn.imports,On.imports,gt)&&eu(Fn.typeReferenceDirectives,On.typeReferenceDirectives,Bo)||(ze=1)):ze=1:ze=1,V.push(On);else if(Vr(Fn.path))ze=1,V.push(On);else for(let vr of Fn.ambientModuleNames)z.set(vr,Fn.fileName);R.push(On)}if(ze!==2)return ze;for(let Fn of V){let cr=qA(Fn),On=Ba(cr,Fn);(G??(G=new Map)).set(Fn.path,On),Y9(cr,On,kr=>v.getResolvedModule(Fn,kr.text,Xa(Fn,kr)),Z9)&&(ze=1);let vr=Fn.typeReferenceDirectives;(re??(re=new Map)).set(Fn.path,void 0)}if(ze!==2)return ze;if(X9(k,d)||v.resolvedLibReferences&&Qc(v.resolvedLibReferences,(Fn,cr)=>He(cr).actual!==Fn.actual))return 1;kn=v.getMissingFilePaths(),w.assert(R.length===v.getSourceFiles().length);for(let Fn of R)hn.set(Fn.path,Fn);return v.getFilesByNameMap().forEach((Fn,cr)=>{if(!Fn){hn.set(cr,Fn);return}if(Fn.path===cr){v.isSourceFileFromExternalLibrary(Fn)&&pt.set(Fn.path,!0);return}hn.set(cr,hn.get(Fn.path))}),E=R,X=v.getFileIncludeReasons(),he=v.getFileProcessingDiagnostics(),_e=v.resolvedModules,ie=v.resolvedLibReferences,be=v.getCurrentPackagesMap(),_n=v.getConfigDefines(),2}function bs(k){w.fail("implement me")}}function Hte(e,n,r,s,a,l){return{rootNames:e,options:n,host:r,oldProgram:s,configFileParsingDiagnostics:a,typeScriptVersion:l}}function RE(e,n){return wj(e,n)}function wj(e,n,r=Ms){let s=ca(r.useCaseSensitiveFileNames);function a(){return li(di(r.getExecutingFilePath()))}let l=ud(e),u=r.realpath&&(_=>r.realpath(_)),d={getSourceFile:Nj(_=>d.readFile(_),n,e.driverType),getDefaultLibLocation:a,getDefaultLibFileName:_=>W8(_),getSourceTextFromSnapshot:_=>r.readFile(_),writeFile:Ij((_,y,h)=>r.writeFile(_,y,h),_=>(d.createDirectory||r.createDirectory)(_),_=>!0),getCurrentDirectory:Fl(()=>r.getCurrentDirectory()),useCaseSensitiveFileNames:()=>r.useCaseSensitiveFileNames,getCanonicalFileName:s,getNewLine:()=>l,fileExists:_=>r.fileExists(_),readFile:_=>r.readFile(_),trace:_=>r.write(_+l),directoryExists:_=>r.directoryExists(_),getEnvironmentVariable:_=>r.getEnvironmentVariable?r.getEnvironmentVariable(_):"",getDirectories:_=>r.getDirectories(_),realpath:u,readDirectory:(_,y,h,v,b)=>r.readDirectory(_,y,h,v,b),createDirectory:_=>r.createDirectory(_),createHash:mo(r,r.createHash),onAllFilesNeedReparse:_=>ys};return d}function Nj(e,n,r){return(s,a,l)=>{let u;try{ci.mark("beforeIORead"),u=e(s),ci.mark("afterIORead"),ci.measure("I/O Read","beforeIORead","afterIORead")}catch(d){l&&l(d.message),u=""}return u!==void 0?fk(s,u,a,n,1,r):void 0}}function Ij(e,n,r){return(s,a,l,u)=>{try{ci.mark("beforeIOWrite"),ME(s,a,l,e,n,r),ci.mark("afterIOWrite"),ci.measure("I/O Write","beforeIOWrite","afterIOWrite")}catch(d){u&&u(d.message)}}}function ME(e,n,r,s,a,l){try{s(e,n,r)}catch{Aj(li(di(e)),a,l),s(e,n,r)}}function Aj(e,n,r){if(e.length>fu(e)&&!r(e)){let s=li(e);Aj(s,n,r),n(e)}}function tp(e){switch(e?.kind){case 4:case 5:case 6:case 8:return!0;default:return!1}}function ox(e,n){let r=li(n),s=sc(e)?e:ii(r,e);return di(s)}function Gte(e,n){if(!e)return!1;let r=e.getCompilerOptions();return X2(r,n,qR)||ck(r,n)}function jE(e,n){return cb(void 0,e,(r,s)=>r&&n(r,s))}function cb(e,n,r,s){let a;return l(e,n,void 0);function l(u,d,_){if(s){let y=s(u,_);if(y)return y}return Jt(d,(y,h)=>{if(y&&a?.has(y.sourceFile.path))return;let v=r(y,_,h);return v||!y?v:((a||(a=new Set)).add(y.sourceFile.path),l(y.commandLine.projectReferences,y.references,y))})}}function Uu(e,n,r=0){if(Li(e))return e;if(e===void 0)return"";let s="";if(r){s+=n;for(let a=0;a<r;a++)s+="  "}if(s+=e.messageText,r++,e.next)for(let a of e.next)s+=Uu(a,n,r);return s}function Oj(e,n){return Yr(e,r=>!r.skippedOn||!n[r.skippedOn])}function Lj(e,n,r){let s;return Jt(e,l=>{let u=Hv(l,n);if(u.pop(),!s){s=u;return}let d=Math.min(s.length,u.length);for(let _=0;_<d;_++)if(r(s[_])!==r(u[_])){if(_===0)return!0;s.length=_;break}u.length<s.length&&(s.length=u.length)})?"":s?x0(s):n}function ax(e){return"efuns/"+(e.endsWith("ldmud.h")?"ldmud/":"fluffos/")+e}function cx(e,n,r){let s=e.configFilePath?li(e.configFilePath):n;return ii(s,`__lib_node_modules_lookup_${r}__.ts`)}function BE(e,{extension:n},{isDeclarationFile:r}){switch(n){case".lpc":case".c":case".h":return;default:return s()}function s(){return r||e.allowArbitraryExtensions?void 0:P.Module_0_was_resolved_to_1_but_allowArbitraryExtensions_is_not_set}}function qA({imports:e}){return e.map(r=>r)}var Qte={resolvedModule:void 0,resolvedTypeReferenceDirective:void 0};function Fj(e,n,r,s,a,l,u,d){if(e.length===0)return Oe;let _=[],y=new Map,h=d(n,r,s,l,u);for(let v of e){let b=h.nameAndMode.getName(v),T=h.nameAndMode.getMode(v,a,r?.commandLine.options||s),E=Qy(b,T),g=y.get(E);g||y.set(E,g=h.resolve(b,T)),_.push(g)}return _}function Rj(e,n,r){return 1}function Yte(e){return e.text}var WE={getName:Yte,getMode:(e,n,r)=>Rj(n,e,r)};function Mj(e,n,r,s,a){return{nameAndMode:WE,resolve:(l,u)=>dE(l,e,r,s,a,n,u)}}function jj(e,n,r,s){return 1}function Rh(e,n){let r=w.checkDefined(e.getSourceFileByPath(n.file)),{kind:s,index:a}=n,l,u,d;switch(s){case 4:let _=Bj(r,a);if(d=e.getResolvedModuleFromModuleSpecifier(_,r)?.resolvedModule?.packageId,_.pos===-1)return{file:r,packageId:d,text:_.text};l=ts(r.text,_.pos),u=_.end;break;case 5:({pos:l,end:u}=r.referencedFiles[a]);break;case 6:({pos:l,end:u}=r.typeReferenceDirectives[a]),d=e.getResolvedTypeReferenceDirectiveFromTypeReferenceDirective(r.typeReferenceDirectives[a],r)?.resolvedTypeReferenceDirective?.packageId;break;case 8:({pos:l,end:u}=r.libReferenceDirectives[a]);break;default:return w.assertNever(s)}return{file:r,pos:l,end:u,packageId:d}}function Bj({imports:e},n){if(n<e.length)return e[n];let r=e.length;w.fail("should never ask for module name at index higher than possible module name")}function Xm(e){return e.pos!==void 0}function sv(e){return lB(e.path)}function Wj(e,n){let r=`${od(e)} LPC${e.code}: ${Uu(e.messageText,n.getNewLine())}${n.getNewLine()}`;if(e.file){let{line:s,character:a}=$s(e.file,e.start),l=e.file.fileName;return`${xk(l,n.getCurrentDirectory(),d=>n.getCanonicalFileName(d))}(${s+1},${a+1}): `+r}return r}var Uj=(e=>(e.Grey="\x1B[90m",e.Red="\x1B[91m",e.Yellow="\x1B[93m",e.Blue="\x1B[94m",e.Cyan="\x1B[96m",e.Green="\x1B[92m",e))(Uj||{}),V4="\x1B[7m",q4=" ",Jj="\x1B[0m",$A="...",Zte="  ",HA="    ";function GA(e){switch(e){case 1:return"\x1B[91m";case 0:return"\x1B[93m";case 2:return w.fail("Should never get an Info diagnostic on the command line.");case 3:return"\x1B[94m"}}function _p(e,n){return n+e+Jj}function zj(e,n,r){let s;return s=Is(s,e.getConfigFileParsingDiagnostics()),s=Is(s,e.getOptionsDiagnostics(r)),s=Is(s,e.getSyntacticDiagnostics(n,r)),s=Is(s,e.getGlobalDiagnostics(r)),s=Is(s,e.getSemanticDiagnostics(n,r)),Om(s||Oe)}function Xte(e){return eg(e.fileName)}function Vj(e,n,r,s,a,l,u,d,_,y){if(!e||d?.()||!eu(e.getRootFileNames(),n))return!1;let h;if(!eu(e.getProjectReferences(),y,g)||e.getSourceFiles().some(T))return!1;let v=e.getMissingFilePaths();if(v&&Qc(v,a))return!1;let b=e.getCompilerOptions();if(!R8(b,r)||e.resolvedLibReferences&&Qc(e.resolvedLibReferences,(N,z)=>u(z)))return!1;if(b.configFile&&r.configFile)return b.configFile.text===r.configFile.text;return!0;function T(N){return!E(N)||l(N.path)}function E(N){return N.version===s(N.resolvedPath,N.fileName)}function g(N,z,X){return F8(N,z)&&M(e.getResolvedProjectReferences()[X],N)}function M(N,z){if(N){if(ki(h,N))return!0;let j=sv(z),Z=_(j);return!Z||N.commandLine.options.configFile!==Z.options.configFile||!eu(N.commandLine.fileNames,Z.fileNames)?!1:((h||(h=[])).push(N),!Jt(N.references,(le,de)=>!M(le,N.commandLine.projectReferences[de])))}let X=sv(z);return!_(X)}}function qj(e,n,r="lpc-config.json"){return Ek(e,s=>{let a=ii(s,r);return console.log(`Checking for ${a}`),n(a)?a:void 0})}function lx(e,n,r,s=_p){let{line:a,character:l}=$s(e,n),u=r?xk(e.fileName,r.getCurrentDirectory(),_=>r.getCanonicalFileName(_)):e.fileName,d="";return d+=s(u,"\x1B[96m"),d+=":",d+=s(`${a+1}`,"\x1B[93m"),d+=":",d+=s(`${l+1}`,"\x1B[93m"),d}function $j(e,n){let r="";for(let s of e){if(s.file){let{file:a,start:l}=s;r+=lx(a,l,n),r+=" - "}if(r+=_p(od(s),GA(s.category)),r+=_p(` ${RO}${s.code}: `,"\x1B[90m"),r+=Uu(s.messageText,n.getNewLine()),s.file&&s.code!==P.File_appears_to_be_binary.code&&(r+=n.getNewLine(),r+=QA(s.file,s.start,s.length,"",GA(s.category),n)),s.relatedInformation){r+=n.getNewLine();for(let{file:a,start:l,length:u,messageText:d}of s.relatedInformation)a&&(r+=n.getNewLine(),r+=Zte+lx(a,l,n),r+=QA(a,l,u,HA,"\x1B[96m",n)),r+=n.getNewLine(),r+=HA+Uu(d,n.getNewLine())}r+=n.getNewLine()}return r}function QA(e,n,r,s,a,l){let{line:u,character:d}=$s(e,n),{line:_,character:y}=$s(e,n+r),h=$s(e,e.text.length).line,v=_-u>=4,b=(_+1+"").length;v&&(b=Math.max($A.length,b));let T="";for(let E=u;E<=_;E++){T+=l.getNewLine(),v&&u+1<E&&E<_-1&&(T+=s+_p($A.padStart(b),V4)+q4+l.getNewLine(),E=_-1);let g=Sy(e,E,0),M=E<h?Sy(e,E+1,0):e.text.length,N=e.text.slice(g,M);if(N=N.trimEnd(),N=N.replace(/\t/g," "),T+=s+_p((E+1+"").padStart(b),V4)+q4,T+=N+l.getNewLine(),T+=s+_p("".padStart(b),V4)+q4,T+=a,E===u){let z=E===_?y:void 0;T+=N.slice(0,d).replace(/\S/g," "),T+=N.slice(d,z).replace(/./g,"~")}else E===_?T+=N.slice(0,y).replace(/./g,"~"):T+=N.replace(/./g,"~");T+=Jj}return T}function Kte(e){switch(e.kind){case 220:case 227:case 225:case 223:case 228:case 221:return!0;default:return!1}}function A_(e,n){return n}function fg(e,n,r){r(e,n)}function Hj(e,n,r,s,a,l,u){let d=new Array(302),_,y,h,v=0,b=[],T=[],E=[],g=[],M=0,N=!1,z=[],X=0,j,Z,le=A_,de=fg,se=0,ye=[],he={factory:r,getCompilerOptions:()=>s,getEmitResolver:()=>e,getEmitHost:()=>n,startLexicalEnvironment:Mt,suspendLexicalEnvironment:Yt,resumeLexicalEnvironment:Bt,endLexicalEnvironment:Me,setLexicalEnvironmentFlags:tt,getLexicalEnvironmentFlags:me,hoistVariableDeclaration:fe,hoistFunctionDeclaration:pt,addInitializationStatement:je,startBlockScope:dt,endBlockScope:Lt,addBlockScopedVariable:Vt,requestEmitHelper:_n,readEmitHelpers:hn,enableSubstitution:G,enableEmitNotification:be,isSubstitutionEnabled:ke,isEmitNotificationEnabled:rt,get onSubstituteNode(){return le},set onSubstituteNode(ue){w.assert(se<1,"Cannot modify transformation hooks after initialization has completed."),w.assert(ue!==void 0,"Value must not be 'undefined'"),le=ue},get onEmitNode(){return de},set onEmitNode(ue){w.assert(se<1,"Cannot modify transformation hooks after initialization has completed."),w.assert(ue!==void 0,"Value must not be 'undefined'"),de=ue},addDiagnostic(ue){ye.push(ue)}};for(let ue of a)HP($n(_s(ue)));ci.mark("beforeTransform");let oe=l.map(ue=>ue(he)),ie=ue=>{for(let Ze of oe)ue=Ze(ue);return ue};se=1;let Y=[];for(let ue of a)Dt?.push(Dt.Phase.Emit,"transformNodes",ue.kind===176?{path:ue.path}:{kind:ue.kind,pos:ue.pos,end:ue.end}),Y.push((u?ie:_e)(ue)),Dt?.pop();return se=2,ci.mark("afterTransform"),ci.measure("transformTime","beforeTransform","afterTransform"),{transformed:Y,substituteNode:re,emitNodeWithNotification:qt,isEmitNotificationEnabled:rt,dispose:kn,diagnostics:ye};function _e(ue){return ue&&(!ti(ue)||!ue.isDeclarationFile)?ie(ue):ue}function G(ue){w.assert(se<2,"Cannot modify the transformation context after transformation has completed."),d[ue]|=1}function ke(ue){return(d[ue.kind]&1)!==0&&(is(ue)&8)===0}function re(ue,Ze){return w.assert(se<3,"Cannot substitute a node after the result is disposed."),Ze&&ke(Ze)&&le(ue,Ze)||Ze}function be(ue){w.assert(se<2,"Cannot modify the transformation context after transformation has completed."),d[ue]|=2}function rt(ue){return(d[ue.kind]&2)!==0||(is(ue)&4)!==0}function qt(ue,Ze,Ct){w.assert(se<3,"Cannot invoke TransformationResult callbacks after the result is disposed."),Ze&&(rt(Ze)?de(ue,Ze,Ct):Ct(ue,Ze))}function fe(ue){w.assert(se>0,"Cannot modify the lexical environment during initialization."),w.assert(se<2,"Cannot modify the lexical environment after transformation has completed.");let Ze=oa(r.createVariableDeclaration(ue),128);_?_.push(Ze):_=[Ze],v&1&&(v|=2)}function pt(ue){w.assert(se>0,"Cannot modify the lexical environment during initialization."),w.assert(se<2,"Cannot modify the lexical environment after transformation has completed."),oa(ue,2097152),y?y.push(ue):y=[ue]}function je(ue){w.assert(se>0,"Cannot modify the lexical environment during initialization."),w.assert(se<2,"Cannot modify the lexical environment after transformation has completed."),oa(ue,2097152),h?h.push(ue):h=[ue]}function Mt(){w.assert(se>0,"Cannot modify the lexical environment during initialization."),w.assert(se<2,"Cannot modify the lexical environment after transformation has completed."),w.assert(!N,"Lexical environment is suspended."),b[M]=_,T[M]=y,E[M]=h,g[M]=v,M++,_=void 0,y=void 0,h=void 0,v=0}function Yt(){w.assert(se>0,"Cannot modify the lexical environment during initialization."),w.assert(se<2,"Cannot modify the lexical environment after transformation has completed."),w.assert(!N,"Lexical environment is already suspended."),N=!0}function Bt(){w.assert(se>0,"Cannot modify the lexical environment during initialization."),w.assert(se<2,"Cannot modify the lexical environment after transformation has completed."),w.assert(N,"Lexical environment is not suspended."),N=!1}function Me(){w.assert(se>0,"Cannot modify the lexical environment during initialization."),w.assert(se<2,"Cannot modify the lexical environment after transformation has completed."),w.assert(!N,"Lexical environment is suspended.");let ue;if(_||y||h){if(y&&(ue=[...y]),_){let Ze=r.createVariableStatement(void 0,void 0,r.createVariableDeclarationList(_));oa(Ze,2097152),ue?ue.push(Ze):ue=[Ze]}h&&(ue?ue=[...ue,...h]:ue=[...h])}return M--,_=b[M],y=T[M],h=E[M],v=g[M],M===0&&(b=[],T=[],E=[],g=[]),ue}function tt(ue,Ze){v=Ze?v|ue:v&~ue}function me(){return v}function dt(){w.assert(se>0,"Cannot start a block scope during initialization."),w.assert(se<2,"Cannot start a block scope after transformation has completed."),z[X]=j,X++,j=void 0}function Lt(){w.assert(se>0,"Cannot end a block scope during initialization."),w.assert(se<2,"Cannot end a block scope after transformation has completed.");let ue=kt(j)?[r.createVariableStatement(void 0,void 0,r.createVariableDeclarationList(j.map(Ze=>r.createVariableDeclaration(Ze)),1))]:void 0;return X--,j=z[X],X===0&&(z=[]),ue}function Vt(ue){w.assert(X>0,"Cannot add a block scoped variable outside of an iteration body."),(j||(j=[])).push(ue)}function _n(ue){if(w.assert(se>0,"Cannot modify the transformation context during initialization."),w.assert(se<2,"Cannot modify the transformation context after transformation has completed."),w.assert(!ue.scoped,"Cannot request a scoped emit helper."),ue.dependencies)for(let Ze of ue.dependencies)_n(Ze);Z=ei(Z,ue)}function hn(){w.assert(se>0,"Cannot modify the transformation context during initialization."),w.assert(se<2,"Cannot modify the transformation context after transformation has completed.");let ue=Z;return Z=void 0,ue}function kn(){if(se<3){for(let ue of a)HP($n(_s(ue)));_=void 0,b=void 0,y=void 0,T=void 0,le=void 0,de=void 0,Z=void 0,se=3}}}var cy={factory:Ve,getCompilerOptions:()=>({}),getEmitResolver:Xp,getEmitHost:Xp,startLexicalEnvironment:ys,resumeLexicalEnvironment:ys,suspendLexicalEnvironment:ys,endLexicalEnvironment:Nm,setLexicalEnvironmentFlags:ys,getLexicalEnvironmentFlags:()=>0,hoistVariableDeclaration:ys,hoistFunctionDeclaration:ys,addInitializationStatement:ys,startBlockScope:ys,endBlockScope:Nm,addBlockScopedVariable:ys,requestEmitHelper:ys,readEmitHelpers:Xp,enableSubstitution:ys,enableEmitNotification:ys,isSubstitutionEnabled:Xp,isEmitNotificationEnabled:Xp,onSubstituteNode:A_,onEmitNode:fg,addDiagnostic:ys};function Gj(e,n,r){let s=e.getCompilerOptions(),a=Yr(n9(e,r),i9);return Hj(n,e,Ve,s,r?ki(a,r)?[r]:Oe:a,[],!1).diagnostics}var Qj=ene(),Yj=Fl(()=>yd({})),pg=Fl(()=>yd({removeComments:!0})),Zj=Fl(()=>yd({removeComments:!0,neverAsciiEscape:!0})),Xj=Fl(()=>yd({removeComments:!0,omitTrailingSemicolon:!0}));function yd(e={},n={}){var{hasGlobalName:r,onEmitNode:s=fg,isEmitNotificationEnabled:a,substituteNode:l=A_,onBeforeEmitNode:u,onAfterEmitNode:d,onBeforeEmitNodeArray:_,onAfterEmitNodeArray:y,onBeforeEmitToken:h,onAfterEmitToken:v}=n,b=!!e.extendedDiagnostics,T=!!e.omitBraceSourceMapPositions,E=ud(e),g=1,M=new Map,N,z,X,j,Z,le,de,se,ye,he,oe,ie,Y,_e,G,ke=e.preserveSourceNewlines,re,be,rt,qt=Nc,fe,pt=!0,je,Mt,Yt=-1,Bt,Me=-1,tt=-1,me=-1,dt=-1,Lt,Vt,_n=!1,hn=!!e.removeComments,kn,ue,{enter:Ze,exit:Ct}=ci.createTimerIf(b,"commentTime","beforeComment","afterComment"),on=Ve.parenthesizer,Vr={select:A=>A===0?on.parenthesizeLeadingTypeArgument:void 0},Vn=yn();return Zt(),{printNode:_i,printList:xr,printFile:xi,printBundle:si,writeNode:Se,writeList:De,writeFile:$e,writeBundle:Ne};function _i(A,ee,Fe){switch(A){case 0:w.assert(ti(ee),"Expected a SourceFile node.");break;case 2:w.assert(Tt(ee),"Expected an Identifier node.");break;case 1:w.assert(xc(ee),"Expected an Expression node.");break}switch(ee.kind){case 176:return xi(ee);case 177:return si(ee)}return Se(A,ee,Fe,we()),Je()}function xr(A,ee,Fe){return De(A,ee,Fe,we()),Je()}function si(A){return Ne(A,we(),void 0),Je()}function xi(A){return $e(A,we(),void 0),Je()}function Se(A,ee,Fe,Ke){let wn=be;Sn(Ke,void 0),ze(A,ee,Fe),Zt(),be=wn}function De(A,ee,Fe,Ke){let wn=be;Sn(Ke,void 0),Fe&&it(Fe),He(void 0,ee,A),Zt(),be=wn}function Ne(A,ee,Fe){fe=!1;let Ke=be;Sn(ee,Fe),console.warn("todo - implment me - writeBundle"),xs(A);for(let wn of A.sourceFiles)ze(0,wn,wn);Zt(),be=Ke}function $e(A,ee,Fe){console.warn("todo - implment me - writeFile"),fe=!0;let Ke=be;Sn(ee,Fe),xs(A),ze(0,A,A),Zt(),be=Ke}function we(){return rt||(rt=S0(E))}function Je(){let A=rt.getText();return rt.clear(),A}function ze(A,ee,Fe){Fe&&it(Fe),Xi(A,ee,void 0)}function it(A){N=A,Lt=void 0,Vt=void 0,A&&Re(A)}function Re(A){if(!pt){if(Mt=A,A===Bt){Yt=Me;return}H(A)||(Yt=je.addSource(A.fileName),e.inlineSources&&je.setSourceContent(Yt,A.text),Bt=A,Me=Yt)}}function H(A){return el(A.fileName,".json")}function Sn(A,ee){A&&e.omitTrailingSemicolon&&(A=ok(A)),be=A,je=ee,pt=!be||!je}function Zt(){z=[],X=[],j=[],Z=new Set,le=[],de=new Map,se=[],ye=0,he=[],oe=0,ie=[],Y=void 0,_e=[],G=void 0,N=void 0,Lt=void 0,Vt=void 0,Sn(void 0,void 0)}function sn(){return Lt||(Lt=Xc(w.checkDefined(N)))}function mn(A,ee){A!==void 0&&Xi(4,A,ee)}function Kt(A){A!==void 0&&Xi(2,A,void 0)}function gr(A,ee){A!==void 0&&Xi(1,A,ee)}function Xr(A){ke&&Ly(A)&4&&(ke=!1)}function cs(A){ke=A}function Xi(A,ee,Fe){ue=Fe,Rn(0,A,ee)(A,ee),ue=void 0}function ro(A){return!hn&&!ti(A)}function $i(A){return!pt&&!ti(A)}function Ie(A,ee){let Fe=ur(1,A,ee);w.assertIsDefined(kn),ee=kn,kn=void 0,Fe(A,ee)}function Te(A,ee){let Fe=ur(2,A,ee),Ke=tt,wn=me,Dr=dt;yt(ee),Fe(A,ee),Gt(ee,Ke,wn,Dr)}function yt(A){console.warn("todo - implment me - emitCommentsBeforeNode")}function Gt(A,ee,Fe,Ke){console.warn("todo - implment me - emitCommentsAfterNode")}function yn(){return Uv(A,ee,Fe,Ke,wn,void 0);function A(gn,fr){if(fr){fr.stackIndex++,fr.preserveSourceNewlinesStack[fr.stackIndex]=ke,fr.containerPosStack[fr.stackIndex]=tt,fr.containerEndStack[fr.stackIndex]=me,fr.declarationListContainerEndStack[fr.stackIndex]=dt;let rr=fr.shouldEmitCommentsStack[fr.stackIndex]=ro(gn),C=fr.shouldEmitSourceMapsStack[fr.stackIndex]=$i(gn);u?.(gn),rr&&yt(gn),C&&bn(gn),Xr(gn)}else fr={stackIndex:0,preserveSourceNewlinesStack:[void 0],containerPosStack:[-1],containerEndStack:[-1],declarationListContainerEndStack:[-1],shouldEmitCommentsStack:[!1],shouldEmitSourceMapsStack:[!1]};return fr}function ee(gn,fr,rr){return Dr(gn,rr,"left")}function Fe(gn,fr,rr){let C=gn.kind!==27,$=O(rr,rr.left,gn),Ee=O(rr,gn,rr.right);fn($,C),Ir(gn.pos),Yo(gn,gn.kind===103?or:mr),nn(gn.end,!0),fn(Ee,!0)}function Ke(gn,fr,rr){return Dr(gn,rr,"right")}function wn(gn,fr){let rr=O(gn,gn.left,gn.operatorToken),C=O(gn,gn.operatorToken,gn.right);if(Or(rr,C),fr.stackIndex>0){let $=fr.preserveSourceNewlinesStack[fr.stackIndex],Ee=fr.containerPosStack[fr.stackIndex],_t=fr.containerEndStack[fr.stackIndex],an=fr.declarationListContainerEndStack[fr.stackIndex],Ft=fr.shouldEmitCommentsStack[fr.stackIndex],qn=fr.shouldEmitSourceMapsStack[fr.stackIndex];cs($),qn&&void 0,Ft&&Gt(gn,Ee,_t,an),d?.(gn),fr.stackIndex--}}function Dr(gn,fr,rr){let C=rr==="left"?on.getParenthesizeLeftSideOfBinaryForOperator(fr.operatorToken.kind):on.getParenthesizeRightSideOfBinaryForOperator(fr.operatorToken.kind),$=Rn(0,1,gn);if($===Ie&&(w.assertIsDefined(kn),gn=C(aa(kn,xc)),$=ur(1,1,gn),kn=void 0),($===Te||$===Rr||$===Le)&&Ur(gn))return gn;ue=C,$(1,gn)}}function Rn(A,ee,Fe){switch(A){case 0:if(s!==fg&&(!a||a(Fe)))return _r;case 1:if(l!==A_&&(kn=l(ee,Fe)||Fe)!==Fe)return ue&&(kn=ue(kn)),Ie;case 2:if(ro(Fe))return Te;case 3:if($i(Fe))return Rr;case 4:return Le;default:return w.assertNever(A)}}function Rr(A,ee){let Fe=ur(3,A,ee);bn(ee),Fe(A,ee)}function bn(A){console.warn("todo - implment me - emitSourceMapsBeforeNode")}function Kn(A){}function ur(A,ee,Fe){return Rn(A+1,ee,Fe)}function _r(A,ee){let Fe=ur(0,A,ee);s(A,ee,Fe)}function Le(A,ee){if(u?.(ee),ke){let Fe=ke;Xr(ee),Cn(A,ee),cs(Fe)}else Cn(A,ee);d?.(ee),ue=void 0}function He(A,ee,Fe,Ke,wn,Dr){Un(mn,A,ee,Fe|(A&&is(A)&2?65536:0),Ke,wn,Dr)}function lt(A,ee,Fe,Ke,wn,Dr){Un(gr,A,ee,Fe,Ke,wn,Dr)}function nn(A,ee,Fe){hn||(Ze(),console.warn("todo - implment me - emitTrailingCommentsOfPosition"),Ct())}function Un(A,ee,Fe,Ke,wn,Dr=0,gn=Fe?Fe.length-Dr:0){if(Fe===void 0&&Ke&16384)return;let rr=Fe===void 0||Dr>=Fe.length||gn===0;if(rr&&Ke&32768){_?.(Fe),y?.(Fe);return}Ke&4209664&&(In(Kj(Ke)),rr&&Fe&&nn(Fe.pos,!0)),_?.(Fe),rr?Ke&1&&!(ke&&(!ee||N&&cp(ee,N)))?br():Ke&256&&!(Ke&524288)&&ar():Hs(A,ee,Fe,Ke,wn,Dr,gn,Fe.hasTrailingComma,Fe),y?.(Fe),Ke&4209664&&(rr&&Fe&&Ir(Fe.end),In(eB(Ke)))}function Ir(A){hn||A===-1||console.warn("todo - implment me - emitLeadingCommentsOfPosition")}function Yn(A,ee,Fe){if(Fe&2||ke){if(Fe&65536)return 1;if(ee===void 0)return!A||N&&cp(A,N)?0:1;if(ee.pos===re)return 0;if(N&&A&&!La(A.pos)&&!qi(ee)&&(!ee.parent||ka(ee.parent)===ka(A)))return ke?Zn(Ke=>C8(ee.pos,A.pos,N,Ke)):Kh(A,ee,N)?0:1;if(hr(ee,Fe))return 1}return Fe&1?1:0}function hr(A,ee){if(qi(A)){let Fe=Qm(A);return Fe===void 0?(ee&65536)!==0:Fe}return(ee&65536)!==0}function Hs(A,ee,Fe,Ke,wn,Dr,gn,fr,rr){let C=(Ke&262144)===0,$=C,Ee=Yn(ee,Fe[Dr],Ke);Ee?(br(Ee),$=!1):Ke&256&&ar(),Ke&128&&Bn();let _t=nB(A,wn),an,Ft=!1;for(let os=0;os<gn;os++){let fa=Fe[Dr+os];if(Ke&32)br(),Gs(Ke);else if(an){Ke&60&&an.end!==(ee?ee.end:-1)&&(is(an)&2048||Ir(an.end)),Gs(Ke);let Oc=oi(an,fa,Ke);if(Oc>0){if((Ke&131)===0&&(Bn(),Ft=!0),$&&Ke&60&&!La(fa.pos)){let uo=$y(fa);nn(uo.pos,!!(Ke&512),!0)}br(Oc),$=!1}else an&&Ke&512&&ar()}if($){let Oc=$y(fa);nn(Oc.pos)}else $=C;re=fa.pos,_t(fa,A,wn,os),Ft&&(Jn(),Ft=!1),an=fa}let qn=an?is(an):0,jt=hn||!!(qn&2048),$r=fr&&Ke&64&&Ke&16;$r&&(an&&!jt?Oo(27,an.end,In,an):In(",")),an&&(ee?ee.end:-1)!==an.end&&Ke&60&&!jt&&Ir($r&&rr?.end?rr.end:an.end),Ke&128&&Jn();let at=Ui(ee,Fe[Dr+gn-1],Ke,rr);at?br(at):Ke&2097408&&ar()}function Pt(A,ee){if(ee.pos<A.end)return!1;A=ka(A),ee=ka(ee);let Fe=A.parent;if(!Fe||Fe!==ee.parent)return!1;let Ke=P8(A),wn=Ke?.indexOf(A);return wn!==void 0&&wn>-1&&Ke.indexOf(ee)===wn+1}function oi(A,ee,Fe){if(Fe&2||ke){if(A===void 0||ee===void 0)return 0;if(N&&!qi(A)&&!qi(ee))return ke&&Pt(A,ee)?Zn(Ke=>Fy(A,ee,N,Ke)):!ke&&tr(A,ee)?Ah(A,ee,N)?0:1:Fe&65536?1:0;if(hr(A,Fe)||hr(ee,Fe))return 1}else if(Qm(ee))return 1;return Fe&1?1:0}function tr(A,ee){return A=ka(A),A.parent&&A.parent===ka(ee).parent}function Ui(A,ee,Fe,Ke){if(Fe&2||ke){if(Fe&65536)return 1;if(ee===void 0)return!A||N&&cp(A,N)?0:1;if(N&&A&&!La(A.pos)&&!qi(ee)&&(!ee.parent||ee.parent===A)){if(ke){let wn=Ke&&!La(Ke.end)?Ke.end:ee.end;return Zn(Dr=>D8(wn,A.end,N,Dr))}return x8(A,ee,N)?0:1}if(hr(ee,Fe))return 1}return Fe&1&&!(Fe&131072)?1:0}function Gs(A){switch(A&60){case 0:break;case 16:In(",");break;case 4:ar(),In("|");break;case 32:ar(),In("*"),ar();break;case 8:ar(),In("&");break}}function xs(A){if(ti(A)){let ee=kv(A.text);if(ee)return mu(ee),br(),!0}else for(let ee of A.sourceFiles)if(xs(ee))return!0}function Cn(A,ee,Fe=!0){if(A===2)return Ss(aa(ee,Tt));if(A===4){switch(ee.kind){case 89:return Ss(ee);case 163:return R(ee);case 242:return kr(ee);case 149:return vr(ee);case 158:return Ci(ee);case 169:return ns(ee);case 237:return Wo(ee);case 238:return ql(ee);case 151:return ua(ee);case 248:return z_(ee);case 240:return q_(ee);case 161:return jr(ee);case 257:return Sd(ee);case 157:return V_(ee);case 166:return Qs(ee);case 256:return ta(ee);case 251:return Tf(ee);case 250:return $_(ee);case 247:return Ja(ee);case 299:return Vl(ee);case 301:return H_(ee)}if(xc(ee)&&(A=1,l!==A_)){let Ke=l(A,ee)||ee;Ke!==ee&&(ee=Ke,ue&&(ee=ue(ee)))}}if(A===1)switch(ee.kind){case 16:return An(ee);case 11:case 13:return nr(ee);case 89:return Ss(ee);case 290:return Jr(ee);case 269:return Vn(ee);case 272:return vf(ee);case 281:return Jl(ee);case 286:return zl(ee)}if(ou(ee.kind))return Yo(ee,or);if(U2(ee.kind))return Yo(ee,In);console.warn("todo - implment me - pipelineEmitWithHintWorker "+w.formatSyntaxKind(ee.kind))}function la(A){be.writeLiteral(A)}function ls(A){be.writeStringLiteral(A)}function Nc(A){be.write(A)}function Ts(A,ee){be.writeSymbol(A,ee)}function In(A){be.writePunctuation(A)}function At(){be.writeTrailingSemicolon(";")}function or(A){be.writeKeyword(A)}function mr(A){be.writeOperator(A)}function ja(A){be.writeParameter(A)}function mu(A){be.writeComment(A)}function ar(){be.writeSpace(" ")}function tl(A){be.writeProperty(A)}function co(A){be.nonEscapingWrite?be.nonEscapingWrite(A):be.write(A)}function br(A=1){for(let ee=0;ee<A;ee++)be.writeLine(ee>0)}function Bn(){be.increaseIndent()}function Jn(){be.decreaseIndent()}function yr(A,ee,Fe,Ke,wn){return wn(ee,Fe,Ke)}function Os(A,ee,Fe,Ke){return pt?Ca(A,Fe,ee):yr(Ke,A,Fe,ee,Ca)}function Yo(A,ee){h&&h(A),ee(Mi(A.kind)),v&&v(A)}function Ca(A,ee,Fe){let Ke=Mi(A);return ee(Ke),Fe<0?Fe:Fe+Ke.length}function Zo(A){for(;A.kind===289&&qi(A);)A=A.expression;return A}function Zn(A){w.assert(!!ke);let ee=A(!0);return ee===0?A(!1):ee}function O(A,ee,Fe){return is(A)&262144?0:(A=Zo(A),ee=Zo(ee),Fe=Zo(Fe),Qm(Fe)?1:N&&!qi(A)&&!qi(ee)&&!qi(Fe)?ke?Zn(Ke=>Fy(ee,Fe,N,Ke)):Ah(ee,Fe,N)?0:1:0)}function pe(A,ee,Fe){if(is(A)&1)ar();else if(ke){let Ke=O(A,ee,Fe);Ke?br(Ke):ar()}else br()}function ct(A){let ee=A.split(/\r\n?|\n/g),Fe=yD(ee);for(let Ke of ee){let wn=Fe?Ke.slice(Fe):Ke;wn.length&&(br(),qt(wn))}}function fn(A,ee){A?(Bn(),br(A)):ee&&ar()}function Or(A,ee){A&&Jn(),ee&&Jn()}function Wr(A,ee){if(ss(A)&&A.textSourceNode)return Wr(A.textSourceNode,ee);let Fe=N,Ke=!!Fe&&!!A.parent&&!qi(A);if(g0(A)){if(!Ke||$n(A)!==ka(Fe))return go(A)}else if(w.assertNode(A,Dv),!Ke)return A.text;return cd(Fe,A,ee)}function nr(A){An(A)}function An(A){let ee=Ji(A,e.neverAsciiEscape);(e.sourceMap||e.inlineSourceMap)&&A.kind===16?la(ee):ls(ee)}function Jr(A){let ee=A.elements,Fe=A.multiLine?65536:0;lt(A,ee,4195026|Fe,on.parenthesizeExpressionForDisallowedComma)}function Ji(A,ee){if(A.kind===16&&A.textSourceNode){let Ke=A.textSourceNode;if(Tt(Ke)||Cc(Ke)||Tp(Ke)){let wn=Tp(Ke)?Ke.text:Wr(Ke);return ee||is(A)&16777216?`"${W_(wn)}"`:`"${ak(wn)}"`}else return Ji(Ke,ee)}let Fe=(ee?1:0)|(e.terminateUnterminatedLiterals?4:0)|(e.target&&e.target>=1?8:0);return O8(A,N,Fe)}function Ss(A){(A.symbol?Ts:qt)(Wr(A,!1),A.symbol),He(A,Ym(A),53776)}function vo(A){se.push(ye),ye=0,_e.push(G),!(A&&is(A)&1048576)&&(he.push(oe),oe=0,le.push(de),de=void 0,ie.push(Y))}function No(A){ye=se.pop(),G=_e.pop(),!(A&&is(A)&1048576)&&(oe=he.pop(),de=le.pop(),Y=ie.pop())}function uc(A){if(A)switch(A.kind){case 174:case 175:case 152:Ba(A.name);break}}function Ba(A){A&&(F_(A)?x(A):ds(A)&&zr(A))}function zr(A){if(A)switch(A.kind){case 236:Jt(A.statements,zr);break;case 245:case 246:zr(A.statement);break;case 253:zr(A.thenStatement),zr(A.elseStatement);break;case 243:zr(A.initializer),zr(A.statement);case 244:zr(A.expression),zr(A.statement);break;case 256:zr(A.caseBlock);break;case 240:Jt(A.clauses,zr);break;case 299:case 301:Jt(A.statements,zr);break;case 255:zr(A.block);break;case 242:zr(A.declarationList);break;case 238:Jt(A.declarations,zr);break;case 237:case 149:case 266:Ba(A.name);break;case 169:Ba(A.name),is(A)&1048576&&(Jt(A.parameters,zr),zr(A.body));break;case 265:Jt(A.elements,zr);break}}function Xa(A,ee){let Fe,Ke;if(ee?(Fe=G,Ke=_e):(Fe=Y,Ke=ie),Fe?.has(A))return!0;for(let wn=Ke.length-1;wn>=0;wn--)if(Fe!==Ke[wn]&&(Fe=Ke[wn],Fe?.has(A)))return!0;return!1}function To(A,ee){return fc(A,ee)&&!Xa(A,ee)&&!Z.has(A)}function fc(A,ee){return N?YD(N,A,r):!0}function Io(A,ee=To,Fe,Ke,wn,Dr,gn){if(A.length>0&&A.charCodeAt(0)===35&&(A=A.slice(1)),Dr.length>0&&Dr.charCodeAt(0)===35&&(Dr=Dr.slice(1)),Fe){let rr=su(wn,Dr,A,gn);if(ee(rr,wn))return Ke?Nt(rr):Z.add(rr),rr}A.charCodeAt(A.length-1)!==95&&(A+="_");let fr=1;for(;;){let rr=su(wn,Dr,A+fr,gn);if(ee(rr,wn))return Ke?Nt(rr):Z.add(rr),rr;fr++}}function Xo(A,ee,Fe,Ke,wn){switch(A.kind){case 89:return Io(Wr(A),To,!!(Fe&16),!!(Fe&8),ee,Ke,wn);case 169:{w.assert(!Ke&&!wn&&!ee);let Dr=A.name;if(Dr&&!F_(Dr))return Xo(Dr,!1,Fe,Ke,wn);w.fail("shouldn't be here")}case 274:w.fail("implement me");case 147:return bs(0,!0,ee,Ke,wn);default:return bs(0,!1,ee,Ke,wn)}}function Bo(A,ee,Fe,Ke,wn){let Dr=Sa(A),gn=ee?X:z;return gn[Dr]||(gn[Dr]=Xo(A,ee,Fe??0,cf(Ke,x),cf(wn)))}function gt(A){switch(A){case"":return oe;case"#":return ye;default:return de?.get(A)??0}}function js(A,ee){switch(A){case"":oe=ee;break;case"#":ye=ee;break;default:de??(de=new Map),de.set(A,ee);break}}function Nt(A){(!Y||Y===wo(ie))&&(Y=new Set),Y.add(A)}function bs(A,ee,Fe,Ke,wn){Ke.length>0&&Ke.charCodeAt(0)===35&&(Ke=Ke.slice(1));let Dr=su(Fe,Ke,"",wn),gn=gt(Dr);if(A&&!(gn&A)){let rr=su(Fe,Ke,A===268435456?"_i":"_n",wn);if(To(rr,Fe))return gn|=A,ee&&Nt(rr),js(Dr,gn),rr}for(;;){let fr=gn&268435455;if(gn++,fr!==8&&fr!==13){let rr=fr<26?"_"+String.fromCharCode(97+fr):"_"+(fr-26),C=su(Fe,Ke,rr,wn);if(To(C,Fe))return ee&&Nt(C),js(Dr,gn),C}}}function k(A){let ee=A.emitNode.autoGenerate,Fe=cf(ee.prefix,x),Ke=cf(ee.suffix);switch(ee.flags&7){case 1:return bs(0,!!(ee.flags&8),Cc(A),Fe,Ke);case 2:return w.assertNode(A,Tt),bs(268435456,!!(ee.flags&8),!1,Fe,Ke);case 3:return Io(go(A),ee.flags&32?fc:To,!!(ee.flags&16),!!(ee.flags&8),Cc(A),Fe,Ke)}return w.fail(`Unsupported GeneratedIdentifierKind: ${w.formatEnum(ee.flags&7,F2,!0)}.`)}function x(A){let ee=A.emitNode.autoGenerate;if((ee.flags&7)===4)return Bo(q8(A),Cc(A),ee.flags,ee.prefix,ee.suffix);{let Fe=ee.id;return j[Fe]||(j[Fe]=k(A))}}function R(A){vo(A),Jt(A.members,uc),In("{");let ee=is(A)&1?768:32897;He(A,A.members,ee|524288),In("}"),No(A)}function V(A,ee){He(A,ee,2359808);let Fe=wo(ee);return Fe&&!La(Fe.end)?Fe.end:A.pos}function Ce(A,ee,Fe){return ee?.length?V(A,ee):A.pos}function Ye(A,ee,Fe){let Ke=is(A)&131072;Ke&&Bn(),vo(A),Jt(A.parameters,zr),ee(A),Fe(A),No(A),Ke&&Jn()}function ut(A,ee){let Fe=Tv(ee);return Fe&&Fe.pos===A.pos&&hd(A)&&!A.type&&!kt(A.modifiers)&&!kt(Fe.modifiers)&&!Fe.dotDotDotToken&&!Fe.type&&!Fe.initializer&&Tt(Fe.name)}function Ar(A,ee){He(A,ee,2576)}function Fn(A,ee){ut(A,ee)?He(A,ee,528):Ar(A,ee)}function cr(A){Fn(A,A.parameters),ar(),In("=>")}function On(A){ar(),mn(A.type)}function Mr(A,ee){if(!A)return;let Fe=qt;qt=ee,mn(A),qt=Fe}function vr(A){Ce(A,A.modifiers,!0),hu(A.type),Mr(A.name,ja),mn(A.dotDotDotToken),kd(A.initializer,A.type?A.type.end:A.name?A.name.end:A.modifiers?A.modifiers.end:A.pos,A,on.parenthesizeExpressionForDisallowedComma)}function Ci(A){Ye(A,cr,On)}function kr(A){Ce(A,A.modifiers,!1),hu(A.type),mn(A.declarationList),At()}function jr(A){mn(A.elementType,on.parenthesizeNonArrayTypeOfPostfixType),In("*")}function ns(A){Fi(A)}function Fi(A){Ce(A,A.modifiers,!1),hu(A.type),mn(A.asteriskToken),ar(),Kt(A.name),Ye(A,Vu,ui)}function ui(A){let ee=A.body;ee?Ao(ee):At()}function Ao(A){zr(A),u?.(A),ar(),In("{"),Bn();let ee=Ua(A)?Ko:pc;Ul(A,A.statements,ee),Jn(),Os(19,A.statements.end,In,A),d?.(A)}function Ko(A){pc(A,!0)}function pc(A,ee){let Fe=Cp(A.statements),Ke=be.getTextPos();us(A),Fe===0&&Ke===be.getTextPos()&&ee?(Jn(),He(A,A.statements,768),Bn()):He(A,A.statements,1,void 0,Fe)}function Bl(A){let ee=V8(A);return ee&&L_(ee,J8)}function us(A){let ee=!1,Fe=A.kind===177?A:void 0;if(Fe&&g===0)return;let Ke=Fe?Fe.sourceFiles.length:1;for(let wn=0;wn<Ke;wn++){let Dr=Fe?Fe.sourceFiles[wn]:A,gn=ti(Dr)?Dr:N,fr=e.noEmitHelpers||!!gn&&$8(gn),rr=ti(Dr)&&!fe,C=Bl(Dr);if(C)for(let $ of C){if($.scoped){if(Fe)continue}else{if(fr)continue;if(rr){if(M.get($.name))continue;M.set($.name,!0)}}typeof $.text=="string"?ct($.text):ct($.text(Wl)),ee=!0}}return ee}function Wl(A){return Io(A,fc,!0,!1,!1,"","")}function Cp(A,ee,Fe){let Ke=!!ee;for(let wn=0;wn<A.length;wn++){let Dr=A[wn];if(sk(Dr))(Fe?!Fe.has(Dr.expression.text):!0)&&(Ke&&(Ke=!1,it(ee)),br(),mn(Dr),Fe&&Fe.add(Dr.expression.text));else return wn}return A.length}function Di(A){let ee=N&&I8(N.text,sn(),be,vd,A,E,hn);ee&&(Vt?Vt.push(ee):Vt=[ee])}function Pp(A,ee){return e.onlyPrintJsDocStyle?pk(A,ee)||jv(A,ee):!0}function vd(A,ee,Fe,Ke,wn,Dr){!N||!Pp(N.text,Ke)||(Ic(Ke),zy(A,ee,Fe,Ke,wn,Dr),Ic(wn))}function Ic(A){if(pt||La(A)||H(Mt))return;let{line:ee,character:Fe}=$s(Mt,A);je.addMapping(be.getLine(),be.getColumn(),Yt,ee,Fe,void 0)}function Ul(A,ee,Fe){Ze();let{pos:Ke,end:wn}=ee,Dr=is(A),gn=Ke<0||(Dr&1024)!==0,fr=hn||wn<0||(Dr&2048)!==0;gn||Di(ee),Ct(),Dr&4096&&!hn?(hn=!0,Fe(A),hn=!1):Fe(A),Ze(),fr||(gu(ee.end,!0),_n&&!be.isAtStartOfLine()&&be.writeLine()),Ct()}function gu(A,ee){_n=!1,ee?Pa(A,mi):A===0&&console.debug("todo - emitLeadingComments")}function mi(A,ee,Fe,Ke,wn){!N||!Pp(N.text,A)||(_n||(A8(sn(),be,wn,A),_n=!0),Ic(A),zy(N.text,sn(),be,A,ee,E),Ic(ee),Ke?be.writeLine():Fe===3&&be.writeSpace(" "))}function Wa(A){if(!N)return;let ee=jo(Vt).detachedCommentEndPos;Vt.length-1?Vt.pop():Vt=void 0,by(N.text,ee,A,ee)}function Pa(A,ee){N&&(tt===-1||A!==tt)&&(ea(A)?Wa(ee):by(N.text,A,ee,A))}function ea(A){return Vt!==void 0&&jo(Vt).nodePos===A}function Ua(A){if(is(A)&1)return!0;if(A.multiLine||!qi(A)&&N&&!cp(A,N)||Yn(A,Fa(A.statements),2)||Ui(A,wo(A.statements),2,A.statements))return!1;let ee;for(let Fe of A.statements){if(oi(ee,Fe,2)>0)return!1;ee=Fe}return!0}function Wo(A){A.type&&lp(A.type)&&In("*"),mn(A.name),kd(A.initializer,A.type?.end??A.name.emitNode?.typeNode?.end??A.name.end,A,on.parenthesizeExpressionForDisallowedComma)}function ua(A){Ye(A,Vu,Sf)}function io(A){return A.kind===2||!!A.hasTrailingNewLine}function lo(A){if(!N)return!1;let ee=Wu(N.text,A.pos);if(ee){let Fe=_s(A);if(Fe&&yp(Fe.parent))return!0}return kt(ee,io)||kt(lk(A),io)?!0:rv(A)?A.pos!==A.expression.pos&&kt(B_(N.text,A.expression.pos),io)?!0:lo(A.expression):!1}function zu(A){if(!hn&&rv(A)&&lo(A)){let ee=_s(A);if(ee&&yp(ee)){let Fe=Ve.createParenthesizedExpression(A.expression);return uf(Fe,A),Ho(Fe,ee),Fe}return Ve.createParenthesizedExpression(A)}return A}function nl(A,ee){A&&(ar(),gr(A,ee))}function Jl(A){gr(A.expression,on.parenthesizeLeftSideOfAccess),Oo(22,A.expression.end,In,A),gr(A.argumentExpression),Oo(23,A.argumentExpression.end,In,A)}function zl(A){gr(A.expression,on.parenthesizeLeftSideOfAccess);let ee=Aa(Ve.createToken(40),A.expression.end,A.name.pos),Fe=O(A,A.expression,ee),Ke=O(A,ee,A.name);fn(Fe,!1),Oo(ee.kind,A.expression.end,In,A),fn(Ke,!1),mn(A.name),Or(Fe,Ke)}function vf(A){let ee=Ly(A)&16;ee&&(In("("),la("0"),In(","),ar()),gr(A.expression,on.parenthesizeLeftSideOfAccess),ee&&In(")"),lt(A,A.arguments,2576,on.parenthesizeExpressionForDisallowedComma)}function z_(A){Oo(116,A.pos,or,A),nl(A.expression&&zu(A.expression),zu),At()}function ta(A){let ee=Oo(117,A.pos,or,A);ar(),Oo(20,ee,In,A),gr(A.expression),Oo(21,A.expression.end,In,A),ar(),mn(A.caseBlock)}function Td(A){A&&(ar(),mn(A))}function Ac(A,ee){He(A,ee,53776,Vr)}function Qs(A){mn(A.typeName),Ac(A,A.typeArguments)}function Sd(A){gr(A.literal)}function V_(A){He(A,A.types,516,on.parenthesizeConstituentTypeOfUnionType)}function q_(A){Oo(17,A.pos,In,A),He(A,A.clauses,129),Oo(19,A.clauses.end,In,A,!0)}function Tf(A){Oo(121,A.pos,or,A),Td(A.label),At()}function $_(A){Oo(106,A.pos,or,A),Td(A.label),At()}function Ja(A){gr(A.expression,on.parenthesizeExpressionOfExpressionStatement),(!N||!cg(N)||qi(A.expression))&&At()}function Vu(A){Ar(A,A.parameters)}function Vl(A){Oo(113,A.pos,or,A),ar(),gr(A.expression,on.parenthesizeExpressionForDisallowedComma),bd(A,A.statements,A.expression.end)}function H_(A){let ee=Oo(114,A.pos,or,A);bd(A,A.statements,ee)}function bd(A,ee,Fe){let Ke=ee.length===1&&(!N||qi(A)||qi(ee[0])||Kh(A,ee[0],N)),wn=163969;Ke?(Os(61,Fe,In,A),ar(),wn&=-130):Oo(61,Fe,In,A),He(A,ee,wn)}function Sf(A){At()}function ql(A){He(A,A.declarations,528)}function hu(A){A&&(mn(A),ar())}function kd(A,ee,Fe,Ke){A&&(ar(),Oo(74,ee,mr,Fe),ar(),gr(A,Ke))}function Oo(A,ee,Fe,Ke,wn){let Dr=_s(Ke),gn=Dr&&Dr.kind===Ke.kind,fr=ee;if(gn&&N&&(ee=ts(N.text,ee)),gn&&Ke.pos!==fr){let rr=wn&&N&&!lu(fr,ee,N);rr&&Bn(),Ir(fr),rr&&Jn()}return!T&&(A===17||A===19)?ee=Os(A,ee,Fe,Ke):ee=Ca(A,Fe,ee),gn&&Ke.end!==ee&&nn(ee,!1,!1),ee}}function ene(){let e=[];return e[1024]=["{","}"],e[2048]=["(",")"],e[4096]=["<",">"],e[8192]=["[","]"],e[4194304]=["({","})"],e}function Kj(e){return Qj[e&4209664][0]}function eB(e){return Qj[e&4209664][1]}function tB(e,n,r,s,a){let l;return e.rootDir?(l=Wi(e.rootDir,r),a?.(e.rootDir)):l=Lj(n(),r,s),l&&l[l.length-1]!==As&&(l+=As),l}function tne(e,n,r,s){n(e)}function nne(e,n,r,s){n(e,r.select(s))}function rne(e,n,r,s){n(e,r)}function nB(e,n){return e.length===1?tne:typeof n=="object"?nne:rne}function rB(e,n){let r={removeComments:!0,newLine:1,target:2},s=iB(r,{hasGlobalName:()=>!1});var a=ud(r),l=S0(a);return s.writeNode(4,e,n,l),l.getText()}function iB(e={},n={}){var{hasGlobalName:r,onEmitNode:s=fg,isEmitNotificationEnabled:a,substituteNode:l=A_,onBeforeEmitNode:u,onAfterEmitNode:d,onBeforeEmitNodeArray:_,onAfterEmitNodeArray:y,onBeforeEmitToken:h,onAfterEmitToken:v}=n,b=!!e.extendedDiagnostics,T=!!e.omitBraceSourceMapPositions,E=ud(e),g=1,M=new Map,N,z,X,j,Z,le,de,se,ye,he,oe,ie,Y,_e,G,ke=e.preserveSourceNewlines,re,be,rt,qt=Nc,fe,pt=!0,je,Mt,Yt=-1,Bt,Me=-1,tt=-1,me=-1,dt=-1,Lt,Vt,_n=!1,hn=!!e.removeComments,kn,ue,{enter:Ze,exit:Ct}=ci.createTimerIf(b,"commentTime","beforeComment","afterComment"),on=Ve.parenthesizer,Vr={select:C=>C===0?on.parenthesizeLeadingTypeArgument:void 0},Vn=yn();return Zt(),{printNode:_i,printList:xr,printFile:xi,printBundle:si,writeNode:Se,writeList:De,writeFile:$e,writeBundle:Ne};function _i(C,$,Ee){switch(C){case 0:w.assert(ti($),"Expected a SourceFile node.");break;case 2:w.assert(Tt($),"Expected an Identifier node.");break;case 1:w.assert(xc($),"Expected an Expression node.");break}switch($.kind){case 176:return xi($);case 177:return si($)}return Se(C,$,Ee,we()),Je()}function xr(C,$,Ee){return De(C,$,Ee,we()),Je()}function si(C){return Ne(C,we(),void 0),Je()}function xi(C){return $e(C,we(),void 0),Je()}function Se(C,$,Ee,_t){let an=be;Sn(_t,void 0),ze(C,$,Ee),Zt(),be=an}function De(C,$,Ee,_t){let an=be;Sn(_t,void 0),Ee&&it(Ee),He(void 0,$,C),Zt(),be=an}function Ne(C,$,Ee){fe=!1;let _t=be;Sn($,Ee),console.warn("todo - implment me - writeBundle"),xs(C);for(let an of C.sourceFiles)ze(0,an,an);Zt(),be=_t}function $e(C,$,Ee){console.warn("todo - implment me - writeFile"),fe=!0;let _t=be;Sn($,Ee),xs(C),ze(0,C,C),Zt(),be=_t}function we(){return rt||(rt=S0(E))}function Je(){let C=rt.getText();return rt.clear(),C}function ze(C,$,Ee){Ee&&it(Ee),Xi(C,$,void 0)}function it(C){N=C,Lt=void 0,Vt=void 0,C&&Re(C)}function Re(C){if(!pt){if(Mt=C,C===Bt){Yt=Me;return}H(C)||(Yt=je.addSource(C.fileName),e.inlineSources&&je.setSourceContent(Yt,C.text),Bt=C,Me=Yt)}}function H(C){return el(C.fileName,".json")}function Sn(C,$){C&&e.omitTrailingSemicolon&&(C=ok(C)),be=C,je=$,pt=!be||!je}function Zt(){z=[],X=[],j=[],Z=new Set,le=[],de=new Map,se=[],ye=0,he=[],oe=0,ie=[],Y=void 0,_e=[],G=void 0,N=void 0,Lt=void 0,Vt=void 0,Sn(void 0,void 0)}function sn(){return Lt||(Lt=Xc(w.checkDefined(N)))}function mn(C,$){C!==void 0&&Xi(4,C,$)}function Kt(C){C!==void 0&&Xi(2,C,void 0)}function gr(C,$){C!==void 0&&Xi(1,C,$)}function Xr(C){ke&&Ly(C)&4&&(ke=!1)}function cs(C){ke=C}function Xi(C,$,Ee){ue=Ee,Rn(0,C,$)(C,$),ue=void 0}function ro(C){return!hn&&!ti(C)}function $i(C){return!pt&&!ti(C)}function Ie(C,$){let Ee=ur(1,C,$);w.assertIsDefined(kn),$=kn,kn=void 0,Ee(C,$)}function Te(C,$){let Ee=ur(2,C,$),_t=tt,an=me,Ft=dt;yt($),Ee(C,$),Gt($,_t,an,Ft)}function yt(C){console.warn("todo - implment me - emitCommentsBeforeNode")}function Gt(C,$,Ee,_t){console.warn("todo - implment me - emitCommentsAfterNode")}function yn(){return Uv(C,$,Ee,_t,an,void 0);function C(qn,jt){if(jt){jt.stackIndex++,jt.preserveSourceNewlinesStack[jt.stackIndex]=ke,jt.containerPosStack[jt.stackIndex]=tt,jt.containerEndStack[jt.stackIndex]=me,jt.declarationListContainerEndStack[jt.stackIndex]=dt;let $r=jt.shouldEmitCommentsStack[jt.stackIndex]=ro(qn),at=jt.shouldEmitSourceMapsStack[jt.stackIndex]=$i(qn);u?.(qn),$r&&yt(qn),at&&bn(qn),Xr(qn)}else jt={stackIndex:0,preserveSourceNewlinesStack:[void 0],containerPosStack:[-1],containerEndStack:[-1],declarationListContainerEndStack:[-1],shouldEmitCommentsStack:[!1],shouldEmitSourceMapsStack:[!1]};return jt}function $(qn,jt,$r){return Ft(qn,$r,"left")}function Ee(qn,jt,$r){let at=qn.kind!==27,os=O($r,$r.left,qn),fa=O($r,qn,$r.right);fn(os,at),Ir(qn.pos),Yo(qn,qn.kind===103?or:mr),nn(qn.end,!0),fn(fa,!0)}function _t(qn,jt,$r){return Ft(qn,$r,"right")}function an(qn,jt){let $r=O(qn,qn.left,qn.operatorToken),at=O(qn,qn.operatorToken,qn.right);if(Or($r,at),jt.stackIndex>0){let os=jt.preserveSourceNewlinesStack[jt.stackIndex],fa=jt.containerPosStack[jt.stackIndex],Oc=jt.containerEndStack[jt.stackIndex],uo=jt.declarationListContainerEndStack[jt.stackIndex],qu=jt.shouldEmitCommentsStack[jt.stackIndex],Cd=jt.shouldEmitSourceMapsStack[jt.stackIndex];cs(os),Cd&&void 0,qu&&Gt(qn,fa,Oc,uo),d?.(qn),jt.stackIndex--}}function Ft(qn,jt,$r){let at=$r==="left"?on.getParenthesizeLeftSideOfBinaryForOperator(jt.operatorToken.kind):on.getParenthesizeRightSideOfBinaryForOperator(jt.operatorToken.kind),os=Rn(0,1,qn);if(os===Ie&&(w.assertIsDefined(kn),qn=at(aa(kn,xc)),os=ur(1,1,qn),kn=void 0),(os===Te||os===Rr||os===Le)&&Ur(qn))return qn;ue=at,os(1,qn)}}function Rn(C,$,Ee){switch(C){case 0:if(s!==fg&&(!a||a(Ee)))return _r;case 1:if(l!==A_&&(kn=l($,Ee)||Ee)!==Ee)return ue&&(kn=ue(kn)),Ie;case 2:if(ro(Ee))return Te;case 3:if($i(Ee))return Rr;case 4:return Le;default:return w.assertNever(C)}}function Rr(C,$){let Ee=ur(3,C,$);bn($),Ee(C,$)}function bn(C){console.warn("todo - implment me - emitSourceMapsBeforeNode")}function Kn(C){}function ur(C,$,Ee){return Rn(C+1,$,Ee)}function _r(C,$){let Ee=ur(0,C,$);s(C,$,Ee)}function Le(C,$){if(u?.($),ke){let Ee=ke;Xr($),Cn(C,$),cs(Ee)}else Cn(C,$);d?.($),ue=void 0}function He(C,$,Ee,_t,an,Ft){Un(mn,C,$,Ee|(C&&is(C)&2?65536:0),_t,an,Ft)}function lt(C,$,Ee,_t,an,Ft){Un(gr,C,$,Ee,_t,an,Ft)}function nn(C,$,Ee){hn||(Ze(),console.warn("todo - implment me - emitTrailingCommentsOfPosition"),Ct())}function Un(C,$,Ee,_t,an,Ft=0,qn=Ee?Ee.length-Ft:0){if(Ee===void 0&&_t&16384)return;let $r=Ee===void 0||Ft>=Ee.length||qn===0;if($r&&_t&32768){_?.(Ee),y?.(Ee);return}_t&4209664&&(In(Kj(_t)),$r&&Ee&&nn(Ee.pos,!0)),_?.(Ee),$r?_t&1&&!(ke&&(!$||N&&cp($,N)))?br():_t&256&&!(_t&524288)&&ar():Hs(C,$,Ee,_t,an,Ft,qn,Ee.hasTrailingComma,Ee),y?.(Ee),_t&4209664&&($r&&Ee&&Ir(Ee.end),In(eB(_t)))}function Ir(C){hn||C===-1||console.warn("todo - implment me - emitLeadingCommentsOfPosition")}function Yn(C,$,Ee){if(Ee&2||ke){if(Ee&65536)return 1;if($===void 0)return!C||N&&cp(C,N)?0:1;if($.pos===re)return 0;if(N&&C&&!La(C.pos)&&!qi($)&&(!$.parent||ka($.parent)===ka(C)))return ke?Zn(_t=>C8($.pos,C.pos,N,_t)):Kh(C,$,N)?0:1;if(hr($,Ee))return 1}return Ee&1?1:0}function hr(C,$){if(qi(C)){let Ee=Qm(C);return Ee===void 0?($&65536)!==0:Ee}return($&65536)!==0}function Hs(C,$,Ee,_t,an,Ft,qn,jt,$r){let at=(_t&262144)===0,os=at,fa=Yn($,Ee[Ft],_t);fa?(br(fa),os=!1):_t&256&&ar(),_t&128&&Bn();let Oc=nB(C,an),uo,qu=!1;for(let Q_=0;Q_<qn;Q_++){let ni=Ee[Ft+Q_];if(_t&32)br(),Gs(_t);else if(uo){_t&60&&uo.end!==($?$.end:-1)&&(is(uo)&2048||Ir(uo.end)),Gs(_t);let yu=oi(uo,ni,_t);if(yu>0){if((_t&131)===0&&(Bn(),qu=!0),os&&_t&60&&!La(ni.pos)){let Bs=$y(ni);nn(Bs.pos,!!(_t&512),!0)}br(yu),os=!1}else uo&&_t&512&&ar()}if(os){let yu=$y(ni);nn(yu.pos)}else os=at;re=ni.pos,Oc(ni,C,an,Q_),qu&&(Jn(),qu=!1),uo=ni}let Cd=uo?is(uo):0,G_=hn||!!(Cd&2048),$l=jt&&_t&64&&_t&16;$l&&(uo&&!G_?rr(27,uo.end,In,uo):In(",")),uo&&($?$.end:-1)!==uo.end&&_t&60&&!G_&&Ir($l&&$r?.end?$r.end:uo.end),_t&128&&Jn();let bf=Ui($,Ee[Ft+qn-1],_t,$r);bf?br(bf):_t&2097408&&ar()}function Pt(C,$){if($.pos<C.end)return!1;C=ka(C),$=ka($);let Ee=C.parent;if(!Ee||Ee!==$.parent)return!1;let _t=P8(C),an=_t?.indexOf(C);return an!==void 0&&an>-1&&_t.indexOf($)===an+1}function oi(C,$,Ee){if(Ee&2||ke){if(C===void 0||$===void 0)return 0;if(N&&!qi(C)&&!qi($))return ke&&Pt(C,$)?Zn(_t=>Fy(C,$,N,_t)):!ke&&tr(C,$)?Ah(C,$,N)?0:1:Ee&65536?1:0;if(hr(C,Ee)||hr($,Ee))return 1}else if(Qm($))return 1;return Ee&1?1:0}function tr(C,$){return C=ka(C),C.parent&&C.parent===ka($).parent}function Ui(C,$,Ee,_t){if(Ee&2||ke){if(Ee&65536)return 1;if($===void 0)return!C||N&&cp(C,N)?0:1;if(N&&C&&!La(C.pos)&&!qi($)&&(!$.parent||$.parent===C)){if(ke){let an=_t&&!La(_t.end)?_t.end:$.end;return Zn(Ft=>D8(an,C.end,N,Ft))}return x8(C,$,N)?0:1}if(hr($,Ee))return 1}return Ee&1&&!(Ee&131072)?1:0}function Gs(C){switch(C&60){case 0:break;case 16:In(",");break;case 4:ar(),In("|");break;case 32:ar(),In("*"),ar();break;case 8:ar(),In("&");break}}function xs(C){if(ti(C)){let $=kv(C.text);if($)return mu($),br(),!0}else for(let $ of C.sourceFiles)if(xs($))return!0}function Cn(C,$,Ee=!0){if(C===2)return Ss(aa($,Tt));if(C===4)switch($.kind){case 89:return Ss($);case 163:return R($);case 161:return ui($);case 242:return Fi($);case 149:return vr($);case 158:return Ci($);case 169:return Ao($);case 237:return lo($);case 238:return Dr($);case 151:return zu($);case 248:return Ja($);case 240:return ql($);case 236:return jr($);case 256:return bd($);case 251:return hu($);case 250:return kd($);case 247:return Oo($);case 253:return H_($);case 299:return ee($);case 301:return Fe($);case 261:return Vl($)}if(C===1)switch($.kind){case 16:return An($);case 11:case 13:return nr($);case 89:return Ss($);case 290:return Jr($);case 269:return Tf($);case 272:return $_($);case 281:return q_($);case 289:return V_($);case 282:return Sd($);case 298:return Td($)}if(ou($.kind))return Yo($,or);if(U2($.kind))return Yo($,In);console.warn("todo - implment me - pipelineEmitWithHintWorker "+w.formatSyntaxKind($.kind))}function la(C){be.writeLiteral(C)}function ls(C){be.writeStringLiteral(C)}function Nc(C){be.write(C)}function Ts(C,$){be.writeSymbol(C,$)}function In(C){be.writePunctuation(C)}function At(){be.writeTrailingSemicolon(";")}function or(C){be.writeKeyword(C)}function mr(C){be.writeOperator(C)}function ja(C){be.writeParameter(C)}function mu(C){be.writeComment(C)}function ar(){be.writeSpace(" ")}function tl(C){be.writeProperty(C)}function co(C){be.nonEscapingWrite?be.nonEscapingWrite(C):be.write(C)}function br(C=1){for(let $=0;$<C;$++)be.writeLine($>0)}function Bn(){be.increaseIndent()}function Jn(){be.decreaseIndent()}function yr(C,$,Ee,_t,an){return an($,Ee,_t)}function Os(C,$,Ee,_t){return pt?Ca(C,Ee,$):yr(_t,C,Ee,$,Ca)}function Yo(C,$){h&&h(C),$(Mi(C.kind)),v&&v(C)}function Ca(C,$,Ee){let _t=Mi(C);return $(_t),Ee<0?Ee:Ee+_t.length}function Zo(C){for(;C.kind===289&&qi(C);)C=C.expression;return C}function Zn(C){w.assert(!!ke);let $=C(!0);return $===0?C(!1):$}function O(C,$,Ee){return is(C)&262144?0:(C=Zo(C),$=Zo($),Ee=Zo(Ee),Qm(Ee)?1:N&&!qi(C)&&!qi($)&&!qi(Ee)?ke?Zn(_t=>Fy($,Ee,N,_t)):Ah($,Ee,N)?0:1:0)}function pe(C,$,Ee){if(is(C)&1)ar();else if(ke){let _t=O(C,$,Ee);_t?br(_t):ar()}else br()}function ct(C){let $=C.split(/\r\n?|\n/g),Ee=yD($);for(let _t of $){let an=Ee?_t.slice(Ee):_t;an.length&&(br(),qt(an))}}function fn(C,$){C?(Bn(),br(C)):$&&ar()}function Or(C,$){C&&Jn(),$&&Jn()}function Wr(C,$){if(ss(C)&&C.textSourceNode)return Wr(C.textSourceNode,$);let Ee=N,_t=!!Ee&&!!C.parent&&!qi(C);if(g0(C)){if(!_t||$n(C)!==ka(Ee))return go(C)}else if(w.assertNode(C,Dv),!_t)return C.text;return cd(Ee,C,$)}function nr(C){An(C)}function An(C){let $=Ji(C,e.neverAsciiEscape);(e.sourceMap||e.inlineSourceMap)&&C.kind===16?la($):ls($)}function Jr(C){let $=C.elements,Ee=C.multiLine?65536:0;lt(C,$,8914|Ee,on.parenthesizeExpressionForDisallowedComma)}function Ji(C,$){if(C.kind===16&&C.textSourceNode){let _t=C.textSourceNode;if(Tt(_t)||Cc(_t)||Tp(_t)){let an=Tp(_t)?_t.text:Wr(_t);return $||is(C)&16777216?`"${W_(an)}"`:`"${ak(an)}"`}else return Ji(_t,$)}let Ee=($?1:0)|(e.terminateUnterminatedLiterals?4:0)|(e.target&&e.target>=1?8:0);return O8(C,N,Ee)}function Ss(C){(C.symbol?Ts:qt)(Wr(C,!1),C.symbol),He(C,Ym(C),53776)}function vo(C){se.push(ye),ye=0,_e.push(G),!(C&&is(C)&1048576)&&(he.push(oe),oe=0,le.push(de),de=void 0,ie.push(Y))}function No(C){ye=se.pop(),G=_e.pop(),!(C&&is(C)&1048576)&&(oe=he.pop(),de=le.pop(),Y=ie.pop())}function uc(C){if(C)switch(C.kind){case 174:case 175:case 152:Ba(C.name);break}}function Ba(C){C&&(F_(C)?x(C):ds(C)&&zr(C))}function zr(C){if(C)switch(C.kind){case 236:Jt(C.statements,zr);break;case 245:case 246:zr(C.statement);break;case 253:zr(C.thenStatement),zr(C.elseStatement);break;case 243:zr(C.initializer),zr(C.statement);case 244:zr(C.expression),zr(C.statement);break;case 256:zr(C.caseBlock);break;case 240:Jt(C.clauses,zr);break;case 299:case 301:Jt(C.statements,zr);break;case 255:zr(C.block);break;case 242:zr(C.declarationList);break;case 238:Jt(C.declarations,zr);break;case 237:case 149:case 266:Ba(C.name);break;case 169:Ba(C.name),is(C)&1048576&&(Jt(C.parameters,zr),zr(C.body));break;case 265:Jt(C.elements,zr);break}}function Xa(C,$){let Ee,_t;if($?(Ee=G,_t=_e):(Ee=Y,_t=ie),Ee?.has(C))return!0;for(let an=_t.length-1;an>=0;an--)if(Ee!==_t[an]&&(Ee=_t[an],Ee?.has(C)))return!0;return!1}function To(C,$){return fc(C,$)&&!Xa(C,$)&&!Z.has(C)}function fc(C,$){return N?YD(N,C,r):!0}function Io(C,$=To,Ee,_t,an,Ft,qn){if(C.length>0&&C.charCodeAt(0)===35&&(C=C.slice(1)),Ft.length>0&&Ft.charCodeAt(0)===35&&(Ft=Ft.slice(1)),Ee){let $r=su(an,Ft,C,qn);if($($r,an))return _t?Nt($r):Z.add($r),$r}C.charCodeAt(C.length-1)!==95&&(C+="_");let jt=1;for(;;){let $r=su(an,Ft,C+jt,qn);if($($r,an))return _t?Nt($r):Z.add($r),$r;jt++}}function Xo(C,$,Ee,_t,an){switch(C.kind){case 89:return Io(Wr(C),To,!!(Ee&16),!!(Ee&8),$,_t,an);case 169:{w.assert(!_t&&!an&&!$);let Ft=C.name;if(Ft&&!F_(Ft))return Xo(Ft,!1,Ee,_t,an);w.fail("shouldn't be here")}case 274:w.fail("implement me");case 147:return bs(0,!0,$,_t,an);default:return bs(0,!1,$,_t,an)}}function Bo(C,$,Ee,_t,an){let Ft=Sa(C),qn=$?X:z;return qn[Ft]||(qn[Ft]=Xo(C,$,Ee??0,cf(_t,x),cf(an)))}function gt(C){switch(C){case"":return oe;case"#":return ye;default:return de?.get(C)??0}}function js(C,$){switch(C){case"":oe=$;break;case"#":ye=$;break;default:de??(de=new Map),de.set(C,$);break}}function Nt(C){(!Y||Y===wo(ie))&&(Y=new Set),Y.add(C)}function bs(C,$,Ee,_t,an){_t.length>0&&_t.charCodeAt(0)===35&&(_t=_t.slice(1));let Ft=su(Ee,_t,"",an),qn=gt(Ft);if(C&&!(qn&C)){let $r=su(Ee,_t,C===268435456?"_i":"_n",an);if(To($r,Ee))return qn|=C,$&&Nt($r),js(Ft,qn),$r}for(;;){let jt=qn&268435455;if(qn++,jt!==8&&jt!==13){let $r=jt<26?"_"+String.fromCharCode(97+jt):"_"+(jt-26),at=su(Ee,_t,$r,an);if(To(at,Ee))return $&&Nt(at),js(Ft,qn),at}}}function k(C){let $=C.emitNode.autoGenerate,Ee=cf($.prefix,x),_t=cf($.suffix);switch($.flags&7){case 1:return bs(0,!!($.flags&8),Cc(C),Ee,_t);case 2:return w.assertNode(C,Tt),bs(268435456,!!($.flags&8),!1,Ee,_t);case 3:return Io(go(C),$.flags&32?fc:To,!!($.flags&16),!!($.flags&8),Cc(C),Ee,_t)}return w.fail(`Unsupported GeneratedIdentifierKind: ${w.formatEnum($.flags&7,F2,!0)}.`)}function x(C){let $=C.emitNode.autoGenerate;if(($.flags&7)===4)return Bo(q8(C),Cc(C),$.flags,$.prefix,$.suffix);{let Ee=$.id;return j[Ee]||(j[Ee]=k(C))}}function R(C){vo(C),Jt(C.members,uc),In("{");let $=is(C)&1?768:32897;He(C,C.members,$|524288),In("}"),No(C)}function V(C,$){He(C,$,2359808);let Ee=wo($);return Ee&&!La(Ee.end)?Ee.end:C.pos}function Ce(C,$,Ee){return $?.length?V(C,$):C.pos}function Ye(C,$,Ee){let _t=is(C)&131072;_t&&Bn(),vo(C),Jt(C.parameters,zr),$(C),Ee(C),No(C),_t&&Jn()}function ut(C,$){let Ee=Tv($);return Ee&&Ee.pos===C.pos&&hd(C)&&!C.type&&!kt(C.modifiers)&&!kt(Ee.modifiers)&&!Ee.dotDotDotToken&&!Ee.type&&!Ee.initializer&&Tt(Ee.name)}function Ar(C,$){He(C,$,2576)}function Fn(C,$){ut(C,$)?He(C,$,528):Ar(C,$)}function cr(C){Fn(C,C.parameters),ar(),In("=>")}function On(C){ar(),mn(C.type)}function Mr(C,$){if(!C)return;let Ee=qt;qt=$,mn(C),qt=Ee}function vr(C){Ce(C,C.modifiers,!0),Mr(C.name,ja),mn(C.dotDotDotToken),fr(C.initializer,C.type?C.type.end:C.name?C.name.end:C.modifiers?C.modifiers.end:C.pos,C,on.parenthesizeExpressionForDisallowedComma)}function Ci(C){Ye(C,cr,On)}function kr(C){return C.statements.length===0&&(!N||Ah(C,C,N))}function jr(C){ns(C,!C.multiLine&&kr(C))}function ns(C,$){rr(17,C.pos,In,C);let Ee=$||is(C)&1?768:129;He(C,C.statements,Ee),rr(19,C.statements.end,In,C,!!(Ee&1))}function Fi(C){Ce(C,C.modifiers,!1),mn(C.declarationList),At()}function ui(C){mn(C.elementType,on.parenthesizeNonArrayTypeOfPostfixType),In("*")}function Ao(C){Ko(C)}function Ko(C){Ce(C,C.modifiers,!1),or("function"),mn(C.asteriskToken),ar(),Kt(C.name),Ye(C,A,pc)}function pc(C){let $=C.body;$?Bl($):At()}function Bl(C){zr(C),u?.(C),ar(),In("{"),Bn();let $=io(C)?us:Wl;Wa(C,C.statements,$),Jn(),Os(19,C.statements.end,In,C),d?.(C)}function us(C){Wl(C,!0)}function Wl(C,$){let Ee=vd(C.statements),_t=be.getTextPos();Di(C),Ee===0&&_t===be.getTextPos()&&$?(Jn(),He(C,C.statements,768),Bn()):He(C,C.statements,1,void 0,Ee)}function Cp(C){let $=V8(C);return $&&L_($,J8)}function Di(C){let $=!1,Ee=C.kind===177?C:void 0;if(Ee&&g===0)return;let _t=Ee?Ee.sourceFiles.length:1;for(let an=0;an<_t;an++){let Ft=Ee?Ee.sourceFiles[an]:C,qn=ti(Ft)?Ft:N,jt=e.noEmitHelpers||!!qn&&$8(qn),$r=ti(Ft)&&!fe,at=Cp(Ft);if(at)for(let os of at){if(os.scoped){if(Ee)continue}else{if(jt)continue;if($r){if(M.get(os.name))continue;M.set(os.name,!0)}}typeof os.text=="string"?ct(os.text):ct(os.text(Pp)),$=!0}}return $}function Pp(C){return Io(C,fc,!0,!1,!1,"","")}function vd(C,$,Ee){let _t=!!$;for(let an=0;an<C.length;an++){let Ft=C[an];if(sk(Ft))(Ee?!Ee.has(Ft.expression.text):!0)&&(_t&&(_t=!1,it($)),br(),mn(Ft),Ee&&Ee.add(Ft.expression.text));else return an}return C.length}function Ic(C){let $=N&&I8(N.text,sn(),be,gu,C,E,hn);$&&(Vt?Vt.push($):Vt=[$])}function Ul(C,$){return e.onlyPrintJsDocStyle?pk(C,$)||jv(C,$):!0}function gu(C,$,Ee,_t,an,Ft){!N||!Ul(N.text,_t)||(mi(_t),zy(C,$,Ee,_t,an,Ft),mi(an))}function mi(C){if(pt||La(C)||H(Mt))return;let{line:$,character:Ee}=$s(Mt,C);je.addMapping(be.getLine(),be.getColumn(),Yt,$,Ee,void 0)}function Wa(C,$,Ee){Ze();let{pos:_t,end:an}=$,Ft=is(C),qn=_t<0||(Ft&1024)!==0,jt=hn||an<0||(Ft&2048)!==0;qn||Ic($),Ct(),Ft&4096&&!hn?(hn=!0,Ee(C),hn=!1):Ee(C),Ze(),jt||(Pa($.end,!0),_n&&!be.isAtStartOfLine()&&be.writeLine()),Ct()}function Pa(C,$){_n=!1,$?Wo(C,ea):C===0&&console.debug("todo - emitLeadingComments")}function ea(C,$,Ee,_t,an){!N||!Ul(N.text,C)||(_n||(A8(sn(),be,an,C),_n=!0),mi(C),zy(N.text,sn(),be,C,$,E),mi($),_t?be.writeLine():Ee===3&&be.writeSpace(" "))}function Ua(C){if(!N)return;let $=jo(Vt).detachedCommentEndPos;Vt.length-1?Vt.pop():Vt=void 0,by(N.text,$,C,$)}function Wo(C,$){N&&(tt===-1||C!==tt)&&(ua(C)?Ua($):by(N.text,C,$,C))}function ua(C){return Vt!==void 0&&jo(Vt).nodePos===C}function io(C){if(is(C)&1)return!0;if(C.multiLine||!qi(C)&&N&&!cp(C,N)||Yn(C,Fa(C.statements),2)||Ui(C,wo(C.statements),2,C.statements))return!1;let $;for(let Ee of C.statements){if(oi($,Ee,2)>0)return!1;$=Ee}return!0}function lo(C){mn(C.name),fr(C.initializer,C.type?.end??C.name.emitNode?.typeNode?.end??C.name.end,C,on.parenthesizeExpressionForDisallowedComma)}function zu(C){Ye(C,A,wn)}function nl(C){return C.kind===2||!!C.hasTrailingNewLine}function Jl(C){if(!N)return!1;let $=Wu(N.text,C.pos);if($){let Ee=_s(C);if(Ee&&yp(Ee.parent))return!0}return kt($,nl)||kt(lk(C),nl)?!0:rv(C)?C.pos!==C.expression.pos&&kt(B_(N.text,C.expression.pos),nl)?!0:Jl(C.expression):!1}function zl(C){if(!hn&&rv(C)&&Jl(C)){let $=_s(C);if($&&yp($)){let Ee=Ve.createParenthesizedExpression(C.expression);return uf(Ee,C),Ho(Ee,$),Ee}return Ve.createParenthesizedExpression(C)}return C}function vf(C,$){C&&(ar(),gr(C,$))}function z_(C,$){let Ee=ke&&Yn($,C,0);return Ee&&fn(Ee,!1),!!Ee}function ta(C,$){let Ee=ke&&Ui($,C,0,void 0);Ee&&br(Ee)}function Td(C){Ca(C.operator,mr),Ac(C)&&ar(),gr(C.operand,on.parenthesizeOperandOfPrefixUnary)}function Ac(C){let $=C.operand;return $.kind===298&&(C.operator===41&&($.operator===41||$.operator===47)||C.operator===42&&($.operator===42||$.operator===48))}function Qs(C){yk(C)&&C.operator===29?(In("'<"),gr(C.operand),In("'")):gr(C)}function Sd(C){In("{ start: "),Qs(C.left),In(", end: "),Qs(C.right),In("}")}function V_(C){let $=rr(20,C.pos,In,C),Ee=z_(C.expression,C);gr(C.expression,void 0),ta(C.expression,C),Or(Ee),rr(21,C.expression?C.expression.end:$,In,C)}function q_(C){or("__lpcIndexAccessHelper"),In("("),gr(C.expression,on.parenthesizeLeftSideOfAccess),In(","),gr(C.argumentExpression),In(")")}function Tf(C){let $=C.operatorToken.kind;if(mf($))switch(gr(C.left),mr(Mi(74)),$){case 75:$=41;break;case 76:$=42;break;case 77:$=43;break;case 79:$=45;break;case 74:$=74;break;default:w.fail("Unknown compound assignment operator "+w.formatSyntaxKind($))}or("__lpcBinaryHelper"),In("("),gr(C.left),In(","),gr(C.right),In(","),In('"'),mr(Mi($)),In('"'),In(")")}function $_(C){let $=Ly(C)&16;$&&(In("("),la("0"),In(","),ar()),gr(C.expression,on.parenthesizeLeftSideOfAccess),$&&In(")"),lt(C,C.arguments,2576,on.parenthesizeExpressionForDisallowedComma)}function Ja(C){rr(116,C.pos,or,C),vf(C.expression&&zl(C.expression),zl),At()}function Vu(C,$){uu($)||is(C)&1||ke&&!Yn(C,$,0)?(ar(),mn($)):(br(),Bn(),FM($)?Xi(5,$):mn($),Jn())}function Vl(C){mn(C.objectType,on.parenthesizeNonArrayTypeOfPostfixType),In("["),mn(C.indexType),In("]")}function H_(C){let $=rr(115,C.pos,or,C);ar(),rr(20,$,In,C),gr(C.expression),rr(21,C.expression.end,In,C),Vu(C,C.thenStatement),C.elseStatement&&(pe(C,C.thenStatement,C.elseStatement),rr(110,C.thenStatement.end,or,C),C.elseStatement.kind===253?(ar(),mn(C.elseStatement)):Vu(C,C.elseStatement))}function bd(C){let $=rr(117,C.pos,or,C);ar(),rr(20,$,In,C),gr(C.expression),rr(21,C.expression.end,In,C),ar(),mn(C.caseBlock)}function Sf(C){C&&(ar(),mn(C))}function ql(C){rr(17,C.pos,In,C),He(C,C.clauses,129),rr(19,C.clauses.end,In,C,!0)}function hu(C){rr(121,C.pos,or,C),Sf(C.label),At()}function kd(C){rr(106,C.pos,or,C),Sf(C.label),At()}function Oo(C){gr(C.expression,on.parenthesizeExpressionOfExpressionStatement),(!N||!cg(N)||qi(C.expression))&&At()}function A(C){Ar(C,C.parameters)}function ee(C){rr(113,C.pos,or,C),ar(),gr(C.expression,on.parenthesizeExpressionForDisallowedComma),Ke(C,C.statements,C.expression.end)}function Fe(C){let $=rr(114,C.pos,or,C);Ke(C,C.statements,$)}function Ke(C,$,Ee){let _t=$.length===1&&(!N||qi(C)||qi($[0])||Kh(C,$[0],N)),an=163969;_t?(Os(61,Ee,In,C),ar(),an&=-130):rr(61,Ee,In,C),He(C,$,an)}function wn(C){At()}function Dr(C){or("let"),ar(),He(C,C.declarations,528)}function gn(C){C&&(mn(C),ar())}function fr(C,$,Ee,_t){C&&(ar(),rr(74,$,mr,Ee),ar(),gr(C,_t))}function rr(C,$,Ee,_t,an){let Ft=_s(_t),qn=Ft&&Ft.kind===_t.kind,jt=$;if(qn&&N&&($=ts(N.text,$)),qn&&_t.pos!==jt){let $r=an&&N&&!lu(jt,$,N);$r&&Bn(),Ir(jt),$r&&Jn()}return!T&&(C===17||C===19)?$=Os(C,$,Ee,_t):$=Ca(C,Ee,$),qn&&_t.end!==$&&nn($,!1,!1),$}}function sB(e,n,r){let s,a,l,u=Rl(),d=new Set,_=new Set,y=new Map,h=new Map,v=!1,b,T,E,g,M,N=!1,z=Fl(()=>e.getCurrentDirectory()),X=e.getCachedDirectoryStructureHost(),j=new Map,Z=fE(z(),e.getCanonicalFileName,e.getCompilationSettings()),le=new Map,de=new Map,se=oB(n,z),ye=e.toPath(se),he=pu(ye),oe=new Map,ie=new Map,Y=new Map;return{rootDirForResolution:n,resolvedModuleNames:j,resolvedFileToResolution:y,getModuleResolutionCache:()=>Z,startRecordingFilesWithChangedResolutions:re,finishRecordingFilesWithChangedResolutions:be,startCachingPerDirectoryResolution:fe,finishCachingPerDirectoryResolution:je,resolveModuleNameLiterals:Me,removeResolutionsFromProjectReferenceRedirects:xr,removeResolutionsOfFile:si,invalidateResolutionOfFile:Se,invalidateResolutionsOfFailedLookupLocations:$e,createHasInvalidatedResolutions:qt,clear:G,onChangesAffectModuleResolution:ke};function _e(Re){return Re.resolvedModule}function G(){oe.clear(),ie.clear(),u.clear(),it(),j.clear(),y.clear(),d.clear(),_.clear(),E=void 0,g=void 0,M=void 0,T=void 0,b=void 0,N=!1,h.clear(),v=!1}function ke(){N=!0,Z.clearAllExceptPackageJsonInfoCache(),Z.update(e.getCompilationSettings())}function re(){s=[]}function be(){let Re=s;return s=void 0,Re}function rt(Re){if(!l)return!1;let H=l.get(Re);return!!H&&!!H.length}function qt(Re,H){$e();let Sn=a;return a=void 0,{hasInvalidatedResolutions:Zt=>Re(Zt)||N||!!Sn?.has(Zt)||rt(Zt),hasInvalidatedLibResolutions:Zt=>H(Zt)}}function fe(){u.forEach(hn),u.clear(),oe.clear()}function pt(Re){}function je(Re,H){l=void 0,N=!1,u.forEach(hn),u.clear(),Re!==H&&Re?.getSourceFiles().forEach(Sn=>{let sn=h.get(Sn.resolvedPath)??Oe;for(let mn=sn.length;mn<0;mn++);if(sn.length>0)for(let mn=0;mn<sn.length;mn++)de.get(sn[mn]).files--;else h.delete(Sn.resolvedPath)}),le.forEach(Mt),de.forEach(Yt),Z.isReadonly=!0,oe.clear()}function Mt(Re,H){Re.refCount===0&&(le.delete(H),Re.watcher.close())}function Yt(Re,H){Re.files===0&&Re.resolutions===0&&!Re.symlinks?.size&&(de.delete(H),Re.watcher.close())}function Bt({entries:Re,containingFile:H,containingSourceFile:Sn,redirectedReference:Zt,options:sn,perFileCache:mn,reusedNames:Kt,loader:gr,getResolutionWithResolvedFileName:Xr,deferWatchingNonRelativeResolution:cs,shouldRetryResolution:Xi,logChanges:ro}){let $i=e.toPath(H),Ie=mn.get($i)||mn.set($i,Yy()).get($i),Te=[],yt=ro&&rt($i),Gt=e.getCurrentProgram(),yn=Gt&&Gt.getResolvedProjectReferenceToRedirect(H),Rn=yn?!Zt||Zt.sourceFile.path!==yn.sourceFile.path:!!Zt,Rr=Yy();for(let Kn of Re){let ur=gr.nameAndMode.getName(Kn),_r=gr.nameAndMode.getMode(Kn,Sn,Zt?.commandLine.options||sn),Le=Ie.get(ur,_r);if(!Rr.has(ur,_r)&&(N||Rn||!Le||Le.isInvalidated||yt&&!df(ur)&&Xi(Le))){let He=Le;Le=gr.resolve(ur,_r),e.onDiscoveredSymlink&&sne(Le)&&e.onDiscoveredSymlink(),Ie.set(ur,_r,Le),Le!==He&&(me(ur,Le,$i,Xr,cs),He&&on(He,$i,Xr)),ro&&s&&!bn(He,Le)&&(s.push($i),ro=!1)}else{let He=aB(e);if(td(sn,He)&&!Rr.has(ur,_r)){let lt=Xr(Le);eo(He,mn===j?lt?.resolvedFileName?lt.packageId?P.Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package_ID_3:P.Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2:P.Reusing_resolution_of_module_0_from_1_of_old_program_it_was_not_resolved:lt?.resolvedFileName?lt.packageId?P.Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package_ID_3:P.Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved_to_2:P.Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_not_resolved,ur,H,lt?.resolvedFileName,lt?.packageId&&Xh(lt.packageId))}}w.assert(Le!==void 0&&!Le.isInvalidated),Rr.set(ur,_r,!0),Te.push(Le)}return Kt?.forEach(Kn=>Rr.set(gr.nameAndMode.getName(Kn),gr.nameAndMode.getMode(Kn,Sn,Zt?.commandLine.options||sn),!0)),Ie.size()!==Rr.size()&&Ie.forEach((Kn,ur,_r)=>{Rr.has(ur,_r)||(on(Kn,$i,Xr),Ie.delete(ur,_r))}),Te;function bn(Kn,ur){if(Kn===ur)return!0;if(!Kn||!ur)return!1;let _r=Xr(Kn),Le=Xr(ur);return _r===Le?!0:!_r||!Le?!1:_r.resolvedFileName===Le.resolvedFileName}}function Me(Re,H,Sn,Zt,sn,mn){return Bt({entries:Re,containingFile:H,containingSourceFile:sn,redirectedReference:Sn,options:Zt,reusedNames:mn,perFileCache:j,loader:cB(H,Sn,Zt,e,Z),getResolutionWithResolvedFileName:_e,shouldRetryResolution:Kt=>!Kt.resolvedModule||!N8(Kt.resolvedModule.extension),logChanges:r,deferWatchingNonRelativeResolution:!0})}function tt(Re){return Ec(Re,"/node_modules/@types")}function me(Re,H,Sn,Zt,sn){if(H.refCount)H.refCount++,w.assertIsDefined(H.files);else{H.refCount=1,w.assert(!H.files?.size),!sn||df(Re)?Lt(H):u.add(Re,H);let mn=Zt(H);if(mn&&mn.resolvedFileName){let Kt=e.toPath(mn.resolvedFileName),gr=y.get(Kt);gr||y.set(Kt,gr=new Set),gr.add(H)}}(H.files??(H.files=new Set)).add(Sn)}function dt(Re,H){let Sn=e.toPath(Re);return H}function Lt(Re){w.assert(!!Re.refCount);let{failedLookupLocations:H,affectingLocations:Sn,alternateResult:Zt}=Re;if(!H?.length&&!Sn?.length&&!Zt)return;(H?.length||Zt)&&d.add(Re);let sn=!1;if(H)for(let mn of H)sn=dt(mn,sn);Zt&&(sn=dt(Zt,sn)),sn&&ue(se,ye,void 0,void 0,!0),Vt(Re,!H?.length&&!Zt)}function Vt(Re,H){w.assert(!!Re.refCount);let{affectingLocations:Sn}=Re;if(Sn?.length){H&&_.add(Re);for(let Zt of Sn);}}function _n(Re,H){}function hn(Re,H){}function kn(Re,H,Sn,Zt,sn){w.assert(!sn);let mn=oe.get(Zt)}function ue(Re,H,Sn,Zt,sn){!Zt||!e.realpath?Ze(Re,H,sn):kn(Re,H,Sn,Zt,sn)}function Ze(Re,H,Sn){let Zt=le.get(H);return Zt?(w.assert(!!Sn==!!Zt.nonRecursive),Zt.refCount++):le.set(H,Zt={watcher:Vn(Re,H,Sn),refCount:1,nonRecursive:Sn}),Zt}function Ct(Re,H,Sn){let Zt=e.toPath(Re);return H}function on(Re,H,Sn,Zt){if(w.checkDefined(Re.files).delete(H),Re.refCount--,Re.refCount)return;let sn=Sn(Re);if(sn&&sn.resolvedFileName){let Xr=e.toPath(sn.resolvedFileName),cs=y.get(Xr);cs?.delete(Re)&&!cs.size&&y.delete(Xr)}let{failedLookupLocations:mn,affectingLocations:Kt,alternateResult:gr}=Re;if(d.delete(Re)){let Xr=!1;if(mn)for(let cs of mn)Xr=Ct(cs,Xr,Zt);gr&&(Xr=Ct(gr,Xr,Zt)),Xr&&Vr(ye,Zt)}else Kt?.length&&_.delete(Re);if(Kt)for(let Xr of Kt);}function Vr(Re,H){let Sn=le.get(Re);Sn.refCount--,H&&Mt(Sn,Re)}function Vn(Re,H,Sn){return e.watchDirectoryOfFailedLookupLocation(Re,Zt=>{let sn=e.toPath(Zt);X&&X.addOrDeleteFileOrDirectory(Zt,sn),De(sn,H===sn)},Sn?0:1)}function _i(Re,H,Sn,Zt){let sn=Re.get(H);sn&&(sn.forEach(mn=>on(mn,H,Sn,Zt)),Re.delete(H))}function xr(Re){if(!el(Re,".json"))return;let H=e.getCurrentProgram();if(!H)return;let Sn=H.getResolvedProjectReferenceByPath(Re);Sn&&Sn.commandLine.fileNames.forEach(Zt=>si(e.toPath(Zt)))}function si(Re,H){_i(j,Re,_e,H)}function xi(Re,H){if(!Re)return!1;let Sn=!1;return Re.forEach(Zt=>{Zt.isInvalidated||!H(Zt)||(Zt.isInvalidated=Sn=!0)}),Sn}function Se(Re){si(Re);let H=v;xi(y.get(Re),Vx)&&v&&!H&&e.onChangedAutomaticTypeDirectiveNames()}function De(Re,H){if(H)(M||(M=new Set)).add(Re);else{let Sn=UE(Re);if(!Sn||(Re=Sn,e.fileIsOpen(Re)))return!1;let Zt=li(Re);if(tt(Re)||Kb(Re)||tt(Zt)||Kb(Zt))(E||(E=new Set)).add(Re),(g||(g=new Set)).add(Re);else{if(el(Re,".map"))return!1;(E||(E=new Set)).add(Re)}}e.scheduleInvalidateResolutionsOfFailedLookupLocations()}function Ne(){}function $e(){if(N)return b=void 0,E=void 0,g=void 0,M=void 0,T=void 0,!0;let Re=!1;return b&&(b=void 0),!E&&!g&&!M&&!T||(Re=xi(d,we)||Re,E=void 0,g=void 0,M=void 0,Re=xi(_,ze)||Re,T=void 0),Re}function we(Re){return ze(Re)?!0:!E&&!g&&!M?!1:Re.failedLookupLocations?.some(H=>Je(e.toPath(H)))||!!Re.alternateResult&&Je(e.toPath(Re.alternateResult))}function Je(Re){return E?.has(Re)||hb(g?.keys()||[],H=>no(Re,H)?!0:void 0)||hb(M?.keys()||[],H=>Re.length>H.length&&no(Re,H)&&(bk(H)||Re[H.length]===As)?!0:void 0)}function ze(Re){return!!T&&Re.affectingLocations?.some(H=>T.has(H))}function it(){n0(Y,$m)}}function oB(e,n){let r=Wi(e,n());return bk(r)?r:J_(r)}function UE(e){return Ec(e,"/node_modules/.staging")?Jh(e,"/.staging"):kt(LE,n=>e.includes(n))?void 0:e}function ux(e,n){if(n===void 0&&(n=e.length),n<=2)return!1;let r=ine(e,n);return n>r+1}function ine(e,n){if(n<=1)return 1;let r=1,s=e[0].search(/[a-zA-Z]:/)===0;if(e[0]!==As&&!s&&e[1].search(/[a-zA-Z]\$$/)===0){if(n===2)return 2;r=2,s=!0}return s&&!e[r].match(/^users$/i)?r:e[r].match(/^workspaces$/i)?r+1:r+2}function sne(e){return!!(e.resolvedModule?.originalPath||e.resolvedTypeReferenceDirective?.originalPath)}function aB(e){return e.getCompilerHost?.()||e}function cB(e,n,r,s,a){return{nameAndMode:WE,resolve:(l,u)=>one(s,a,l,e,r,n,u)}}function one(e,n,r,s,a,l,u){let d=aB(e),_=dE(r,s,a,d,n,l,u);if(!e.getGlobalCache)return _;let y=e.getGlobalCache();if(y!==void 0&&!df(r)&&!(_.resolvedModule&&w8(_.resolvedModule.extension))){let{resolvedModule:h,failedLookupLocations:v,affectingLocations:b,resolutionDiagnostics:T}=dM(w.checkDefined(e.globalCacheResolutionModuleName)(r),e.projectName,a,d,y,n);if(h)return _.resolvedModule=h,_.failedLookupLocations=Zm(_.failedLookupLocations,v),_.affectingLocations=Zm(_.affectingLocations,b),_.resolutionDiagnostics=Zm(_.resolutionDiagnostics,T),_}return _}function lB(e){return el(e,".json")?e:ii(e,"lpc-config.json")}function ane(e=Ms,n,r,s,a){w.fail("todo")}var uB=(e=>(e[e.None=0]="None",e[e.Success=1]="Success",e[e.Failure=2]="Failure",e))(uB||{});function cne(e,n,r){e.write(`Version ${FO}
`),e.write(`Searching for config file... ${e.getCurrentDirectory()}
`);let s=ca(e.useCaseSensitiveFileNames),a=VP("--project",n),l=bk(a)?wc(a):di(ii(e.getCurrentDirectory(),a)),u=qj(l||e.getCurrentDirectory(),e.fileExists),d=s(u),_=VP("--perf",n)!==void 0;u||(e.write(`No config file found.
`),process.exit(1));let y;_&&(y=lne(e,{})),e.write(`Using config file: ${d}
`);let h=dk(u,e.readFile(u)),v=Q8(h,e,li(u),void 0,u),b=v.options,T=RE(b),E=li(process.argv[1]);T.getDefaultLibFileName=()=>ii(E,"../",TD(b),SD(b)),e.write(`Driver type: ${RL[b.driverType]}
`),e.write(`Found ${v.fileNames.length} files.
`),e.write(`Efun Definitions: ${di(T.getDefaultLibFileName(b))}
`);let g={host:T,rootNames:v.fileNames,options:b,oldProgram:void 0};function M(de){return!!de.writeOutputIsTTY&&de.writeOutputIsTTY()&&!de.getEnvironmentVariable("NO_COLOR")}function N(de,se){return!se||typeof se.pretty>"u"?M(de):se.pretty}function z(de,se,ye){return N(de,ye)?ix(de,!0):se}let X=z(e,ix(e),b),j=FE(g),Z=[],le=j.getRootFileNames();if(le.forEach(de=>{try{let se=j.getSourceFile(de),ye=j.getSyntacticDiagnostics(se);if(Z.push(...ye),b.diagnostics){let he=j.getSemanticDiagnostics(se);Z.push(...he)}}catch(se){throw e.write(`Error processing file: ${de}
`),se}}),Om(Z).forEach(de=>{X(de)}),Z.length){if(e.write(`
`),r){let de=fj(Z.length,uj(Z),`
`,T);r(de,2)}}else if(le.length){let de=["Your code is so fresh and so clean, clean.","May the source be with you.","Time to grab a coffee.","It's a feature, not a bug!","You are a coding wizard.","Your code is all that and a bag of chips.","You must be the Fresh Prince of Code-Air.","Party on, dudes."],se=de[Math.floor(Math.random()*de.length)];r&&r(_p(`
\u2713 `,"\x1B[92m")+_p(`No errors found. ${se}

`,"\x1B[90m"),1)}_&&(gne(Ms,j,y),fne(y))}function lne(e,n){if(e===Ms)return ci.enable(),une()}var fB=(e=>(e[e.time=0]="time",e[e.count=1]="count",e[e.memory=2]="memory",e))(fB||{});function une(){let e;return{addAggregateStatistic:n,forEachAggregateStatistics:r,clear:s};function n(a){let l=e?.get(a.name);l?l.type===2?l.value=Math.max(l.value,a.value):l.value+=a.value:(e??(e=new Map)).set(a.name,a)}function r(a){e?.forEach(a)}function s(){e=void 0}}function lb(e){return no(e,"SolutionBuilder::")}function fne(e){if(!e)return;let n=[];r("SolutionBuilder::Projects built"),r("SolutionBuilder::Timestamps only updates"),r("SolutionBuilder::Bundles updated"),e.forEachAggregateStatistics(a=>{a.name=`Aggregate ${a.name}`,n.push(a)}),ci.forEachMeasure((a,l)=>{lb(a)&&n.push({name:`${s(a)} time`,value:l,type:0})}),ci.disable(),ci.enable(),e.clear(),pB(Ms,n);function r(a){let l=ci.getCount(a);l&&n.push({name:s(a),value:l,type:1})}function s(a){return a.replace("SolutionBuilder::","")}}function pB(e,n){let r=0,s=0;for(let a of n){a.name.length>r&&(r=a.name.length);let l=YA(a);l.length>s&&(s=l.length)}for(let a of n)e.write(`${a.name}:`.padEnd(r+2)+YA(a).toString().padStart(s)+e.newLine)}function YA(e){switch(e.type){case 1:return""+e.value;case 0:return(e.value/1e3).toFixed(2)+"s";case 2:return Math.round(e.value/1e3)+"K";default:w.assertNever(e.type)}}function pne(e,n){return e===Ms&&!0}function dne(){let e=new Map;return e.set("Library",0),e.set("Definitions",0),e.set("LPC",0),e.set("JSON",0),e.set("Other",0),e}function _ne(e,n){if(e.isSourceFileDefaultLibrary(n))return"Library";if(n.isDeclarationFile)return"Definitions";let r=n.path;return kk(r,ZD)?"LPC":el(r,".json")?"JSON":"Other"}function mne(e){let n=dne();return Jt(e.getSourceFiles(),r=>{let s=_ne(e,r),a=Xc(r).length;n.set(s,n.get(s)+a)}),n}function gne(e,n,r){let s=n.getCompilerOptions(),a;if(pne(e,s)){a=[];let _=e.getMemoryUsage?e.getMemoryUsage():-1;u("Files",n.getSourceFiles().length);let y=mne(n);if(s.extendedDiagnostics)for(let[g,M]of y.entries())u("Lines of "+g,M);else u("Lines",pL(y.values(),(g,M)=>g+M,0));u("Identifiers",n.getIdentifierCount()),u("Symbols",n.getSymbolCount()),u("Types",n.getTypeCount()),u("Instantiations",n.getInstantiationCount()),_>=0&&l({name:"Memory used",value:_,type:2},!0);let h=ci.isEnabled(),v=h?ci.getDuration("Program"):0,b=h?ci.getDuration("Bind"):0,T=h?ci.getDuration("Check"):0,E=h?ci.getDuration("Emit"):0;if(s.extendedDiagnostics){let g=n.getRelationCacheSizes();u("Assignability cache size",g.assignable),u("Identity cache size",g.identity),u("Subtype cache size",g.subtype),u("Strict subtype cache size",g.strictSubtype),h&&ci.forEachMeasure((M,N)=>{lb(M)||d(`${M} time`,N,!0)})}else h&&(d("I/O read",ci.getDuration("I/O Read"),!0),d("I/O write",ci.getDuration("I/O Write"),!0),d("Parse time",v,!0),d("Bind time",b,!0),d("Check time",T,!0),d("Emit time",E,!0));h&&d("Total time",v+b+T+E,!1),pB(e,a),h?r?(ci.forEachMeasure(g=>{lb(g)||ci.clearMeasures(g)}),ci.forEachMark(g=>{lb(g)||ci.clearMarks(g)})):ci.disable():e.write(P.Performance_timings_for_diagnostics_or_extendedDiagnostics_are_not_available_in_this_session_A_native_implementation_of_the_Web_Performance_API_could_not_be_found.message+`
`)}function l(_,y){a.push(_),y&&r?.addAggregateStatistic(_)}function u(_,y){l({name:_,value:y,type:1},!0)}function d(_,y,h){l({name:_,value:y,type:0},h)}}function dB(e,n){return{typeFromExpression:E,serializeTypeOfDeclaration:l,serializeReturnTypeForSignature:u,serializeTypeOfExpression:a};function s(ie,Y){return ie!==void 0&&(!Y||ie&&ye(ie))?!0:void 0}function a(ie,Y,_e,G){return E(ie,Y,!1,_e,G)??v(ie,Y)}function l(ie,Y){switch(ie.kind){case 153:return s(Ta(ie));case 149:return _(ie,Y);case 237:return d(ie,Y);case 152:return y(ie,Y);case 266:return h(ie,Y);case 286:case 281:case 269:return s(Ta(ie))||h(ie,Y);case 174:return E(ie.initializer,Y)||h(ie,Y);default:w.assertNever(ie,`Node needs to be an inferrable node, found ${w.formatSyntaxKind(ie.kind)}`)}}function u(ie,Y){switch(ie.kind){case 154:case 169:case 156:case 150:case 158:case 270:case 271:case 202:return he(ie,Y);default:w.assertNever(ie,`Node needs to be an inferrable node, found ${w.formatSyntaxKind(ie.kind)}`)}}function d(ie,Y){let _e=Ta(ie);if(_e)return s(_e);let G;return ie.initializer&&(n.isExpandoFunctionDeclaration(ie)||(G=E(ie.initializer,Y,void 0,void 0,!1))),G??h(ie,Y)}function _(ie,Y){let _e=ie.parent,G=Ta(ie),ke=n.requiresAddingImplicitUndefined(ie),re;return G?re=s(G,ke):ie.initializer&&Tt(ie.name)&&(re=E(ie.initializer,Y,void 0,ke)),re??h(ie,Y)}function y(ie,Y){let _e=Ta(ie);if(_e)return s(_e);let G;return ie.initializer&&(G=E(ie.initializer,Y,void 0,void 0,!1)),G??h(ie,Y)}function h(ie,Y){return Y.tracker.reportInferenceFallback(ie),!1}function v(ie,Y){return Y.tracker.reportInferenceFallback(ie),!1}function b(ie,Y){return Y.tracker.reportInferenceFallback(ie),!1}function T(ie,Y,_e,G){return G&&!ye(Y)&&_e.tracker.reportInferenceFallback(Y),s(Y)}function E(ie,Y,_e=!1,G=!1,ke=!1){switch(ie.kind){case 289:return d_(ie)?T(ie.expression,xh(ie),Y,G):E(ie.expression,Y,_e,G);case 89:if(n.isUndefinedIdentifierExpression(ie))return!0;break;case 137:return!0;case 271:case 270:return g(ie,Y);case 279:let re=ie;return T(re.expression,re.type,Y,G);case 298:let be=ie;if(WP(be)&&(be.operand.kind===13||be.operand.kind===11))return se();break;case 11:return se();case 16:return se();case 13:return se();case 136:case 135:return se();case 290:return N(ie,Y,_e);case 291:w.fail("todo - mapping literal");case 293:return X(ie,Y,_e);case 274:return v(ie,Y)}}function g(ie,Y){let _e=s(ie.type)??he(ie,Y),G=void 0,ke=ie.parameters.every(re=>Z(re,Y));return _e&&G&&ke}function M(ie,Y,_e){if(!_e)return Y.tracker.reportInferenceFallback(ie),!1;for(let G of ie.elements)if(G.kind===294)return Y.tracker.reportInferenceFallback(G),!1;return!0}function N(ie,Y,_e){if(!M(ie,Y,_e))return!1;let G=!0;for(let ke of ie.elements)w.assert(ke.kind!==294),ke.kind!==297&&(G=(E(ke,Y,_e)??v(ke,Y))&&G);return!0}function z(ie,Y){let _e=!0;for(let G of ie.properties)if(G.flags&262144){_e=!1;break}else if(G.name.flags&262144){_e=!1;break}else if(G.name.kind===147){let ke=G.name.expression;!WP(ke,!1)&&!n.isDefinitelyReferenceToGlobalSymbolObject(ke)&&(Y.tracker.reportInferenceFallback(G.name),_e=!1)}return _e}function X(ie,Y,_e){if(!z(ie,Y))return!1;let G=!0;for(let ke of ie.properties){w.assert(!vp(ke)&&!Zy(ke));let re=ke.name;switch(ke.kind){case 174:G=!!j(ke,re,Y,_e)&&G;break}}return G}function j(ie,Y,_e,G){return E(ie.initializer,_e,G)??h(ie,_e)}function Z(ie,Y){return _(ie,Y)}function le(ie){return ie?.every(Y=>s(Y.constraint)&&s(Y.default))??!0}function de(ie,Y,_e){let G=he(ie,_e),ke=!0,re=ie.parameters.every(be=>Z(be,_e));return G&&ke&&re}function se(){return!0}function ye(ie){return!0}function he(ie,Y){let _e,G=$c(ie);return G&&(_e=s(G)),!_e&&k8(ie)&&(_e=oe(ie,Y)),_e??b(ie,Y)}function oe(ie,Y){let _e;if(ie&&!Eo(ie.body)){if(Sc(ie)&3)return;let G=ie.body;G&&uu(G)?k_(G,ke=>{if(!_e)_e=ke.expression;else return _e=void 0,!0}):_e=G}if(_e)return E(_e,Y)}}var i2={};lc(i2,{countPathComponents:()=>hne});function hne(e){let n=0;for(let r=no(e,"./")?2:0;r<e.length;r++)e.charCodeAt(r)===47&&n++;return n}var Um={},_B=(e=>(e.unknown="",e.warning="warning",e.keyword="keyword",e.scriptElement="script",e.moduleElement="module",e.classElement="class",e.localClassElement="local class",e.interfaceElement="interface",e.typeElement="type",e.enumElement="enum",e.enumMemberElement="enum member",e.variableElement="var",e.localVariableElement="local var",e.variableUsingElement="using",e.variableAwaitUsingElement="await using",e.functionElement="function",e.localFunctionElement="local function",e.memberFunctionElement="method",e.memberGetAccessorElement="getter",e.memberSetAccessorElement="setter",e.memberVariableElement="property",e.memberAccessorVariableElement="accessor",e.constructorImplementationElement="constructor",e.callSignatureElement="call",e.indexSignatureElement="index",e.constructSignatureElement="construct",e.parameterElement="parameter",e.typeParameterElement="type parameter",e.primitiveType="primitive type",e.label="label",e.alias="alias",e.constElement="const",e.letElement="let",e.define="define",e.directory="directory",e.externalModuleName="external module name",e.jsxAttribute="JSX attribute",e.string="string",e.link="link",e.linkName="link name",e.linkText="link text",e))(_B||{}),s2;(e=>{class n{constructor(a){this.text=a}getText(a,l){return a===0&&l===this.text.length?this.text:this.text.substring(a,l)}getLength(){return this.text.length}getChangeRange(){}}function r(s){return new n(s)}e.fromString=r})(s2||(s2={}));var mB=(e=>(e.none="",e.publicMemberModifier="public",e.privateMemberModifier="private",e.protectedMemberModifier="protected",e.exportedModifier="export",e.ambientModifier="declare",e.staticModifier="static",e.abstractModifier="abstract",e.optionalModifier="optional",e.deprecatedModifier="deprecated",e.jsonModifier=".json",e.cModifier=".c",e.hModifier=".h",e.lpcModifier=".lpc",e))(mB||{}),Nk=(e=>(e[e.aliasName=0]="aliasName",e[e.className=1]="className",e[e.enumName=2]="enumName",e[e.fieldName=3]="fieldName",e[e.interfaceName=4]="interfaceName",e[e.keyword=5]="keyword",e[e.lineBreak=6]="lineBreak",e[e.numericLiteral=7]="numericLiteral",e[e.stringLiteral=8]="stringLiteral",e[e.localName=9]="localName",e[e.methodName=10]="methodName",e[e.moduleName=11]="moduleName",e[e.operator=12]="operator",e[e.parameterName=13]="parameterName",e[e.propertyName=14]="propertyName",e[e.punctuation=15]="punctuation",e[e.space=16]="space",e[e.text=17]="text",e[e.typeParameterName=18]="typeParameterName",e[e.enumMemberName=19]="enumMemberName",e[e.functionName=20]="functionName",e[e.regularExpressionLiteral=21]="regularExpressionLiteral",e[e.link=22]="link",e[e.linkName=23]="linkName",e[e.linkText=24]="linkText",e))(Nk||{}),gB=(e=>(e[e.Semantic=0]="Semantic",e[e.PartialSemantic=1]="PartialSemantic",e[e.Syntactic=2]="Syntactic",e))(gB||{}),hB=(e=>(e[e.None=0]="None",e[e.MayIncludeAutoImports=1]="MayIncludeAutoImports",e[e.IsImportStatementCompletion=2]="IsImportStatementCompletion",e[e.IsContinuation=4]="IsContinuation",e[e.ResolvedModuleSpecifiers=8]="ResolvedModuleSpecifiers",e[e.ResolvedModuleSpecifiersBeyondLimit=16]="ResolvedModuleSpecifiersBeyondLimit",e[e.MayIncludeMethodSnippets=32]="MayIncludeMethodSnippets",e))(hB||{}),yne=[".",'"',"'","`","/","@","<"," ",">"],yB=(e=>(e[e.Invoked=1]="Invoked",e[e.TriggerCharacter=2]="TriggerCharacter",e[e.TriggerForIncompleteCompletions=3]="TriggerForIncompleteCompletions",e))(yB||{}),vB=(e=>(e[e.None=0]="None",e[e.InMultiLineCommentTrivia=1]="InMultiLineCommentTrivia",e[e.InSingleQuoteStringLiteral=2]="InSingleQuoteStringLiteral",e[e.InDoubleQuoteStringLiteral=3]="InDoubleQuoteStringLiteral",e[e.InTemplateHeadOrNoSubstitutionTemplate=4]="InTemplateHeadOrNoSubstitutionTemplate",e[e.InTemplateMiddleOrTail=5]="InTemplateMiddleOrTail",e[e.InTemplateSubstitutionPosition=6]="InTemplateSubstitutionPosition",e))(vB||{}),TB=(e=>(e[e.Punctuation=0]="Punctuation",e[e.Keyword=1]="Keyword",e[e.Operator=2]="Operator",e[e.Comment=3]="Comment",e[e.Whitespace=4]="Whitespace",e[e.Identifier=5]="Identifier",e[e.NumberLiteral=6]="NumberLiteral",e[e.BigIntLiteral=7]="BigIntLiteral",e[e.StringLiteral=8]="StringLiteral",e[e.RegExpLiteral=9]="RegExpLiteral",e))(TB||{}),vne=/^\/\/\/\s*</;function SB(e){return e.kind===147?_u(e.expression)?e.expression.text:void 0:Zh(e)}function Sg(e){return e.getText(0,e.getLength())}function JE(e){let n=e.declarations?Fa(e.declarations):void 0;return!!Xn(n,r=>gs(r)?!0:ms(r)||Xy(r)?!1:"quit")}function Sp(e,n,r){return Ml(e.getStart(n),(r||e).getEnd())}function Ik(e){return!!((e.kind===290||e.kind===293)&&(e.parent.kind===269&&e.parent.left===e&&e.parent.operatorToken.kind===74||e.parent.kind===244&&e.parent.initializer===e||Ik(e.parent.kind===174?e.parent.parent:e.parent)))}function zE(e,n,r,s,a){let l=s?Tne(e):VE(e);return a&&(l=sg(l)),!!l&&!!l.parent&&n(l.parent)&&r(l.parent)===l}function Qv(e){return to(e.parent,Ii)?.name===e}function VE(e){return Qv(e)?e.parent:e}function bB(e){return to(e.parent,Ha)?.argumentExpression===e}function Tne(e){return Qv(e)||bB(e)?e.parent:e}function qE(e){return e.expression&&Vs(e.expression)?void 0:e.expression}function kB(e,n=!1,r=!1){return zE(e,op,qE,n,r)}function $E(e){return Tt(e)&&to(e.parent,Qi)?.name===e}function HE(e,n=!1,r=!1){return zE(e,Tg,qE,n,r)}var $4=Sne();function Sne(){let e=Eb*10,n,r,s,a;h();let l=v=>d(v,17);return{displayParts:()=>{let v=n.length&&n[n.length-1].text;return a>e&&v&&v!=="..."&&(Bu(v.charCodeAt(v.length-1))||n.push(Qo(" ",16)),n.push(Qo("...",15))),n},writeKeyword:v=>d(v,5),writeOperator:v=>d(v,12),writePunctuation:v=>d(v,15),writeTrailingSemicolon:v=>d(v,15),writeSpace:v=>d(v,16),writeStringLiteral:v=>d(v,8),writeParameter:v=>d(v,13),writeProperty:v=>d(v,14),writeLiteral:v=>d(v,8),writeSymbol:_,writeLine:y,write:l,writeComment:l,getText:()=>"",getTextPos:()=>0,getColumn:()=>0,getLine:()=>0,isAtStartOfLine:()=>!1,hasTrailingWhitespace:()=>!1,hasTrailingComment:()=>!1,rawWrite:Xp,getIndent:()=>s,increaseIndent:()=>{s++},decreaseIndent:()=>{s--},clear:h};function u(){if(!(a>e)&&r){let v=ek(s);v&&(a+=v.length,n.push(Qo(v,16))),r=!1}}function d(v,b){a>e||(u(),a+=v.length,n.push(Qo(v,b)))}function _(v,b){a>e||(u(),a+=v.length,n.push(bne(v,b)))}function y(){a>e||(a+=1,n.push(l0()),r=!0)}function h(){n=[],r=!0,s=0,a=0}}function l0(){return Qo(`
`,6)}function Qo(e,n){return{text:e,kind:Nk[n]}}function Mh(e,n,r,s,a=0){return yf(l=>{e.writeSymbol(n,r,s,a|8,l)})}function bne(e,n){return Qo(e,r(n));function r(s){let a=s.flags;return a&3?JE(s)?13:9:a&4||a&32768||a&65536?14:a&8?19:a&16?20:a&32?1:a&64?4:a&384?2:a&1536?11:a&8192?10:a&262144?18:a&524288||a&2097152?0:17}}function yf(e){try{return e($4),$4.displayParts()}finally{$4.clear()}}function o2(e,n,r,s=0){return yf(a=>{e.writeType(n,r,s|1024|16384,a)})}function u0(e){for(pd(e)&&(e=e.parent.parent);;){if(e=e.parent,!e)return;switch(e.kind){case 176:case 169:case 270:return e}}}var CB=(e=>(e[e.None=0]="None",e[e.Value=1]="Value",e[e.Type=2]="Type",e[e.Namespace=4]="Namespace",e[e.All=7]="All",e))(CB||{});function Do(){return Qo(" ",16)}function ly(e){return Qo(Mi(e),5)}function Ga(e){return Qo(Mi(e),15)}function PB(e){return Qo(Mi(e),12)}function xB(e){return Qo(e,13)}function DB(e){return Qo(e,14)}function fx(e){let n=hg(e);return n===void 0?oc(e):ly(n)}function oc(e){return Qo(e,17)}function a2(e){return!!(vD(e)&65536)}function Ak(e,n=0){let r=[],s=hp(e)?vD(e)&~n:0;return s&2&&r.push("private"),s&4&&r.push("protected"),s&1&&r.push("public"),s&2048&&r.push("export"),s&65536&&r.push("deprecated"),e.flags&33554432&&r.push("declare"),r.length>0?r.join(","):""}function EB(e,n,r,s=0){return s|=25632,yf(a=>{e.writeSignature(n,r,s,void 0,a)})}function wB(e,n,r,s=0){s|=25632;let a=e.getReturnTypeOfSignature(n);return yf(l=>{e.writeType(a,r,s,l)})}function GE(e){return NB(e,!1)}function NB(e,n){let{parent:r}=e;if(S_(e)&&n?uk(r)&&ki(r.modifiers,e):e.kind===133?Ky(r)||Sk(e):e.kind===138&&(Yc(r)||Zc(e))){let s=Lne(r,n);if(s)return s}if(!n){if(e.kind===145&&Tg(r)&&r.expression)return sg(r.expression);if(e.kind===103&&Ur(r)&&r.operatorToken===e)return sg(r.right)}return e}function c2(e){switch(e.kind){case 237:return 1;case 149:case 266:case 152:case 174:case 175:case 169:case 270:case 283:case 255:return 1;case 148:case 163:return 2;case 225:return e.name===void 0?3:2;case 176:return 5}return 7}function ov(e){e=GE(e);let n=e.parent;return e.kind===176?1:Ru(e)?c2(n):ru(n)?(w.assert(Ll(n.parent)),2):dp(n)?3:1}function QE(e,n){return VD(e,n.getScriptKind&&n.getScriptKind(e))}function l2(e,n,r){let{fileName:s,textSpan:a}=e,l=f0({fileName:s,pos:a.start},n,r);if(!l)return;let u=f0({fileName:s,pos:a.start+a.length},n,r),d=u?u.pos-l.pos:a.length;return{fileName:l.fileName,textSpan:{start:l.pos,length:d},originalFileName:e.fileName,originalTextSpan:e.textSpan,contextSpan:YE(e,n,r),originalContextSpan:e.contextSpan}}function f0(e,n,r){let s=n.tryGetSourcePosition(e);return s&&(!r||r(di(s.fileName))?s:void 0)}function YE(e,n,r){let s=e.contextSpan&&f0({fileName:e.fileName,pos:e.contextSpan.start},n,r),a=e.contextSpan&&f0({fileName:e.fileName,pos:e.contextSpan.start+e.contextSpan.length},n,r);return s&&a?{start:s.pos,length:a.pos-s.pos}:void 0}function av(e){switch(e.kind){case 176:return"script";case 274:return"class";case 217:case 225:return"type";case 237:return n(e);case 266:return n(e);case 169:case 270:return"function";case 174:let{initializer:r}=e;return Qi(r)?"method":"property";case 152:case 175:return"property";case 150:return"index";case 148:return"type parameter";case 149:return Nu(e,167)?"property":"parameter";case 179:return"define";case 171:return"alias";case 269:let s=Oa(e),{right:a}=e;switch(s){case 7:case 8:case 9:case 0:return"";case 1:case 2:let l=av(a);return l===""?"const":l;case 3:return Zc(a)?"method":"property";case 4:return"property";case 5:return Zc(a)?"method":"property";case 6:return"local class";default:return""}case 89:return"";default:return""}function n(r){return u9(r)?"const":f9(r)?"let":"var"}}function cv(e){return Ml(e.pos,e.end)}var ZE=[97,135,137,92,93,104,99,101,140,94,136,105,96,102];function u2(e){return ki(ZE,e)}function px(e){return Tt(e)&&to(e.parent,z2)?.label===e}function dx(e,n){for(;e;){if(console.log("TODO - getTargetLabel"),e.kind===249&&e.label.text===n)return e.label;e=e.parent}}function IB(e){return Tt(e)&&to(e.parent,gE)?.label===e}function lv(){let e=[];return n=>{let r=Sa(n);return!e[r]&&(e[r]=!0)}}function AB(e,n,r=Ma(n,e)){return!!r&&r.kind===21&&hs(r.parent)}function bg(e,n,r=Ma(n,e)){if(r&&bD(r)){let s=r.getStart(e),a=r.getEnd();if(s<n&&n<a)return!0;if(n===a)return!!r.isUnterminated}return!1}function OB(e,n){return!!e&&!!n&&e.start===n.start&&e.length===n.length}function XE(e,n,r){return(r?gg:gp)(e.fileName,n.fileName)&&OB(e.textSpan,n.textSpan)}function LB(e){return(n,r)=>XE(n,r,e)}function FB(e){return to(e.parent,y0)?.tagName===e}function f2(e,n){if(e.flags&16777216)return;let r=Ok(e,n);if(r)return r;let s=kne(e);return s&&n.getTypeAtLocation(s)}function kne(e){let n;return Xn(e,r=>(Vs(r)&&(n=r),!iu(r.parent)&&!Vs(r.parent)&&!Ev(r.parent))),n}function Ok(e,n,r){let s=Mv(e.parent);switch(s.kind){case 276:return n.getContextualType(s,r);case 269:{let{left:a,operatorToken:l,right:u}=s;return p2(l.kind)?n.getTypeAtLocation(e===u?a:u):n.getContextualType(e,r)}case 299:return KE(s,n);default:return n.getContextualType(e,r)}}function p2(e){switch(e){case 37:case 35:case 38:case 36:return!0;default:return!1}}function KE(e,n){return n.getTypeAtLocation(e.parent.parent.expression)}function RB(e,n){return MB(e,n,!1)}function MB(e,n,r){let s=D0(e,n,void 0);return!!s&&r===vne.test(e.text.substring(s.pos,s.end))}function D0(e,n,r){return Za.getRangeOfEnclosingComment(e,n,void 0,r)}function uv(e,n){return e.pos<n&&n<e.end}function bp(e,n){return jB(e,n,!0,void 0,!1)}function jB(e,n,r,s,a){let l=e,u,d=0;e:for(;;){d++>100&&console.warn("Bailed out of getTokenAtPositionWorker loop");let y=l.getChildren(e),h=Wh(y,n,(v,b)=>b,(v,b)=>{let T=y[v].getEnd();if(T<n)return-1;let E=r?y[v].getFullStart():y[v].getStart(e,!0);return E>n?1:_(y[v],E,T)?y[v-1]&&_(y[v-1])?1:0:s&&E===n&&y[v-1]&&y[v-1].getEnd()===n&&_(y[v-1])?1:-1});if(u)return u;if(h>=0&&y[h]){l=y[h];continue e}return l}function _(y,h,v){if(v??(v=y.getEnd()),v<n||(h??(h=r?y.getFullStart():y.getStart(e,!0)),h>n))return!1;if(n<v||n===v&&(y.kind===1||a))return!0;if(s&&v===n){let b=Ma(n,e,y);if(b&&s(b))return u=b,!0}return!1}}function Lk(e){return NB(e,!0)}function ju(e,n){return Fk(e,n,r=>Qh(r)||ou(r.kind))}function Fk(e,n,r){return jB(e,n,!1,r,!1)}function BB(e){return xv(e)}function WB(e,n){return tv(e)&&!e._children?!1:e.kind===1?!!e.jsDoc:e.getWidth(n)!==0}function _x(e,n,r,s){for(let a=n-1;a>=0;a--){let l=e[a];if(WB(e[a],r))return e[a]}}function Ma(e,n,r,s){return l(r||n);function l(u){if(BB(u)&&u.kind!==1)return u;let d=u.getChildren(n),_=Wh(d,e,(h,v)=>v,(h,v)=>e<d[h].end?!d[h-1]||e>=d[h-1].end?0:1:-1);if(_>=0&&d[_]){let h=d[_];if(e<h.end)if(h.getStart(n,!s)>=e||!WB(h,n)){let T=_x(d,_,n,u.kind);return T?!s&&hD(T)&&T.getChildren(n).length?l(T):mx(T,n):void 0}else return l(h)}let y=_x(d,d.length,n,u.kind);return y&&mx(y,n)}}function mx(e,n){if(BB(e))return e;let r=e.getChildren(n);if(r.length===0)return e;let s=_x(r,r.length,n,e.kind);return s&&mx(s,n)}var UB=(e=>(e[e.Single=0]="Single",e[e.Double=1]="Double",e))(UB||{});function Cne(e,n){return f8(e,n)?1:0}function E0(e,n){return 1}function JB(e){switch(e){case 0:return"'";case 1:return'"';default:return w.assertNever(e)}}function zB(e){return!1}function VB(e){return Gr(e)?vg(ad(e[0]),e.slice(1)):ad(e)}function Rk(e,n){return e.pos<=n&&n<=e.end}function gx(e){return Qo(e,22)}function ub(e){return Qo(e,24)}function qB(e,n){return{text:e,kind:Nk[23],target:{fileName:$n(n).fileName,textSpan:Sp(n)}}}function $B(e,n){let r=e;for(;Pne(r)||D_(r)&&r.links.target;)D_(r)&&r.links.target?r=r.links.target:r=hf(r,n);return r}function Pne(e){return(e.flags&2097152)!==0}function HB(e,n){let r=bM(e)?"link":kM(e)?"linkcode":"linkplain",s=[gx(`{@${r} `)];if(!e.name)e.text&&s.push(ub(e.text));else{let a=n?.getSymbolAtLocation(e.name),l=a&&n?$B(a,n):void 0,u=Dne(e.text),d=wl(e.name)+e.text.slice(0,u),_=xne(e.text.slice(u)),y=l?.valueDeclaration||l?.declarations?.[0];if(y)s.push(qB(d,y)),_&&s.push(ub(_));else{let h=u===0||e.text.charCodeAt(u)===124&&d.charCodeAt(d.length-1)!==32?" ":"";s.push(ub(d+h+_))}}return s.push(gx("}")),s}function xne(e){let n=0;if(e.charCodeAt(n++)===124){for(;n<e.length&&e.charCodeAt(n)===32;)n++;return e.slice(n)}return e}function Dne(e){let n=e.indexOf("://");if(n===0){for(;n<e.length&&e.charCodeAt(n)!==124;)n++;return n}if(e.indexOf("()")===0)return 2;if(e.charAt(0)==="<"){let r=0,s=0;for(;s<e.length;)if(e[s]==="<"&&r++,e[s]===">"&&r--,s++,!r)return s}return 0}function ew(e,n){if(e){for(let r=0;r<e.length;r++)if(e.indexOf(e[r])===r){let s=n(e[r],r);if(s)return s}}}function Il(e,n){let r=Xc(n),s=n.getLineAndCharacterOfPosition(e).line;return r[s]}function GB(e){return Qo(e,0)}function QB(e){return Qo(e,18)}function hx(e,n){return{span:e,newText:n}}function YB(e){return Zf(e.start,e.start+e.length)}function ZB(e,n){for(;Bu(e.charCodeAt(n));)n+=1;return n}function d2({options:e},n){let r=!e.semicolons||e.semicolons==="ignore",s=e.semicolons==="remove"||r&&!XB(n);return{...e,semicolons:s?"remove":"ignore"}}function Yv(e){return e===`
`?1:0}var Ene=`
`;function w0(e,n){return n?.newLineCharacter||e.getNewLine?.()||Ene}function XB(e){let n=0,r=0,s=5;return Ns(e,function a(l){if(Mk(l.kind))l.getLastToken(e)?.kind===26?n++:r++;else if(tw(l.kind)){let u=l.getLastToken(e);if(u?.kind===26)n++;else if(u&&u.kind!==27){let d=$s(e,u.getStart(e)).line,_=$s(e,qm(e,u.end).start).line;d!==_&&r++}}return n+r>=s?!0:Ns(l,a)}),n===0&&r<=1?!0:n/r>1/s}function KB(e,n,r){let s=Xn(n,a=>a.end!==e?"quit":nW(a.kind));return!!s&&wne(s,r)}function tw(e){return e===150||e===153}function eW(e){return e===169}function tW(e){return!1}function Mk(e){return e===242||e===247||e===251||e===250||e===248||e===152||e===172}var nW=$x(tw,eW,tW,Mk);function wne(e,n){let r=e.getLastToken(n);if(r&&r.kind===26)return!1;if(tw(e.kind)){if(r&&r.kind===27)return!1}else if(tW(e.kind)){let d=jo(e.getChildren(n));if(d&&SM(d))return!1}else if(eW(e.kind)){let d=jo(e.getChildren(n));if(d&&Yh(d))return!1}else if(!Mk(e.kind))return!1;if(e.kind===245)return!0;let s=Xn(e,d=>!d.parent),a=mw(e,s,n);if(!a||a.kind===19)return!0;let l=n.getLineAndCharacterOfPosition(e.getEnd()).line,u=n.getLineAndCharacterOfPosition(a.getStart(n)).line;return l!==u}function rW(e,n){for(;n>-1&&Ou(e.charCodeAt(n));)n-=1;return n+1}function iW(e,n){return uv(e,n.pos)&&uv(e,n.end)}function sW(e,n,r){let s=n.length;if(s+r>e.length)return!1;for(let a=0;a<s;a++)if(n.charCodeAt(a)!==e.charCodeAt(a+r))return!1;return!0}function oW(e,n,r){return e.pos<=n&&e.end>=r}function aW(e,n){let r=bp(e,n);return!1}function nw(e,n,r){let s=E0(e,n),a=JSON.stringify(r);return s===0?`'${gf(a).replace(/'/g,()=>"\\'").replace(/\\"/g,'"')}'`:a}function cW(e,n){let r=bp(e,n);return!!Xn(r,Ol)}function rw(e,n){return{fileExists:r=>e.fileExists(r),getCurrentDirectory:()=>n.getCurrentDirectory(),readFile:mo(n,n.readFile),useCaseSensitiveFileNames:mo(n,n.useCaseSensitiveFileNames),getFileIncludeReasons:()=>e.getFileIncludeReasons(),getCommonSourceDirectory:()=>e.getCommonSourceDirectory()}}function jk(e,n){let r=new Set,s=new Set,a=new Set;for(let d of n)if(!hk(d)){let _=ws(d.expression);if(Dv(_))switch(_.kind){case 16:r.add(_.text);break;case 10:s.add(parseInt(_.text));break}else{let y=e.getSymbolAtLocation(d.expression)}}return{addValue:l,hasValue:u};function l(d){switch(typeof d){case"string":r.add(d);break;case"number":s.add(d)}}function u(d){switch(typeof d){case"string":return r.has(d);case"number":return s.has(d)}}}function Nne(e){return!1}function iw(e){lW(e),uW(e)}function lW(e){sw(e,1024,Ine)}function uW(e){sw(e,2048,k9)}function sw(e,n,r){vR(e,n);let s=r(e);s&&sw(s,n,r)}function Ine(e){return e.forEachChild(n=>n)}function Bk(e,n=!0){let r=e&&fW(e);return r&&!n&&iw(r),E_(r,!1)}function fW(e,n){let r=n?l=>ow(l,!0,n):Bk,a=Wm(e,r,void 0,n?l=>l&&pW(l,!0,n):l=>l&&dW(l),r);if(a===e){let l=ss(e)?uf(Ve.createStringLiteralFromNode(e),e):ff(e)?uf(Ve.createIntLiteral(e.text,e.numericLiteralFlags),e):o0(e)?uf(Ve.createFloatLiteral(e.text,e.numericLiteralFlags),e):Ve.cloneNode(e);return Ho(l,e)}return a.parent=void 0,a}function ow(e,n,r){let s=r(e);return s?uf(s,e):s=fW(e,r),s&&!n&&iw(s),s}function pW(e,n,r){return Ve.createNodeArray(e.map(s=>ow(s,n,r)),e.hasTrailingComma)}function dW(e,n=!0){if(e){let r=Ve.createNodeArray(e.map(s=>Bk(s,n)),e.hasTrailingComma);return Ho(r,e),r}return e}function _W(e,n){return{...rw(e,n),getCommonSourceDirectory:()=>e.getCommonSourceDirectory()}}function mW(e){switch(e.kind){case 16:return!0;default:return!1}}function gW(e,n,r){return n<e.end||!yl(e,r)}function MS(e,n,r){let s=e.getChildren(r);if(s.length){let a=jo(s);if(a.kind===n)return!0;if(a.kind===26&&s.length!==1)return s[s.length-2].kind===n}return!1}function yl(e,n){if(e===void 0||Eo(e))return!1;switch(e.kind){case 170:case 293:case 163:case 236:case 240:return MS(e,19,n);case 255:return yl(e.block,n);case 276:if(!e.arguments)return!0;case 272:case 289:case 165:return MS(e,21,n);case 169:case 270:case 154:case 156:case 271:return e.body?yl(e.body,n):e.type?yl(e.type,n):Q1(e,21,n);case 253:return e.elseStatement?yl(e.elseStatement,n):yl(e.thenStatement,n);case 247:return yl(e.expression,n)||Q1(e,26,n);case 290:case 265:case 281:case 147:return MS(e,23,n);case 150:return e.type?yl(e.type,n):Q1(e,23,n);case 299:case 301:return!1;case 243:case 244:case 246:return yl(e.statement,n);case 245:return Q1(e,118,n)?MS(e,21,n):yl(e.statement,n);case 294:return yl(e.expression,n);case 298:return yl(e.operand,n);case 269:return yl(e.right,n);case 267:return yl(e.whenFalse,n);default:return!0}}function Q1(e,n,r){return!!cu(e,n,r)}function aw(e,n){if(e)switch(e.kind){case 16:return cw(e,n);default:return Sp(e)}}function cw(e,n){let r=e.getEnd()-1;if(e.isUnterminated){if(e.getStart()===r)return;r=Math.min(n,e.getEnd())}return Ml(e.getStart()+1,r)}function hW(e,n){if(Ane(e)){let r=yW(e);if(r)return r;let s=vx(yx(e),n,!1),a=vx(yx(e),n,!0);return s===a?s:[s,a]}return e.name}function Ane(e){return!(e.flags&33554432)&&(e.name==="export="||e.name==="default")}function yW(e){return Ya(e.declarations,n=>to(hi(n),Tt)?.text)}function yx(e){return w.checkDefined(e.parent,`Symbol parent was undefined. Flags: ${w.formatSymbolFlags(e.flags)}. Declarations: ${e.declarations?.map(n=>{let r=w.formatSyntaxKind(n.kind),s=!1,{expression:a}=n;return(s?"[JS]":"")+r+(a?` (expression: ${w.formatSyntaxKind(a.kind)})`:"")}).join(", ")}.`)}function vx(e,n,r){return vW(md(gf(e.name)),n,r)}function vW(e,n,r){let s=wc(Jh(e,"/index")),a="",l=!0,u=s.charCodeAt(0);bc(u,n)?(a+=String.fromCharCode(u),r&&(a=a.toUpperCase())):l=!1;for(let d=1;d<s.length;d++){let _=s.charCodeAt(d),y=Kl(_,n);if(y){let h=String.fromCharCode(_);l||(h=h.toUpperCase()),a+=h}l=y}return D9(a)?`_${a}`:a||"_"}function One(e,n){return MB(e,n,!0)}function TW(e,n){if(n.text.lastIndexOf("<",e?e.pos:n.text.length)===-1)return;let r=e,s=0,a=0,l=0;for(;r;){if(l++>100){console.warn("Bailed out of matching token serach");break}switch(r.kind){case 29:if(r=Ma(r.getFullStart(),n),r&&r.kind===28&&(r=Ma(r.getFullStart(),n)),!r||!Tt(r))return;if(!s)return Ru(r)?void 0:{called:r,nTypeArguments:a};s--;break;case 51:s=3;break;case 50:s=2;break;case 32:s++;break;case 19:if(r=fb(r,17,n),!r)return;break;case 21:if(r=fb(r,20,n),!r)return;break;case 23:if(r=fb(r,22,n),!r)return;break;case 27:a++;break;case 39:case 89:case 16:case 10:case 11:case 13:case 136:case 135:case 24:case 53:case 60:case 61:break;default:if(Vs(r))break;return}r=Ma(r.getFullStart(),n)}}function fb(e,n,r){let s=Mi(e.kind),a=Mi(n),l=e.getFullStart(),u=r.text.lastIndexOf(a,l);if(u===-1)return;if(r.text.lastIndexOf(s,l-1)<u){let h=Ma(u+1,r);if(h&&h.kind===n)return h}let d=e.kind,_=0,y=0;for(;;){let h=Ma(e.getFullStart(),r);if(!h)return;if(e=h,e.kind===n){if(_===0)return e;_--}else e.kind===d&&_++;if(y++>100){console.warn("bailed out of matching token search");break}}}function SW(e){return!!e.getStringIndexType()||!!e.getNumberIndexType()}function bW(e){return e.isTypeParameter()&&e.getConstraint()||e}function kW(e,n=!1,r=!1){return zE(e,hs,qE,n,r)}function Lne(e,n){if(!n)switch(e.kind){case 170:case 274:return Fne(e);case 169:case 270:return Rne(e)}if(El(e))return e.name}function Fne(e){if(El(e))return e.name;if(Ky(e),Sk(e)){let n=Zr(e.getChildren(),jne);if(n)return n}}function Rne(e){if(El(e))return e.name;if(Yc(e),Zc(e)){let n=Zr(e.getChildren(),Mne);if(n)return n}}function Mne(e){return e.kind===138}function jne(e){return e.kind===133}function CW(e,n){let r=bp(e,n);return xv(r)&&n>r.getStart(e)&&n<r.getEnd()?r:Ma(n,e)}function PW(e,n,r){let s=r.getTypeAtLocation(e);return(Tg(e.parent)?s.getConstructSignatures():s.getCallSignatures()).filter(l=>!!l.typeParameters&&l.typeParameters.length>=n)}var lw=(e=>(e[e.Named=0]="Named",e[e.Default=1]="Default",e[e.ExportEquals=2]="ExportEquals",e))(lw||{}),xW=(e=>(e[e.Import=0]="Import",e[e.Export=1]="Export",e))(xW||{});function DW(e,n,r){let s=[],a=e.getTypeChecker();for(let l of n){let u=r.valueDeclaration;if(u?.kind===176){for(let d of l.referencedFiles)e.getSourceFileFromReference(l,d)===u&&s.push({kind:"reference",referencingFile:l,ref:d});for(let d of l.typeReferenceDirectives){let _=e.getResolvedTypeReferenceDirectiveFromTypeReferenceDirective(d,l)?.resolvedTypeReferenceDirective;_!==void 0&&_.resolvedFileName===u.fileName&&s.push({kind:"reference",referencingFile:l,ref:d})}}EW(l,(d,_)=>{a.getSymbolAtLocation(_)===r&&s.push(qi(d)?{kind:"implicit",literal:_,referencingFile:l}:{kind:"import",literal:_})})}return s}function EW(e,n){Bne(e,r=>{switch(r.kind){case 252:let s=r;s.inheritClause&&ss(s.inheritClause)&&n(s,s.inheritClause);break}})}function Bne(e,n){return Jt(e.kind===176?e.statements:[],r=>n(r))}function Tx(e,n,r,s){let a=Wne(e,r,s);return(l,u,d)=>{let{directImports:_,indirectUsers:y}=Une(e,n,a,u,r,s);return{indirectUsers:y,...Jne(_,l,u.exportKind,r,d)}}}function Wne(e,n,r){let s=new Map;for(let a of e)r&&r.throwIfCancellationRequested(),EW(a,(l,u)=>{let d=n.getSymbolAtLocation(u);if(d){let _=Yi(d).toString(),y=s.get(_);y||s.set(_,y=[]),y.push(l)}});return s}function Une(e,n,r,{exportingModuleSymbol:s,exportKind:a},l,u){let d=lv(),_=lv(),y=[],h=!!s.globalExports,v=h?void 0:[];return E(s),{directImports:y,indirectUsers:b()};function b(){if(h)return e;if(s.declarations)for(let X of s.declarations);return v.map($n)}function T(X){let j=X.getSourceFile();N(j,!!M(X,!0))}function E(X){let j=z(X);if(j){for(let Z of j)if(d(Z))switch(u&&u.throwIfCancellationRequested(),Z.kind){case 273:T(Z);break;case 272:if(!h){let le=Z.parent;if(a===2&&le.kind===237){let{name:de}=le;if(de.kind===89){y.push(de);break}}}break;case 89:break;case 252:g(Z);break;default:w.failBadSyntaxKind(Z,"Unexpected import kind.")}}}function g(X){let j=X.getSourceFile();N(j,!!M(X,!0))}function M(X,j=!1){return!1}function N(X,j=!1){if(w.assert(!h),!_(X)||(v.push(X),!j))return;let le=l.getMergedSymbol(X.symbol);if(!le)return;w.assert(!!(le.flags&1536));let de=z(le);if(de)for(let se of de)N(zne(se),!0)}function z(X){return r.get(Yi(X).toString())}}function Jne(e,n,r,s,a){let l=[],u=[];function d(v,b){l.push([v,b])}if(e)for(let v of e)_(v);return{importSearches:l,singleReferences:u};function _(v){if(v.kind,v.kind===89){y(v);return}let{name:b,namedBindings:T}={name:void 0,namedBindings:void 0};if(b&&(r===1||r===2)&&(!a||b.escapedText===n)){let E=s.getSymbolAtLocation(b);d(b,E)}}function y(v){r===2&&(!a||h(v.text))&&d(v,s.getSymbolAtLocation(v))}function h(v){return v===n.name||r!==0&&v==="default"}}function zne(e){if(e.kind===272)return e.getSourceFile();let{parent:n}=e;if(n.kind===176)return n;w.fail("Expected SourceFile parent for import declaration.")}function Vne(e,n,r,s){console.log("todo - getImportOrExportSymbol")}var wW=(e=>(e[e.Named=0]="Named",e[e.Default=1]="Default",e[e.Namespace=2]="Namespace",e[e.CommonJS=3]="CommonJS",e))(wW||{});function NW(e,n,r,s,a){let l=Zi();n.getPackageJsonAutoImportProvider?.();let u=n.getCachedExportInfoMap?.()||uw({getCurrentProgram:()=>r,getPackageJsonAutoImportProvider:()=>n.getPackageJsonAutoImportProvider?.(),getGlobalTypingsCacheLocation:()=>n.getGlobalTypingsCacheLocation?.()});if(u.isUsableByFile(e.path))return n.log?.("getExportInfoMap: cache hit"),u;n.log?.("getExportInfoMap: cache miss or empty; calculating new results");let d=0;try{IW(r,n,s,!0,(_,y,h,v)=>{++d%100===0&&a?.throwIfCancellationRequested();let b=new Map,T=h.getTypeChecker(),E=AW(_,T);E&&qne(E.symbol,T)&&u.add(e.path,E.symbol,E.exportKind===1?"default":"export=",_,y,E.exportKind,v,T)})}catch(_){throw u.clear(),_}return n.log?.(`getExportInfoMap: done in ${Zi()-l} ms`),u}function IW(e,n,r,s,a){let l=jy(n),u=r.autoImportFileExcludePatterns&&Vi(r.autoImportFileExcludePatterns,_=>{let y=tk(_,"","exclude");return y?Gm(y,l):void 0});ZA(e.getTypeChecker(),e.getSourceFiles(),u,n,(_,y)=>a(_,y,e,!1));let d=s&&n.getPackageJsonAutoImportProvider?.();if(d){let _=Zi(),y=e.getTypeChecker();ZA(d.getTypeChecker(),d.getSourceFiles(),u,n,(h,v)=>{(v&&!e.getSourceFile(v.fileName)||!v&&!y.resolveName(h.name,void 0,1536,!1))&&a(h,v,d,!0)}),n.log?.(`forEachExternalModuleToImportFrom autoImportProvider: ${Zi()-_}`)}}function ZA(e,n,r,s,a){for(let l of n);}function uw(e){let n=1,r=Rl(),s=new Map,a=new Map,l,u={isUsableByFile:T=>T===l,isEmpty:()=>!r.size,clear:()=>{r.clear(),s.clear(),l=void 0},add:(T,E,g,M,N,z,X,j)=>{T!==l&&(u.clear(),l=T);let Z,de=z===1&&G2(E)||E,se=hW(de,void 0),ye=typeof se=="string"?se:se[0],he=typeof se=="string"?void 0:se[1],oe=gf(M.name),ie=n++,Y=hf(E,j),_e=E.flags&33554432?void 0:E,G=M.flags&33554432?void 0:M;(!_e||!G)&&s.set(ie,[E,M]),r.add(_(ye,E,df(oe)?void 0:oe,j),{id:ie,symbolTableKey:g,symbolName:ye,capitalizedSymbolName:he,moduleName:oe,moduleFile:N,moduleFileName:N?.fileName,packageName:Z,exportKind:z,targetFlags:Y.flags,isFromPackageJson:X,symbol:_e,moduleSymbol:G})},get:(T,E)=>T!==l?void 0:r.get(E)?.map(d),search:(T,E,g,M)=>{if(T===l)return Qc(r,(N,z)=>{let{symbolName:X,ambientModuleName:j}=y(z),Z=E&&N[0].capitalizedSymbolName||X;if(g(Z,N[0].targetFlags)){let de=N.map(d).filter((se,ye)=>b(se,N[ye].packageName));if(de.length){let se=M(de,Z,!!j,z);if(se!==void 0)return se}}})},releaseSymbols:()=>{s.clear()},onFileChanged:(T,E,g)=>h(T)&&h(E)?!1:l&&l!==E.path||!v(T,E)?(u.clear(),!0):(l=E.path,!1)};return w.isDebugging&&Object.defineProperty(u,"__cache",{value:r}),u;function d(T){if(T.symbol&&T.moduleSymbol)return T;let{id:E,exportKind:g,targetFlags:M,isFromPackageJson:N,moduleFileName:z}=T,[X,j]=s.get(E)||Oe;if(X&&j)return{symbol:X,moduleSymbol:j,moduleFileName:z,exportKind:g,targetFlags:M,isFromPackageJson:N};let Z=(N?e.getPackageJsonAutoImportProvider():e.getCurrentProgram()).getTypeChecker(),le=T.moduleSymbol||j||w.checkDefined(T.moduleFile?Z.getMergedSymbol(T.moduleFile.symbol):void 0),de=T.symbol||X||w.checkDefined(g===2?Z.resolveExternalModuleSymbol(le):(void 0)`Could not find symbol '${T.symbolName}' by key '${T.symbolTableKey}' in module ${le.name}`);return s.set(E,[de,le]),{symbol:de,moduleSymbol:le,moduleFileName:z,exportKind:g,targetFlags:M,isFromPackageJson:N}}function _(T,E,g,M){let N=g||"";return`${T.length} ${Yi(hf(E,M))} ${T} ${N}`}function y(T){let E=T.indexOf(" "),g=T.indexOf(" ",E+1),M=parseInt(T.substring(0,E),10),N=T.substring(g+1),z=N.substring(0,M),X=N.substring(M+1);return{symbolName:z,ambientModuleName:X===""?void 0:X}}function h(T){return!1}function v(T,E){if(!eu(T.ambientModuleNames,E.ambientModuleNames))return!1;let g=-1,M=-1;return!0}function b(T,E){if(!E||!T.moduleFileName)return!0;let g=e.getGlobalTypingsCacheLocation();if(g&&no(T.moduleFileName,g))return!0;let M=a.get(E);return!M||no(T.moduleFileName,M)}}function AW(e,n){let r=n.resolveExternalModuleSymbol(e);if(r!==e)return{symbol:r,exportKind:2}}function qne(e,n){return!n.isUndefinedSymbol(e)&&!n.isUnknownSymbol(e)&&!Fh(e)}function Y1(e){return!!e.sourceFile}function OW(e,n,r){return fw(e,n,r)}function fw(e,n="",r,s){let a=new Map,l=ca(!!e);function u(){let M=as(a.keys()).filter(N=>N&&N.charAt(0)==="_").map(N=>{let z=a.get(N),X=[];return z.forEach((j,Z)=>{Y1(j)?X.push({name:Z,scriptKind:j.sourceFile.scriptKind,refCount:j.languageServiceRefCount}):j.forEach((le,de)=>X.push({name:Z,scriptKind:de,refCount:le.languageServiceRefCount}))}),X.sort((j,Z)=>Z.refCount-j.refCount),{bucket:N,sourceFiles:X}});return JSON.stringify(M,void 0,2)}function d(M){return M&&typeof M.getCompilationSettings=="function"?M.getCompilationSettings():M}function _(M,N,z,X,j,Z){let le=Ra(M,n,l),de=jS(d(N));return y(M,le,N,de,z,X,j,Z)}function y(M,N,z,X,j,Z,le,de){return T(M,N,z,X,j,Z,!0,le,de)}function h(M,N,z,X,j,Z){let le=Ra(M,n,l),de=jS(d(N));return v(M,le,N,de,z,X,j,Z)}function v(M,N,z,X,j,Z,le,de){return T(M,N,d(z),X,j,Z,!1,le,de)}function b(M,N){let z=Y1(M)?M:M.get(w.checkDefined(N,"If there are more than one scriptKind's for same document the scriptKind should be provided"));return w.assert(N===void 0||!z||z.sourceFile.scriptKind===N,`Script kind should match provided ScriptKind:${N} and sourceFile.scriptKind: ${z?.sourceFile.scriptKind}, !entry: ${!z}`),z}function T(M,N,z,X,j,Z,le,de,se){de=VD(M,de);let ye=d(z),he=z===ye?void 0:z,oe=1,ie=ye?.driverType,Y=typeof se=="object"?se:{languageVersion:oe,impliedNodeFormat:1,setExternalModuleIndicator:()=>!0,jsDocParsingMode:r,globalIncludes:ye?.globalIncludeFiles??Oe,fileHandler:Jv({readFile:he.readFile,getCurrentDirectory:he.getCurrentDirectory,getIncludeDirs:()=>ye?.libIncludeDirs??Oe,fileExists:he.fileExists,getCompilerOptions:()=>ye})};Y.languageVersion=oe,w.assertEqual(r,Y.jsDocParsingMode);let _e=a.size,G=H4(X,Y.impliedNodeFormat),ke=gy(a,G,()=>new Map);if(Dt){a.size>_e&&Dt.instant(Dt.Phase.Session,"createdDocumentRegistryBucket",{configFilePath:ye.configFilePath,key:G});let qt=!i0(N)&&Qc(a,(fe,pt)=>pt!==G&&fe.has(N)&&pt);qt&&Dt.instant(Dt.Phase.Session,"documentRegistryBucketOverlap",{path:N,key1:qt,key2:G})}let re=ke.get(N),be=re&&b(re,de);if(!be&&s){let qt=s.getDocument(G,N);qt&&qt.scriptKind===de&&qt.text===Sg(j)&&(w.assert(le),be={sourceFile:qt,languageServiceRefCount:0},rt())}if(be)be.sourceFile.version!==Z&&(be.sourceFile=dw(be.sourceFile,Y.globalIncludes,Y.configDefines,Y.fileHandler,j,Z,j.getChangeRange(be.sourceFile.scriptSnapshot),ie,Y.reportParsedDefines),s&&s.setDocument(G,N,be.sourceFile)),le&&be.languageServiceRefCount++;else{let qt=Wk(M,j,Y,Z,!1,ie,de);s&&s.setDocument(G,N,qt),be={sourceFile:qt,languageServiceRefCount:1},rt()}return w.assert(be.languageServiceRefCount!==0),be.sourceFile;function rt(){if(!re)ke.set(N,be);else if(Y1(re)){let qt=new Map;qt.set(re.sourceFile.scriptKind,re),qt.set(de,be),ke.set(N,qt)}else re.set(de,be)}}function E(M,N,z,X){let j=Ra(M,n,l),Z=jS(N);return g(j,Z,z,X)}function g(M,N,z,X=1){let j=w.checkDefined(a.get(H4(N,X))),Z=j.get(M),le=b(Z,z);le.languageServiceRefCount--,w.assert(le.languageServiceRefCount>=0),le.languageServiceRefCount===0&&(Y1(Z)?j.delete(M):(Z.delete(z),Z.size===1&&j.set(M,hb(Z.values(),Gi))))}return{acquireDocument:_,acquireDocumentWithKey:y,updateDocument:h,updateDocumentWithKey:v,releaseDocument:E,releaseDocumentWithKey:g,getKeyForCompilationSettings:jS,getDocumentRegistryBucketKeyWithMode:H4,reportStats:u,getBuckets:()=>a}}function jS(e){return"default"}function H4(e,n){return e}var $ne=/^data:(?:application\/json(?:;charset=[uU][tT][fF]-8);base64,([A-Za-z0-9+/=]+)$)?/;function LW(e){let n=ca(e.useCaseSensitiveFileNames()),r=e.getCurrentDirectory(),s=new Map,a=new Map;return{tryGetSourcePosition:d,tryGetGeneratedPosition:_,toLineColumnOffset:b,clearCache:T,documentPositionMappers:a};function l(E){return Ra(E,r,n)}function u(E,g){let M=l(E),N=a.get(M);if(N)return N;let z;if(e.getDocumentPositionMapper)z=e.getDocumentPositionMapper(E,g);else if(e.readFile){let X=v(E);z=X&&FW({getSourceFileLike:v,getCanonicalFileName:n,log:j=>e.log(j)},E,xE(X.text,Xc(X)),j=>!e.fileExists||e.fileExists(j)?e.readFile(j):void 0)}return a.set(M,z||rx),z||rx}function d(E){if(!E.fileName||!i0(E.fileName)||!y(E.fileName))return;let M=u(E.fileName).getSourcePosition(E);return!M||M===E?void 0:d(M)||M}function _(E){if(i0(E.fileName))return;let g=y(E.fileName);if(!g)return;let M=e.getProgram();if(M.isSourceOfProjectReferenceRedirect(g.fileName))return;let z=M.getCompilerOptions().outFile,X=z?md(z)+".h":o9(E.fileName,M.getCompilerOptions(),M);if(X===void 0)return;let j=u(X,E.fileName).getGeneratedPosition(E);return j===E?void 0:j}function y(E){let g=e.getProgram();if(!g)return;let M=l(E),N=g.getSourceFileByPath(M);return N&&N.resolvedPath===M?N:void 0}function h(E){let g=l(E),M=s.get(g);if(M!==void 0)return M||void 0;if(!e.readFile||e.fileExists&&!e.fileExists(E)){s.set(g,!1);return}let N=e.readFile(E),z=N?Hne(N):!1;return s.set(g,z),z||void 0}function v(E){return e.getSourceFileLike?e.getSourceFileLike(E):y(E)||h(E)}function b(E,g){return v(E).getLineAndCharacterOfPosition(g)}function T(){s.clear(),a.clear()}}function FW(e,n,r,s){let a=rj(r);if(a){let d=$ne.exec(a);if(d){if(d[1]){let _=d[1];return XA(e,s9(Ms,_),n)}a=void 0}}let l=[];a&&l.push(a),l.push(n+".map");let u=a&&Wi(a,li(n));for(let d of l){let _=Wi(d,li(n)),y=s(_,u);if(Li(y))return XA(e,y,_);if(y!==void 0)return y||void 0}}function XA(e,n,r){let s=sj(n);if(!(!s||!s.sources||!s.file||!s.mappings)&&!(s.sourcesContent&&s.sourcesContent.some(Li)))return aj(e,s,r)}function Hne(e,n){return{text:e,fileName:void 0,lineMap:n,getLineAndCharacterOfPosition(r){return m0(Xc(this),r)}}}function Gne(e,n,r,s){return{spans:Qne(e,r,s,n),endOfLineState:0}}function Qne(e,n,r,s){let a=[],l=(u,d,_)=>{a.push(u.getStart(n),u.getWidth(n),(d+1<<8)+_)};if(e&&n){Yne(e,n,r,l,s);for(let u of n.inactiveCodeRanges)PD(r,u.pos,u.end-u.pos)&&a.push(u.pos,u.end-u.pos,3328)}return a}function Yne(e,n,r,s,a){let l=e.getTypeChecker();l.runWithCurrentFile(n,()=>{d(n)});function u(_){return ti(_)||!Lv(_)}function d(_){switch(_.kind){case 170:case 169:case 274:case 270:case 271:a.throwIfCancellationRequested()}if(!(!_||!u(_)||!PD(r,_.pos,_.getFullWidth())||_.getFullWidth()===0)){if(Tt(_)&&!ere(_)&&!T8(_.text)){let y=l.getSymbolAtLocation(_);if(y){y.flags&2097152&&(y=l.getAliasedSymbol(y));let h=Zne(y,ov(_));if(h!==void 0){let v=0;_.parent&&(ms(_.parent)||jW.get(_.parent.kind)===h)&&_.parent.name===_&&(v=1),h===6&&MW(_)&&(h=9),h=Xne(l,_,h);let b=y.valueDeclaration;if(b){let T=Pv(b),E=ig(b);T&256&&(v|=2),h!==0&&h!==2&&(T&8192||y.getFlags()&8)&&(v|=8),(h===7||h===10)&&Kne(b,n)&&(v|=32),e.isSourceFileDefaultLibrary(b.getSourceFile())&&(v|=16)}else y.declarations&&y.declarations.some(T=>e.isSourceFileDefaultLibrary(T.getSourceFile()))&&(v|=16);s(_,h,v)}}}Ns(_,d)}}}function Zne(e,n){let r=e.getFlags();if(r&32)return 0;if(r&384)return 1;if(r&524288)return 5;if(r&64){if(n&2)return 2}else if(r&262144)return 4;let s=e.valueDeclaration||e.declarations&&e.declarations[0];return s&&ms(s)&&(s=RW(s)),s&&jW.get(s.kind)}function Xne(e,n,r){if(r===7||r===9||r===6){let s=e.getTypeAtLocation(n);if(s){let a=l=>l(s)||s.isUnion()&&s.types.some(l);if(r!==6&&a(l=>l.getConstructSignatures().length>0))return 0;if(a(l=>l.getCallSignatures().length>0)&&!a(l=>l.getProperties().length>0)||tre(n))return r===9?11:10}}return r}function Kne(e,n){return ms(e)&&(e=RW(e)),Cs(e)?!ti(e.parent.parent.parent):Yc(e)?!ti(e.parent)&&e.getSourceFile()===n:!1}function RW(e){for(;;)if(ms(e.parent.parent))e=e.parent.parent;else return e.parent.parent}function ere(e){return!1}function tre(e){for(;MW(e);)e=e.parent;return hs(e.parent)&&e.parent.expression===e}function MW(e){return iu(e.parent)&&e.parent.right===e||Ii(e.parent)&&e.parent.name===e}var jW=new Map([[237,7],[149,6],[152,9],[170,0],[154,11],[169,10],[270,10],[156,11],[153,9],[239,5],[148,4],[174,9],[175,9]]),nre=new Map;function rre(e,n,r){n.getSemanticDiagnostics(e,r);let s=[],a=n.getTypeChecker();return nre.clear(),l(e),Is(s,e.bindSuggestionDiagnostics),Is(s,n.getSuggestionDiagnostics(e,r)),s.sort((u,d)=>u.start-d.start);function l(u){ire(u)&&void 0,u.forEachChild(l)}}function ire(e){switch(e.kind){case 169:case 154:case 270:case 271:return!0;default:return!1}}var bl=Cv(1,!0,!0);function sre(){return{getNodeConstructor:()=>pw,getTokenConstructor:()=>UW,getIdentifierConstructor:()=>WW,getSourceFileConstructor:()=>are,getSymbolConstructor:()=>lre,getTypeConstructor:()=>ure,getSignatureConstructor:()=>fre}}var BW=class{constructor(e,n,r){this.pos=n,this.end=r,this.kind=e,this.id=0,this.flags=0,this.transformFlags=0,this.parent=void 0,this.emitNode=void 0}getSourceFile(){return $n(this)}getStart(e,n){return og(this,e,n)}getFullStart(){return this.pos}getEnd(){return this.end}getWidth(e){return this.getEnd()-this.getStart(e)}getFullWidth(){return this.end-this.pos}getLeadingTriviaWidth(e){return this.getStart(e)-this.pos}getFullText(e){return(e||this.getSourceFile()).text.substring(this.pos,this.end)}getText(e){return e||(e=this.getSourceFile(),w.assertIsDefined(e)),e.text.substring(this.getStart(e),this.getEnd())}getChildCount(){return this.getChildren().length}getChildAt(e){return this.getChildren()[e]}getChildren(){return this.kind===1&&this.jsDoc||Oe}getFirstToken(){}getLastToken(){}forEachChild(){}},WW=class extends BW{constructor(e,n,r){super(e,n,r)}},UW=class extends BW{constructor(e,n,r){super(e,n,r)}};function JW(e,n,r,s){let a=J2(e)?new pw(e,n,r):e===89?new WW(89,n,r):new UW(e,n,r);return a.parent=s,a.flags=s.flags&34332768,a}var pw=class{constructor(e,n,r){this.pos=n,this.end=r,this.kind=e,this.id=0,this.flags=0,this.modifierFlagsCache=0,this.transformFlags=0,this.parent=void 0,this.original=void 0,this.emitNode=void 0}assertHasRealPosition(e){w.assert(!La(this.pos)&&!La(this.end),e||"Node must have a real position for this operation")}getSourceFile(){return $n(this)}getStart(e,n){return this.assertHasRealPosition(),og(this,e,n)}getFullStart(){return this.assertHasRealPosition(),this.pos}getEnd(){return this.assertHasRealPosition(),this.end}getWidth(e){return this.assertHasRealPosition(),this.getEnd()-this.getStart(e)}getFullWidth(){return this.assertHasRealPosition(),this.end-this.pos}getLeadingTriviaWidth(e){return this.assertHasRealPosition(),this.getStart(e)-this.pos}getFullText(e){return this.assertHasRealPosition(),(e||this.getSourceFile()).text.substring(this.pos,this.end)}getText(e){return this.assertHasRealPosition(),e||(e=this.getSourceFile()),e.text.substring(this.getStart(e),this.getEnd())}getChildCount(e){return this.getChildren(e).length}getChildAt(e,n){return this.getChildren(n)[e]}getChildren(e=$n(this)){return this.assertHasRealPosition("Node without a real position cannot be scanned and thus has no token nodes - use forEachChild and collect the result if that's fine"),U8(this,e)??hR(this,e,ore(this,e))}getFirstToken(e){this.assertHasRealPosition();let n=this.getChildren(e);if(!n.length)return;let r=Zr(n,s=>s.kind<188||s.kind>231);return r.kind<146?r:r.getFirstToken(e)}getLastToken(e){this.assertHasRealPosition();let n=this.getChildren(e),r=wo(n);if(r)return r.kind<146?r:r.getLastToken(e)}forEachChild(e,n){return Ns(this,e,n)}};function ore(e,n){let r=[];if(hD(e))return e.forEachChild(u=>{r.push(u)}),r;bl.setText((n||e.getSourceFile()).text);let s=e.pos;w.assertIsDefined(s);let a=u=>{uy(r,s,u.pos,e,n.inactiveCodeRanges),r.push(u),s=u.end,w.assertIsDefined(s)},l=u=>{uy(r,s,u.pos,e,n.inactiveCodeRanges),ER(r,cre(u,e,n.inactiveCodeRanges)),s=u.end??0,w.assertIsDefined(s)};return Jt(e.jsDoc,a),s=e.pos,e.forEachChild(a,l),s>=0&&uy(r,s,e.end,e,n.inactiveCodeRanges),bl.setText(void 0),r}var are=class extends pw{constructor(e,n,r){super(e,n,r)}update(e,n){w.fail("not implemented")}getLineAndCharacterOfPosition(e){return $s(this,e)}getLineStarts(){return Xc(this)}getPositionOfLineAndCharacter(e,n,r){return M2(Xc(this),e,n,this.text,r)}getLineEndOfPosition(e){let{line:n}=this.getLineAndCharacterOfPosition(e),r=this.getLineStarts(),s;n+1>=r.length&&(s=this.getEnd()),s||(s=r[n+1]-1);let a=this.getFullText();return a[s]===`
`&&a[s-1]==="\r"?s-1:s}getNamedDeclarations(){return this.namedDeclarations||(this.namedDeclarations=this.computeNamedDeclarations()),this.namedDeclarations}computeNamedDeclarations(){let e=Rl();return this.forEachChild(a),e;function n(l){let u=s(l);u&&e.add(u,l)}function r(l){let u=e.get(l);return u||e.set(l,u=[]),u}function s(l){let u=B2(l);return u&&(Ia(u)&&Ii(u.expression)?u.expression.name.text:h0(u)?SB(u):void 0)}function a(l){switch(l.kind){case 169:case 270:let u=l,d=s(u);if(d){let _=r(d),y=wo(_);y&&u.parent===y.parent&&u.symbol===y.symbol?u.body&&!y.body&&(_[_.length-1]=u):_.push(u)}Ns(l,a);break;case 274:case 163:n(l),Ns(l,a);break;case 149:if(!Nu(l,167))break;case 237:case 266:{let _=l;if(ds(_.name)){Ns(_.name,a);break}_.initializer&&a(_.initializer)}case 152:n(l);break;case 269:Oa(l)!==0&&n(l);default:Ns(l,a)}}}};function uy(e,n,r,s,a){let l=0;for(;l<a.length-1&&a[l].end<n;)l++;for(a.length==0&&(l=-1),bl.resetTokenState(n,!0);n<r;){let u=bl.scan(),d=bl.getTokenEnd();if(u===179){for(u=bl.scan();u!==1&&u!==4;)u=bl.scan();n=bl.getTokenEnd();continue}if(s0(s)&&n>=s.range?.pos){n=s.range.end;continue}if(u===178?(u=bl.scan(),u===29&&(u=bl.reScanLessThanTokenAsStringLiteral()),d=bl.getTokenEnd()):u===29&&zv(s)&&(u=bl.reScanLessThanTokenAsStringLiteral(),d=bl.getTokenEnd()),d<=r){for(;l>=0&&a[l].end<d&&l<a.length-1;)l++;if(l>=0&&d>=a[l].pos&&d<=a[l].end){if(u===1)break;continue}if(u===89){if(O9(s))continue;console.warn(`Did not expect ${w.formatSyntaxKind(s.kind)} to have an Identifier in its trivia`);break}e.push(JW(u,n,d,s))}if(n=d,u===1)break}}function cre(e,n,r){let s=JW(232,e.pos,e.end,n),a=[],l=e.pos;for(let u of e)uy(a,l,u.pos,n,r),a.push(u),l=u.end;return uy(a,l,e.end,n,r),s._children=a,s}var lre=class{constructor(e,n){this.flags=e,this.name=n,this.declarations=void 0,this.valueDeclaration=void 0,this.id=0,this.mergeId=0,this.parent=void 0,this.members=void 0,this.exports=void 0,this.exportSymbol=void 0,this.constEnumOnlyModule=void 0,this.isReferenced=void 0,this.lastAssignmentPos=void 0,this.links=void 0}getFlags(){return this.flags}getEscapedName(){return this.name}getName(){return this.name}getDeclarations(){return this.declarations}getDocumentationComment(e){return this.documentationComment||(this.documentationComment=Oe,this.documentationComment=KW(this.declarations,e)),this.documentationComment}getContextualDocumentationComment(e,n){return this.getDocumentationComment(n)}getJsDocTags(e){return this.tags===void 0&&(this.tags=Oe,this.tags=qW(this.declarations,e)),this.tags}getContextualJsDocTags(e,n){return this.getJsDocTags(n)}};function zW(e,n,r){let s=n.parent;if(!s)return;let a=!1;return Ya(Jb(s),l=>{let u=e.getTypeAtLocation(l),d=a&&u.symbol?e.getTypeOfSymbol(u.symbol):u,_=e.getPropertyOfType(d,n.symbol.name);return _?r(_):void 0})}function VW(e){return yg(e).some(n=>n.tagName.text==="inheritDoc"||n.tagName.text==="inheritdoc")}function qW(e,n){if(!e)return Oe;let r=pf.getJsDocTagsFromDeclarations(e,n);if(n&&(r.length===0||e.some(VW))){let s=new Set;for(let a of e){let l=zW(n,a,u=>{if(!s.has(u))return s.add(u),u.declarations?.length===1?u.getJsDocTags(n):void 0});l&&(r=[...l,...r])}}return r}var ure=class{constructor(e,n){this.flags=n,this.checker=e}isClassOrInterface(){return!!($t(this)&3)}isClass(){return!!($t(this)&1)}getFlags(){return this.flags}getSymbol(){return this.symbol}getProperties(){return this.checker.getPropertiesOfType(this)}getProperty(e){return this.checker.getPropertyOfType(this,e)}getApparentProperties(){return this.checker.getAugmentedPropertiesOfType(this)}getCallSignatures(){return this.checker.getSignaturesOfType(this,0)}getConstructSignatures(){return this.checker.getSignaturesOfType(this,1)}getStringIndexType(){return this.checker.getIndexTypeOfType(this,0)}getNumberIndexType(){return this.checker.getIndexTypeOfType(this,1)}getBaseTypes(){return this.isClassOrInterface()?this.checker.getBaseTypes(this):void 0}isNullableType(){return this.checker.isNullableType(this)}getNonNullableType(){return this.checker.getNonNullableType(this)}getNonOptionalType(){return this.checker.getNonOptionalType(this)}getConstraint(){return this.checker.getBaseConstraintOfType(this)}getDefault(){return this.checker.getDefaultFromTypeParameter(this)}isUnion(){return!!(this.flags&1048576)}isUnionOrIntersection(){return!!(this.flags&3145728)}isLiteral(){return!!(this.flags&2432)}isStringLiteral(){return!!(this.flags&128)}isIntLiteral(){return!!(this.flags&256)}isFloatLiteral(){return!!(this.flags&2048)}isTypeParameter(){return!!(this.flags&262144)}isIndexType(){return!!(this.flags&4194304)}},fre=class{constructor(e,n){this.flags=n,this.checker=e}getDeclaration(){return this.declaration}getTypeParameters(){return this.typeParameters}getParameters(){return this.parameters}getReturnType(){return this.checker.getReturnTypeOfSignature(this)}getDocumentationComment(){return this.documentationComment||(this.documentationComment=KW(my(this.declaration),this.checker))}getJsDocTags(){return this.jsDocTags||(this.jsDocTags=qW(my(this.declaration),this.checker))}},pre={isCancellationRequested:Lu,throwIfCancellationRequested:ys};function $W(){return{libIncludeDirs:["/sys","/include"]}}function HW(e,n,r=OW(e.useCaseSensitiveFileNames&&e.useCaseSensitiveFileNames(),e.getCurrentDirectory(),e.jsDocParsingMode),s){let a;s===void 0?a=0:typeof s=="boolean"?a=s?2:0:a=s;let l=new _re(e),u,d,_=0,y=pre;function h(Bt){e.log&&e.log(Bt)}let v=e.getCurrentDirectory(),b=jy(e),T=ca(b),E=LW({useCaseSensitiveFileNames:()=>b,getCurrentDirectory:()=>v,getProgram:N,fileExists:mo(e,e.fileExists),readFile:mo(e,e.readFile),getDocumentPositionMapper:mo(e,e.getDocumentPositionMapper),getSourceFileLike:mo(e,e.getSourceFileLike),log:h});return{getEncodedSemanticClassifications:be,getDefinitionAtPosition:_e,getQuickInfoAtPosition:rt,getSignatureHelpItems:re,cleanupSemanticCache:j,getCompilerOptionsDiagnostics:se,getProgram:N,getCurrentProgram:()=>u,getSuggestionDiagnostics:de,getSyntacticDiagnostics:Z,getSemanticDiagnostics:le,getSourceMapper:()=>E,toLineColumnOffset:he,getNavigationTree:z,findReferences:ye,updateIsDefinitionOfReferencedSymbols:X,findRenameLocations:qt,getRenameInfo:fe,getCompletionsAtPosition:Yt,getCompletionEntryDetails:Mt,getDocCommentTemplateAtPosition:je,dispose:M};function M(){j(),e=void 0}function N(){if(a===2){w.assert(u===void 0);return}return oe(),u}function z(Bt){return xw.getNavigationTree(l.getCurrentSourceFile(Bt),y)}function X(Bt,Me){let tt=u.getTypeChecker(),me=dt();if(!me)return!1;for(let Vt of Bt)for(let _n of Vt.references){let hn=Lt(_n);if(w.assertIsDefined(hn),Me.has(_n)||Dl.isDeclarationOfSymbol(hn,me)){Me.add(_n),_n.isDefinition=!0;let kn=l2(_n,E,mo(e,e.fileExists));kn&&Me.add(kn)}else _n.isDefinition=!1}return!0;function dt(){for(let Vt of Bt)for(let _n of Vt.references){if(Me.has(_n)){let kn=Lt(_n);return w.assertIsDefined(kn),tt.getSymbolAtLocation(kn)}let hn=l2(_n,E,mo(e,e.fileExists));if(hn&&Me.has(hn)){let kn=Lt(hn);if(kn)return tt.getSymbolAtLocation(kn)}}}function Lt(Vt){let _n=u.getSourceFile(Vt.fileName);if(!_n)return;let hn=ju(_n,Vt.textSpan.start);return Dl.Core.getAdjustedNode(hn,{use:Dl.FindReferencesUse.References})}}function j(){if(u){let Bt=r.getKeyForCompilationSettings(u.getCompilerOptions());Jt(u.getSourceFiles(),Me=>r.releaseDocumentWithKey(Me.resolvedPath,Bt,Me.scriptKind,Me.impliedNodeFormat)),u=void 0}}function Z(Bt){return oe(),u.getSyntacticDiagnostics(Y(Bt),y).slice()}function le(Bt){oe();let Me=Y(Bt),tt=u.getSemanticDiagnostics(Me,y),me=u.getDeclarationDiagnostics(Me,y);return[...tt,...me]}function de(Bt){return oe(),rre(Y(Bt),u,y)}function se(){return oe(),[...u.getOptionsDiagnostics(y),...u.getGlobalDiagnostics(y)]}function ye(Bt,Me){return oe(),Dl.findReferencedSymbols(u,y,u.getSourceFiles(),Y(Bt),Me)}function he(Bt,Me){return Me===0?{line:0,character:0}:E.toLineColumnOffset(Bt,Me)}function oe(){e.updateFromProject&&!e.updateFromProjectInProgress?e.updateFromProject():ie()}function ie(){if(w.assert(a!==2),e.getProjectVersion){let we=e.getProjectVersion();if(we){if(d===we)return;d=we}}let Bt=e.getScriptFileNames().slice(),Me=e.getCompilationSettings()||$W(),tt=e.hasInvalidatedResolutions||Lu,me=mo(e,e.hasInvalidatedLibResolutions)||Lu,dt=mo(e,e.hasChangedAutomaticTypeDirectiveNames),Lt=e.getProjectReferences?.(),Vt,_n=jy(e),hn=ca(_n),kn=r.getKeyForCompilationSettings(Me),ue=new Set,Ze=e.getCurrentDirectory(),Ct={getSourceFile:Vn,getSourceFileByPath:$e,getSourceTextFromSnapshot:Ne,getCancellationToken:()=>y,getCanonicalFileName:hn,useCaseSensitiveFileNames:()=>!0,getNewLine:()=>ud(Me),getDefaultLibFileName:we=>e.getDefaultLibFileName(we),writeFile:ys,getCurrentDirectory:()=>Ze,fileExists:we=>e.fileExists(we),readFile:we=>e.readFile&&e.readFile(we),realpath:mo(e,e.realpath),directoryExists:we=>Ay(we,e),getDirectories:we=>e.getDirectories?e.getDirectories(we):[],readDirectory:(we,Je,ze,it,Re)=>(w.checkDefined(e.readDirectory,"'LanguageServiceHost.readDirectory' must be implemented to correctly process 'projectReferences'"),e.readDirectory(we,Je,ze,it,Re)),onReleaseOldSourceFile:De,onReleaseParsedCommandLine:Se,onAllFilesNeedReparse:xi,hasInvalidatedResolutions:tt,hasInvalidatedLibResolutions:me,trace:mo(e,e.trace),resolveModuleNames:mo(e,e.resolveModuleNames),getModuleResolutionCache:mo(e,e.getModuleResolutionCache),createHash:mo(e,e.createHash),resolveModuleNameLiterals:mo(e,e.resolveModuleNameLiterals),resolveLibrary:mo(e,e.resolveLibrary),useSourceOfProjectReferenceRedirect:mo(e,e.useSourceOfProjectReferenceRedirect),getParsedCommandLine:_i,jsDocParsingMode:e.jsDocParsingMode};e.setCompilerHost?.(Ct);let on={useCaseSensitiveFileNames:_n,fileExists:we=>Ct.fileExists(we),readFile:we=>Ct.readFile(we),directoryExists:we=>Ct.directoryExists(we),getDirectories:we=>Ct.getDirectories(we),realpath:Ct.realpath,readDirectory:(...we)=>Ct.readDirectory(...we),trace:Ct.trace,getCurrentDirectory:Ct.getCurrentDirectory,onUnRecoverableConfigFileDiagnostic:ys};if(Vj(u,Bt,Me,(we,Je)=>e.getScriptVersion(Je),we=>Ct.fileExists(we),tt,me,dt,_i,Lt)){Ct=void 0,Vt=void 0,ue=void 0;return}u=FE({rootNames:Bt,options:Me,host:Ct,oldProgram:u,projectReferences:Lt}),Ct=void 0,Vt=void 0,ue=void 0,E.clearCache(),u.getRootFileNames().length&&u.getTypeChecker();return;function Vn(we,Je,ze,it){return $e(we,Ra(we,Ze,hn),Je,ze,it)}function _i(we){let Je=Ra(we,Ze,hn),ze=Vt?.get(Je);if(ze!==void 0)return ze||void 0;let it=e.getParsedCommandLine?e.getParsedCommandLine(we):xr(we);return(Vt||(Vt=new Map)).set(Je,it||!1),it}function xr(we){let Je=Vn(we,3);if(Je)return Je.path=Ra(we,Ze,hn),Je.resolvedPath=Je.path,Je.originalFileName=Je.fileName,uE(Je,on,Wi(li(we),Ze),void 0,Wi(we,Ze))}function si(we,Je){let ze=r.getKeyForCompilationSettings(Je);r.releaseDocumentWithKey(we.resolvedPath,ze,we.scriptKind,1)}function xi(we){e.onAllFilesNeedReparse&&e.onAllFilesNeedReparse(we)}function Se(we,Je,ze){e.getParsedCommandLine?e.onReleaseParsedCommandLine?.(we,Je,ze):Je&&De(Je.sourceFile,ze)}function De(we,Je,ze,it){si(we,Je),ze&&e.onReleaseOldSourceFile?.(we,Je,ze,it)}function Ne(we){let Je=e.getScriptSnapshot(we);if(Je)return Sg(Je)}function $e(we,Je,ze,it,Re){w.assert(Ct,"getOrCreateSourceFileByPath called after typical CompilerHost lifetime, check the callstack something with a reference to an old host.");let H=e.getScriptSnapshot(we);if(!H)return;let Sn=QE(we,e),Zt=e.getScriptVersion(we);if(!Re){let sn=u&&u.getSourceFileByPath(Je);if(sn){if(Sn===sn.scriptKind||ue.has(sn.resolvedPath))return r.updateDocumentWithKey(we,Je,e,kn,H,Zt,Sn,ze);r.releaseDocumentWithKey(sn.resolvedPath,r.getKeyForCompilationSettings(u.getCompilerOptions()),sn.scriptKind,sn.impliedNodeFormat),ue.add(sn.resolvedPath)}}return r.acquireDocumentWithKey(we,Je,e,kn,H,Zt,Sn,ze)}}function Y(Bt){let Me=u.getSourceFile(Bt);if(!Me){let tt=new Error(`Could not find source file: '${Bt}'.`);throw tt.ProgramFiles=u.getSourceFiles().map(me=>me.fileName),tt}return Me}function _e(Bt,Me,tt,me){return oe(),Vk.getDefinitionAtPosition(u,Y(Bt),Me,tt,me)}function G(Bt){return Bt.parent&&Tg(Bt.parent)&&Bt.pos===Bt.parent.pos?Bt.parent.expression:Bt}function ke(Bt,Me,tt){switch(Me.kind){case 89:return!0;case 286:case 146:return!D0(Bt,tt);case 71:return!0;default:return!1}}function re(Bt,Me,{triggerReason:tt}=Um){oe();let me=Y(Bt);return Kv.getSignatureHelpItems(u,me,Me,tt,y)}function be(Bt,Me){return oe(),Gne(u,y,Y(Bt),Me)}function rt(Bt,Me){oe();let tt=Y(Bt),me=ju(tt,Me);if(me===tt)return;let dt=u.getTypeChecker(),Lt=G(me),Vt=dre(Lt,dt);if(!Vt||dt.isUnknownSymbol(Vt)&&Lt){let Ze=Lt&&ke(tt,Lt,Me)?dt.getTypeAtLocation(Lt):void 0;return Ze&&{kind:"",kindModifiers:"",textSpan:Sp(Lt,tt),displayParts:dt.runWithCancellationToken(y,Ct=>o2(Ct,Ze,u0(Lt))),documentation:Ze.symbol?Ze.symbol.getDocumentationComment(dt):void 0,tags:Ze.symbol?Ze.symbol.getJsDocTags(dt):void 0}}let{symbolKind:_n,displayParts:hn,documentation:kn,tags:ue}=dt.runWithCancellationToken(y,Ze=>du.getSymbolDisplayPartsDocumentationAndSymbolKind(Ze,Vt,tt,u0(Lt),Lt));return{kind:_n,kindModifiers:du.getSymbolModifiers(dt,Vt),textSpan:Sp(Lt,tt),displayParts:hn,documentation:kn,tags:ue}}function qt(Bt,Me,tt,me,dt){oe();let Lt=Y(Bt),Vt=Lk(ju(Lt,Me));if(!y2.nodeIsEligibleForRename(Vt))return;let _n=E0(Lt,dt??Um),hn=typeof dt=="boolean"?dt:dt?.providePrefixAndSuffixTextForRename;return pt(Vt,Me,{findInStrings:tt,findInComments:me,providePrefixAndSuffixTextForRename:hn,use:Dl.FindReferencesUse.Rename},(kn,ue,Ze)=>Dl.toRenameLocation(kn,ue,Ze,hn||!1,_n))}function fe(Bt,Me,tt){return oe(),y2.getRenameInfo(u,Y(Bt),Me,tt||{})}function pt(Bt,Me,tt,me){oe();let dt=tt&&tt.use===Dl.FindReferencesUse.Rename?u.getSourceFiles().filter(Lt=>!u.isSourceFileDefaultLibrary(Lt)):u.getSourceFiles();return Dl.findReferenceOrRenameEntries(u,y,dt,Bt,Me,tt,me)}function je(Bt,Me,tt,me){let dt=me?Za.getFormatContext(me,e).options:void 0;return pf.getDocCommentTemplateAtPosition(w0(e,dt),l.getCurrentSourceFile(Bt),Me,tt)}function Mt(Bt,Me,tt,me,dt,Lt=Um,Vt){return oe(),dg.getCompletionEntryDetails(u,h,Y(Bt),Me,{name:tt,source:dt,data:Vt},e,me&&Za.getFormatContext(me,e),Lt,y)}function Yt(Bt,Me,tt=Um,me){let dt={...tt,includeCompletionsForModuleExports:tt.includeCompletionsForModuleExports||tt.includeExternalModuleExports,includeCompletionsWithInsertText:tt.includeCompletionsWithInsertText||tt.includeInsertTextCompletions};return oe(),dg.getCompletionsAtPosition(e,u,h,Y(Bt),Me,dt,tt.triggerCharacter,tt.triggerKind,y,me&&Za.getFormatContext(me,e),tt.includeSymbol)}}hF(sre());function GW(e,n,r){e.version=r,e.scriptSnapshot=n}function Wk(e,n,r,s,a,l,u){let d=fk(e,Sg(n),r,a,u,l);return GW(d,n,s),d}function dw(e,n,r,s,a,l,u,d,_,y){if(u&&l!==e.version){let v,b=u.span.start!==0?e.text.substr(0,u.span.start):"",T=Fu(u.span)!==e.text.length?e.text.substr(Fu(u.span)):"";if(u.newLength===0)v=b&&T?b+T:b||T;else{let g=a.getText(u.span.start,u.span.start+u.newLength);v=b&&T?b+g+T:b?b+g:g+T}let E=PR(e,v,n,r,s,u,y,d);return GW(E,a,l),E.nameTable=void 0,e!==E&&e.scriptSnapshot&&(e.scriptSnapshot.dispose&&e.scriptSnapshot.dispose(),e.scriptSnapshot=void 0),E}let h={languageVersion:e.languageVersion,impliedNodeFormat:e.impliedNodeFormat,setExternalModuleIndicator:e.setExternalModuleIndicator,jsDocParsingMode:e.jsDocParsingMode,globalIncludes:n,fileHandler:s,reportParsedDefines:_,configDefines:r};return Wk(e.fileName,a,h,l,!0,d,e.scriptKind)}function dre(e,n){if(e.flags&64){let s=e.getSourceFile()?.nodeMacroMap.get(e);return s&&n.resolveName(s,e.parent,268435456,!1)}return n.getSymbolAtLocation(e)}var QW=class{constructor(e,n=20){this.hostCancellationToken=e,this.throttleWaitMilliseconds=n,this.lastCancellationCheckTime=0}isCancellationRequested(){let e=Zi();return Math.abs(e-this.lastCancellationCheckTime)>=this.throttleWaitMilliseconds?(this.lastCancellationCheckTime=e,this.hostCancellationToken.isCancellationRequested()):!1}throwIfCancellationRequested(){if(this.isCancellationRequested())throw Dt?.instant(Dt.Phase.Session,"cancellationThrown",{kind:"ThrottledCancellationToken"}),new Sv}};function pb(e){return e?Xt(e,n=>n.text).join(""):""}var YW=(e=>(e.Ignore="ignore",e.Insert="insert",e.Remove="remove",e))(YW||{}),ZW=(e=>(e[e.None=0]="None",e[e.Block=1]="Block",e[e.Smart=2]="Smart",e))(ZW||{});function XW(e){return{indentSize:2,tabSize:2,newLineCharacter:e||`
`,convertTabsToSpaces:!0,indentStyle:2,insertSpaceAfterConstructor:!1,insertSpaceAfterCommaDelimiter:!0,insertSpaceAfterSemicolonInForStatements:!0,insertSpaceBeforeAndAfterBinaryOperators:!0,insertSpaceAfterKeywordsInControlFlowStatements:!0,insertSpaceAfterFunctionKeywordForAnonymousFunctions:!1,insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis:!1,insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets:!1,insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces:!0,insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces:!1,insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces:!1,insertSpaceBeforeFunctionParenthesis:!1,placeOpenBraceOnNewLineForFunctions:!1,placeOpenBraceOnNewLineForControlBlocks:!1,semicolons:"ignore",trimTrailingWhitespace:!0,indentSwitchCase:!0}}var _re=class{constructor(e){this.host=e}getCurrentSourceFile(e){let n=this.host.getScriptSnapshot(e);if(!n)throw new Error("Could not find file: '"+e+"'.");let r=this.host.getCompilationSettings(),s=QE(e,this.host),a=this.host.getScriptVersion(e),l=this.host.getCompilationSettings()?.driverType,u=r?.globalIncludeFiles||Oe,d,_={languageVersion:1,impliedNodeFormat:jj(Ra(e,this.host.getCurrentDirectory(),this.host.getCompilerHost?.()?.getCanonicalFileName||c9(this.host)),this.host.getCompilerHost?.()?.getModuleResolutionCache?.()?.getPackageJsonInfoCache(),this.host,r),setExternalModuleIndicator:l9(this.host.getCompilationSettings()),jsDocParsingMode:0,globalIncludes:u,fileHandler:Jv({fileExists:y=>Ms.fileExists(y),readFile:y=>Ms.readFile(y),getCurrentDirectory:()=>Ms.getCurrentDirectory(),getIncludeDirs:()=>this.host.getIncludeDirs(),getCompilerOptions:()=>this.host.getCompilationSettings()})};if(this.currentFileName!==e)d=Wk(e,n,_,a,!0,l,s);else if(this.currentFileVersion!==a){let y=n.getChangeRange(this.currentFileScriptSnapshot);d=dw(this.currentSourceFile,_.globalIncludes,_.configDefines,_.fileHandler,n,a,y,l,!1)}return d&&(this.currentFileVersion=a,this.currentFileName=e,this.currentFileScriptSnapshot=n,this.currentSourceFile=d),this.currentSourceFile}};function _w(e){return e.nameTable||mre(e),e.nameTable}function mre(e){let n=e.nameTable=new Map;e.forEachChild(function r(s){if(Tt(s)&&!FB(s)&&s.text||_u(s)&&gre(s)){let a=u8(s);n.set(a,n.get(a)===void 0?s.pos:-1)}if(Ns(s,r),Kc(s))for(let a of s.jsDoc)Ns(a,r)})}function gre(e){return Ru(e)||rk(e)}function hre(e){}function cu(e,n,r){return Zr(e.getChildren(r),s=>s.kind===n)}function yre(e,n){return e.kind===1?!!e.jsDoc:e.getWidth(n)!==0}function mw(e,n,r){return s(n);function s(a){return xv(a)&&a.pos===e.end?a:Ya(a.getChildren(r),l=>(l.pos<=e.pos&&l.end>e.end||l.pos===e.end)&&yre(l,r)?s(l):void 0)}}function KW(e,n){if(!e)return Oe;let r=pf.getJsDocCommentsFromDeclarations(e,n);if(n&&(r.length===0||e.some(VW))){let s=new Set;for(let a of e){let l=zW(n,a,u=>{if(!s.has(u))return s.add(u),u.getDocumentationComment(n)});l&&(r=r.length===0?l.slice():l.concat(l0(),r))}}return r}var dg={};lc(dg,{CompletionKind:()=>fU,CompletionSource:()=>tU,SortText:()=>yo,StringCompletions:()=>zk,SymbolOriginInfoKind:()=>nU,createCompletionDetails:()=>fv,createCompletionDetailsForSymbol:()=>Tw,getCompletionEntriesFromSymbols:()=>vw,getCompletionEntryDetails:()=>qre,getCompletionEntrySymbol:()=>Hre,getCompletionsAtPosition:()=>Dre,getPropertiesForObjectExpression:()=>mU,moduleSpecifierResolutionCacheAttemptLimit:()=>eU,moduleSpecifierResolutionLimit:()=>Sx});var Sx=100,eU=1e3,yo={LocalDeclarationPriority:"10",LocationPriority:"11",OptionalMember:"12",MemberDeclaredBySpreadAssignment:"13",SuggestedClassMembers:"14",GlobalsOrKeywords:"15",AutoImportSuggestions:"16",ClassMemberSnippets:"17",JavascriptIdentifiers:"18",Deprecated(e){return"z"+e},ObjectLiteralProperty(e,n){return`${e}\0${n}\0`},SortBelow(e){return e+"1"}},tU=(e=>(e.ThisProperty="ThisProperty/",e.ClassMemberSnippet="ClassMemberSnippet/",e.TypeOnlyAlias="TypeOnlyAlias/",e.ObjectLiteralMethodSnippet="ObjectLiteralMethodSnippet/",e.SwitchCases="SwitchCases/",e.ObjectLiteralMemberWithComma="ObjectLiteralMemberWithComma/",e))(tU||{}),nU=(e=>(e[e.ThisType=1]="ThisType",e[e.SymbolMember=2]="SymbolMember",e[e.Export=4]="Export",e[e.Promise=8]="Promise",e[e.Nullable=16]="Nullable",e[e.ResolvedExport=32]="ResolvedExport",e[e.TypeOnlyAlias=64]="TypeOnlyAlias",e[e.ObjectLiteralMethod=128]="ObjectLiteralMethod",e[e.Ignore=256]="Ignore",e[e.ComputedPropertyName=512]="ComputedPropertyName",e[e.SymbolMemberNoExport=2]="SymbolMemberNoExport",e[e.SymbolMemberExport=6]="SymbolMemberExport",e))(nU||{});function vre(e){return!!(e.kind&1)}function Tre(e){return!!(e.kind&2)}function Zv(e){return!!(e&&e.kind&4)}function _g(e){return!!(e&&e.kind===32)}function Sre(e){return Zv(e)||_g(e)||gw(e)}function bre(e){return(Zv(e)||_g(e))&&!!e.isFromPackageJson}function kre(e){return!!(e.kind&8)}function Cre(e){return!!(e.kind&16)}function rU(e){return!!(e&&e.kind&128)}function Pre(e){return!!(e&&e.kind&256)}function gw(e){return!!(e&&e.kind&512)}function xre(e,n,r,s,a,l,u,d,_){let y=Zi(),h=u,v=!1,b=0,T=0,E=0,g=0,M=_({tryResolve:z,skippedAny:()=>v,resolvedAny:()=>T>0,resolvedBeyondLimit:()=>T>Sx}),N=g?` (${(E/g*100).toFixed(1)}% hit rate)`:"";return n.log?.(`${e}: resolved ${T} module specifiers, plus ${b} ambient and ${E} from cache${N}`),n.log?.(`${e}: response is ${v?"incomplete":"complete"}`),n.log?.(`${e}: ${Zi()-y}`),M;function z(X,j){if(j){let se=r.getModuleSpecifierForBestExportInfo(X,a,d);return se&&b++,se||"failed"}let Z=h||l.allowIncompleteCompletions&&T<Sx,le=!Z&&l.allowIncompleteCompletions&&g<eU,de=Z||le?r.getModuleSpecifierForBestExportInfo(X,a,d,le):void 0;return(!Z&&!le||le&&!de)&&(v=!0),T+=de?.computedWithoutCacheCount||0,E+=X.length-(de?.computedWithoutCacheCount||0),le&&g++,de||(h?"failed":"skipped")}}function Dre(e,n,r,s,a,l,u,d,_,y,h=!1){let{previousToken:v}=Jk(a,s);if(u&&!AB(s,a,v)&&!bg(s,a,v)&&!aie(s,u,v,a))return;if(u===" ")return l.includeCompletionsForImportStatements&&l.includeCompletionsWithInsertText?{isGlobalCompletion:!0,isMemberCompletion:!1,isNewIdentifierLocation:!0,isIncomplete:!0,entries:[]}:void 0;let b=n.getCompilerOptions(),T=n.getTypeChecker(),E=l.allowIncompleteCompletions?e.getIncompleteCompletionsCache?.():void 0;if(E&&d===3&&v&&Tt(v)){let N=Ere(E,s,v,n,e,l,_,a);if(N)return N}else E?.clear();let g=zk.getStringLiteralCompletions(s,a,v,b,e,n,r,l,h);if(g)return g;if(v&&v.parent&&z2(v.parent)&&(v.kind===106||v.kind===121||v.kind===89))return zre(v.parent);let M=pU(n,r,s,b,a,l,void 0,e,y,_);if(M)switch(M.kind){case 0:let N=Are(s,e,n,b,r,M,l,y,a,h);return N?.isIncomplete&&E?.set(N),N;case 1:return G4([...pf.getJSDocTagNameCompletions(),...KA(s,a,T,b,l,!0)]);case 2:return G4([...pf.getJSDocTagCompletions(),...KA(s,a,T,b,l,!1)]);case 3:return G4(pf.getJSDocParameterNameCompletions(M.tag));case 4:return Nre(M.keywordCompletions,M.isNewIdentifierLocation);default:return w.assertNever(M)}}function _2(e,n){let r=Tb(e.sortText,n.sortText);return r===0&&(r=Tb(e.name,n.name)),r===0&&e.data?.moduleSpecifier&&n.data?.moduleSpecifier&&(r=P9(e.data.moduleSpecifier,n.data.moduleSpecifier)),r===0?-1:r}function iU(e){return!!e?.moduleSpecifier}function Ere(e,n,r,s,a,l,u,d){let _=e.get();if(!_)return;let y=ju(n,d),h=r.text.toLowerCase(),v=NW(n,a,s,l,u),b=xre("continuePreviousIncompleteResponse",a,Xv.createImportSpecifierResolver(n,s,a,l),s,r.getStart(),l,!1,Fb(r),T=>{let E=Vi(_.entries,g=>{if(!g.hasAction||!g.source||!g.data||iU(g.data))return g;if(!die(g.name,h))return;let{origin:M}=w.checkDefined(dU(g.name,g.data,s,a)),N=v.get(n.path,g.data.exportMapKey),z=N&&T.tryResolve(N,!df(gf(M.moduleSymbol.name)));if(z==="skipped")return g;if(!z||z==="failed"){a.log?.(`Unexpected failure resolving auto import for '${g.name}' from '${g.source}'`);return}let X={...M,kind:32,moduleSpecifier:z.moduleSpecifier};return g.data=lU(X),g.source=yw(X),g.sourceDisplay=[oc(X.moduleSpecifier)],g});return T.skippedAny()||(_.isIncomplete=void 0),E});return _.entries=b,_.flags=(_.flags||0)|4,_.optionalReplacementSpan=sU(y),_}function G4(e){return{isGlobalCompletion:!1,isMemberCompletion:!1,isNewIdentifierLocation:!1,entries:e}}function KA(e,n,r,s,a,l){let u=bp(e,n);if(!y0(u)&&!Ol(u))return[];let d=Ol(u)?u:u.parent;if(!Ol(d))return[];let _=d.parent;if(!Qi(_))return[];let y=!1,h=a.includeCompletionsWithSnippetText||void 0,v=Kf(d.tags,b=>Pc(b)&&b.getEnd()<=n);return Vi(_.parameters,b=>{if(!wv(b).length){if(Tt(b.name)){let T={tabstop:1},E=b.name.text,g=fy(E,b.initializer,b.dotDotDotToken,y,!1,!1,r,s,a),M=h?fy(E,b.initializer,b.dotDotDotToken,y,!1,!0,r,s,a,T):void 0;return l&&(g=g.slice(1),M&&(M=M.slice(1))),{name:g,kind:"parameter",sortText:yo.LocationPriority,insertText:h?M:void 0,isSnippet:h}}else if(b.parent.parameters.indexOf(b)===v){let T=`param${v}`,E=eO(T,b.name,b.initializer,b.dotDotDotToken,y,!1,r,s,a),g=h?eO(T,b.name,b.initializer,b.dotDotDotToken,y,!0,r,s,a):void 0,M=E.join(ud(s)+"* "),N=g?.join(ud(s)+"* ");return l&&(M=M.slice(1),N&&(N=N.slice(1))),{name:M,kind:"parameter",sortText:yo.LocationPriority,insertText:h?N:void 0,isSnippet:h}}}})}function eO(e,n,r,s,a,l,u,d,_){if(!a)return[fy(e,r,s,a,!1,l,u,d,_,{tabstop:1})];return y(e,n,r,s,{tabstop:1});function y(v,b,T,E,g){return[fy(v,T,E,a,!1,l,u,d,_,g)]}function h(v,b,T){if(!b.propertyName&&Tt(b.name)||Tt(b.name)){let E=b.propertyName?Uy(b.propertyName):b.name.text;if(!E)return;let g=`${v}.${E}`;return[fy(g,b.initializer,b.dotDotDotToken,a,!1,l,u,d,_,T)]}else if(b.propertyName){let E=Uy(b.propertyName);return E&&y(`${v}.${E}`,b.name,b.initializer,b.dotDotDotToken,T)}}}function fy(e,n,r,s,a,l,u,d,_,y){if(l&&w.assertIsDefined(y),n&&(e=wre(e,n)),l&&(e=p8(e)),s){let h="*";if(a)w.assert(!r,"Cannot annotate a rest parameter with type 'Object'."),h="Object";else{if(n){let T=u.getTypeAtLocation(n.parent);if(!(T.flags&16385)){let E=n.getSourceFile(),M=E0(E,_)===0?268435456:0,N=u.typeToTypeNode(T,Xn(n,Qi),M);if(N){let z=l?Uk({removeComments:!0,module:d.module,target:d.target}):yd({removeComments:!0,module:d.module,target:d.target});oa(N,1),h=z.printNode(4,N,E)}}}l&&h==="*"&&(h=`\${${y.tabstop++}:${h}}`)}let v=!a&&r?"...":"",b=l?`\${${y.tabstop++}}`:"";return`@param {${v}${h}} ${e} ${b}`}else{let h=l?`\${${y.tabstop++}}`:"";return`@param ${e} ${h}`}}function wre(e,n){let r=n.getText().trim();return r.includes(`
`)||r.length>80?`[${e}]`:`[${e}=${r}]`}function Nre(e,n){return{isGlobalCompletion:!1,isMemberCompletion:!1,isNewIdentifierLocation:n,entries:e.slice()}}function Ire(e,n,r){return{kind:4,keywordCompletions:Xre(e,n),isNewIdentifierLocation:r}}function sU(e){return e?.kind===89?Sp(e):void 0}function Are(e,n,r,s,a,l,u,d,_,y){let{symbols:h,contextToken:v,completionKind:b,isInSnippetScope:T,isNewIdentifierLocation:E,location:g,propertyAccessToConvert:M,keywordFilters:N,symbolToOriginInfoMap:z,recommendedCompletion:X,isTypeOnlyLocation:j,isRightOfDotOrQuestionDot:Z,importStatementCompletion:le,insideJsDocTagTypeExpression:de,symbolToSortTextMap:se,hasUnresolvedAutoImports:ye}=l,he=l.literals,oe=r.getTypeChecker(),ie=Xn(v,yE);if(ie&&(DM(v)||iy(v,ie.expression))){let re=jk(oe,ie.parent.clauses);he=he.filter(be=>!re.hasValue(be))}let Y=L2(),_e=oU(e,s);if(_e&&!E&&(!h||h.length===0)&&N===0)return;let G=vw(h,Y,void 0,v,g,_,e,n,r,au(s),a,b,u,s,d,j,M,le,X,z,se,y);for(let re of tie(v,_))G.has(re.name)||(G.add(re.name),sd(Y,re,_2,void 0,!0));for(let re of he){let be=Fre(e,u,re);G.add(be.name),sd(Y,be,_2,void 0,!0)}_e||Lre(e,g.pos,G,au(s),Y);let ke;if(u.includeCompletionsWithInsertText&&v&&!Z&&(ke=Xn(v,xM))){let re=aU(ke,e,u,s,n,r,d);re&&Y.push(re.entry)}return{flags:l.flags,isGlobalCompletion:T,isIncomplete:u.allowIncompleteCompletions&&ye?!0:void 0,isMemberCompletion:Ore(b),isNewIdentifierLocation:E,optionalReplacementSpan:sU(g),entries:Y}}function oU(e,n){return!0}function aU(e,n,r,s,a,l,u){let d=e.clauses,_=l.getTypeChecker(),y=_.getTypeAtLocation(e.parent.expression);if(y&&y.isUnion()&&Ti(y.types,h=>h.isLiteral())){let h=jk(_,d),v=au(s),b=E0(n,r),T=[];for(let j of y.types)if(!h.hasValue(j.value))switch(typeof j.value){case"number":T.push(j.value<0?Ve.createPrefixUnaryExpression(42,Ve.createIntLiteral(-j.value)):Ve.createIntLiteral(j.value));break;case"string":T.push(Ve.createStringLiteral(j.value,b===0));break}if(T.length===0)return;let E=Xt(T,j=>Ve.createCaseClause(j,[])),g=w0(a,u?.options),M=Uk({removeComments:!0,module:s.module,newLine:Yv(g)}),N=u?j=>M.printAndFormatNode(4,j,n,u):j=>M.printNode(4,j,n),z=Xt(E,(j,Z)=>r.includeCompletionsWithSnippetText?`${N(j)}$${Z+1}`:`${N(j)}`).join(g);return{entry:{name:`${M.printNode(4,E[0],n)} ...`,kind:"",sortText:yo.GlobalsOrKeywords,insertText:z,hasAction:void 0,source:"SwitchCases/",isSnippet:r.includeCompletionsWithSnippetText?!0:void 0}}}}function Ore(e){switch(e){case 0:case 3:case 2:return!0;default:return!1}}function Lre(e,n,r,s,a){_w(e).forEach((l,u)=>{if(l===n)return;let d=u;!r.has(d)&&y_(d,s)&&(r.add(d),sd(a,{name:d,kind:"warning",kindModifiers:"",sortText:yo.JavascriptIdentifiers,isFromUncheckedFile:!0},_2))})}function hw(e,n,r){return Li(r)?nw(e,n,r):JSON.stringify(r)}function Fre(e,n,r){return{name:hw(e,n,r),kind:"string",kindModifiers:"",sortText:yo.LocationPriority}}function Rre(e,n,r,s,a,l,u,d,_,y,h,v,b,T,E,g,M,N,z,X,j){let Z,le,de=aw(r,l),se,ye,he=yw(v),oe,ie,Y;w.assertIsDefined(y);let _e=_.getTypeChecker(),G=v&&Cre(v),ke=v&&Tre(v)||h;if(v&&vre(v))Z=h?`this${G?"?.":""}[${tO(u,N,y)}]`:`this${G?"?.":"."}${y}`;else if((ke||G)&&T){Z=ke?h?`[${tO(u,N,y)}]`:`[${y}]`:y;let be=cu(T,24,u)||cu(T,28,u);if(!be)return;let rt=no(y,T.name.text)?T.name.end:be.end;de=Ml(be.getStart(u),rt)}if(v&&kre(v)&&T){Z===void 0&&(Z=y);let be=Ma(T.pos,u),rt="";be&&KB(be.end,be.parent,u)&&(rt=";"),rt+=`(await ${T.expression.getText()})`,Z=h?`${rt}${Z}`:`${rt}${G?"?.":"."}${Z}`;let qt=T.expression;de=Ml(qt.getStart(u),T.end)}if(_g(v)&&(oe=[oc(v.moduleSpecifier)]),v?.kind===64&&(ie=!0),z===0&&s&&Ma(s.pos,u,s)?.kind!==27&&(ev(s.parent.parent)||Zy(s.parent)||Xn(s.parent,af)?.getLastToken(u)===s||vp(s.parent)&&$s(u,s.getEnd()).line!==$s(u,l).line)&&(he="ObjectLiteralMemberWithComma/",ie=!0),N.includeCompletionsWithClassMemberSnippets&&N.includeCompletionsWithInsertText&&z===3&&Mre(e,a,u)){let be,rt=cU(d,_,M,N,y,e,a,l,s,X);if(rt)({insertText:Z,filterText:le,isSnippet:ye}=rt),(be?.hasFixes()||rt.eraseRange)&&(ie=!0,he="ClassMemberSnippet/");else return}if(v&&rU(v)&&({insertText:Z,isSnippet:ye,labelDetails:Y}=v,N.useLabelDetailsInCompletionEntries||(y=y+Y.detail,Y=void 0),he="ObjectLiteralMethodSnippet/",n=yo.SortBelow(n)),Z!==void 0&&!N.includeCompletionsWithInsertText)return;(Zv(v)||_g(v))&&(se=lU(v),ie=!E);let re=Xn(a,b9);return{name:y,kind:du.getSymbolKind(_e,e,a),kindModifiers:du.getSymbolModifiers(_e,e),sortText:n,source:he,hasAction:ie?!0:void 0,isRecommended:Jre(e,b,_e)||void 0,insertText:Z,filterText:le,replacementSpan:de,sourceDisplay:oe,labelDetails:Y,isSnippet:ye,isPackageJsonImport:bre(v)||void 0,isImportStatementCompletion:!!E||void 0,data:se,...j?{symbol:e}:void 0}}function Mre(e,n,r){return Nr(n)?!1:!!(e.flags&106500)&&(ho(n)||n.parent&&n.parent.parent&&Hh(n.parent)&&n===n.parent.name&&n.parent.getLastToken(r)===n.parent.name&&ho(n.parent.parent)||n.parent&&tv(n)&&ho(n.parent))}function cU(e,n,r,s,a,l,u,d,_,y){if(!Xn(u,ho))return;let v,b=a,T=a,E=n.getTypeChecker(),g=u.getSourceFile(),M=Uk({removeComments:!0,module:r.module,omitTrailingSemicolon:!1,newLine:Yv(w0(e,y?.options))}),N;if(s.includeCompletionsWithSnippetText){v=!0;let le=Ve.createEmptyStatement();N=Ve.createBlock([le],!0),z8(le,{kind:0,order:0})}else N=Ve.createBlock([],!0);let z=0,{modifiers:X,range:j}=jre(_,g,d),Z=!1;return{insertText:b,filterText:T,isSnippet:v,eraseRange:j}}function jre(e,n,r){if(!e||$s(n,r).line>$s(n,e.getEnd()).line)return{modifiers:0};let s=0,a,l={pos:r,end:r};if(Cl(e.parent)&&(a=Bre(e))){e.parent.modifiers&&(s|=ND(e.parent.modifiers)&67559,l.pos=Math.min(...e.parent.modifiers.map(d=>d.getStart(n))));let u=Gh(a);s&u||(s|=u,l.pos=Math.min(l.pos,e.getStart(n))),e.parent.name!==e&&(l.end=e.parent.name.getStart(n))}return{modifiers:s,range:l.pos<l.end?l:void 0}}function Bre(e){if(S_(e))return e.kind;if(Tt(e)){let n=W2(e);if(n&&Lm(n))return n}}function Wre(e,n,r,s,a,l){let u=e.getDeclarations();if(!(u&&u.length))return;let d=s.getTypeChecker(),_=u[0],y=Bk(hi(_),!1),h=d.getWidenedType(d.getTypeOfSymbolAtLocation(e,n)),b=33554432|(E0(r,l)===0?268435456:0);switch(_.kind){case 153:case 152:case 156:case 154:{let T=h.flags&1048576&&h.types.length<10?d.getUnionType(h.types,2):h;if(T.flags&1048576){let N=Yr(T.types,z=>d.getSignaturesOfType(z,0).length>0);if(N.length===1)T=N[0];else return}if(d.getSignaturesOfType(T,0).length!==1)return;let g=d.typeToTypeNode(T,n,b,Xv.getNoopSymbolTrackerWithResolver({program:s,host:a}));if(!g||!k0(g))return;let M;if(l.includeCompletionsWithSnippetText){let N=Ve.createEmptyStatement();M=Ve.createBlock([N],!0),z8(N,{kind:0,order:0})}else M=Ve.createBlock([],!0);return}default:return}}function Uk(e){let n,r=np.createWriter(ud(e)),s=yd(e,r),a={...r,write:b=>l(b,()=>r.write(b)),nonEscapingWrite:r.write,writeLiteral:b=>l(b,()=>r.writeLiteral(b)),writeStringLiteral:b=>l(b,()=>r.writeStringLiteral(b)),writeSymbol:(b,T)=>l(b,()=>r.writeSymbol(b,T)),writeParameter:b=>l(b,()=>r.writeParameter(b)),writeComment:b=>l(b,()=>r.writeComment(b)),writeProperty:b=>l(b,()=>r.writeProperty(b))};return{printSnippetList:u,printAndFormatSnippetList:_,printNode:y,printAndFormatNode:v};function l(b,T){let E=p8(b);if(E!==b){let g=r.getTextPos();T();let M=r.getTextPos();n=ei(n||(n=[]),{newText:E,span:{start:g,length:M-g}})}else T()}function u(b,T,E){let g=d(b,T,E);return n?np.applyChanges(g,n):g}function d(b,T,E){return n=void 0,a.clear(),s.writeList(b,T,E,a),a.getText()}function _(b,T,E,g){let M={text:d(b,T,E),fileName:E.fileName,getLineAndCharacterOfPosition(j){return $s(this,j)}},N=d2(g,E),z=ao(T,j=>{let Z=np.assignPositionsToNode(j);return Za.formatNodeGivenIndentation(Z,M,E.languageVariant,0,0,{...g,options:N})}),X=n?L_(ri(z,n),(j,Z)=>dP(j.span,Z.span)):z;return np.applyChanges(M.text,X)}function y(b,T,E){let g=h(b,T,E);return n?np.applyChanges(g,n):g}function h(b,T,E){return n=void 0,a.clear(),s.writeNode(b,T,E,a),a.getText()}function v(b,T,E,g){let M={text:h(b,T,E),fileName:E.fileName,getLineAndCharacterOfPosition(Z){return $s(this,Z)}},N=d2(g,E),z=np.assignPositionsToNode(T),X=Za.formatNodeGivenIndentation(z,M,E.languageVariant,0,0,{...g,options:N}),j=n?L_(ri(X,n),(Z,le)=>dP(Z.span,le.span)):X;return np.applyChanges(M.text,j)}}function lU(e){let n=e.fileName?void 0:gf(e.moduleSymbol.name),r=e.isFromPackageJson?!0:void 0;return _g(e)?{exportName:e.exportName,exportMapKey:e.exportMapKey,moduleSpecifier:e.moduleSpecifier,ambientModuleName:n,fileName:e.fileName,isPackageJsonImport:r}:{exportName:e.exportName,exportMapKey:e.exportMapKey,fileName:e.fileName,ambientModuleName:e.fileName?void 0:gf(e.moduleSymbol.name),isPackageJsonImport:e.isFromPackageJson?!0:void 0}}function Ure(e,n,r){let s=e.exportName==="default",a=!!e.isPackageJsonImport;return iU(e)?{kind:32,exportName:e.exportName,exportMapKey:e.exportMapKey,moduleSpecifier:e.moduleSpecifier,symbolName:n,fileName:e.fileName,moduleSymbol:r,isDefaultExport:s,isFromPackageJson:a}:{kind:4,exportName:e.exportName,exportMapKey:e.exportMapKey,symbolName:n,fileName:e.fileName,moduleSymbol:r,isDefaultExport:s,isFromPackageJson:a}}function tO(e,n,r){return/^\d+$/.test(r)?r:nw(e,n,r)}function Jre(e,n,r){return e===n}function yw(e){if(Zv(e))return gf(e.moduleSymbol.name);if(_g(e))return e.moduleSpecifier;if(e?.kind===1)return"ThisProperty/";if(e?.kind===64)return"TypeOnlyAlias/"}function vw(e,n,r,s,a,l,u,d,_,y,h,v,b,T,E,g,M,N,z,X,j,Z=!1){let le=Zi(),de=fie(s,a),se=!0,ye=_.getTypeChecker(),he=new Map;for(let Y=0;Y<e.length;Y++){let _e=e[Y],G=X?.[Y],ke=m2(_e,y,G,v);if(!ke||he.get(ke.name)&&(!G||!rU(G))||v===1&&j&&!oe(_e,j)||!g&&Nr(u)&&ie(_e))continue;let{name:re,needsConvertPropertyAccess:be}=ke,rt=j?.[Yi(_e)]??yo.LocationPriority,qt=pie(_e,ye)?yo.Deprecated(rt):rt,fe=Rre(_e,qt,r,s,a,l,u,d,_,re,be,G,z,M,N,se,T,b,v,E,Z);if(!fe)continue;let pt=(!G||hU(G))&&!(_e.parent===void 0&&!kt(_e.declarations,je=>je.getSourceFile()===a.getSourceFile()));he.set(re,pt),sd(n,fe,_2,void 0,!0)}return h("getCompletionsAtPosition: getCompletionEntriesFromSymbols: "+(Zi()-le)),{has:Y=>he.has(Y),add:Y=>he.set(Y,!0)};function oe(Y,_e){let G=Y.flags;if(!ti(a)){if(to(de,Cs)&&Y.valueDeclaration===de)return!1;let ke=Y.valueDeclaration??Y.declarations?.[0];if(de&&ke&&(ru(de)&&ru(ke)||gs(de)&&gs(ke))){let be=ke.pos,rt=gs(de)?de.parent.parameters:void 0;if(be>=de.pos&&rt&&be<rt.end)return!1}let re=hf(Y,ye);if(u.externalModuleIndicator&&_e[Yi(Y)]===yo.GlobalsOrKeywords&&(_e[Yi(re)]===yo.AutoImportSuggestions||_e[Yi(re)]===yo.LocationPriority))return!1;if(G|=ag(re),g)return gU(Y,ye)}return!!(G&268547007)}function ie(Y){let _e=ag(hf(Y,ye));return!(_e&268547007)&&(!Nr(Y.declarations?.[0])||!!(_e&788968))}}function zre(e){let n=Vre(e);if(n.length)return{isGlobalCompletion:!1,isMemberCompletion:!1,isNewIdentifierLocation:!1,entries:n}}function Vre(e){let n=[],r=new Map,s=e;for(;s&&!Qi(s);){if(gE(s)){let a=s.label.text;r.has(a)||(r.set(a,!0),n.push({name:a,kindModifiers:"",kind:"label",sortText:yo.LocationPriority}))}s=s.parent}return n}function uU(e,n,r,s,a,l,u){if(a.source==="SwitchCases/")return{type:"cases"};if(a.data){let z=dU(a.name,a.data,e,l);if(z){let{contextToken:X,previousToken:j}=Jk(s,r);return{type:"symbol",symbol:z.symbol,location:ju(r,s),previousToken:j,contextToken:X,isTypeOnlyLocation:!1,origin:z.origin}}}let d=e.getCompilerOptions(),_=pU(e,n,r,d,s,{includeCompletionsForModuleExports:!0,includeCompletionsWithInsertText:!0},a,l,void 0);if(!_)return{type:"none"};if(_.kind!==0)return{type:"request",request:_};let{symbols:y,literals:h,location:v,completionKind:b,symbolToOriginInfoMap:T,contextToken:E,previousToken:g,isTypeOnlyLocation:M}=_,N=Zr(h,z=>hw(r,u,z)===a.name);return N!==void 0?{type:"literal",literal:N}:Ya(y,(z,X)=>{let j=T[X],Z=m2(z,au(d),j,b);return Z&&Z.name===a.name&&(a.source==="ClassMemberSnippet/"&&z.flags&106500||a.source==="ObjectLiteralMethodSnippet/"&&z.flags&8196||yw(j)===a.source||a.source==="ObjectLiteralMemberWithComma/")?{type:"symbol",symbol:z,location:v,origin:j,contextToken:E,previousToken:g,isTypeOnlyLocation:M}:void 0})||{type:"none"}}function qre(e,n,r,s,a,l,u,d,_){let y=e.getTypeChecker(),h=e.getCompilerOptions(),{name:v,source:b,data:T}=a,{previousToken:E,contextToken:g}=Jk(s,r);if(bg(r,s,E))return zk.getStringLiteralCompletionDetails(v,r,s,E,e,l,_,d);let M=uU(e,n,r,s,a,l,d);switch(M.type){case"request":{let{request:N}=M;switch(N.kind){case 1:return pf.getJSDocTagNameCompletionDetails(v);case 2:return pf.getJSDocTagCompletionDetails(v);case 3:return pf.getJSDocParameterNameCompletionDetails(v);case 4:return kt(N.keywordCompletions,z=>z.name===v)?Q4(v,"keyword",5):void 0;default:return w.assertNever(N)}}case"symbol":{let{symbol:N,location:z,contextToken:X,origin:j,previousToken:Z}=M,{codeActions:le,sourceDisplay:de}=$re(v,z,X,j,N,e,l,h,r,s,Z,u,d,T,b,_),se=gw(j)?j.symbolName:N.name;return Tw(N,se,y,r,z,_,le,de)}case"literal":{let{literal:N}=M;return Q4(hw(r,d,N),"string",typeof N=="string"?8:7)}case"cases":{let N=aU(g.parent,r,d,e.getCompilerOptions(),l,e,void 0);return{name:v,kind:"",kindModifiers:"",displayParts:[],sourceDisplay:void 0}}case"none":return _U().some(N=>N.name===v)?Q4(v,"keyword",5):void 0;default:w.assertNever(M)}}function Q4(e,n,r){return fv(e,"",n,[Qo(e,r)])}function Tw(e,n,r,s,a,l,u,d){let{displayParts:_,documentation:y,symbolKind:h,tags:v}=r.runWithCancellationToken(l,b=>du.getSymbolDisplayPartsDocumentationAndSymbolKind(b,e,s,a,a,7));return fv(n,du.getSymbolModifiers(r,e),h,_,y,v,u,d)}function fv(e,n,r,s,a,l,u,d){return{name:e,kindModifiers:n,kind:r,displayParts:s,documentation:a,tags:l,codeActions:u,source:d,sourceDisplay:d}}function $re(e,n,r,s,a,l,u,d,_,y,h,v,b,T,E,g){if(E==="ClassMemberSnippet/"){let{eraseRange:M}=cU(u,l,d,b,e,a,n,y,r,v)}if(hU(s),E==="ObjectLiteralMemberWithComma/"&&r){let M=np.ChangeTracker.with({host:u,formatContext:v,preferences:b},N=>N.insertText(_,r.end,","));if(M)return{sourceDisplay:void 0,codeActions:[{changes:M,description:VB([P.Add_missing_comma_for_object_member_completion_0,e])}]}}if(!s||!(Zv(s)||_g(s)))return{codeActions:void 0,sourceDisplay:void 0}}function Hre(e,n,r,s,a,l,u){let d=uU(e,n,r,s,a,l,u);return d.type==="symbol"?d.symbol:void 0}var fU=(e=>(e[e.ObjectPropertyDeclaration=0]="ObjectPropertyDeclaration",e[e.Global=1]="Global",e[e.PropertyAccess=2]="PropertyAccess",e[e.MemberLike=3]="MemberLike",e[e.String=4]="String",e[e.None=5]="None",e))(fU||{});function Gre(e,n,r){return Ya(n&&(n.isUnion()?n.types:[n]),s=>{let a=s&&s.symbol;return a&&a.flags&424?Sw(a,e,r):void 0})}function Qre(e,n,r,s){let{parent:a}=e;switch(e.kind){case 89:return Ok(e,s);case 74:switch(a.kind){case 237:return s.getContextualType(a.initializer);case 269:return s.getTypeAtLocation(a.left);default:return}case 145:return s.getContextualType(a);case 113:let l=to(a,yE);return l?KE(l,s):void 0;default:let u=Kv.getArgumentInfoForCompletions(e,n,r,s);return u?s.getContextualTypeForArgumentAtIndex(u.invocation,u.argumentIndex):p2(e.kind)&&Ur(a)&&p2(a.operatorToken.kind)?s.getTypeAtLocation(a.left):s.getContextualType(e,4)||s.getContextualType(e)}}function Sw(e,n,r){let s=r.getAccessibleSymbolChain(e,n,-1,!1);return s?qs(s):e.parent&&(Yre(e.parent)?e:Sw(e.parent,n,r))}function Yre(e){return!1}function pU(e,n,r,s,a,l,u,d,_,y){let h=e.getTypeChecker(),v=oU(r,s),b=Zi(),T=bp(r,a);n("getCompletionData: Get current token: "+(Zi()-b)),b=Zi();let E=D0(r,a,T);n("getCompletionData: Is inside comment: "+(Zi()-b));let g=!1,M=!1,N=!1;if(E){if(cW(r,a)){if(r.text.charCodeAt(a-1)===64)return{kind:1};{let Te=Il(a,r);if(!/[^*|\s(/)]/.test(r.text.substring(Te,a)))return{kind:2}}}let Ie=nie(T,a);if(Ie){if(Ie.tagName&&Ie.tagName.pos<=a&&a<=Ie.tagName.end)return{kind:1};if(PM(Ie))M=!0;else{let Te=dt(Ie);if(Te&&(T=bp(r,a),(!T||!Ru(T)&&(T.parent.kind!==227||T.parent.name!==T))&&(g=$i(Te))),!g&&Pc(Ie)&&(Eo(Ie.name)||Ie.name.pos<=a&&a<=Ie.name.end))return{kind:3,tag:Ie}}}if(!g&&!M){n("Returning an empty list because completion was inside a regular comment or plain text part of a JsDoc comment.");return}}b=Zi();let z=!g&&!M&&!1,X=Jk(a,r),j=X.previousToken,Z=X.contextToken;n("getCompletionData: Get previous token: "+(Zi()-b));let le=T,de,se=!1,ye=!1,he,oe=ju(r,a),ie=0,Y=!1,_e=0;if(Z){let Ie=Z.parent;if(Z.kind===24||Z.kind===28||Z.kind===40)switch(se=Z.kind===24||Z.kind===40,ye=Z.kind===28,Ie.kind){case 286:de=Ie,le=de.expression;let Te=S9(de);if(Eo(Te)||(hs(le)||Qi(le))&&le.end===Z.pos&&le.getChildCount(r)&&jo(le.getChildren(r)).kind!==21)return;break;case 146:le=Ie.left;break;default:return}else he||Ie&&Ie.kind===286&&(Z=Ie,Ie=Ie.parent)}let G=Zi(),ke=5,re=!1,be=[],rt,qt=[],fe=[],pt=new Map,je=Vn(),Mt=wh(Ie=>rw(Ie?d.getPackageJsonAutoImportProvider():e,d));if(se||ye)Vt();else{Lt();let Ie=!uu(oe)&&oe?.parent?.parent&&ti(oe.parent.parent);if(Ie||!ue())return ie=Ie?1:5,ie?Ire(ie,z,Y):void 0}n("getCompletionData: Semantic work: "+(Zi()-G));let Yt=j&&Qre(j,a,r,h),Me=!to(j,_f)?Vi(Yt&&(Yt.isUnion()?Yt.types:[Yt]),Ie=>Ie.isLiteral()&&!(Ie.flags&1024)?Ie.value:void 0):[],tt=j&&Yt&&Gre(j,Yt,h);return{kind:0,symbols:be,completionKind:ke,isInSnippetScope:N,propertyAccessToConvert:de,isNewIdentifierLocation:Y,location:oe,keywordFilters:ie,literals:Me,symbolToOriginInfoMap:qt,recommendedCompletion:tt,previousToken:j,contextToken:Z,insideJsDocTagTypeExpression:g,symbolToSortTextMap:fe,isTypeOnlyLocation:je,isRightOfDotOrQuestionDot:se||ye,importStatementCompletion:he,hasUnresolvedAutoImports:re,flags:_e};function me(Ie){switch(Ie.kind){case 220:case 227:case 221:case 223:case 225:case 229:case 230:return!0;case 224:return!!Ie.constraint;default:return!1}}function dt(Ie){if(me(Ie)){let Te=Ll(Ie)?Ie.constraint:Ie.typeExpression;return Te&&Te.kind===188?Te:void 0}}function Lt(){let Ie=$n(le);ti(Ie)&&Ie.statements&&Jt(Ie.statements,Te=>{s0(Te)&&ER(be,h.getSymbolAtLocation(Te))})}function Vt(){ke=2;let Ie=!1,Te=Zp(le.parent);if(Am(le)||Ie||Ii(le)){let Gt=h.getSymbolAtLocation(le);Gt&&(Gt=hf(Gt,h))}if(!Te||$b(le)){let yt;if(!Am(le)&&TF(le)?yt=h.getTypeOfPropertyAccessExpr(le.parent):(h.tryGetThisTypeAt(le,!1),yt=h.getTypeAtLocation(le).getNonOptionalType()),Te)_n(yt.getNonNullableType(),!1,!1);else{let Gt=!1;if(yt.isNullableType()){let yn=se&&!ye&&l.includeAutomaticOptionalChainCompletions!==!1;(yn||ye)&&(yt=yt.getNonNullableType(),yn&&(Gt=!0))}_n(yt,!!(le.flags&65536),Gt)}}}function _n(Ie,Te,yt){Y=!!Ie.getStringIndexType(),ye&&kt(Ie.getCallSignatures())&&(Y=!0);let Gt=le.parent;if(v)for(let yn of Ie.getApparentProperties())!(yn.flags&8388608)&&h.isValidPropertyAccessForCompletions(Gt,Ie,yn)&&kn(yn,!1,yt);else be.push(...Yr(Y4(Ie,h),yn=>h.isValidPropertyAccessForCompletions(Gt,Ie,yn)))}function hn(Ie){return Tt(Ie)?Ie:Ii(Ie)?hn(Ie.expression):void 0}function kn(Ie,Te,yt){let Gt=Ya(Ie.declarations,bn=>to(hi(bn),Ia));if(Gt){let bn=hn(Gt.expression),Kn=bn&&h.getSymbolAtLocation(bn),ur=Kn&&Sw(Kn,Z,h),_r=ur&&Yi(ur);if(_r&&lg(pt,_r)){let Le=be.length;be.push(ur);let He=ur.parent;console.debug("todo - completions - property from module");let lt=void 0,{moduleSpecifier:nn}=(rt||(rt=Xv.createImportSpecifierResolver(r,e,d,l))).getModuleSpecifierForBestExportInfo([{exportKind:0,moduleFileName:lt,isFromPackageJson:!1,moduleSymbol:He,symbol:ur,targetFlags:hf(ur,h).flags}],a,Fb(oe))||{};if(nn){let Un={kind:Rr(6),moduleSymbol:He,isDefaultExport:!1,symbolName:ur.name,exportName:ur.name,fileName:lt,moduleSpecifier:nn};qt[Le]=Un}}else if(l.includeCompletionsWithInsertText){if(_r&&pt.has(_r))return;Rn(Ie),yn(Ie),be.push(Ie)}}else Rn(Ie),yn(Ie),be.push(Ie);function yn(bn){lie(bn)&&(fe[Yi(bn)]=yo.LocalDeclarationPriority)}function Rn(bn){l.includeCompletionsWithInsertText&&(Te&&lg(pt,Yi(bn))?qt[be.length]={kind:Rr(8)}:yt&&(qt[be.length]={kind:16}))}function Rr(bn){return yt?bn|16:bn}}function ue(){return(Je()||ze()||Ze()||it()||(Ct(),1))===1}function Ze(){return he?(Y=!0,1):0}function Ct(){ie=H(Z)?5:1,ke=1,Y=$e(),j!==Z&&w.assert(!!j,"Expected 'contextToken' to be defined when different from 'previousToken'.");let Ie=j!==Z?j.getStart():a,Te=De(Z,Ie,r)||r;N=Vr(Te);let yt=(je?0:111551)|788968|1920|2097152,Gt=j&&!Fb(j);be=ri(be,h.getSymbolsInScope(Te,yt)),w.assertEachIsDefined(be,"getSymbolsInScope() should all be defined");for(let yn=0;yn<be.length;yn++){let Rn=be[yn];!h.isArgumentsSymbol(Rn)&&!kt(Rn.declarations,Rr=>Rr.getSourceFile()===r)&&(fe[Yi(Rn)]=yo.GlobalsOrKeywords)}l.includeCompletionsWithInsertText&&Te.kind,je&&(ie=Z&&Db(Z.parent)?6:7)}function on(){return!1}function Vr(Ie){switch(Ie.kind){case 176:case 236:return!0;default:return Vm(Ie)}}function Vn(){return g||M||!_i(Z)&&(oe.parent&&Zp(oe)||xr(Z))}function _i(Ie){return!1}function xr(Ie){if(Ie){let Te=Ie.parent.kind;switch(Ie.kind){case 61:return Te===152||Te===153||Te===149||Te===237||$h(Te);case 74:return Te===148;case 29:return Te===166}}return!1}function si(Ie,Te){let yt=Yi(Ie);fe[yt]!==yo.GlobalsOrKeywords&&(qt[be.length]=Te,fe[yt]=he?yo.LocationPriority:yo.AutoImportSuggestions,be.push(Ie))}function xi(Ie,Te){Nr(oe)||Ie.forEach(yt=>{if(!Se(yt))return;let Gt=m2(yt,au(s),void 0,0);if(!Gt)return;let{name:yn}=Gt,Rn=mie(yt,yn,Te,e,d,s,l,_);if(!Rn)return;let Rr={kind:128,...Rn};_e|=32,qt[be.length]=Rr,be.push(yt)})}function Se(Ie){return!!(Ie.flags&8196)}function De(Ie,Te,yt){let Gt=Ie;for(;Gt&&!gW(Gt,Te,yt);)Gt=Gt.parent;return Gt}function Ne(Ie){let Te=Zi(),yt=we(Ie)||Zt(Ie)||mn(Ie);return n("getCompletionsAtPosition: isCompletionListBlocker: "+(Zi()-Te)),yt}function $e(){if(Z){let Ie=Z.parent.kind,Te=BS(Z);switch(Te){case 27:return Ie===272||Ie===276||Ie===290||Ie===269||Ie===293;case 20:return Ie===272||Ie===276||Ie===289||Ie===165;case 22:return Ie===290||Ie===150||Ie===147;case 24:return!1;case 17:return!1;case 74:return Ie===237||Ie===269;case 40:return Ie===286||Ie===272;case 43:return Ie===169}if(h2(Te))return!0}return!1}function we(Ie){return bD(Ie)&&(uv(Ie,a)||a===Ie.end&&!!Ie.isUnterminated)}function Je(){let Ie=sie(Z);if(!Ie)return 0;let yt=!1||Ie,Gt=void 0;if(!Gt)return 0;let yn=h.getTypeFromTypeNode(yt),Rn=Y4(Gt,h),Rr=Y4(yn,h),bn=new Set;return Rr.forEach(Kn=>bn.add(Kn.name)),be=ri(be,Yr(Rn,Kn=>!bn.has(Kn.name))),ke=0,Y=!0,1}function ze(){if(Z?.kind===25)return 0;let Ie=be.length,Te=Zre(Z,a,r);if(!Te)return 0;ke=0;let yt,Gt;if(Te.kind===293){let yn=uie(Te,h);if(yn===void 0)return 0;let Rn=h.getContextualType(Te,4),Rr=(Rn||yn).getStringIndexType(),bn=(Rn||yn).getNumberIndexType();if(Y=!!Rr||!!bn,yt=mU(yn,Rn,Te,h),Gt=Te.properties,yt.length===0&&!bn)return 0}if(yt&&yt.length>0){let yn=gr(yt,w.checkDefined(Gt));be=ri(be,yn),Xr(),Te.kind===293&&l.includeCompletionsWithObjectLiteralMethodSnippets&&l.includeCompletionsWithInsertText&&(Xi(Ie),xi(yn,Te))}return 1}function it(){let Ie=r;if(!Ie||!Z)return 0;if(ke=3,Y=!0,ie=Z.kind===43?0:ho(Ie)?2:3,!ti(Ie))return 1;let Te=Z.kind===26?Z.parent.parent:Z.parent;if(!Te)return 0;let yt=Hh(Te)?ld(Te):0;if(Z.kind===89&&!$i(Z))switch(Z.getText()){case"private":yt=yt|2;break;case"static":yt=yt|256;break}if(!(yt&2)&&Ie.symbol){let Gt=h.getSymbolAtLocation(Ie),yn=h.getTypeOfSymbol(Gt),Rn=h.resolveBaseTypesOfClass(yn),Rr=[...Rn],bn=new Set(Rn);for(;Rr.length>0;){let _r=Rr.pop();_r&&h.resolveBaseTypesOfClass(_r).forEach(He=>{bn.has(He)||(Rr.push(He),bn.add(He))})}let Kn=yn.members?Object.values(yn.members):void 0,ur=ao(as(bn.values()),_r=>{let Le=_r.declaredProperties,He=(_r.symbol?.members&&as(_r.symbol?.members.values()))??Oe;return ri(Le??Oe,He)});be=ri(be,ro(ur,Kn??Oe,yt)),Jt(be,(_r,Le)=>{let He=_r?.valueDeclaration;if(He&&Hh(He)&&He.name&&Ia(He.name)){let lt={kind:512,symbolName:h.symbolToString(_r)};qt[Le]=lt}})}return 0}function Re(Ie){return!!Ie.parent&&gs(Ie.parent)&&jm(Ie.parent.parent)&&(Pb(Ie.kind)||Ru(Ie))}function H(Ie){if(Ie){let Te,yt=Xn(Ie.parent,Gt=>ho(Gt)?"quit":tu(Gt)&&Te===Gt.body?!0:(Te=Gt,!1));return yt&&yt}}function Sn(Ie,Te){return r.getLineEndOfPosition(Ie.getEnd())<Te}function Zt(Ie){let Te=Ie.parent,yt=Te.kind;switch(Ie.kind){case 27:return yt===237||Kt(Ie)||yt===242||yt===265;case 24:return yt===265;case 61:return yt===266;case 22:return yt===265;case 20:return yt===255;case 17:return!1;case 29:return $h(yt);case 125:return yt===152&&!ho(Te.parent);case 25:return yt===149||!!Te.parent&&Te.parent.kind===265;case 124:case 122:case 123:return yt===149&&!jm(Te.parent);case 89:{if(Xn(Ie.parent,Cs)&&Sn(Ie,a))return!1;break}case 138:return!0;case 43:return Qi(Ie.parent)&&!Yc(Ie.parent)}if(h2(BS(Ie))&&oie(Ie)||Re(Ie)&&(!Tt(Ie)||Pb(BS(Ie))||$i(Ie)))return!1;switch(BS(Ie)){case 138:case 122:case 123:case 124:case 125:return!0;case 119:return Cl(Ie.parent)}if(Xn(Ie.parent,ho)&&Ie===j&&sn(Ie,a))return!1;let yn=p_(Ie.parent,152);if(yn&&Ie!==j&&ho(j.parent.parent)&&a<=j.end){if(sn(Ie,j.end))return!1;if(Ie.kind!==74&&(C9(yn)||$2(yn)))return!0}return Ru(Ie)&&!vp(Ie.parent)&&!((ho(Ie.parent)||ru(Ie.parent))&&(Ie!==j||a>j.end))}function sn(Ie,Te){return Ie.kind!==74&&(Ie.kind===26||!lu(Ie.end,Te,r))}function mn(Ie){if(Ie.kind===10){let Te=Ie.getFullText();return Te.charAt(Te.length-1)==="."}return!1}function Kt(Ie){return Ie.parent.kind===238}function gr(Ie,Te){if(Te.length===0)return Ie;let yt=new Set,Gt=new Set;for(let Rn of Te){if(Rn.kind!==174&&Rn.kind!==175&&Rn.kind!==266||$i(Rn))continue;let Rr;if(ms(Rn)&&Rn.propertyName)Rn.propertyName.kind===89&&(Rr=Rn.propertyName.text);else{let bn=hi(Rn);Rr=bn&&Qh(bn)?u8(bn):void 0}Rr!==void 0&&Gt.add(Rr)}let yn=Ie.filter(Rn=>!Gt.has(Rn.name));return cs(yt,yn),yn}function Xr(){be.forEach(Ie=>{if(Ie.flags&16777216){let Te=Yi(Ie);fe[Te]=fe[Te]??yo.OptionalMember}})}function cs(Ie,Te){if(Ie.size!==0)for(let yt of Te)Ie.has(yt.name)&&(fe[Yi(yt)]=yo.MemberDeclaredBySpreadAssignment)}function Xi(Ie){for(let Te=Ie;Te<be.length;Te++){let yt=be[Te],Gt=Yi(yt),yn=qt?.[Te],Rn=au(s),Rr=m2(yt,Rn,yn,0);if(Rr){let bn=fe[Gt]??yo.LocationPriority,{name:Kn}=Rr;fe[Gt]=yo.ObjectLiteralProperty(bn,Kn)}}}function ro(Ie,Te,yt){let Gt=new Set;for(let yn of Te){if(yn.kind!==152||$i(yn)||b_(yn,2)||Wy(yn)!==!!(yt&256))continue;let Rn=Hm(yn.name);Rn&&Gt.add(Rn)}return Ie.filter(yn=>!Gt.has(yn.name)&&!!yn.declarations&&!(Sl(yn)&2))}function $i(Ie){return Ie.getStart(r)<=a&&a<=Ie.getEnd()}}function Zre(e,n,r){if(e){let{parent:s}=e;switch(e.kind){case 17:case 27:if(Qa(s))return s;break;case 43:return ev(s)?to(s.parent,Qa):void 0;case 119:return to(s.parent,Qa);case 89:if(e.text==="async"&&vp(e.parent))return e.parent.parent;{if(Qa(e.parent.parent)&&(Zy(e.parent)||vp(e.parent)&&$s(r,e.getEnd()).line!==$s(r,n).line))return e.parent.parent;let l=Xn(s,af);if(l?.getLastToken(r)===e&&Qa(l.parent))return l.parent}break;default:if(s.parent?.parent&&ev(s.parent)&&Qa(s.parent.parent))return s.parent.parent;if(Zy(s)&&Qa(s.parent))return s.parent;let a=Xn(s,af);if(e.kind!==61&&a?.getLastToken(r)===e&&Qa(a.parent))return a.parent}}}function Jk(e,n){let r=Ma(e,n);return r&&e<=r.end&&(g0(r)||ou(r.kind))?{contextToken:Ma(r.getFullStart(),n,void 0),previousToken:r}:{contextToken:r,previousToken:r}}function dU(e,n,r,s){let a=n.isPackageJsonImport?s.getPackageJsonAutoImportProvider():r,l=a.getTypeChecker(),u=n.fileName?l.getMergedSymbol(w.checkDefined(a.getSourceFile(n.fileName)).symbol):void 0;if(!u)return;let d=l.resolveExternalModuleSymbol(u);return d?(d=n.exportName==="default"&&G2(d)||d,{symbol:d,origin:Ure(n,e,u)}):void 0}function m2(e,n,r,s){if(Pre(r))return;let a=Sre(r)?r.symbolName:e.name;if(a===void 0||e.flags&1536&&qD(a.charCodeAt(0))||Fh(e))return;let l={name:a,needsConvertPropertyAccess:!1};if(y_(a,n,2))return l;switch(s){case 3:return gw(r)?{name:r.symbolName,needsConvertPropertyAccess:!1}:void 0;case 0:return{name:JSON.stringify(a),needsConvertPropertyAccess:!1};case 2:case 1:return a.charCodeAt(0)===32?void 0:{name:a,needsConvertPropertyAccess:!0};case 5:case 4:return l;default:w.assertNever(s)}}var g2=[],_U=Fl(()=>{let e=[];for(let n=92;n<=145;n++)Mi(n)&&e.push({name:Mi(n),kind:"keyword",kindModifiers:"",sortText:yo.GlobalsOrKeywords});return e});function Xre(e,n){if(!n)return nO(e);let r=e+8+1;return g2[r]||(g2[r]=nO(e).filter(s=>!Kre(hg(s.name))))}function nO(e){return g2[e]||(g2[e]=_U().filter(n=>{let r=hg(n.name);switch(e){case 0:return!1;case 1:return rO(r)||u2(r)&&r!==96;case 5:return rO(r);case 2:return h2(r);case 3:return eie(r);case 7:return u2(r);default:return w.fail("Unknown keyword filter")}}))}function Kre(e){switch(e){case 97:case 92:case 93:case 140:case 101:case 99:case 104:case 122:case 123:case 124:case 94:case 102:return!0;default:return!1}}function eie(e){return!1}function h2(e){switch(e){case 119:return!0;default:return w7(e)}}function rO(e){return e===119||e===120||e===179||e===178||!g8(e)&&!h2(e)}function BS(e){return Tt(e)?W2(e)??0:e.kind}function tie(e,n){let r=[];if(e){let s=e.getSourceFile(),a=e.parent,l=s.getLineAndCharacterOfPosition(e.end).line,u=s.getLineAndCharacterOfPosition(n).line}return r}function nie(e,n){return Xn(e,r=>y0(r)&&Rk(r,n)?!0:Ol(r)?"quit":!1)}function mU(e,n,r,s){let a=n&&n!==e,l=a&&!(n.flags&3)?s.getUnionType([e,n]):e,u=rie(l,r,s);return a?Yr(u,d):u;function d(_){return Pr(_.declarations)?kt(_.declarations,y=>y.parent!==r):!0}}function rie(e,n,r){return e.isUnion()?r.getAllPossiblePropertiesOfTypes(Yr(e.types,s=>!(s.flags&402784188||r.isArrayLikeType(s)||r.isTypeInvalidDueToUnionDiscriminant(s,n)||r.typeHasCallOrConstructSignatures(s)||s.isClass()&&iie(s.getApparentProperties())))):e.getApparentProperties()}function iie(e){return kt(e,n=>!!(Sl(n)&6))}function Y4(e,n){return e.isUnion()?w.checkEachDefined(n.getAllPossiblePropertiesOfTypes(e.types),"getAllPossiblePropertiesOfTypes() should all be defined"):w.checkEachDefined(e.getApparentProperties(),"getApparentProperties() should all be defined")}function sie(e){if(!e)return;let n=e.parent;switch(e.kind){case 17:if(ap(n))return n;break;case 26:case 27:case 89:if(n.kind===153&&ap(n.parent))return n.parent;break}}function oie(e){return!1}function aie(e,n,r,s){switch(n){case".":case"@":return!0;case'"':case"'":case"`":return!!r&&mW(r)&&s===r.getStart(e)+1;case"<":return!!r&&r.kind===29&&(!Ur(r.parent)||cie(r.parent));case"/":return!!r&&(_f(r)?!!ik(r):!1);case" ":return!!r&&_E(r)&&r.parent.kind===176;case">":return!!r&&Ii(r);default:return w.assertNever(n)}}function cie({left:e}){return Eo(e)}function lie(e){return!!(e.valueDeclaration&&ld(e.valueDeclaration)&256&&ho(e.valueDeclaration.parent))}function uie(e,n){let r=n.getContextualType(e);if(r)return r;let s=Mv(e.parent);if(Ur(s)&&s.operatorToken.kind===74&&e===s.left)return n.getTypeAtLocation(s);if(xc(s))return n.getContextualType(s)}function fie(e,n){if(!e)return;let r=Xn(e,a=>Yh(a)||iO(a)||ds(a)?"quit":gs(a)||ru(a)),s=Xn(n,a=>Yh(a)||iO(a)||ds(a)?"quit":Cs(a));return r||s}function iO(e){return e.parent&&hd(e.parent)&&(e.parent.body===e||e.kind===39)}function gU(e,n,r=new Map){return s(e)||s(hf(e.exportSymbol||e,n));function s(a){return!!(a.flags&788968)||n.isUnknownSymbol(a)||!!(a.flags&1536)&&lg(r,Yi(a))&&n.getExportsOfModule(a).some(l=>gU(l,n,r))}}function pie(e,n){let r=hf(e,n).declarations;return!!Pr(r)&&Ti(r,a2)}function die(e,n){if(n.length===0)return!0;let r=!1,s,a=0,l=e.length;for(let u=0;u<l;u++){let d=e.charCodeAt(u),_=n.charCodeAt(a);if((d===_||d===_ie(_))&&(r||(r=s===void 0||97<=s&&s<=122&&65<=d&&d<=90||s===95&&d!==95),r&&a++,a===n.length))return!0;s=d}return!1}function _ie(e){return 97<=e&&e<=122?e-32:e}function hU(e){return!!(e&&e.kind&64)}function mie(e,n,r,s,a,l,u,d){let _=u.includeCompletionsWithSnippetText||void 0,y=n,h=r.getSourceFile(),v=Wre(e,r,h,s,a,u);if(!v)return;let b=Uk({removeComments:!0,module:l.module,target:l.target,omitTrailingSemicolon:!1,newLine:Yv(w0(a,d?.options))});d?y=b.printAndFormatSnippetList(80,Ve.createNodeArray([v],!0),h,d):y=b.printSnippetList(80,Ve.createNodeArray([v],!0),h);let T=yd({removeComments:!0,module:l.module,target:l.target,omitTrailingSemicolon:!0}),E=Ve.createMethodSignature(void 0,"",v.questionToken,void 0,v.parameters,v.type),g={detail:T.printNode(4,E,h)};return{isSnippet:_,insertText:y,labelDetails:g}}var zk={};lc(zk,{getStringLiteralCompletionDetails:()=>Sie,getStringLiteralCompletions:()=>gie});function gie(e,n,r,s,a,l,u,d,_){if(bg(e,n,r)){if(!r||!_f(r))return;let y=vU(e,r,n,l,a,d);return yie(y,r,e,a,l,u,s,d,n,_)}}function hie(e){return{isGlobalCompletion:!1,isMemberCompletion:!1,isNewIdentifierLocation:!0,entries:e.map(({name:a,kind:l,span:u,extension:d})=>({name:a,kind:l,kindModifiers:yU(d),sortText:yo.LocationPriority,replacementSpan:u}))}}function yU(e){switch(e){case".c":return".c";case".h":return".h";case".lpc":return".lpc";case".json":return".json";case void 0:return"";default:return w.assertNever(e)}}function yie(e,n,r,s,a,l,u,d,_,y){if(e===void 0)return;let h=cw(n,_);switch(e.kind){case 0:return hie(e.paths);case 1:{let v=L2();return vw(e.symbols,v,n,n,r,_,r,s,a,1,l,4,d,u,void 0,void 0,void 0,void 0,void 0,void 0,void 0,y),{isGlobalCompletion:!1,isMemberCompletion:!0,isNewIdentifierLocation:e.hasIndexSignature,optionalReplacementSpan:h,entries:v}}case 2:{let v=no(wl(n),"'")?39:34,b=e.types.map(T=>({name:W_(T.value,v),kindModifiers:"",kind:"string",sortText:yo.LocationPriority,replacementSpan:aw(n,_)}));return{isGlobalCompletion:!1,isMemberCompletion:!1,isNewIdentifierLocation:e.isNewIdentifier,optionalReplacementSpan:h,entries:b}}default:return w.assertNever(e)}}function Z4(e){switch(e.kind){case 165:return QD(e);case 289:return Mv(e);default:return e}}function vU(e,n,r,s,a,l){let u=s.getTypeChecker(),d=Z4(n.parent);switch(d.kind){case 257:{let E=Z4(d.parent);return _(E)}case 174:return Qa(d.parent)&&d.name===n?void 0:y()||y(0);case 281:{let{expression:E,argumentExpression:g}=d;return n===ws(g)?sO(u.getTypeAtLocation(E)):void 0}case 272:case 276:let h=Kv.getArgumentInfoForCompletions(n,r,e,u);return h&&vie(h.invocation,n,h,u)||y(0);case 299:let v=jk(u,d.parent.clauses),b=y();return b?{kind:2,types:b.types.filter(E=>!v.hasValue(E.value)),isNewIdentifier:!1}:void 0;default:return y()||y(0)}function _(h){switch(h.kind){case 261:let{indexType:v,objectType:b}=h;return Rk(v,r)?sO(u.getTypeFromTypeNode(b)):void 0;case 157:{let T=_(Z4(h.parent));if(!T)return;let E=Tie(h,d);return T.kind===1?{kind:1,symbols:T.symbols.filter(g=>!ki(E,g.name)),hasIndexSignature:T.hasIndexSignature}:{kind:2,types:T.types.filter(g=>!ki(E,g.value)),isNewIdentifier:!1}}default:return}}function y(h=4){let v=TU(Ok(n,u,h));if(v.length)return{kind:2,types:v,isNewIdentifier:!1}}}function TU(e,n=new Map){return e?(e=bW(e),e.isUnion()?ao(e.types,r=>TU(r,n)):e.isStringLiteral()&&!(e.flags&1024)&&lg(n,e.value)?[e]:Oe):Oe}function sO(e){return e&&{kind:1,symbols:Yr(e.getApparentProperties(),n=>!0),hasIndexSignature:SW(e)}}function vie(e,n,r,s){let a=!1,l=new Map,u=n,d=s.getCandidateSignaturesForStringLiteralCompletions(e,u),_=[];return Pr(_)?{kind:2,types:_,isNewIdentifier:a}:void 0}function Tie(e,n){return Vi(e.types,r=>r!==n&&dp(r)&&ss(r.literal)?r.literal.text:void 0)}function Sie(e,n,r,s,a,l,u,d){if(!s||!_f(s))return;let _=vU(n,s,r,a,l,d);return _&&bie(e,s,_,n,a.getTypeChecker(),u)}function bie(e,n,r,s,a,l){switch(r.kind){case 0:{let u=Zr(r.paths,d=>d.name===e);return u&&fv(e,yU(u.extension),u.kind,[oc(e)])}case 1:{let u=Zr(r.symbols,d=>d.name===e);return u&&Tw(u,u.name,a,s,n,l)}case 2:return Zr(r.types,u=>u.value===e)?fv(e,"","string",[oc(e)]):void 0;default:return w.assertNever(r)}}var Dl={};lc(Dl,{Core:()=>mg,DefinitionKind:()=>SU,EntryKind:()=>bU,ExportKind:()=>lw,FindReferencesUse:()=>DU,ImportExport:()=>xW,createImportTracker:()=>Tx,findModuleReferences:()=>DW,findReferenceOrRenameEntries:()=>Iie,findReferencedSymbols:()=>wie,getContextNode:()=>O_,getImportOrExportSymbol:()=>Vne,getTextSpanOfEntry:()=>bx,isContextWithStartAndEndNode:()=>bw,isDeclarationOfSymbol:()=>xU,isWriteAccessForReference:()=>PU,toContextSpan:()=>kw,toReferenceEntry:()=>kU,toRenameLocation:()=>Aie});var SU=(e=>(e[e.Symbol=0]="Symbol",e[e.Label=1]="Label",e[e.Keyword=2]="Keyword",e[e.This=3]="This",e[e.String=4]="String",e[e.TripleSlashReference=5]="TripleSlashReference",e))(SU||{}),bU=(e=>(e[e.Span=0]="Span",e[e.Node=1]="Node",e[e.StringLiteral=2]="StringLiteral",e[e.SearchedLocalFoundProperty=3]="SearchedLocalFoundProperty",e[e.SearchedPropertyFoundLocal=4]="SearchedPropertyFoundLocal",e))(bU||{});function i_(e,n=1){return{kind:n,node:e.name||e,context:kie(e)}}function bw(e){return e&&e.kind===void 0}function bx(e){return e.kind===0?e.textSpan:pv(e.node,e.node.getSourceFile())}function O_(e){if(e)switch(e.kind){case 237:return!mE(e.parent)||e.parent.declarations.length!==1?e:lf(e.parent.parent)?e.parent.parent:zm(e.parent.parent)?O_(e.parent.parent):e.parent;case 266:return O_(e.parent.parent);case 269:return gk(e.parent)?e.parent:e;case 244:return{start:e.initializer,end:e.expression};case 174:case 175:return Ik(e.parent)?O_(Xn(e.parent,n=>Ur(n)||zm(n))):e;case 256:return{start:Zr(e.getChildren(e.getSourceFile()),n=>n.kind===117),end:e.caseBlock};default:return e}}function kie(e){if(hp(e))return O_(e);if(e.parent){if(!hp(e.parent)){if(z2(e.parent))return e.parent;if(ss(e))return console.warn("TODO implement me - isStringLiteral import lookup"),e;let n=Xn(e,Ia);return n?O_(n.parent):void 0}if(e.parent.name===e)return O_(e.parent)}}function pv(e,n,r){let s=e.getStart(n),a=(r||e).getEnd();return ss(e)&&a-s>2&&(w.assert(r===void 0),s+=1,a-=1),r?.kind===240&&(a=r.getFullStart()),Ml(s,a)}function kw(e,n,r){if(!r)return;let s=bw(r)?pv(r.start,n,r.end):pv(r,n);return s.start!==e.start||s.length!==e.length?{contextSpan:s}:void 0}function Cie(e){return e.kind===114||!!Rv(e)||rk(e)}function Pie(e,n){let r=kU(e);return n?{...r,isDefinition:e.kind!==0&&xU(e.node,n)}:r}function kU(e){let n=CU(e);if(e.kind===0)return{...n,isWriteAccess:!1};let{kind:r,node:s}=e;return{...n,isWriteAccess:PU(s),isInString:r===2?!0:void 0}}function CU(e){if(e.kind===0)return{textSpan:e.textSpan,fileName:e.fileName};{let n=e.node.getSourceFile(),r=pv(e.node,n);return{textSpan:r,fileName:n.fileName,...kw(r,n,e.context)}}}function PU(e){let n=Rv(e);return!!n&&xie(n)||e.kind===114||ey(e)}function xie(e){if(e.flags&33554432)return!0;switch(e.kind){case 269:case 266:case 274:case 114:case 171:case 217:case 225:case 149:case 175:case 148:return!0;case 174:return!Ik(e.parent);case 169:case 270:return!!e.body;case 237:case 152:return!!e.initializer;case 227:case 220:return!1;default:return w.failBadSyntaxKind(e)}}function xU(e,n){if(!n)return!1;let r=Rv(e)||(e.kind===114?e.parent:rk(e)?e.parent.parent:void 0),s=r&&Ur(r)?r.left:void 0;return!!(r&&n.declarations?.some(a=>a===r||a===s))}function R1(e){let n=e.getSourceFile();return{sourceFile:n,textSpan:pv(Ia(e)?e.expression:e,n)}}function Die(e,n,r){let s=mg.getIntersectingMeaningFromDeclarations(r,e),a=e.declarations&&Fa(e.declarations)||r,{displayParts:l,symbolKind:u}=du.getSymbolDisplayPartsDocumentationAndSymbolKind(n,e,a.getSourceFile(),a,a,s);return{displayParts:l,kind:u}}function Eie(e,n,r){let s=(()=>{switch(e.type){case 0:{let{symbol:h}=e,{displayParts:v,kind:b}=Die(h,n,r),T=v.map(M=>M.text).join(""),E=h.declarations&&Fa(h.declarations),g=E?hi(E)||E:r;return{...R1(g),name:T,kind:b,displayParts:v,context:O_(E)}}case 1:{let{node:h}=e;return{...R1(h),name:h.text,kind:"label",displayParts:[Qo(h.text,17)]}}case 2:{let{node:h}=e,v=Mi(h.kind);return{...R1(h),name:v,kind:"keyword",displayParts:[{text:v,kind:"keyword"}]}}case 3:{let{node:h}=e,v=n.getSymbolAtLocation(h),b=v&&du.getSymbolDisplayPartsDocumentationAndSymbolKind(n,v,h.getSourceFile(),u0(h),h).displayParts||[oc("this")];return{...R1(h),name:"this",kind:"var",displayParts:b}}case 4:{let{node:h}=e;return{...R1(h),name:h.text,kind:"var",displayParts:[Qo(wl(h),8)]}}default:return w.assertNever(e)}})(),{sourceFile:a,textSpan:l,name:u,kind:d,displayParts:_,context:y}=s;return{containerKind:"",containerName:"",fileName:a.fileName,kind:d,name:u,textSpan:l,displayParts:_,...kw(l,a,y)}}function wie(e,n,r,s,a){let l=ju(s,a),u={use:1},d=mg.getReferencedSymbolsForNode(a,l,e,r,n,u),_=e.getTypeChecker(),y=mg.getAdjustedNode(l,u),h=Cie(y)?_.getSymbolAtLocation(y):void 0;return!d||!d.length?void 0:Vi(d,({definition:v,references:b})=>v&&{definition:_.runWithCancellationToken(n,T=>Eie(v,T,l)),references:b.map(T=>Pie(T,h))})}var DU=(e=>(e[e.Other=0]="Other",e[e.References=1]="References",e[e.Rename=2]="Rename",e))(DU||{}),mg;(e=>{function n(Se,De,Ne,$e,we,Je={},ze=new Set($e.map(it=>it.fileName))){if(De=r(De,Je),ti(De)){let mn=Vk.getReferenceAtPosition(De,Se,Ne);if(!mn?.file)return;let Kt=Ne.getTypeChecker().getMergedSymbol(mn.file.symbol);return Kt?y(Ne,Kt,!1,$e,ze):(Ne.getFileIncludeReasons(),void 0)}if(!Je.implementations){let mn=v(De,$e,we);if(mn)return mn}let it=Ne.getTypeChecker(),Re=it.getSymbolAtLocation(De);if(!Re)return!Je.implementations&&ss(De)?_n(De,$e,it,we):void 0;if(Re.name==="export=")return y(Ne,Re.parent,!1,$e,ze);let H=u(Re,Ne,$e,we,Je,ze);if(H&&!(Re.flags&33554432))return H;let Sn=void 0,Zt=Sn&&u(Sn,Ne,$e,we,Je,ze),sn=b(Re,De,$e,ze,it,we,Je);return d(Ne,H,sn,Zt)}e.getReferencedSymbolsForNode=n;function r(Se,De){return De.use===1?Se=GE(Se):De.use===2&&(Se=Lk(Se)),Se}e.getAdjustedNode=r;function s(Se,De,Ne,$e=new Set(Ne.map(we=>we.fileName))){let we=De.getSourceFile(Se)?.symbol;if(we)return y(De,we,!1,Ne,$e)[0]?.references||Oe;let Je=De.getFileIncludeReasons(),ze=De.getSourceFile(Se);return ze&&Je&&a(ze,Je,De)||Oe}e.getReferencesForFileName=s;function a(Se,De,Ne){let $e,we=De.get(Se.path)||Oe;for(let Je of we)if(tp(Je)){let ze=Ne.getSourceFileByPath(Je.file),it=Rh(Ne,Je);Xm(it)&&($e=ei($e,{kind:0,fileName:ze.fileName,textSpan:cv(it)}))}return $e}function l(Se,De,Ne){}function u(Se,De,Ne,$e,we,Je){let ze=Se.flags&1536&&Se.declarations&&Zr(Se.declarations,ti);if(!ze)return;let it=Se.exports.get("export="),Re=y(De,Se,!!it,Ne,Je);if(!it||!Je.has(ze.fileName))return Re;let H=De.getTypeChecker();return Se=hf(it,H),d(De,Re,b(Se,void 0,Ne,Je,H,$e,we))}function d(Se,...De){let Ne;for(let $e of De)if(!(!$e||!$e.length)){if(!Ne){Ne=$e;continue}for(let we of $e){if(!we.definition||we.definition.type!==0){Ne.push(we);continue}let Je=we.definition.symbol,ze=Pl(Ne,Re=>!!Re.definition&&Re.definition.type===0&&Re.definition.symbol===Je);if(ze===-1){Ne.push(we);continue}let it=Ne[ze];Ne[ze]={definition:it.definition,references:it.references.concat(we.references).sort((Re,H)=>{let Sn=_(Se,Re),Zt=_(Se,H);if(Sn!==Zt)return vs(Sn,Zt);let sn=bx(Re),mn=bx(H);return sn.start!==mn.start?vs(sn.start,mn.start):vs(sn.length,mn.length)})}}}return Ne}function _(Se,De){let Ne=De.kind===0?Se.getSourceFile(De.fileName):De.node.getSourceFile();return Se.getSourceFiles().indexOf(Ne)}function y(Se,De,Ne,$e,we){w.assert(!!De.valueDeclaration);let Je=Vi(DW(Se,$e,De),it=>{if(it.kind==="import"){let Re=it.literal.parent;return dp(Re)&&w.fail("TODO implement me - isLiteralTypeNode"),i_(it.literal)}else if(it.kind==="implicit")w.fail("TODO implement me - implicit");else return{kind:0,fileName:it.referencingFile.fileName,textSpan:cv(it.ref)}});if(De.declarations)for(let it of De.declarations)switch(it.kind){case 176:break;default:w.assert(!!(De.flags&33554432),"Expected a module symbol to be declared by a SourceFile or ModuleDeclaration.")}let ze=De.exports.get("export=");if(ze?.declarations)for(let it of ze.declarations){let Re=it.getSourceFile();if(we.has(Re.fileName)){let H=Ur(it)&&Ii(it.left)?it.left.expression:hi(it)||it;Je.push(i_(H))}}return Je.length?[{definition:{type:0,symbol:De},references:Je}]:Oe}function h(Se){return!1}function v(Se,De,Ne){if(u2(Se.kind))return Se.kind===105&&TM(Se.parent)?void 0:re(De,Se.kind,Ne,void 0);if(px(Se)){let $e=dx(Se.parent,Se.text);return $e&&G($e.parent,$e)}else if(IB(Se))return G(Se.parent,Se);if(Se.kind===71)return Lt(Se)}function b(Se,De,Ne,$e,we,Je,ze){let it=De&&g(Se,De,we,!xi(ze))||Se,Re=De?Vr(De,it):7,H=[],Sn=new z(Ne,$e,De?E(De):0,we,Je,Re,ze,H),Zt=Sn.createSearch(De,it,void 0,{allSearchSymbols:De?kn(it,De,we,ze.use===2,!!ze.providePrefixAndSuffixTextForRename,!!ze.implementations):[it]});return T(it,Sn,Zt),H}function T(Se,De,Ne){let $e=se(Se);if($e)rt($e,$e.getSourceFile(),Ne,De,!(ti($e)&&!ki(De.sourceFiles,$e)));else for(let we of De.sourceFiles)De.cancellationToken.throwIfCancellationRequested(),de(we,Ne,De)}function E(Se){switch(Se.kind){case 89:default:return 0}}function g(Se,De,Ne,$e){let{parent:we}=De;return Ya(Se.declarations,Je=>{if(!Je.parent){if(Se.flags&33554432)return;w.fail(`Unexpected symbol at ${w.formatSyntaxKind(De.kind)}: ${w.formatSymbol(Se)}`)}return ap(Je.parent)&&mk(Je.parent.parent)?Ne.getPropertyOfType(Ne.getTypeFromTypeNode(Je.parent.parent),Se.name):void 0})}let M;(Se=>{Se[Se.None=0]="None",Se[Se.Constructor=1]="Constructor",Se[Se.Class=2]="Class"})(M||(M={}));function N(Se){if(!(Se.flags&33555968))return;let De=Se.declarations&&Zr(Se.declarations,Ne=>!ti(Ne));return De&&De.symbol}class z{constructor(De,Ne,$e,we,Je,ze,it,Re){this.sourceFiles=De,this.sourceFilesSet=Ne,this.specialSearchKind=$e,this.checker=we,this.cancellationToken=Je,this.searchMeaning=ze,this.options=it,this.result=Re,this.inheritsFromCache=new Map,this.markSeenContainingTypeReference=lv(),this.markSeenReExportRHS=lv(),this.symbolIdToReferences=[],this.sourceFileToSeenSymbols=[]}includesSourceFile(De){return this.sourceFilesSet.has(De.fileName)}getImportSearches(De,Ne){return this.importTracker||(this.importTracker=Tx(this.sourceFiles,this.sourceFilesSet,this.checker,this.cancellationToken)),this.importTracker(De,Ne,this.options.use===2)}createSearch(De,Ne,$e,we={}){let{text:Je=gf(ya(G2(Ne)||N(Ne)||Ne)),allSearchSymbols:ze=[Ne]}=we,it=Je,Re=this.options.implementations&&De?si(De,Ne,this.checker):void 0;return{symbol:Ne,comingFrom:$e,text:Je,escapedText:it,parents:Re,allSearchSymbols:ze,includes:H=>ki(ze,H)}}referenceAdder(De){let Ne=Yi(De),$e=this.symbolIdToReferences[Ne];return $e||($e=this.symbolIdToReferences[Ne]=[],this.result.push({definition:{type:0,symbol:De},references:$e})),(we,Je)=>$e.push(i_(we,Je))}addStringOrCommentReference(De,Ne){this.result.push({definition:void 0,references:[{kind:0,fileName:De,textSpan:Ne}]})}markSearchedSymbols(De,Ne){let $e=Sa(De),we=this.sourceFileToSeenSymbols[$e]||(this.sourceFileToSeenSymbols[$e]=new Set),Je=!1;for(let ze of Ne)Je=Im(we,Yi(ze))||Je;return Je}}function X(Se,De,Ne,$e){let{importSearches:we,singleReferences:Je,indirectUsers:ze}=$e.getImportSearches(De,Ne);if(Je.length){let it=$e.referenceAdder(De);for(let Re of Je)Z(Re,$e)&&it(Re)}for(let[it,Re]of we)be(it.getSourceFile(),$e.createSearch(it,Re,1),$e);if(ze.length){let it;switch(Ne.exportKind){case 0:it=$e.createSearch(Se,De,1);break;case 1:it=$e.options.use===2?void 0:$e.createSearch(Se,De,1,{text:De.name});break;case 2:break}if(it)for(let Re of ze)de(Re,it,$e)}}function j(Se,De,Ne,$e,we,Je,ze,it){let Re=Tx(Se,new Set(Se.map(sn=>sn.fileName)),De,Ne),{importSearches:H,indirectUsers:Sn,singleReferences:Zt}=Re($e,{exportKind:ze?1:0,exportingModuleSymbol:we},!1);for(let[sn]of H)it(sn);for(let sn of Zt);for(let sn of Sn)for(let mn of Y(sn,ze?"default":Je));}e.eachExportReference=j;function Z(Se,De){return qt(Se,De)?De.options.use!==2?!0:(Tt(Se),!1):!1}function le(Se,De){if(Se.declarations)for(let Ne of Se.declarations){let $e=Ne.getSourceFile();be($e,De.createSearch(Ne,Se,0),De,De.includesSourceFile($e))}}function de(Se,De,Ne){_w(Se).get(De.text)!==void 0&&be(Se,De,Ne)}function se(Se){let{declarations:De,flags:Ne,parent:$e,valueDeclaration:we}=Se;if(we&&(we.kind===270||we.kind===274))return we;if(!De)return;if(Ne&8196){let it=Zr(De,Re=>b_(Re,2));return it?p_(it,176):void 0}let Je=$e&&!(Se.flags&262144),ze;for(let it of De){let Re=u0(it);if(ze&&ze!==Re||!Re||Re.kind===176)return;if(ze=Re,Zc(ze)){let H;for(;H=l8(ze);)ze=H}}return Je?ze.getSourceFile():ze}function ye(Se,De,Ne,$e=Ne){return he(Se,De,Ne,()=>!0,$e)||!1}e.isSymbolReferencedInFile=ye;function he(Se,De,Ne,$e,we=Ne){let Je=De.getSymbolAtLocation(Se);if(Je)for(let ze of Y(Ne,Je.name,we)){if(!Tt(ze)||ze===Se||ze.text!==Se.text)continue;if(De.getSymbolAtLocation(ze)===Je||De.getShorthandAssignmentValueSymbol(ze.parent)===Je){let Re=$e(ze);if(Re)return Re}}}e.eachSymbolReferenceInFile=he;function oe(Se,De){return Yr(Y(De,Se),we=>!!Rv(we)).reduce((we,Je)=>{let ze=$e(Je);return!kt(we.declarationNames)||ze===we.depth?(we.declarationNames.push(Je),we.depth=ze):ze<we.depth&&(we.declarationNames=[Je],we.depth=ze),we},{depth:1/0,declarationNames:[]}).declarationNames;function $e(we){let Je=0;for(;we;)we=u0(we),Je++;return Je}}e.getTopMostDeclarationNamesInFile=oe;function ie(Se,De,Ne,$e){if(!Se.name||!Tt(Se.name))return!1;let we=w.checkDefined(Ne.getSymbolAtLocation(Se.name));for(let Je of De)for(let ze of Y(Je,we.name)){if(!Tt(ze)||ze===Se.name||ze.text!==Se.name.text)continue;let it=VE(ze),Re=hs(it.parent)&&it.parent.expression===it?it.parent:void 0,H=Ne.getSymbolAtLocation(ze);if(H&&Ne.getRootSymbols(H).some(Sn=>Sn===we)&&$e(ze,Re))return!0}return!1}e.someSignatureUsage=ie;function Y(Se,De,Ne=Se){return Vi(_e(Se,De,Ne),$e=>{let we=ju(Se,$e);return we===Se?void 0:we})}function _e(Se,De,Ne=Se){let $e=[];if(!De||!De.length)return $e;let we=Se.text,Je=we.length,ze=De.length,it=we.indexOf(De,Ne.pos);for(;it>=0&&!(it>Ne.end);){let Re=it+ze;(it===0||!Kl(we.charCodeAt(it-1),1))&&(Re===Je||!Kl(we.charCodeAt(Re),1))&&$e.push(it),it=we.indexOf(De,it+ze+1)}return $e}function G(Se,De){let Ne=Se.getSourceFile(),$e=De.text,we=Vi(Y(Ne,$e,Se),Je=>Je===De||px(Je)&&dx(Je,$e)===De?i_(Je):void 0);return[{definition:{type:1,node:De},references:we}]}function ke(Se,De){switch(Se.kind){case 89:return Se.text?.length===De.length;case 16:return!1;case 10:return!1;case 114:return De.length===7;default:return!1}}function re(Se,De,Ne,$e){let we=ao(Se,Je=>(Ne.throwIfCancellationRequested(),Vi(Y(Je,Mi(De),Je),ze=>{if(ze.kind===De&&(!$e||$e(ze)))return i_(ze)})));return we.length?[{definition:{type:2,node:we[0].node},references:we}]:void 0}function be(Se,De,Ne,$e=!0){return Ne.cancellationToken.throwIfCancellationRequested(),rt(Se,Se,De,Ne,$e)}function rt(Se,De,Ne,$e,we){if($e.markSearchedSymbols(De,Ne.allSearchSymbols))for(let Je of _e(De,Ne.text,Se))fe(De,Je,Ne,$e,we)}function qt(Se,De){return!!(ov(Se)&De.searchMeaning)}function fe(Se,De,Ne,$e,we){let Je=ju(Se,De);if(!ke(Je,Ne.text)){!$e.options.implementations&&($e.options.findInStrings&&bg(Se,De)||$e.options.findInComments&&RB(Se,De))&&$e.addStringOrCommentReference(Se.fileName,Ju(De,Ne.text.length));return}if(!qt(Je,$e))return;let ze=Je.getSourceFile();$e.checker.getDiagnostics(ze);let it=$e.checker.getSymbolAtLocation(Je);if(!it)return;let Re=Je.parent;if(v0(Re)&&Re.isNameFirst&&Re.typeExpression&&R_(Re.typeExpression.type)&&Re.typeExpression.type.jsDocPropertyTags&&Pr(Re.typeExpression.type.jsDocPropertyTags)){pt(Re.typeExpression.type.jsDocPropertyTags,Je,Ne,$e);return}let H=on(Ne,it,Je,$e);if(!H){Mt(it,Ne,$e);return}switch($e.specialSearchKind){case 0:we&&Yt(Je,H,$e);break;default:w.fail("special serach kind")}Nr(Je)&&ms(Je.parent)&&Ny(Je.parent.parent.parent)&&(it=Je.parent.symbol,!it)||je(Je,it,Ne,$e)}function pt(Se,De,Ne,$e){let we=$e.referenceAdder(Ne.symbol);Yt(De,Ne.symbol,$e),Jt(Se,Je=>{iu(Je.name)&&we(Je.name.left)})}function je(Se,De,Ne,$e){let we=De.parent?.exports&&De.parent.exports.has(De.name),Je=!1,ze=De;Je&&!xi($e.options)?le(ze,$e):we&&X(Se,ze,{exportKind:1,exportingModuleSymbol:ze.parent},$e)}function Mt({flags:Se,valueDeclaration:De},Ne,$e){let we=$e.checker.getShorthandAssignmentValueSymbol(De),Je=De&&hi(De);!(Se&33554432)&&Je&&Ne.includes(we)&&Yt(Je,we,$e)}function Yt(Se,De,Ne){let{kind:$e,symbol:we}="kind"in De?De:{kind:void 0,symbol:De};if(Ne.options.use===2&&Se.kind===114)return;let Je=Ne.referenceAdder(we);Ne.options.implementations?tt(Se,Je,Ne):Je(Se,$e)}function Bt(Se,De,Ne){}function Me(Se){return Se.members&&Se.members.get("__constructor")}function tt(Se,De,Ne){if(Ru(Se)&&Vn(Se.parent)){De(Se);return}if(Se.kind!==89)return;Se.parent.kind===175&&_i(Se,Ne.checker,De);let $e=Xn(Se,ze=>!iu(ze.parent)&&!Vs(ze.parent)&&!Ev(ze.parent)),we=$e.parent;if($2(we)&&we.type===$e&&Ne.markSeenContainingTypeReference(we)){if(P_(we))Je(we.initializer);else if(Qi(we)&&we.body){let ze=we.body;ze.kind===236?k_(ze,it=>{it.expression&&Je(it.expression)}):Je(ze)}}function Je(ze){me(ze)&&De(ze)}}function me(Se){switch(Se.kind){case 289:return me(Se.expression);case 270:case 293:case 274:case 290:return!0;default:return!1}}function dt(Se,De,Ne,$e){if(Se===De)return!0;let we=Yi(Se)+","+Yi(De),Je=Ne.get(we);if(Je!==void 0)return Je;Ne.set(we,!1);let ze=!!Se.declarations&&Se.declarations.some(it=>Jb(it).some(Re=>{let H=$e.getTypeAtLocation(Re);return!!H&&!!H.symbol&&dt(H.symbol,De,Ne,$e)}));return Ne.set(we,ze),ze}function Lt(Se){let De=MP(Se,!1);if(!De)return;let Ne=256;switch(De.kind){case 152:Ne&=AD(De),De=De.parent;break;default:return}let $e=De.getSourceFile(),we=Vi(Y($e,"super",De),Je=>{if(Je.kind!==71)return;let ze=MP(Je,!1);return ze&&Wy(ze)===!!Ne&&ze.parent.symbol===De.symbol?i_(Je):void 0});return[{definition:{type:0,symbol:De.symbol},references:we}]}function Vt(Se){return Se.kind===89&&Se.parent.kind===149&&Se.parent.name===Se}function _n(Se,De,Ne,$e){let we=f2(Se,Ne),Je=ao(De,ze=>($e.throwIfCancellationRequested(),Vi(Y(ze,Se.text),it=>{if(ss(it)&&it.text===Se.text)if(we){let Re=f2(it,Ne);if(we!==Ne.getStringType()&&(we===Re||hn(it,Ne)))return i_(it,2)}else return hE(it)&&!cp(it,ze)?void 0:i_(it,2)})));return[{definition:{type:4,node:Se},references:Je}]}function hn(Se,De){if(Kp(Se.parent))return De.getPropertyOfType(De.getTypeAtLocation(Se.parent.parent),Se.text)}function kn(Se,De,Ne,$e,we,Je){let ze=[];return ue(Se,De,Ne,$e,!($e&&we),(it,Re,H)=>{H&&Ct(Se)!==Ct(H)&&(H=void 0),ze.push(H||Re||it)},()=>!Je),ze}function ue(Se,De,Ne,$e,we,Je,ze){let it=void 0,Re=void 0;if(Re){let sn=Je(Re,void 0,void 0,1);if(sn)return sn}let H=Zt(Se);if(H)return H;if(!$e){let sn;return sn=void 0,sn&&Zt(sn,4)}if(w.assert($e),we)return;function Zt(sn,mn){return Ya(Ne.getRootSymbols(sn),Kt=>Je(sn,Kt,void 0,mn)||(Kt.parent&&Kt.parent.flags&96&&ze(Kt)?Ze(Kt.parent,Kt.name,Ne,gr=>Je(sn,Kt,gr,mn)):void 0))}}function Ze(Se,De,Ne,$e){let we=new Map;return Je(Se);function Je(ze){if(!(!(ze.flags&96)||!lg(we,Yi(ze))))return Ya(ze.declarations,it=>Ya(Jb(it),Re=>{let H=Ne.getTypeAtLocation(Re),Sn=H&&H.symbol&&Ne.getPropertyOfType(H,De);return H&&Sn&&(Ya(Ne.getRootSymbols(Sn),$e)||Je(H.symbol))}))}}function Ct(Se){return Se.valueDeclaration?!!(ld(Se.valueDeclaration)&256):!1}function on(Se,De,Ne,$e){let{checker:we}=$e;return ue(De,Ne,we,!1,$e.options.use!==2||!!$e.options.providePrefixAndSuffixTextForRename,(Je,ze,it,Re)=>(it&&Ct(De)!==Ct(it)&&(it=void 0),Se.includes(it||ze||Je)?{symbol:ze&&!(Es(Je)&6)?ze:Je,kind:Re}:void 0),Je=>!(Se.parents&&!Se.parents.some(ze=>dt(Je.parent,ze,$e.inheritsFromCache,we))))}function Vr(Se,De){let Ne=ov(Se),{declarations:$e}=De;if($e){let we;do{we=Ne;for(let Je of $e){let ze=c2(Je);ze&Ne&&(Ne|=ze)}}while(Ne!==we)}return Ne}e.getIntersectingMeaningFromDeclarations=Vr;function Vn(Se){return Se.flags&33554432?Ry(Se)?P_(Se):tu(Se)?!!Se.body:ho(Se):void 0}function _i(Se,De,Ne){let $e=De.getSymbolAtLocation(Se),we=De.getShorthandAssignmentValueSymbol($e.valueDeclaration);if(we)for(let Je of we.getDeclarations())c2(Je)&1&&Ne(Je)}e.getReferenceEntriesForShorthandPropertyAssignment=_i;function xr(Se,De,Ne){Ns(Se,$e=>{$e.kind===De&&Ne($e),xr($e,De,Ne)})}function si(Se,De,Ne){let $e=Qv(Se)?Se.parent:void 0,we=$e&&Ne.getTypeAtLocation($e.expression),Je=Vi(we&&(we.isUnionOrIntersection()?we.types:we.symbol===De.parent?void 0:[we]),ze=>ze.symbol&&ze.symbol.flags&96?ze.symbol:void 0);return Je.length===0?void 0:Je}function xi(Se){return Se.use===2&&Se.providePrefixAndSuffixTextForRename}})(mg||(mg={}));function Nie(e){return e&&ao(e,n=>n.references)}function Iie(e,n,r,s,a,l,u){return Xt(Nie(mg.getReferencedSymbolsForNode(a,s,e,r,n,l)),d=>u(d,s,e.getTypeChecker()))}function Aie(e,n,r,s,a){return{...CU(e),...s&&Oie(e,n,r,a)}}function Oie(e,n,r,s){if(e.kind!==0&&(Tt(n)||_f(n))){let{node:a,kind:l}=e,u=a.parent,d=n.text,_=vp(u);if(_){let y={prefixText:d+": "},h={suffixText:": "+d};if(l===3)return y;if(l===4)return h;if(_){let v=u.parent;return h}else return y}}if(e.kind!==0&&Tp(e.node)&&ia(e.node.parent)){let a=JB(s);return{prefixText:a,suffixText:a}}return Um}var Vk={};lc(Vk,{createDefinitionInfo:()=>jh,getDefinitionAtPosition:()=>Lie,getReferenceAtPosition:()=>EU});function Lie(e,n,r,s,a){let l=EU(n,r,e),u=l&&[K4(l.reference.fileName,l.fileName,l.unverified)]||Oe;if(l?.file)return u;let d=ju(n,r);if(d===n)return;let{parent:_}=d,y=e.getTypeChecker();switch(zj(e,n),d.kind){case 116:let g=Xn(d.parent,j=>tu(j));return g?[aO(y,g)]:void 0;case 114:if(!hk(d.parent))break;case 113:let M=Xn(d.parent,yM);if(M)return[Bie(M,n)];break;case 16:let N=Xn(d,zv);if(N){let j=N.fileName;return[K4(j,j,!1)]}case 178:let X=d.fileName;return[K4(X,X,!1)]}let{symbol:h,failedAliasResolution:v}=Uie(d,y,a),b=d;if(s&&v&&w.fail("implement me"),!h)return ri(u,void 0);if(s&&Ti(h.declarations,g=>g.getSourceFile().fileName===n.fileName))return;let T=Fie(y,d);if(T){let g=aO(y,T,v);if(y.getRootSymbols(h).some(M=>Mie(M,T)))return[g];{let M=oO(y,h,d,v,T)||Oe;return d.kind===71?[g,...M]:[...M,g]}}if(d.parent.kind===175){let g=y.getShorthandAssignmentValueSymbol(h.valueDeclaration),M=g?.declarations?g.declarations.map(N=>jh(N,y,g,d,!1,v)):Oe;return ri(M,[])}let E=[];return ri(u,E.length?E:oO(y,h,d,v))}function Fie(e,n){let r=Rie(n),s=r&&e.getResolvedSignature(r);return to(s&&s.declaration,a=>Qi(a))}function Rie(e){let n=Xn(e,s=>!Qv(s)),r=n?.parent;return r&&v_(r)&&K2(r)===n?r:void 0}function Mie(e,n){return e===n.symbol||e===n.symbol.parent||pp(n.parent)||!v_(n.parent)&&e===to(n.parent,T_)?.symbol}function oO(e,n,r,s,a){let l=Yr(n.declarations,b=>b!==a),u=y()||h();if(u)return u;let d=Yr(l,b=>!0),_=kt(d)?d:l;return Xt(_,b=>jh(b,e,n,r,!1,s));function y(){n.flags&32&&!(n.flags&19)&&HE(r)}function h(){return kB(r)||$E(r)?v(l,!1):void 0}function v(b,T){if(!b)return;let E=b.filter(Qi),g=E.filter(M=>!!M.body);return E.length?g.length!==0?g.map(M=>jh(M,e,n,r)):[jh(jo(E),e,n,r,!1,s)]:void 0}}function X4(e,n){return Zr(e,r=>x7(r,n))}function EU(e,n,r){let s=X4(e.referencedFiles,n);if(s){let u=r.getSourceFileFromReference(e,s);return u&&{reference:s,fileName:u.fileName,file:u,unverified:!1}}let a=X4(e.typeReferenceDirectives,n);if(a){let u=r.getResolvedTypeReferenceDirectiveFromTypeReferenceDirective(a,e)?.resolvedTypeReferenceDirective,d=u&&r.getSourceFile(u.resolvedFileName);return d&&{reference:a,fileName:d.fileName,file:d,unverified:!1}}if(X4(e.libReferenceDirectives,n)&&console.warn("TODO - implement me - getReferenceAtPosition - lib"),e.imports.length){let u=Fk(e,n),d;if(ss(u)&&(d=r.getResolvedModuleFromModuleSpecifier(u,e))){let _=d.resolvedModule?.resolvedFileName,y=_||I_(li(e.fileName),u.text);return{file:r.getSourceFile(y),fileName:y,reference:{pos:u.getStart(),end:u.getEnd(),fileName:u.text},unverified:!_}}}}function K4(e,n,r){return{fileName:n,textSpan:Ml(0,0),kind:"script",name:e,containerName:void 0,containerKind:void 0,unverified:r}}function jh(e,n,r,s,a,l){let u=n.symbolToString(r),d=du.getSymbolKind(n,r,s),_=r.parent?n.symbolToString(r.parent,s):"";return jie(n,e,d,u,_,a,l)}function aO(e,n,r){return jh(n,e,n.symbol,n,!1,r)}function jie(e,n,r,s,a,l,u,d){let _=n.getSourceFile(),y=(Lv(n)?kc(n).fileName:void 0)||_.fileName;if(!d){let h=hi(n)||n;d=Sp(h,_)}return{fileName:y,textSpan:d,kind:r,name:s,containerKind:void 0,containerName:a,...Dl.toContextSpan(d,_,Dl.getContextNode(n)),isLocal:!kx(e,n),isAmbient:!!(n.flags&33554432),unverified:l,failedAliasResolution:u}}function kx(e,n){if(e.isDeclarationVisible(n))return!0;if(!n.parent)return!1;if(P_(n.parent)&&n.parent.initializer===n)return kx(e,n.parent);switch(n.kind){case 152:if(b_(n,2))return!1;case 174:case 175:case 293:case 274:case 283:case 270:return kx(e,n.parent);default:return!1}}function Bie(e,n){let r=Dl.getContextNode(e),s=Sp(bw(r)?r.start:r,n);return{fileName:n.fileName,textSpan:s,kind:"keyword",name:"switch",containerKind:void 0,containerName:"",...Dl.toContextSpan(s,n,r),isLocal:!0,isAmbient:!1,unverified:!1,failedAliasResolution:void 0}}function Wie(e,n){return e.kind!==89&&e.kind!==16?!1:(e.parent===n,!0)}function Uie(e,n,r){let s=n.getSymbolAtLocation(e),a=!1;if(s?.declarations&&s.flags&2097152&&!r&&Wie(e,s.declarations[0])){let l=n.getAliasedSymbol(s);if(l.declarations)return{symbol:l};a=!0}return{symbol:s,failedAliasResolution:a}}var y2={};lc(y2,{getRenameInfo:()=>Jie,nodeIsEligibleForRename:()=>wU});function Jie(e,n,r,s){let a=Lk(ju(n,r));if(wU(a)){let l=zie(a,e.getTypeChecker(),n,e,s);if(l)return l}return v2(P.You_cannot_rename_this_element)}function zie(e,n,r,s,a){let l=n.getSymbolAtLocation(e);if(!l){if(_f(e)){let b=f2(e,n);if(b&&(b.flags&128||b.flags&1048576&&Ti(b.types,T=>!!(T.flags&128))))return cO(e.text,e.text,"string","",e,r)}return}let{declarations:u}=l;if(!u||u.length===0)return;if(u.some(b=>Vie(s,b)))return v2(P.You_cannot_rename_elements_that_are_defined_in_the_standard_TypeScript_library);if(Tt(e)&&e.text==="default"&&l.parent&&l.parent.flags&1536)return;if(_f(e)&&ik(e))return a.allowRenameOfImportPath?Hie(e,r,l):void 0;let d=qie(r,l,n,a);if(d)return v2(d);let _=du.getSymbolKind(n,l,e),y=zB(e)||_u(e)&&e.parent.kind===147?gf(Zh(e)):void 0,h=y||n.symbolToString(l),v=y||n.getFullyQualifiedName(l);return cO(h,v,_,du.getSymbolModifiers(n,l),e,r)}function Vie(e,n){let r=n.getSourceFile();return e.isSourceFileDefaultLibrary(r)&&el(r.fileName,".h")}function qie(e,n,r,s){!s.providePrefixAndSuffixTextForRename&&n.flags&2097152;let{declarations:a}=n;!a||$ie(e.path)}function $ie(e){let n=pu(e),r=n.lastIndexOf("node_modules");if(r!==-1)return n.slice(0,r+2)}function Hie(e,n,r){if(!df(e.text))return v2(P.You_cannot_rename_a_module_via_a_global_import);let s=r.declarations&&Zr(r.declarations,ti);if(!s)return;let a=Ec(e.text,"/index")||Ec(e.text,"/index.js")?void 0:eL(md(s.fileName),"/index"),l=a===void 0?s.fileName:a,u=a===void 0?"module":"directory",d=e.text.lastIndexOf("/")+1,_=Ju(e.getStart(n)+1+d,e.text.length-d);return{canRename:!0,fileToRename:l,kind:u,displayName:l,fullDisplayName:e.text,kindModifiers:"",triggerSpan:_}}function cO(e,n,r,s,a,l){return{canRename:!0,fileToRename:void 0,kind:r,displayName:e,fullDisplayName:n,kindModifiers:s,triggerSpan:Gie(a,l)}}function v2(e){return{canRename:!1,localizedErrorMessage:ad(e)}}function Gie(e,n){let r=e.getStart(n),s=e.getWidth(n);return _f(e)&&(r+=1,s-=2),Ju(r,s)}function wU(e){switch(e.kind){case 89:case 16:return!0;default:return!1}}var du={};lc(du,{getSymbolDisplayPartsDocumentationAndSymbolKind:()=>Yie,getSymbolKind:()=>NU,getSymbolModifiers:()=>Zie});var Qie=70246400;function NU(e,n,r){let s=IU(e,n,r);if(s!=="")return s;let a=ag(n);return a&32?sf(n,274)?"local class":"class":a&268435456?"define":a&384?"enum":a&524288?"type":a&64?"interface":a&262144?"type parameter":a&8?"enum member":a&2097152?"alias":a&1536?"module":s}function IU(e,n,r){let s=e.getRootSymbols(n);if(s.length===1&&qs(s).flags&8192&&e.getTypeOfSymbolAtLocation(n,r).getCallSignatures().length!==0)return"method";let a=ag(n);if(a&3)return JE(n)?"parameter":lO(n)?"local var":"var";if(a&16)return lO(n)?"local function":"function";if(a&32768)return"getter";if(a&65536)return"setter";if(a&8192)return"method";if(a&16384)return"constructor";if(a&131072)return"index";if(a&4){if(a&33554432&&n.links.checkFlags&6){let l=Jt(e.getRootSymbols(n),u=>{if(u.getFlags()&98311)return"property"});return l||(e.getTypeOfSymbolAtLocation(n,r).getCallSignatures().length?"method":"property")}return"property"}return""}function lO(e){return e.parent?!1:Jt(e.declarations,n=>{if(n.kind===270)return!0;if(n.kind!==237&&n.kind!==169)return!1;for(let r=n.parent;!Yh(r);r=r.parent)if(r.kind===176)return!1;return!0})}function Yie(e,n,r,s,a,l=ov(a),u){return AU(e,n,r,s,a,void 0,l,u)}function AU(e,n,r,s,a,l,u,d){let _=[],y=[],h=[],v=ag(n),b=u&1?IU(e,n,a):"",T=!1,E=!1,g,M,N=!1;if(v&268435456){let Y=n.declarations?.[0];if(Y){let _e=kc(Y),G=cd(_e,Y,!1);_.push(oc(G)),h=n.getContextualJsDocTags(Y,e)}}if(b!==""||v&32||v&2097152){if(b==="getter"||b==="setter"){let G=Zr(n.declarations,ke=>ke.name===a);if(G)switch(G.kind){case 152:b="accessor";break;default:w.assertNever(G)}else b="property"}let Y;if(l??(l=E?e.getTypeAtLocation(a):e.getTypeOfSymbolAtLocation(n,a)),a.parent&&a.parent.kind===286){let G=a.parent.name;(G===a||G&&G.getFullWidth()===0)&&(a=a.parent)}let _e;if(op(a)?_e=a:(kW(a)||HE(a))&&(_e=a.parent),_e){Y=e.getResolvedSignature(_e);let G=_e.kind===276||hs(_e)&&_e.expression.kind===71,ke=G?l.getConstructSignatures():l.getCallSignatures();if(Y&&!ki(ke,Y.target)&&!ki(ke,Y)&&(Y=ke.length?ke[0]:void 0),Y){switch(G&&v&32?(b="constructor",de(l.symbol,b)):v&2097152?(b="alias",se(b),_.push(Do()),G&&(_.push(ly(145)),_.push(Do())),le(n)):de(n,b,Y),b){case"JSX attribute":case"property":case"var":case"const":case"let":case"parameter":case"local var":_.push(Ga(61)),_.push(Do()),!($t(l)&16)&&l.symbol&&(Is(_,Mh(e,l.symbol,s,void 0,5)),_.push(l0())),G&&(_.push(ly(145)),_.push(Do())),he(Y,ke,262144);break;default:he(Y,ke)}T=!0,N=ke.length>1}}else if($E(a)&&!(v&98304)){let G=a.parent;if(n.declarations&&Zr(n.declarations,re=>re===G)){let re=l.getNonNullableType().getCallSignatures();Y=e.getSignatureFromDeclaration(G),de(n,b),Y&&he(Y,re),T=!0,N=re.length>1}}}if(v&32&&!T&&!E&&(j(),sf(n,274)&&se("local class"),_.push(Do()),le(n),ie(n,r)),n.flags&2097152){if(X(),!T||y.length===0&&h.length===0){let Y=e.getAliasedSymbol(n);if(Y!==n&&Y.declarations&&Y.declarations.length>0){let _e=Y.declarations[0],G=hi(_e);if(G&&!T){let re=n.name!=="default"&&!0,be=AU(e,Y,$n(_e),s,G,l,u,re?n:Y);_.push(...be.displayParts),_.push(l0()),g=be.documentation,M=be.tags}else g=Y.getContextualDocumentationComment(_e,e),M=Y.getJsDocTags(e)}}_.push(Do()),le(n)}if(!T)if(b!==""){if(l&&(de(n,b,void 0,!0),_.push(Do()),(b==="property"||b==="accessor"||b==="JSX attribute"||v&3||b==="local var"||b==="index"||b==="using"||b==="await using"||E)&&(_.push(Do()),Is(_,o2(e,l,s)),_.push(Do())),le(n),v&16||v&8192||v&16384||v&131072||v&98304||b==="method")){let Y=l.getNonNullableType().getCallSignatures();Y.length&&(he(Y[0],Y),N=Y.length>1)}}else b=NU(e,n,a);if(y.length===0&&!N&&(y=n.getContextualDocumentationComment(s,e)),y.length===0&&v&4&&n.parent&&n.declarations&&Jt(n.parent.declarations,Y=>Y.kind===176))for(let Y of n.declarations){if(!Y.parent||Y.parent.kind!==269)continue;let _e=e.getSymbolAtLocation(Y.parent.right);if(_e&&(y=_e.getDocumentationComment(e),h=_e.getJsDocTags(e),y.length>0))break}if(y.length===0&&Tt(a)&&n.valueDeclaration&&ms(n.valueDeclaration)){let Y=n.valueDeclaration,_e=Y.parent,G=Y.propertyName||Y.name}return h.length===0&&!N&&(h=n.getContextualJsDocTags(s,e)),y.length===0&&g&&(y=g),h.length===0&&M&&(h=M),{displayParts:_,documentation:y,symbolKind:b,tags:h.length===0?void 0:h};function z(){return pg()}function X(){j()}function j(){d&&(se("alias"),_.push(Do()))}function Z(){_.push(Do()),_.push(ly(103)),_.push(Do())}function le(Y,_e){let G;d&&Y===n&&(Y=d);let ke=[];Y.flags&131072&&G?(Y.parent&&(ke=Mh(e,Y.parent)),ke.push(Ga(22)),G.forEach((re,be)=>{ke.push(...o2(e,re.keyType)),be!==G.length-1&&(ke.push(Do()),ke.push(Ga(53)),ke.push(Do()))}),ke.push(Ga(23))):ke=Mh(e,Y,_e||r,void 0,7),Is(_,ke),n.flags&16777216&&_.push(Ga(60))}function de(Y,_e,G,ke){X(),_e&&(se(_e),G&&(_.push(Do()),ye(G)),Y&&!ke&&!kt(Y.declarations,re=>Au(re)||Zc(re)&&!re.name)&&(_.push(Do()),le(Y)))}function se(Y){switch(Y){case"var":case"function":case"let":case"const":case"constructor":case"using":case"await using":_.push(fx(Y));return;default:_.push(Ga(20)),_.push(fx(Y)),_.push(Ga(21));return}}function ye(Y,_e=0){Is(_,wB(e,Y,s,_e|32))}function he(Y,_e,G=0){Is(_,EB(e,Y,s,G|32)),oe(Y,_e,G)}function oe(Y,_e,G=0){_e.length>1&&(_.push(Do()),_.push(Ga(20)),_.push(PB(41)),_.push(Qo((_e.length-1).toString(),7)),_.push(Do()),_.push(oc(_e.length===2?"overload":"overloads")),_.push(Ga(21))),y=Y.getDocumentationComment(e),h=Y.getJsDocTags(),_e.length>1&&y.length===0&&h.length===0&&(y=_e[0].getDocumentationComment(e),h=_e[0].getJsDocTags().filter(ke=>ke.name!=="deprecated"))}function ie(Y,_e){let G=yf(ke=>{let re=e.symbolToTypeParameterDeclarations(Y,_e,Qie);z().writeList(53776,re,$n(_s(_e)),ke)});Is(_,G)}}function uO(e){if(e.declarations&&e.declarations.length){let[n,...r]=e.declarations,s=Pr(r)&&a2(n)&&kt(r,l=>!a2(l))?65536:0,a=Ak(n,s);if(a)return a.split(",")}return[]}function Zie(e,n){if(!n)return"";let r=new Set(uO(n));if(n.flags&2097152){let s=e.getAliasedSymbol(n);s!==n&&Jt(uO(s),a=>{r.add(a)})}return n.flags&16777216&&r.add("optional"),r.size>0?as(r.values()).join(","):""}var Za={};lc(Za,{FormattingContext:()=>Xie,FormattingRequestKind:()=>OU,RuleAction:()=>LU,RuleFlags:()=>FU,SmartIndenter:()=>Px,anyContext:()=>T2,formatDocument:()=>bse,formatNodeGivenIndentation:()=>kse,getAllRules:()=>RU,getFormatContext:()=>dse,getRangeOfEnclosingComment:()=>Sse});var OU=(e=>(e[e.FormatDocument=0]="FormatDocument",e[e.FormatSelection=1]="FormatSelection",e[e.FormatOnEnter=2]="FormatOnEnter",e[e.FormatOnSemicolon=3]="FormatOnSemicolon",e[e.FormatOnOpeningCurlyBrace=4]="FormatOnOpeningCurlyBrace",e[e.FormatOnClosingCurlyBrace=5]="FormatOnClosingCurlyBrace",e))(OU||{}),Xie=class{constructor(e,n,r){this.sourceFile=e,this.formattingRequestKind=n,this.options=r}updateContext(e,n,r,s,a){this.currentTokenSpan=w.checkDefined(e),this.currentTokenParent=w.checkDefined(n),this.nextTokenSpan=w.checkDefined(r),this.nextTokenParent=w.checkDefined(s),this.contextNode=w.checkDefined(a),this.contextNodeAllOnSameLine=void 0,this.nextNodeAllOnSameLine=void 0,this.tokensAreOnSameLine=void 0,this.contextNodeBlockIsOnOneLine=void 0,this.nextNodeBlockIsOnOneLine=void 0}ContextNodeAllOnSameLine(){return this.contextNodeAllOnSameLine===void 0&&(this.contextNodeAllOnSameLine=this.NodeIsOnOneLine(this.contextNode)),this.contextNodeAllOnSameLine}NextNodeAllOnSameLine(){return this.nextNodeAllOnSameLine===void 0&&(this.nextNodeAllOnSameLine=this.NodeIsOnOneLine(this.nextTokenParent)),this.nextNodeAllOnSameLine}TokensAreOnSameLine(){if(this.tokensAreOnSameLine===void 0){let e=this.sourceFile.getLineAndCharacterOfPosition(this.currentTokenSpan.pos).line,n=this.sourceFile.getLineAndCharacterOfPosition(this.nextTokenSpan.pos).line;this.tokensAreOnSameLine=e===n}return this.tokensAreOnSameLine}ContextNodeBlockIsOnOneLine(){return this.contextNodeBlockIsOnOneLine===void 0&&(this.contextNodeBlockIsOnOneLine=this.BlockIsOnOneLine(this.contextNode)),this.contextNodeBlockIsOnOneLine}NextNodeBlockIsOnOneLine(){return this.nextNodeBlockIsOnOneLine===void 0&&(this.nextNodeBlockIsOnOneLine=this.BlockIsOnOneLine(this.nextTokenParent)),this.nextNodeBlockIsOnOneLine}NodeIsOnOneLine(e){let n=this.sourceFile.getLineAndCharacterOfPosition(e.getStart(this.sourceFile)).line,r=this.sourceFile.getLineAndCharacterOfPosition(e.getEnd()).line;return n===r}BlockIsOnOneLine(e){let n=cu(e,17,this.sourceFile),r=cu(e,19,this.sourceFile);if(n&&r){let s=this.sourceFile.getLineAndCharacterOfPosition(n.getEnd()).line,a=this.sourceFile.getLineAndCharacterOfPosition(r.getStart(this.sourceFile)).line;return s===a}return!1}},T2=Oe,LU=(e=>(e[e.None=0]="None",e[e.StopProcessingSpaceActions=1]="StopProcessingSpaceActions",e[e.StopProcessingTokenActions=2]="StopProcessingTokenActions",e[e.InsertSpace=4]="InsertSpace",e[e.InsertNewLine=8]="InsertNewLine",e[e.DeleteSpace=16]="DeleteSpace",e[e.DeleteToken=32]="DeleteToken",e[e.InsertTrailingSemicolon=64]="InsertTrailingSemicolon",e[e.StopAction=3]="StopAction",e[e.ModifySpaceAction=28]="ModifySpaceAction",e[e.ModifyTokenAction=96]="ModifyTokenAction",e))(LU||{}),FU=(e=>(e[e.None=0]="None",e[e.CanDeleteNewLines=1]="CanDeleteNewLines",e))(FU||{});function RU(){let e=[];for(let Z=0;Z<=145;Z++)Z!==1&&e.push(Z);function n(...Z){return{tokens:e.filter(le=>!Z.some(de=>de===le)),isSpecific:!1}}let r={tokens:e,isSpecific:!1},s=Jm([...e,3]),a=Jm([...e,1]),l=pO(92,145),u=pO(29,88),d=[103],_=[47,48,57,55],y=[10,11,13,89,20,22,17,145],h=[89,20,145],v=[89,21,23,145],b=[89,20,145],T=[89,21,23,145],E=[2,3],g=[89,...ZE],M=s,N=Jm([89,32,3]),z=Jm([21,3,109,110]),X=[ks("IgnoreBeforeComment",r,E,T2,1),ks("IgnoreAfterLineComment",2,r,T2,1),ks("NotSpaceBeforeColon",r,61,[Ro,WS,dO],16),ks("SpaceAfterColon",61,r,[Ro,WS,use],4),ks("NoSpaceBeforeQuestionMark",r,60,[Ro,WS,dO],16),ks("SpaceAfterQuestionMarkInConditionalOperator",60,r,[Ro,nse],4),ks("NoSpaceAfterQuestionMark",60,r,[Ro,tse],16),ks("NoSpaceBeforeDot",r,[24,28],[Ro,pse],16),ks("NoSpaceAfterDot",[24,28],r,[Ro],16),ks("NoSpaceAfterUnaryPrefixOperator",_,y,[Ro,WS],16),ks("NoSpaceAfterUnaryPreincrementOperator",47,h,[Ro],16),ks("NoSpaceAfterUnaryPredecrementOperator",48,b,[Ro],16),ks("NoSpaceBeforeUnaryPostincrementOperator",v,47,[Ro,gO],16),ks("NoSpaceBeforeUnaryPostdecrementOperator",T,48,[Ro,gO],16),ks("SpaceAfterPostincrementWhenFollowedByAdd",47,41,[Ro,Pm],4),ks("SpaceAfterAddWhenFollowedByUnaryPlus",41,41,[Ro,Pm],4),ks("SpaceAfterAddWhenFollowedByPreincrement",41,47,[Ro,Pm],4),ks("SpaceAfterPostdecrementWhenFollowedBySubtract",48,42,[Ro,Pm],4),ks("SpaceAfterSubtractWhenFollowedByUnaryMinus",42,42,[Ro,Pm],4),ks("SpaceAfterSubtractWhenFollowedByPredecrement",42,48,[Ro,Pm],4),ks("NoSpaceAfterCloseBrace",19,[27,26],[Ro],16),ks("NewLineBeforeCloseBraceInBlockContext",s,19,[_O],8),ks("SpaceAfterCloseBrace",19,n(21),[Ro,ase],4),ks("SpaceBetweenCloseBraceAndElse",19,110,[Ro],4),ks("SpaceBetweenCloseBraceAndWhile",19,118,[Ro],4),ks("NoSpaceBetweenEmptyBraceBrackets",17,19,[Ro,lse],16),ks("SpaceAfterConditionalClosingParen",21,22,[cse],4),ks("NoSpaceBetweenFunctionKeywordAndStar",138,43,[mO],16),ks("SpaceAfterStarInGeneratorDeclaration",43,89,[mO],4),ks("SpaceAfterFunctionInFuncDecl",138,r,[sse],4),ks("NewLineAfterOpenBraceInBlockContext",17,r,[_O],8)],j=[];return[...X,...j]}function ks(e,n,r,s,a,l=0){return{leftTokenRange:fO(n),rightTokenRange:fO(r),rule:{debugName:e,context:s,action:a,flags:l}}}function Jm(e){return{tokens:e,isSpecific:!0}}function fO(e){return typeof e=="number"?Jm([e]):Gr(e)?Jm(e):e}function pO(e,n,r=[]){let s=[];for(let a=e;a<=n;a++)ki(r,a)||s.push(a);return Jm(s)}function Pm(e){switch(e.contextNode.kind){case 269:return e.contextNode.operatorToken.kind!==27;case 267:case 168:case 171:case 157:return!0;case 266:case 237:case 149:case 152:case 153:return e.currentTokenSpan.kind===74||e.nextTokenSpan.kind===74;case 148:return e.currentTokenSpan.kind===103||e.nextTokenSpan.kind===103||e.currentTokenSpan.kind===74||e.nextTokenSpan.kind===74;case 244:return e.currentTokenSpan.kind===103||e.nextTokenSpan.kind===61}return!1}function WS(e){return!Pm(e)}function dO(e){return!Kie(e)}function Kie(e){let n=e.contextNode.kind;return n===152||n===153||n===149||n===237||$h(n)}function ese(e){return!1}function tse(e){return!ese(e)}function nse(e){return e.contextNode.kind===267||e.contextNode.kind===168}function _O(e){return rse(e)&&!(e.ContextNodeAllOnSameLine()||e.ContextNodeBlockIsOnOneLine())}function rse(e){return ise(e.contextNode)}function ise(e){if(ose(e))return!0;switch(e.kind){case 236:case 240:case 293:return!0}return!1}function sse(e){switch(e.contextNode.kind){case 169:case 270:return!0}return!1}function mO(e){return e.contextNode.kind===169||e.contextNode.kind===270}function ose(e){switch(e.kind){case 274:case 163:case 172:return!0}return!1}function ase(e){switch(e.currentTokenParent.kind){case 255:case 256:return!0;case 236:{let n=e.currentTokenParent.parent;if(!n||n.kind!==270)return!0}}return!1}function cse(e){switch(e.contextNode.kind){case 253:case 256:case 243:case 244:case 246:case 245:case 255:return!0;default:return!1}}function lse(e){return e.contextNode.kind===293}function Ro(e){return e.TokensAreOnSameLine()}function use(e){return!0}function gO(e){return!fse(e)}function fse(e){switch(e.contextNode.kind){case 253:case 243:case 244:case 245:case 246:return!0;default:return!1}}function pse(e){return!Ii(e.contextNode)||!Tp(e.contextNode.expression)||e.contextNode.expression.getText().includes(".")}function dse(e,n){return{options:e,getRules:_se(),host:n}}var eP;function _se(){return eP===void 0&&(eP=gse(RU())),eP}function mse(e){let n=0;return e&1&&(n|=28),e&2&&(n|=96),e&28&&(n|=28),e&96&&(n|=96),n}function gse(e){let n=hse(e);return r=>{let s=n[MU(r.currentTokenSpan.kind,r.nextTokenSpan.kind)];if(s){let a=[],l=0;for(let u of s){let d=~mse(l);u.action&d&&Ti(u.context,_=>_(r))&&(a.push(u),l|=u.action)}if(a.length)return a}}}function hse(e){let n=new Array(Cx*Cx),r=new Array(n.length);for(let s of e){let a=s.leftTokenRange.isSpecific&&s.rightTokenRange.isSpecific;for(let l of s.leftTokenRange.tokens)for(let u of s.rightTokenRange.tokens){let d=MU(l,u),_=n[d];_===void 0&&(_=n[d]=[]),yse(_,s.rule,a,r,d)}}return n}function MU(e,n){return w.assert(e<=145&&n<=145,"Must compute formatting context from tokens"),e*Cx+n}var Em=5,db=31,Cx=146,vh=(e=>(e[e.StopRulesSpecific=0]="StopRulesSpecific",e[e.StopRulesAny=Em*1]="StopRulesAny",e[e.ContextRulesSpecific=Em*2]="ContextRulesSpecific",e[e.ContextRulesAny=Em*3]="ContextRulesAny",e[e.NoContextRulesSpecific=Em*4]="NoContextRulesSpecific",e[e.NoContextRulesAny=Em*5]="NoContextRulesAny",e))(vh||{});function yse(e,n,r,s,a){let l=n.action&3?r?0:vh.StopRulesAny:n.context!==T2?r?vh.ContextRulesSpecific:vh.ContextRulesAny:r?vh.NoContextRulesSpecific:vh.NoContextRulesAny,u=s[a]||0;e.splice(vse(u,l),0,n),s[a]=Tse(u,l)}function vse(e,n){let r=0;for(let s=0;s<=n;s+=Em)r+=e&db,e>>=Em;return r}function Tse(e,n){let r=(e>>n&db)+1;return w.assert((r&db)===r,"Adding more rules into the sub-bucket than allowed. Maximum allowed is 32 rules."),e&~(db<<n)|r<<n}function Sse(e,n,r,s=bp(e,n)){let a=Xn(s,Ol);if(a&&(s=a.parent),s.getStart(e)<=n&&n<s.getEnd())return;r=r===null?void 0:r===void 0?Ma(n,e):r;let u=r&&B_(e.text,r.end),d=d9(s,e),_=ri(u,d);return _&&Zr(_,y=>uv(y,n)||n===y.end&&(y.kind===2||n===e.getFullWidth()))}function bse(e,n){let r={pos:0,end:e.text.length};return[{span:{start:0,length:e.text.length},newText:e.text}]}function kse(e,n,r,s,a,l){let u={pos:e.pos,end:e.end};return[{span:{start:u.pos,length:u.end-u.pos},newText:n.text.slice(u.pos,u.end)}]}var Px;(e=>{let n;(T=>{T[T.Unknown=-1]="Unknown"})(n||(n={}));function r(T,E,g,M=!1){return s(g)}e.getIndentation=r;function s(T){return T.baseIndentSize||0}e.getBaseIndentation=s;function a(T,E){return T.parent&&l(T.getStart(E),T.getEnd(),T.parent,E)}e.getContainingList=a;function l(T,E,g,M){switch(g.kind){case 166:return N(g.typeArguments);case 293:return N(g.properties);case 290:return N(g.elements);case 163:return N(g.members);case 169:case 270:case 271:case 154:case 156:return N(g.parameters);case 276:case 272:return N(g.arguments);case 238:return N(g.declarations);case 265:return N(g.elements)}function N(z){return z&&oW(u(g,z,M),T,E)?z:void 0}}function u(T,E,g){let M=T.getChildren(g);for(let N=1;N<M.length-1;N++)if(M[N].pos===E.pos&&M[N].end===E.end)return{pos:M[N-1].end,end:M[N+1].getStart(g)};return E}function d(T,E,g,M){let N=0,z=0;for(let X=T;X<E;X++){let j=g.text.charCodeAt(X);if(!Ou(j))break;j===9?z+=M.tabSize+z%M.tabSize:z++,N++}return{column:z,character:N}}e.findFirstNonWhitespaceCharacterAndColumn=d;function _(T,E,g,M){return d(T,E,g,M).column}e.findFirstNonWhitespaceColumn=_;function y(T,E,g,M,N){let z=g?g.kind:0;switch(E.kind){case 247:case 170:case 274:case 290:case 236:case 293:case 163:case 264:case 289:case 286:case 272:case 276:case 242:case 248:case 267:case 265:case 156:case 149:case 165:case 171:case 152:case 299:case 301:return!0;case 240:return T.indentSwitchCase??!0;case 237:case 174:case 269:if(!T.indentMultiLineObjectLiteralBeginningOnBlankLine&&M&&z===293)return b(M,g);if(E.kind!==269)return!0;break;case 245:case 246:case 244:case 243:case 253:case 169:case 270:case 154:return z!==236;case 271:return M&&z===289?b(M,g):z!==236;case 157:if(z===163||z===264)return!1;break}return N}e.nodeWillIndentChild=y;function h(T,E){switch(T){case 248:case 251:case 250:return E.kind!==236;default:return!1}}function v(T,E,g,M,N=!1){return y(T,E,g,M,!1)&&!(N&&g&&h(g.kind,E))}e.shouldIndentChildNode=v;function b(T,E){let g=ts(T.text,E.pos),M=T.getLineAndCharacterOfPosition(g).line,N=T.getLineAndCharacterOfPosition(E.end).line;return M===N}})(Px||(Px={}));var pf={};lc(pf,{getDocCommentTemplateAtPosition:()=>Lse,getJSDocParameterNameCompletionDetails:()=>Ose,getJSDocParameterNameCompletions:()=>Ase,getJSDocTagCompletionDetails:()=>JU,getJSDocTagCompletions:()=>Ise,getJSDocTagNameCompletionDetails:()=>Nse,getJSDocTagNameCompletions:()=>wse,getJsDocCommentsFromDeclarations:()=>Cse,getJsDocTagsFromDeclarations:()=>Dse});var jU=["abstract","access","alias","argument","async","augments","author","borrows","callback","class","classdesc","constant","constructor","constructs","copyright","default","deprecated","description","emits","enum","event","example","exports","extends","external","field","file","fileoverview","fires","function","generator","global","hideconstructor","host","ignore","implements","import","inheritdoc","inner","instance","interface","kind","lends","license","link","linkcode","linkplain","listens","member","memberof","method","mixes","module","name","namespace","overload","override","package","param","private","prop","property","protected","public","readonly","requires","returns","satisfies","see","since","static","summary","template","this","throws","todo","tutorial","type","typedef","var","variation","version","virtual","yields"],hO,yO;function Cse(e,n){let r=[];return ew(e,s=>{for(let a of xse(s)){let l=Ol(a)&&a.tags&&Zr(a.tags,d=>d.kind===206&&(d.tagName.text==="inheritDoc"||d.tagName.text==="inheritdoc"));if(a.comment===void 0&&!l||Ol(a)&&s.kind!==225&&s.kind!==217&&a.tags&&a.tags.some(d=>d.kind===225||d.kind===217)&&!a.tags.some(d=>d.kind===220||d.kind===221))continue;let u=a.comment?f_(a.comment,n):[];l&&l.comment&&(u=u.concat(f_(l.comment,n))),ki(r,u,Pse)||r.push(u)}}),kp(Qx(r,[l0()]))}function Pse(e,n){return Gx(e,n,(r,s)=>r.kind===s.kind&&r.text===s.text)}function xse(e){switch(e.kind){case 220:case 227:return[e];case 217:case 225:return[e,e.parent];case 202:if(C0(e.parent))return[e.parent.parent];default:return WD(e)}}function Dse(e,n){let r=[];return ew(e,s=>{let a=yg(s);if(!(a.some(l=>l.kind===225||l.kind===217)&&!a.some(l=>l.kind===220||l.kind===221)))for(let l of a)r.push({name:l.tagName.text,text:UU(l,n)}),r.push(...BU(WU(l),n))}),r}function BU(e,n){return ao(e,r=>ri([{name:r.tagName.text,text:UU(r,n)}],BU(WU(r),n)))}function WU(e){return v0(e)&&e.isNameFirst&&e.typeExpression&&e.typeExpression.type&&R_(e.typeExpression.type)?e.typeExpression.type.jsDocPropertyTags:void 0}function f_(e,n){return typeof e=="string"?[oc(e)]:ao(e,r=>CM(r)?[oc(r.text)]:HB(r,n))}function UU(e,n){let{comment:r,kind:s}=e,a=Ese(s),l=[];switch(s){case 229:let _=e.typeExpression;return _?u(_):r===void 0?void 0:f_(r,n);case 208:return u(e.class);case 207:return u(e.class);case 224:let y=e;if(y.constraint&&l.push(oc(y.constraint.getText())),Pr(y.typeParameters)){Pr(l)&&l.push(Do());let v=y.typeParameters[y.typeParameters.length-1];Jt(y.typeParameters,b=>{l.push(a(b.getText())),v!==b&&l.push(Ga(27),Do())})}return r&&l.push(Do(),...f_(r,n)),l;case 223:case 230:return u(e.typeExpression);case 225:case 217:case 227:case 220:case 226:let{name:h}=e;return h?l.push(...u(h)):r&&l.push(...f_(r,n)),l;default:return r===void 0?void 0:f_(r,n)}function u(_){return d(_.getText())}function d(_){return r?_.match(/^https?$/)?[oc(_),...f_(r,n)]:[a(_),Do(),...f_(r,n)]:[oc(_)]}}function Ese(e){switch(e){case 220:return xB;case 227:return DB;case 224:return QB;case 225:case 217:return GB;default:return oc}}function wse(){return hO||(hO=Xt(jU,e=>({name:e,kind:"keyword",kindModifiers:"",sortText:dg.SortText.LocationPriority})))}var Nse=JU;function Ise(){return yO||(yO=Xt(jU,e=>({name:`@${e}`,kind:"keyword",kindModifiers:"",sortText:dg.SortText.LocationPriority})))}function JU(e){return{name:e,kind:"",kindModifiers:"",displayParts:[oc(e)],documentation:Oe,tags:void 0,codeActions:void 0}}function Ase(e){if(!Tt(e.name))return Oe;let n=e.name.text,r=e.parent,s=r.parent;return Qi(s)?Vi(s.parameters,a=>{if(!Tt(a.name))return;let l=a.name.text;if(!(r.tags.some(u=>u!==e&&Pc(u)&&Tt(u.name)&&u.name.text===l)||n!==void 0&&!no(l,n)))return{name:l,kind:"parameter",kindModifiers:"",sortText:dg.SortText.LocationPriority}}):[]}function Ose(e){return{name:e,kind:"parameter",kindModifiers:"",displayParts:[oc(e)],documentation:Oe,tags:void 0,codeActions:void 0}}function Lse(e,n,r,s){let a=bp(n,r),l=Xn(a,Ol);if(l&&(l.comment!==void 0||Pr(l.tags)))return;let u=a.getStart(n);if(!l&&u<r)return;let d=jse(a,s);if(!d)return;let{commentOwner:_,parameters:y,hasReturn:h}=d,v=Kc(_)&&_.jsDoc?_.jsDoc:void 0,b=wo(v);if(_.getStart(n)<r||b&&l&&b!==l)return;let T=Fse(n,r),g=(y?Rse(y||[],!1,T,e):"")+(h?Mse(T,e):""),M="/**",N=" */",z=Pr(yg(_))>0;if(g&&!z){let X=M+e+T+" * ",j=u===r?e+T:"";return{newText:X+e+g+T+N+j,caretOffset:X.length}}return{newText:M+N,caretOffset:3}}function Fse(e,n){let{text:r}=e,s=Il(n,e),a=s;for(;a<=n&&Ou(r.charCodeAt(a));a++);return r.slice(s,a)}function Rse(e,n,r,s){return e.map(({name:a,dotDotDotToken:l},u)=>{let d=a.kind===89?a.text:"param"+u;return`${r} * @param ${n?l?"{...any} ":"{any} ":""}${d}${s}`}).join("")}function Mse(e,n){return`${e} * @returns${n}`}function jse(e,n){return v9(e,r=>xx(r,n))}function xx(e,n){if(e)switch(e.kind){case 169:case 270:case 154:case 156:let r=e;return{commentOwner:e,parameters:r.parameters,hasReturn:US(r,n)};case 174:return xx(e.initializer,n);case 153:return{commentOwner:e};case 242:{let l=e.declarationList.declarations,u=l.length===1&&l[0].initializer?Bse(l[0].initializer):void 0;return u?{commentOwner:e,parameters:u.parameters,hasReturn:US(u,n)}:{commentOwner:e}}case 176:return"quit";case 247:return xx(e.expression,n);case 269:{let a=e;return Oa(a)===0?"quit":Qi(a.right)?{commentOwner:e,parameters:a.right.parameters,hasReturn:US(a.right,n)}:{commentOwner:e}}case 152:let s=e.initializer;if(s&&(Zc(s)||hd(s)))return{commentOwner:e,parameters:s.parameters,hasReturn:US(s,n)}}}function US(e,n){return!!n?.generateReturnInDocTemplate&&(k0(e)||hd(e)&&xc(e.body)||tu(e)&&e.body&&uu(e.body)&&!!k_(e.body,r=>r))}function Bse(e){for(;e.kind===289;)e=e.expression;switch(e.kind){case 270:case 271:return e;case 274:w.fail("todo - class expression")}}var np={};lc(np,{ChangeTracker:()=>Jse,LeadingTriviaOption:()=>qU,TrailingTriviaOption:()=>$U,applyChanges:()=>wx,assignPositionsToNode:()=>k2,createWriter:()=>GU,deleteNode:()=>Xf,isThisTypeAnnotatable:()=>Use,isValidLocationToAddComment:()=>QU});function zU(e){let n=e.__pos;return w.assert(typeof n=="number"),n}function tP(e,n){w.assert(typeof n=="number"),e.__pos=n}function VU(e){let n=e.__end;return w.assert(typeof n=="number"),n}function nP(e,n){w.assert(typeof n=="number"),e.__end=n}var qU=(e=>(e[e.Exclude=0]="Exclude",e[e.IncludeAll=1]="IncludeAll",e[e.JSDoc=2]="JSDoc",e[e.StartLine=3]="StartLine",e))(qU||{}),$U=(e=>(e[e.Exclude=0]="Exclude",e[e.ExcludeWhitespace=1]="ExcludeWhitespace",e[e.Include=2]="Include",e))($U||{});function HU(e,n){return ts(e,n,!1,!0)}function Wse(e,n){let r=n;for(;r<e.length;){let s=e.charCodeAt(r);if(Ou(s)){r++;continue}return s===47}return!1}var ch={leadingTriviaOption:0,trailingTriviaOption:0};function lh(e,n,r,s){return{pos:rp(e,n,s),end:C_(e,r,s)}}function rp(e,n,r,s=!1){let{leadingTriviaOption:a}=r;if(a===0)return n.getStart(e);if(a===3){let v=n.getStart(e),b=Il(v,e);return Rk(n,b)?b:v}if(a===2){let v=d8(n,e.text);if(v?.length)return Il(v[0].pos,e)}let l=n.getFullStart(),u=n.getStart(e);if(l===u)return u;let d=Il(l,e);if(Il(u,e)===d)return a===1?l:u;if(s){let v=Wu(e.text,l)?.[0]||B_(e.text,l)?.[0];if(v)return ts(e.text,v.end,!0,!0)}let y=l>0?1:0,h=zb(Lh(e,d)+y,e);return h=HU(e.text,h),zb(Lh(e,h),e)}function Dx(e,n,r){let{end:s}=n,{trailingTriviaOption:a}=r;if(a===2){let l=B_(e.text,s);if(l){let u=Lh(e,n.end);for(let d of l){if(d.kind===2||Lh(e,d.pos)>u)break;if(Lh(e,d.end)>u)return ts(e.text,d.end,!0,!0)}}}}function C_(e,n,r){let{end:s}=n,{trailingTriviaOption:a}=r;if(a===0)return s;if(a===1){let d=ri(B_(e.text,s),Wu(e.text,s)),_=d?.[d.length-1]?.end;return _||s}let l=Dx(e,n,r);if(l)return l;let u=ts(e.text,s,!0);return u!==s&&(a===2||Mo(e.text.charCodeAt(u-1)))?u:s}function S2(e,n){return!!n&&!!e.parent&&(n.kind===27||n.kind===26&&e.parent.kind===293)}function Use(e){return Zc(e)||Yc(e)}var Jse=class Ex{constructor(n,r){this.newLineCharacter=n,this.formatContext=r,this.changes=[],this.classesWithNodesInsertedAtStart=new Map,this.deletedNodes=[]}static fromContext(n){return new Ex(w0(n.host,n.formatContext.options),n.formatContext)}static with(n,r){let s=Ex.fromContext(n);return r(s),s.getChanges(n)}pushRaw(n,r){w.assertEqual(n.fileName,r.fileName);for(let s of r.textChanges)this.changes.push({kind:3,sourceFile:n,text:s.newText,range:YB(s.span)})}deleteRange(n,r){this.changes.push({kind:0,sourceFile:n,range:r})}delete(n,r){this.deletedNodes.push({sourceFile:n,node:r})}deleteNode(n,r,s={leadingTriviaOption:1}){this.deleteRange(n,lh(n,r,r,s))}deleteNodes(n,r,s={leadingTriviaOption:1},a){for(let l of r){let u=rp(n,l,s,a),d=C_(n,l,s);this.deleteRange(n,{pos:u,end:d}),a=!!Dx(n,l,s)}}deleteModifier(n,r){this.deleteRange(n,{pos:r.getStart(n),end:ts(n.text,r.end,!0)})}deleteNodeRange(n,r,s,a={leadingTriviaOption:1}){let l=rp(n,r,a),u=C_(n,s,a);this.deleteRange(n,{pos:l,end:u})}deleteNodeRangeExcludingEnd(n,r,s,a={leadingTriviaOption:1}){let l=rp(n,r,a),u=s===void 0?n.text.length:rp(n,s,a);this.deleteRange(n,{pos:l,end:u})}replaceRange(n,r,s,a={}){this.changes.push({kind:1,sourceFile:n,range:r,options:a,node:s})}replaceNode(n,r,s,a=ch){this.replaceRange(n,lh(n,r,r,a),s,a)}replaceNodeRange(n,r,s,a,l=ch){this.replaceRange(n,lh(n,r,s,l),a,l)}replaceRangeWithNodes(n,r,s,a={}){this.changes.push({kind:2,sourceFile:n,range:r,options:a,nodes:s})}replaceNodeWithNodes(n,r,s,a=ch){this.replaceRangeWithNodes(n,lh(n,r,r,a),s,a)}replaceNodeWithText(n,r,s){this.replaceRangeWithText(n,lh(n,r,r,ch),s)}replaceNodeRangeWithNodes(n,r,s,a,l=ch){this.replaceRangeWithNodes(n,lh(n,r,s,l),a,l)}nodeHasTrailingComment(n,r,s=ch){return!!Dx(n,r,s)}nextCommaToken(n,r){let s=mw(r,r.parent,n);return s&&s.kind===27?s:void 0}replacePropertyAssignment(n,r,s){let a=this.nextCommaToken(n,r)?"":","+this.newLineCharacter;this.replaceNode(n,r,s,{suffix:a})}insertNodeAt(n,r,s,a={}){this.replaceRange(n,Zf(r),s,a)}insertNodesAt(n,r,s,a={}){this.replaceRangeWithNodes(n,Zf(r),s,a)}insertNodeAtTopOfFile(n,r,s){this.insertAtTopOfFile(n,r,s)}insertNodesAtTopOfFile(n,r,s){this.insertAtTopOfFile(n,r,s)}insertAtTopOfFile(n,r,s){let a=Yse(n),l={prefix:a===0?void 0:this.newLineCharacter,suffix:(Mo(n.text.charCodeAt(a))?"":this.newLineCharacter)+(s?this.newLineCharacter:"")};Gr(r)?this.insertNodesAt(n,a,r,l):this.insertNodeAt(n,a,r,l)}insertNodesAtEndOfFile(n,r,s){this.insertAtEndOfFile(n,r,s)}insertAtEndOfFile(n,r,s){let a=n.end+1,l={prefix:this.newLineCharacter,suffix:this.newLineCharacter+(s?this.newLineCharacter:"")};this.insertNodesAt(n,a,r,l)}insertStatementsInNewFile(n,r,s){this.newFileChanges||(this.newFileChanges=Rl()),this.newFileChanges.add(n,{oldFile:s,statements:r})}insertFirstParameter(n,r,s){let a=Fa(r);a?this.insertNodeBefore(n,a,s):this.insertNodeAt(n,r.pos,s)}insertNodeBefore(n,r,s,a=!1,l={}){this.insertNodeAt(n,rp(n,r,l),s,this.getOptionsForInsertNodeBefore(r,s,a))}insertNodesBefore(n,r,s,a=!1,l={}){this.insertNodesAt(n,rp(n,r,l),s,this.getOptionsForInsertNodeBefore(r,qs(s),a))}insertModifierAt(n,r,s,a={}){this.insertNodeAt(n,r,Ve.createToken(s),a)}insertModifierBefore(n,r,s){return this.insertModifierAt(n,s.getStart(n),r,{suffix:" "})}insertCommentBeforeLine(n,r,s,a){let l=zb(r,n),u=ZB(n.text,l),d=QU(n,u),_=Fk(n,d?u:s),y=n.text.slice(l,u),h=`${d?"":this.newLineCharacter}//${a}${this.newLineCharacter}${y}`;this.insertText(n,_.getStart(n),h)}insertJsdocCommentBefore(n,r,s){let a=r.getStart(n);if(r.jsDoc)for(let d of r.jsDoc)this.deleteRange(n,{pos:Il(d.getStart(n),n),end:C_(n,d,{})});let l=rW(n.text,a-1),u=n.text.slice(l,a);this.insertNodeAt(n,a,s,{suffix:this.newLineCharacter+u})}createJSDocText(n,r){let s=ao(r.jsDoc,l=>Li(l.comment)?Ve.createJSDocText(l.comment):l.comment),a=Tv(r.jsDoc);return a&&lu(a.pos,a.end,n)&&Pr(s)===0?void 0:Ve.createNodeArray(Qx(s,Ve.createJSDocText(`
`)))}replaceJSDocComment(n,r,s){this.insertJsdocCommentBefore(n,zse(r),Ve.createJSDocComment(this.createJSDocText(n,r),Ve.createNodeArray(s)))}addJSDocTags(n,r,s){let a=_y(r.jsDoc,u=>u.tags),l=s.filter(u=>!a.some((d,_)=>{let y=Vse(d,u);return y&&(a[_]=y),!!y}));this.replaceJSDocComment(n,r,[...a,...l])}filterJSDocTags(n,r,s){this.replaceJSDocComment(n,r,Yr(_y(r.jsDoc,a=>a.tags),s))}replaceRangeWithText(n,r,s){this.changes.push({kind:3,sourceFile:n,range:r,text:s})}insertText(n,r,s){this.replaceRangeWithText(n,Zf(r),s)}tryInsertTypeAnnotation(n,r,s){let a;if(Qi(r)){if(a=cu(r,21,n),!a){if(!hd(r))return!1;a=qs(r.parameters)}}else a=r.name;return this.insertNodeAt(n,a.end,s,{prefix:": "}),!0}tryInsertThisTypeAnnotation(n,r,s){let a=cu(r,20,n).getStart(n)+1,l=r.parameters.length?", ":"";this.insertNodeAt(n,a,s,{prefix:"this: ",suffix:l})}insertTypeParameters(n,r,s){let a=(cu(r,20,n)||qs(r.parameters)).getStart(n);this.insertNodesAt(n,a,s,{prefix:"<",suffix:">",joiner:", "})}getOptionsForInsertNodeBefore(n,r,s){return Vm(n)?{suffix:s?this.newLineCharacter+this.newLineCharacter:this.newLineCharacter}:Cs(n)?{suffix:", "}:gs(n)?gs(r)?{suffix:", "}:{}:w.failBadSyntaxKind(n)}insertNodeAtEndOfScope(n,r,s){let a=rp(n,r.getLastToken(),{});this.insertNodeAt(n,a,s,{prefix:Mo(n.text.charCodeAt(r.getLastToken().pos))?this.newLineCharacter:this.newLineCharacter+this.newLineCharacter,suffix:this.newLineCharacter})}insertMemberAtStart(n,r,s){this.insertNodeAtStartWorker(n,r,s)}insertNodeAtObjectStart(n,r,s){this.insertNodeAtStartWorker(n,r,s)}insertNodeAtStartWorker(n,r,s){let a=this.guessIndentationFromExistingMembers(n,r)??this.computeIndentationForNewMember(n,r);this.insertNodeAt(n,JS(r).pos,s,this.getInsertNodeAtStartInsertOptions(n,r,a))}guessIndentationFromExistingMembers(n,r){let s,a=r;for(let l of JS(r)){if(Kh(a,l,n))return;let u=l.getStart(n),d=Za.SmartIndenter.findFirstNonWhitespaceColumn(Il(u,n),u,n,this.formatContext.options);if(s===void 0)s=d;else if(d!==s)return;a=l}return s}computeIndentationForNewMember(n,r){let s=r.getStart(n);return Za.SmartIndenter.findFirstNonWhitespaceColumn(Il(s,n),s,n,this.formatContext.options)+(this.formatContext.options.indentSize??4)}getInsertNodeAtStartInsertOptions(n,r,s){let l=JS(r).length===0,u=lg(this.classesWithNodesInsertedAtStart,Sa(r),{node:r,sourceFile:n}),d=Qa(r)&&(!cg(n)||!l),_=Qa(r)&&cg(n)&&l&&!u;return{indentation:s,prefix:(_?",":"")+this.newLineCharacter,suffix:d?",":""}}insertNodeAfterComma(n,r,s){let a=this.insertNodeAfterWorker(n,this.nextCommaToken(n,r)||r,s);this.insertNodeAt(n,a,s,this.getInsertNodeAfterOptions(n,r))}insertNodeAfter(n,r,s){let a=this.insertNodeAfterWorker(n,r,s);this.insertNodeAt(n,a,s,this.getInsertNodeAfterOptions(n,r))}insertNodeAtEndOfList(n,r,s){this.insertNodeAt(n,r.end,s,{prefix:", "})}insertNodesAfter(n,r,s){let a=this.insertNodeAfterWorker(n,r,qs(s));this.insertNodesAt(n,a,s,this.getInsertNodeAfterOptions(n,r))}insertNodeAfterWorker(n,r,s){return Zse(r,s)&&n.text.charCodeAt(r.end-1)!==59&&this.replaceRange(n,Zf(r.end),Ve.createToken(26)),C_(n,r,{})}getInsertNodeAfterOptions(n,r){let s=this.getInsertNodeAfterOptionsWorker(r);return{...s,prefix:r.end===n.end&&Vm(r)?s.prefix?`
${s.prefix}`:`
`:s.prefix}}getInsertNodeAfterOptionsWorker(n){switch(n.kind){case 170:return{prefix:this.newLineCharacter,suffix:this.newLineCharacter};case 237:case 16:case 89:return{prefix:", "};case 174:return{suffix:","+this.newLineCharacter};case 149:return{};default:return w.assert(Vm(n)||kD(n)),{suffix:this.newLineCharacter}}}insertName(n,r,s){w.assert(!r.name);let a=cu(r,r.kind===270?138:133,n).end;this.insertNodeAt(n,a,Ve.createIdentifier(s),{prefix:" "})}insertExportModifier(n,r){this.insertText(n,r.getStart(n),"export ")}insertNodeInListAfter(n,r,s,a=Za.SmartIndenter.getContainingList(r,n)){if(!a){w.fail("node is not a list element");return}let l=My(a,r);if(l<0)return;let u=r.getEnd();if(l!==a.length-1){let d=bp(n,r.end);if(d&&S2(r,d)){let _=a[l+1],y=HU(n.text,_.getFullStart()),h=`${Mi(d.kind)}${n.text.substring(d.end,y)}`;this.insertNodesAt(n,y,[s],{suffix:h})}}else{let d=r.getStart(n),_=Il(d,n),y,h=!1;if(a.length===1)y=27;else{let v=Ma(r.pos,n);y=S2(r,v)?v.kind:27,h=Il(a[l-1].getStart(n),n)!==_}if((Wse(n.text,r.end)||!lu(a.pos,a.end,n))&&(h=!0),h){this.replaceRange(n,Zf(u),Ve.createToken(y));let v=Za.SmartIndenter.findFirstNonWhitespaceColumn(_,d,n,this.formatContext.options),b=ts(n.text,u,!0,!1);for(;b!==u&&Mo(n.text.charCodeAt(b-1));)b--;this.replaceRange(n,Zf(b),s,{indentation:v,prefix:this.newLineCharacter})}else this.replaceRange(n,Zf(u),s,{prefix:`${Mi(y)} `})}}parenthesizeExpression(n,r){this.replaceRange(n,_8(r),Ve.createParenthesizedExpression(r))}finishClassesWithNodesInsertedAtStart(){this.classesWithNodesInsertedAtStart.forEach(({node:n,sourceFile:r})=>{let[s,a]=$se(n,r);if(s!==void 0&&a!==void 0){let l=JS(n).length===0,u=lu(s,a,r);l&&u&&s!==a-1&&this.deleteRange(r,Zf(s,a-1)),u&&this.insertText(r,a-1,this.newLineCharacter)}})}finishDeleteDeclarations(){let n=new Set;for(let{sourceFile:r,node:s}of this.deletedNodes)this.deletedNodes.some(a=>a.sourceFile===r&&iW(a.node,s))||(Gr(s)?this.deleteRange(r,m8(r,s)):Nx.deleteDeclaration(this,n,r,s));n.forEach(r=>{let s=r.getSourceFile(),a=Za.SmartIndenter.getContainingList(r,s);if(r!==jo(a))return;let l=Sb(a,u=>!n.has(u),a.length-2);l!==-1&&this.deleteRange(s,{pos:a[l].end,end:Cw(s,a[l+1])})})}getChanges(n,r){let l=n.host.getCompilationSettings()?.driverType;this.finishDeleteDeclarations(),this.finishClassesWithNodesInsertedAtStart();let u=b2.getTextChangesFromChanges(this.changes,this.newLineCharacter,this.formatContext,r);return this.newFileChanges&&this.newFileChanges.forEach((d,_)=>{u.push(b2.newFileChanges(_,d,this.newLineCharacter,this.formatContext,l))}),u}createNewFile(n,r,s){this.insertStatementsInNewFile(r,s,n)}};function zse(e){if(e.kind!==271)return e;let n=e.parent.kind===152?e.parent:e.parent.parent;return n.jsDoc=e.jsDoc,n}function Vse(e,n){if(e.kind===n.kind)switch(e.kind){case 220:{let r=e,s=n;return Tt(r.name)&&Tt(s.name)&&r.name.text===s.name.text?Ve.createJSDocParameterTag(void 0,s.name,!1,s.typeExpression,s.isNameFirst,r.comment):void 0}case 221:return Ve.createJSDocReturnTag(void 0,n.typeExpression,e.comment);case 223:return Ve.createJSDocTypeTag(void 0,n.typeExpression,e.comment)}}function Cw(e,n){return ts(e.text,rp(e,n,{leadingTriviaOption:1}),!1,!0)}function qse(e,n,r,s){let a=Cw(e,s);if(r===void 0||lu(C_(e,n,{}),a,e))return a;let l=Ma(s.getStart(e),e);if(S2(n,l)){let u=Ma(n.getStart(e),e);if(S2(r,u)){let d=ts(e.text,l.getEnd(),!0,!0);if(lu(u.getStart(e),l.getStart(e),e))return Mo(e.text.charCodeAt(d-1))?d-1:d;if(Mo(e.text.charCodeAt(d)))return d}}return a}function $se(e,n){let r=cu(e,17,n),s=cu(e,19,n);return[r?.end,s?.end]}function JS(e){return Qa(e)?e.properties:e.members}var b2;(e=>{function n(d,_,y,h){return Vi(nL(d,v=>v.sourceFile.path),v=>{let b=v[0].sourceFile,T=L_(v,(g,M)=>g.range.pos-M.range.pos||g.range.end-M.range.end);for(let g=0;g<T.length-1;g++)w.assert(T[g].range.end<=T[g+1].range.pos,"Changes overlap",()=>`${JSON.stringify(T[g].range)} and ${JSON.stringify(T[g+1].range)}`);let E=Vi(T,g=>{let M=cv(g.range),N=g.kind===1?$n(ka(g.node))??g.sourceFile:g.kind===2?$n(ka(g.nodes[0]))??g.sourceFile:g.sourceFile,z=a(g,N,b,_,y,h);if(!(M.length===z.length&&sW(N.text,z,M.start)))return hx(M,z)});return E.length>0?{fileName:b.fileName,textChanges:E}:void 0})}e.getTextChangesFromChanges=n;function r(d,_,y,h,v){let b=s(T9(d),v,_,y,h);return{fileName:d,textChanges:[hx(Ju(0,0),b)],isNewFile:!0}}e.newFileChanges=r;function s(d,_,y,h,v){let b=ao(y,g=>g.statements.map(M=>M===4?"":u(M,g.oldFile,h).text)).join(h),T=fk("any file name",b,{languageVersion:1,jsDocParsingMode:1,fileHandler:void 0},!0,d,_),E=Za.formatDocument(T,v);return wx(b,E)+h}e.newFileChangesWorker=s;function a(d,_,y,h,v,b){if(d.kind===0)return"";if(d.kind===3)return d.text;let{options:T={},range:{pos:E}}=d,g=z=>l(z,_,y,E,T,h,v,b),M=d.kind===2?d.nodes.map(z=>Jh(g(z),h)).join(d.options?.joiner||h):g(d.node),N=T.indentation!==void 0||Il(E,_)===E?M:M.replace(/^\s+/,"");return(T.prefix||"")+N+(!T.suffix||Ec(N,T.suffix)?"":T.suffix)}function l(d,_,y,h,{indentation:v,prefix:b,delta:T},E,g,M){let{node:N,text:z}=u(d,_,E);M&&M(N,z);let X=d2(g,_),j=v!==void 0?v:Za.SmartIndenter.getIndentation(h,y,X,b===E||Il(h,_)===h);T===void 0&&(T=Za.SmartIndenter.shouldIndentChildNode(X,d)&&X.indentSize||0);let Z={text:z,fileName:void 0,getLineAndCharacterOfPosition(de){return $s(this,de)}},le=Za.formatNodeGivenIndentation(N,Z,_.languageVariant,j,T,{...g,options:X});return wx(z,le)}function u(d,_,y){let h=GU(y),v=Yv(y);return yd({newLine:v,neverAsciiEscape:!0,preserveSourceNewlines:!0,terminateUnterminatedLiterals:!0},h).writeNode(4,d,_,h),{text:h.getText(),node:k2(d)}}e.getNonformattedText=u})(b2||(b2={}));function wx(e,n){for(let r=n.length-1;r>=0;r--){let{span:s,newText:a}=n[r];e=`${e.substring(0,s.start)}${a}${e.substring(Fu(s))}`}return e}function Hse(e){return ts(e,0)===e.length}var Gse={...cy,factory:Wv(cy.factory.flags|1,cy.factory.baseFactory)};function k2(e){let n=Wm(e,k2,Gse,Qse,k2),r=qi(n)?n:Object.create(n);return Aa(r,zU(e),VU(e)),r}function Qse(e,n,r,s,a){let l=__(e,n,r,s,a);if(!l)return l;w.assert(e);let u=l===e?Ve.createNodeArray(l.slice(0)):l;return Aa(u,zU(e),VU(e)),u}function GU(e){let n=0,r=S0(e),s=re=>{re&&tP(re,n)},a=re=>{re&&nP(re,n)},l=re=>{re&&tP(re,n)},u=re=>{re&&nP(re,n)},d=re=>{re&&tP(re,n)},_=re=>{re&&nP(re,n)};function y(re,be){if(be||!Hse(re)){n=r.getTextPos();let rt=0;for(;Bu(re.charCodeAt(re.length-rt-1));)rt++;n-=rt}}function h(re){r.write(re),y(re,!1)}function v(re){r.writeComment(re)}function b(re){r.writeKeyword(re),y(re,!1)}function T(re){r.writeOperator(re),y(re,!1)}function E(re){r.writePunctuation(re),y(re,!1)}function g(re){r.writeTrailingSemicolon(re),y(re,!1)}function M(re){r.writeParameter(re),y(re,!1)}function N(re){r.writeProperty(re),y(re,!1)}function z(re){r.writeSpace(re),y(re,!1)}function X(re){r.writeStringLiteral(re),y(re,!1)}function j(re,be){r.writeSymbol(re,be),y(re,!1)}function Z(re){r.writeLine(re)}function le(){r.increaseIndent()}function de(){r.decreaseIndent()}function se(){return r.getText()}function ye(re){r.rawWrite(re),y(re,!1)}function he(re){r.writeLiteral(re),y(re,!0)}function oe(){return r.getTextPos()}function ie(){return r.getLine()}function Y(){return r.getColumn()}function _e(){return r.getIndent()}function G(){return r.isAtStartOfLine()}function ke(){r.clear(),n=0}return{onBeforeEmitNode:s,onAfterEmitNode:a,onBeforeEmitNodeArray:l,onAfterEmitNodeArray:u,onBeforeEmitToken:d,onAfterEmitToken:_,write:h,writeComment:v,writeKeyword:b,writeOperator:T,writePunctuation:E,writeTrailingSemicolon:g,writeParameter:M,writeProperty:N,writeSpace:z,writeStringLiteral:X,writeSymbol:j,writeLine:Z,increaseIndent:le,decreaseIndent:de,getText:se,rawWrite:ye,writeLiteral:he,getTextPos:oe,getLine:ie,getColumn:Y,getIndent:_e,isAtStartOfLine:G,hasTrailingComment:()=>r.hasTrailingComment(),hasTrailingWhitespace:()=>r.hasTrailingWhitespace(),clear:ke}}function Yse(e){let n;for(let y of e.statements)if(sk(y))n=y;else break;let r=0,s=e.text;if(n)return r=n.end,_(),r;let a=kv(s);a!==void 0&&(r=a.length,_());let l=Wu(s,r);if(!l)return r;let u,d;for(let y of l){if(y.kind===3&&jv(s,y.pos)){u={range:y,pinnedOrTripleSlash:!0};continue}if(u){if(u.pinnedOrTripleSlash)break;let h=e.getLineAndCharacterOfPosition(y.pos).line,v=e.getLineAndCharacterOfPosition(u.range.end).line;if(h>=v+2)break}if(e.statements.length){d===void 0&&(d=e.getLineAndCharacterOfPosition(e.statements[0].getStart()).line);let h=e.getLineAndCharacterOfPosition(y.end).line;if(d<h+2)break}u={range:y,pinnedOrTripleSlash:!1}}return u&&(r=u.range.end,_()),r;function _(){if(r<s.length){let y=s.charCodeAt(r);Mo(y)&&(r++,r<s.length&&y===13&&s.charCodeAt(r)===10&&r++)}}}function QU(e,n){return!D0(e,n)&&!bg(e,n)&&!aW(e,n)}function Zse(e,n){return(Kp(e)||Cl(e))&&kD(n)||xb(e)&&xb(n)}var Nx;(e=>{function n(s,a,l,u){switch(u.kind){case 149:{let y=u.parent;hd(y)&&y.parameters.length===1&&!cu(y,20,l)?s.replaceNodeWithText(l,u,"()"):M1(s,a,l,u);break}case 266:let d=u.parent;d.kind===265&&u!==jo(d.elements)?Xf(s,l,u):M1(s,a,l,u);break;case 237:r(s,a,l,u);break;case 148:M1(s,a,l,u);break;case 26:Xf(s,l,u,{trailingTriviaOption:0});break;case 138:Xf(s,l,u,{leadingTriviaOption:0});break;case 170:case 169:Xf(s,l,u,{leadingTriviaOption:Kc(u)?2:3});break;default:u.parent&&hs(u.parent)&&ki(u.parent.arguments,u)?M1(s,a,l,u):Xf(s,l,u)}}e.deleteDeclaration=n;function r(s,a,l,u){let{parent:d}=u;if(d.declarations.length!==1){M1(s,a,l,u);return}let _=d.parent;switch(_.kind){case 244:break;case 243:Xf(s,l,d);break;case 242:Xf(s,l,_,{leadingTriviaOption:Kc(_)?2:3});break;default:w.assertNever(_)}}})(Nx||(Nx={}));function Xf(e,n,r,s={leadingTriviaOption:1}){let a=rp(n,r,s),l=C_(n,r,s);e.deleteRange(n,{pos:a,end:l})}function M1(e,n,r,s){let a=w.checkDefined(Za.SmartIndenter.getContainingList(s,r)),l=My(a,s);if(w.assert(l!==-1),a.length===1){Xf(e,r,s);return}w.assert(!n.has(s),"Deleting a node twice"),n.add(s),e.deleteRange(r,{pos:Cw(r,s),end:l===a.length-1?C_(r,s,{}):qse(r,s,a[l-1],a[l+1])})}var Xv={};lc(Xv,{createImportSpecifierResolver:()=>Xse,getNoopSymbolTrackerWithResolver:()=>eoe});function Xse(e,n,r,s){let a=YU(n.getTypeChecker(),e,n.getCompilerOptions());return{getModuleSpecifierForBestExportInfo:l};function l(u,d,_,y){let{fixes:h,computedWithoutCacheCount:v}=Kse(u,d,_,!1,n,e,r,s,a,y),b=void 0;return b&&{...b,computedWithoutCacheCount:v}}}function YU(e,n,r){let s;for(let a of n.imports){let l=m9(a);if(g9(l.parent)){let u=e.resolveExternalModuleName(a);u&&(s||(s=Rl())).add(Yi(u),l.parent)}}return{getImportsForExportInfo:({moduleSymbol:a,exportKind:l,targetFlags:u,symbol:d})=>{let _=s?.get(Yi(a));if(!_)return Oe;let y=1;return _.map(h=>({declaration:h,importKind:y,symbol:d,targetFlags:u}))}}}function Kse(e,n,r,s,a,l,u,d,_=_9(l)?YU(a.getTypeChecker(),l,a.getCompilerOptions()):void 0,y){return{computedWithoutCacheCount:0,fixes:Oe}}function eoe(e){return{trackSymbol:()=>!1,moduleResolverHost:_W(e.program,e.host)}}var Kv={};lc(Kv,{findContainingList:()=>Pw,getArgumentInfoForCompletions:()=>toe,getSignatureHelpItems:()=>coe,rangeContainsRange:()=>qk,startEndContainsRange:()=>eJ});function toe(e,n,r,s){let a=ZU(e,n,r,s);return!a||a.isTypeParameterList||a.invocation.kind!==0?void 0:{invocation:a.invocation.node,argumentCount:a.argumentCount,argumentIndex:a.argumentIndex}}function ZU(e,n,r,s){let{parent:a}=e;if(op(a)){let l=a,u=XU(e,n,r,s);if(!u)return;let{list:d,argumentIndex:_,argumentCount:y,argumentsSpan:h}=u;return{isTypeParameterList:!1,invocation:{kind:0,node:l},argumentsSpan:h,argumentIndex:_,argumentCount:y}}else{if(hE(e))return;{let l=TW(e,r);if(l){let{called:u,nTypeArguments:d}=l,_={kind:1,called:u},y=Ml(u.getStart(r),e.end);return{isTypeParameterList:!0,invocation:_,argumentsSpan:y,argumentIndex:d,argumentCount:d+1}}return}}}function XU(e,n,r,s){let a=noe(e,r,s);if(!a)return;let{list:l,argumentIndex:u}=a,d=ioe(s,l),_=soe(l,r);return{list:l,argumentIndex:u,argumentCount:d,argumentsSpan:_}}function noe(e,n,r){if(e.kind===29||e.kind===20)return{list:ooe(e.parent,e,n),argumentIndex:0};{let s=Pw(e);return s&&{list:s,argumentIndex:roe(r,s,e)}}}function roe(e,n,r){return KU(e,n,r)}function ioe(e,n){return KU(e,n,void 0)}function KU(e,n,r){let s=n.getChildren(),a=0,l=!1;for(let u of s){if(r&&u===r)return!l&&u.kind===27&&a++,a;if(vE(u)){a+=aoe(u,e),l=!0;continue}if(u.kind!==27){a++,l=!0;continue}if(l){l=!1;continue}a++}return r?a:s.length&&jo(s).kind===27?a+1:a}function soe(e,n){let r=e.getFullStart(),s=ts(n.text,e.getEnd(),!1);return Ju(r,s-r)}function ooe(e,n,r){let s=e.getChildren(r),a=s.indexOf(n);return w.assert(a>=0&&s.length>a+1),s[a+1]}function Pw(e){return tv(e)?e:Zr(e.parent.getChildren(),r=>tv(r)&&qk(r,e))}function qk(e,n){return eJ(e.pos,e.end,n)}function eJ(e,n,r){return e<=r.pos&&n>=r.end}function aoe(e,n){let r=n.getTypeAtLocation(e.expression);return 0}function coe(e,n,r,s,a){let l=e.getTypeChecker(),u=CW(n,r);if(!u)return;let d=!!s&&s.kind==="characterTyped";if(d&&(bg(n,r,u)||D0(n,r)))return;let _=!!s&&s.kind==="invoked",y=_oe(u,r,n,l,_);if(!y)return;a.throwIfCancellationRequested();let h=goe(y,l,n,u,d);return a.throwIfCancellationRequested(),h?l.runWithCancellationToken(a,v=>h.kind===0?sJ(h.candidates,h.resolvedSignature,y,n,v):yoe(h.symbol,y,n,v)):hoe(y,e,a)}function loe(e,n,r,s){let a=foe(e);if(a===void 0)return;let l=poe(a,r,n,s);if(l===void 0)return;let{contextualType:u,argumentIndex:d,argumentCount:_,argumentsSpan:y}=l,h=u.getNonNullableType(),v=h.symbol;if(v===void 0)return;let b=wo(h.getCallSignatures());return b===void 0?void 0:{isTypeParameterList:!1,invocation:{kind:2,signature:b,node:e,symbol:uoe(v)},argumentsSpan:y,argumentIndex:d,argumentCount:_}}function uoe(e){return e.name==="__type"&&Ya(e.declarations,n=>k0(n)?to(n.parent,T_)?.symbol:void 0)||e}function foe(e){switch(e.kind){case 20:case 27:return e;default:return Xn(e.parent,n=>gs(n)?!0:ms(n)||Xy(n)?!1:"quit")}}function poe(e,n,r,s){let{parent:a}=e;switch(a.kind){case 289:case 154:case 270:case 271:let l=XU(e,r,n,s);if(!l)return;let{argumentIndex:u,argumentCount:d,argumentsSpan:_}=l,y=ev(a)?s.getContextualTypeForObjectLiteralElement(a):s.getContextualType(a);return y&&{contextualType:y,argumentIndex:u,argumentCount:d,argumentsSpan:_};case 269:{let h=tJ(a),v=s.getContextualType(h),b=e.kind===20?0:Ix(a)-1,T=Ix(h);return v&&{contextualType:v,argumentIndex:b,argumentCount:T,argumentsSpan:Sp(a)}}default:return}}function doe(e,n,r,s){return loe(e,n,r,s)||ZU(e,n,r,s)}function tJ(e){return Ur(e.parent)?tJ(e.parent):e}function Ix(e){return Ur(e.left)?Ix(e.left)+1:2}function _oe(e,n,r,s,a){for(let l=e;!ti(l)&&(a||!uu(l));l=l.parent){w.assert(qk(l.parent,l),"Not a subspan",()=>`Child: ${w.formatSyntaxKind(l.kind)}, parent: ${w.formatSyntaxKind(l.parent.kind)}`);let u=doe(l,n,r,s);if(u)return u}}function nJ(e,n,r){let s=e.getFullStart(),a=e.parent;for(;a;){let l=Ma(s,n,a,!0);if(l)return qk(r,l);a=a.parent}return w.fail("Could not find preceding token")}function moe(e,n,r){if(!op(n))return!1;let s=n.getChildren(r);switch(e.kind){case 20:return ki(s,e);case 27:{let a=Pw(e);return!!a&&ki(s,a)}case 29:return nJ(e,r,n.expression);default:return!1}}function goe({invocation:e,argumentCount:n},r,s,a,l){switch(e.kind){case 0:{if(l&&!moe(a,e.node,s))return;let u=[],d=r.getResolvedSignatureForSignatureHelp(e.node,u,n);return u.length===0?void 0:{kind:0,candidates:u,resolvedSignature:d}}case 1:{let{called:u}=e;if(l&&!nJ(a,s,Tt(u)?u.parent:u))return;let d=PW(u,n,r);if(d.length!==0)return{kind:0,candidates:d,resolvedSignature:qs(d)};let _=r.getSymbolAtLocation(u);return _&&{kind:1,symbol:_}}case 2:return{kind:0,candidates:[e.signature],resolvedSignature:e.signature};default:return w.assertNever(e)}}function rJ(e){return e.kind===0?K2(e.node):e.called}function iJ(e){return e.kind===0?e.node:e.kind===1?e.called:e.node}function hoe(e,n,r){if(e.invocation.kind===2)return;let s=rJ(e.invocation),a=s&&Ii(s)?s.name.text:void 0,l=n.getTypeChecker();return a===void 0?void 0:Ya(n.getSourceFiles(),u=>Ya(u.getNamedDeclarations().get(a),d=>{let _=d.symbol&&l.getTypeOfSymbolAtLocation(d.symbol,d),y=_&&_.getCallSignatures();if(y&&y.length)return l.runWithCancellationToken(r,h=>sJ(y,y[0],e,u,h,!0))}))}var dv=70246400;function sJ(e,n,{isTypeParameterList:r,argumentCount:s,argumentsSpan:a,invocation:l,argumentIndex:u},d,_,y){let h=iJ(l),v=l.kind===2?l.symbol:_.getSymbolAtLocation(rJ(l))||y&&n.declaration?.symbol,b=v?Mh(_,v,y?d:void 0,void 0):Oe,T=Xt(e,z=>Toe(z,b,r,_,h,d)),E=0,g=0;for(let z=0;z<T.length;z++){let X=T[z];if(e[z]===n&&(E=g,X.length>1)){let j=0;for(let Z of X){if(Z.isVariadic||Z.parameters.length>=s){E=g+j;break}j++}}g+=X.length}w.assert(E!==-1);let M={items:_y(T,Gi),applicableSpan:a,selectedItemIndex:E,argumentIndex:u,argumentCount:s},N=M.items[E];if(N.isVariadic){let z=Pl(N.parameters,X=>!!X.isRest);-1<z&&z<N.parameters.length-1?M.argumentIndex=N.parameters.length:M.argumentIndex=Math.min(M.argumentIndex,N.parameters.length-1)}return M}function yoe(e,{argumentCount:n,argumentsSpan:r,invocation:s,argumentIndex:a},l,u){let d=u.getLocalTypeParametersOfClassOrInterfaceOrTypeAlias(e);return d?{items:[voe(e,d,u,iJ(s),l)],applicableSpan:r,selectedItemIndex:0,argumentIndex:a,argumentCount:n}:void 0}function voe(e,n,r,s,a){let l=Mh(r,e),u=pg(),d=n.map(v=>aJ(v,r,s,a,u)),_=e.getDocumentationComment(r),y=e.getJsDocTags(r);return{isVariadic:!1,prefixDisplayParts:[...l,Ga(29)],suffixDisplayParts:[Ga(32)],separatorDisplayParts:oJ,parameters:d,documentation:_,tags:y}}var oJ=[Ga(27),Do()];function Toe(e,n,r,s,a,l){let u=(r?Coe:Soe)(e,s,a,l);return Xt(u,({isVariadic:d,parameters:_,prefix:y,suffix:h})=>{let v=[...n,...y],b=[...h,...koe(e,a,s)],T=e.getDocumentationComment(s),E=e.getJsDocTags();return{isVariadic:d,prefixDisplayParts:v,suffixDisplayParts:b,separatorDisplayParts:oJ,parameters:_,documentation:T,tags:E}})}function Soe(e,n,r,s){let a=pg(),l=yf(_=>{if(e.typeParameters&&e.typeParameters.length){let y=Ve.createNodeArray(e.typeParameters.map(h=>n.typeParameterToDeclaration(h,r,dv)));a.writeList(53776,y,s,_)}}),u=n.getExpandedParameters(e),d=n.hasEffectiveRestParameter(e)?u.length===1?_=>!0:_=>!!(_.length&&to(_[_.length-1],D_)?.links.checkFlags&32768):_=>!1;return u.map(_=>({isVariadic:d(_),parameters:_.map(y=>boe(y,n,r,s,a)),prefix:[...l,Ga(20)],suffix:[Ga(21)]}))}function boe(e,n,r,s,a){let l=yf(_=>{let y=n.symbolToParameterDeclaration(e,r,dv);a.writeNode(4,y,s,_)}),u=n.isOptionalParameter(e.valueDeclaration),d=D_(e)&&!!(e.links.checkFlags&32768);return{name:e.name,documentation:e.getDocumentationComment(n),displayParts:l,isOptional:u,isRest:d}}function koe(e,n,r){return yf(s=>{s.writePunctuation(":"),s.writeSpace(" ");let a=r.getTypePredicateOfSignature(e);a?r.writeTypePredicate(a,n,void 0,s):r.writeType(r.getReturnTypeOfSignature(e),n,void 0,s)})}function aJ(e,n,r,s,a){let l=yf(u=>{let d=n.typeParameterToDeclaration(e,r,dv);a.writeNode(4,d,s,u)});return{name:e.symbol.name,documentation:e.symbol.getDocumentationComment(n),displayParts:l,isOptional:!1,isRest:!1}}function Coe(e,n,r,s){let a=(e.target||e).typeParameters,l=pg(),u=(a||Oe).map(_=>aJ(_,n,r,s,l)),d=e.thisParameter?[n.symbolToParameterDeclaration(e.thisParameter,r,dv)]:[];return n.getExpandedParameters(e).map(_=>{let y=Ve.createNodeArray([...d,...Xt(_,v=>n.symbolToParameterDeclaration(v,r,dv))]),h=yf(v=>{l.writeList(2576,y,s,v)});return{isVariadic:!1,parameters:u,prefix:[Ga(29)],suffix:[Ga(32),...h]}})}var xw={};lc(xw,{getNavigationBarItems:()=>xoe,getNavigationTree:()=>Doe});var Poe=/\s+/g,Ax=150,$k,N0,_v=[],Al,cJ=[],Bh,Ox=[];function xoe(e,n){$k=n,N0=e;try{return Xt(Loe(fJ(e)),Foe)}finally{lJ()}}function Doe(e,n){$k=n,N0=e;try{return dJ(fJ(e))}finally{lJ()}}function lJ(){N0=void 0,$k=void 0,_v=[],Al=void 0,Ox=[]}function mv(e){return Dh(e.getText(N0))}function C2(e){return e.node.kind}function uJ(e,n){e.children?e.children.push(n):e.children=[n]}function fJ(e){w.assert(!_v.length);let n={node:e,name:void 0,additionalNodes:void 0,parent:void 0,children:void 0,indent:0};Al=n;for(let r of e.statements)gv(r);return Hk(),w.assert(!Al&&!_v.length),n}function rP(e,n){uJ(Al,pJ(e,n))}function pJ(e,n){return{node:e,name:n||(hp(e)||xc(e)?hi(e):void 0),additionalNodes:void 0,parent:Al,children:void 0,indent:Al.indent+1}}function Eoe(e){Bh||(Bh=new Map),Bh.set(e,!0)}function Dw(e,n){let r=pJ(e,n);uJ(Al,r),_v.push(Al),cJ.push(Bh),Bh=void 0,Al=r}function Hk(){Al.children&&(P2(Al.children,Al),Ew(Al.children)),Al=_v.pop(),Bh=cJ.pop()}function _b(e,n,r){Dw(e,r),gv(n),Hk()}function vO(e){e.initializer&&Roe(e.initializer)?(Dw(e),Ns(e.initializer,gv),Hk()):_b(e,e.initializer)}function woe(e){let n=hi(e);if(n===void 0)return!1;if(Ia(n)){let r=n.expression;return va(r)||ff(r)||o0(r)||_u(r)}return!!n}function gv(e){if($k.throwIfCancellationRequested(),!(!e||xv(e)))switch(e.kind){case 152:woe(e)&&vO(e);break;case 175:_b(e,e.name);break;case 266:case 174:case 237:{let r=e;ds(r.name)?gv(r.name):vO(r);break}case 169:let n=e.name;n&&Tt(n)&&Eoe(n.text),_b(e,e.body);break;case 283:case 270:_b(e,e.body);break;case 274:Dw(e),console.warn("TOdo - class expr inherits"),Hk();break;case 171:case 150:case 239:rP(e);break;case 179:rP(e);break;case 272:case 269:default:Kc(e)&&Jt(e.jsDoc,r=>{Jt(r.tags,s=>{pd(s)&&rP(s)})}),Ns(e,gv)}}function P2(e,n){let r=new Map;Hx(e,(s,a)=>{let l=s.name||hi(s.node),u=l&&mv(l);if(!u)return!0;let d=r.get(u);if(!d)return r.set(u,s),!0;if(d instanceof Array){for(let _ of d)if(TO(_,s,a,n))return!1;return d.push(s),!0}else{let _=d;return TO(_,s,a,n)?!1:(r.set(u,[_,s]),!0)}})}var zS={5:!0,3:!0,7:!0,9:!0,0:!1,1:!1,2:!1,8:!1,6:!0,4:!1};function Noe(e,n,r,s){function a(d){return Zc(d)||Yc(d)||Cs(d)}let l=Ur(n.node)||hs(n.node)?Oa(n.node):0,u=Ur(e.node)||hs(e.node)?Oa(e.node):0;if(zS[l]&&zS[u]||a(e.node)&&zS[l]||a(n.node)&&zS[u]){let d=e.additionalNodes&&wo(e.additionalNodes)||e.node;!Ky(e.node)&&!Ky(n.node)||a(e.node)||a(n.node)?(w.fail("no class decl"),(a(e.node)?e.node:a(n.node)?n.node:void 0)!==void 0?w.fail("no ctor"):(e.children||n.children)&&(e.children=ri(e.children||[{...e}],n.children||[n]),e.children&&(P2(e.children,e),Ew(e.children)))):(e.children=ri(e.children,n.children),e.children&&P2(e.children,e));let _=n.node;return s.children[r-1].node.end===d.end?Ho(d,{pos:d.pos,end:_.end}):w.fail("no class decl"),!0}return l!==0}function TO(e,n,r,s){return Noe(e,n,r,s)?!0:Ioe(e.node,n.node,s)?(Aoe(e,n),!0):!1}function Ioe(e,n,r){if(e.kind!==n.kind||e.parent!==n.parent&&!(SO(e,r)&&SO(n,r)))return!1;switch(e.kind){case 152:default:return!0}}function SO(e,n){let r=e.parent;return r===n.node||ki(n.additionalNodes,r)}function Aoe(e,n){e.additionalNodes=e.additionalNodes||[],e.additionalNodes.push(n.node),n.additionalNodes&&e.additionalNodes.push(...n.additionalNodes),e.children=ri(e.children,n.children),e.children&&(P2(e.children,e),Ew(e.children))}function Ew(e){e.sort(Ooe)}function Ooe(e,n){return Tb(bO(e.node),bO(n.node))||vs(C2(e),C2(n))}function bO(e){let n=hi(e);if(n&&h0(n)){let r=Hm(n);return r&&r}switch(e.kind){case 270:case 274:case 283:return mJ(e);default:return}}function Lx(e,n){if(n){let r=Tt(n)?n.text:Ha(n)?`[${mv(n.argumentExpression)}]`:mv(n);if(r.length>0)return Dh(r)}switch(e.kind){case 176:let r=e;return H8(r)?`"${W_(wc(md(di(r.fileName))))}"`:"<global>";case 179:return e.name.text;case 283:let s=tF(e.parent);if(s&&hs(s)){let a=ww(s.expression);return a?`${a}() callback (::)`:"<anonymous>"}case 169:case 270:case 274:return mJ(e);case 151:return"()";case 150:return"[]";default:return"<unknown>"}}function Loe(e){let n=[];function r(a){if(s(a)&&(n.push(a),a.children))for(let l of a.children)r(l)}return r(e),n;function s(a){if(a.children)return!0;switch(C2(a)){case 274:case 176:case 225:case 217:case 179:return!0;case 169:case 270:return l(a);default:return!1}function l(u){if(!u.node.body)return!1;switch(C2(u.parent)){case 176:return!0;default:return!1}}}}function dJ(e){return{text:Lx(e.node,e.name),kind:av(e.node),kindModifiers:_J(e.node),spans:Fx(e),nameSpan:e.name&&Rx(e.name),childItems:Xt(Yr(e.children,n=>!Lv(n.node)&&n.node.pos<n.node.end),dJ)}}function Foe(e){return{text:Lx(e.node,e.name),kind:av(e.node),kindModifiers:_J(e.node),spans:Fx(e),childItems:Xt(e.children,n)||Ox,indent:e.indent,bolded:!1,grayed:!1};function n(r){return{text:Lx(r.node,r.name),kind:av(r.node),kindModifiers:Ak(r.node),spans:Fx(r),childItems:Ox,indent:0,bolded:!1,grayed:!1}}}function Fx(e){let n=[Rx(e.node)];if(e.additionalNodes)for(let r of e.additionalNodes)n.push(Rx(r));return n}function Rx(e){return e.kind===176?cv(e):Sp(e,N0)}function _J(e){return e.parent&&e.parent.kind===237&&(e=e.parent),Ak(e)}function mJ(e){let{parent:n}=e;if(e.name&&Iv(e.name)>0)return Dh(sa(e.name));if(n&&Cs(n))return Dh(sa(n.name));if(n&&Ur(n)&&n.operatorToken.kind===74)return mv(n.left).replace(Poe,"");if(n&&af(n))return mv(n.name);if(Au(e))return"(: :)";if(ho(e))return"<class>";if(n&&hs(n)){let r=ww(n.expression);if(r!==void 0){if(r=Dh(r),r.length>Ax)return`${r} callback`;let s=Dh(Vi(n.arguments,a=>ss(a)?a.getText(N0):void 0).join(", "));return`${r}(${s}) callback`}}return"<function>"}function ww(e){if(Tt(e))return e.text;if(Ii(e)){let n=ww(e.expression),r=e.name.text;return n===void 0?r:`${n}.${r}`}else return}function Roe(e){switch(e.kind){case 270:case 274:case 283:return!0;default:return!1}}function Dh(e){return e=e.length>Ax?e.substring(0,Ax)+"...":e,e.replace(/\\?(\r?\n|\r|\u2028|\u2029)/g,"")}var gJ=(e=>(e[e.terse=0]="terse",e[e.normal=1]="normal",e[e.requestTime=2]="requestTime",e[e.verbose=3]="verbose",e))(gJ||{}),hJ=(e=>(e.Err="Err",e.Info="Info",e.Perf="Perf",e))(hJ||{}),rd=L2();function Th(e,n,r){let s=sc(e)?e:Wi(e,n);return r(s)}function Ps(e){return di(e)}var mp;(e=>{function n(){throw new Error("No Project.")}e.ThrowNoProject=n;function r(){throw new Error("The project's language service is disabled.")}e.ThrowProjectLanguageServiceDisabled=r;function s(a,l){throw new Error(`Project '${l.getProjectName()}' does not contain document '${a}'`)}e.ThrowProjectDoesNotContainDocument=s})(mp||(mp={}));function Moe(e){return e}function yJ(e){return`/dev/null/auxiliaryProject${e}*`}var vJ=class TJ{constructor(n,r){this.host=n,this.pendingTimeouts=new Map,this.logger=r.hasLevel(3)?r:void 0}schedule(n,r,s){let a=this.pendingTimeouts.get(n);a&&this.host.clearTimeout(a),this.pendingTimeouts.set(n,this.host.setTimeout(TJ.run,r,n,this,s)),this.logger&&this.logger.info(`Scheduled: ${n}${a?", Cancelled earlier one":""}`)}cancel(n){let r=this.pendingTimeouts.get(n);return r?(this.host.clearTimeout(r),this.pendingTimeouts.delete(n)):!1}static run(n,r,s){r.pendingTimeouts.delete(n),r.logger&&r.logger.info(`Running: ${n}`),s()}},SJ=class bJ{constructor(n,r,s){this.host=n,this.delay=r,this.logger=s}scheduleCollect(){!this.host.gc||this.timerId!==void 0||(this.timerId=this.host.setTimeout(bJ.run,this.delay,this))}static run(n){n.timerId=void 0;let r=n.logger.hasLevel(2),s=r&&n.host.getMemoryUsage();if(n.host.gc(),r){let a=n.host.getMemoryUsage();n.logger.perftrc(`GC::before ${s}, after ${a}`)}}};function kJ(e,n){let r;function s(a,l){let{files:u,directories:d}=n(a);r??(r=Zr(u,_=>_==="lpc-config.json")),r?r=ii(a,r):Jt(d,_=>(s(ii(a,_),l===void 0?void 0:l+1),!!r))}return s(e,0),r?Ps(r):void 0}function joe(){let e=new Date;return`${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}:${e.getSeconds().toString().padStart(2,"0")}.${e.getMilliseconds().toString().padStart(3,"0")}`}var kO=`
    `;function py(e){return kO+e.replace(/\n/g,kO)}function dy(e){return py(JSON.stringify(e,void 0,2))}var CJ={};lc(CJ,{CommandTypes:()=>PJ,IndentStyle:()=>xJ});var PJ=(e=>(e.LinkedEditingRange="linkedEditingRange",e.Brace="brace",e.BraceFull="brace-full",e.BraceCompletion="braceCompletion",e.GetSpanOfEnclosingComment="getSpanOfEnclosingComment",e.Change="change",e.Close="close",e.Completions="completions",e.CompletionInfo="completionInfo",e.CompletionsFull="completions-full",e.CompletionDetails="completionEntryDetails",e.CompletionDetailsFull="completionEntryDetails-full",e.CompileOnSaveAffectedFileList="compileOnSaveAffectedFileList",e.CompileOnSaveEmitFile="compileOnSaveEmitFile",e.Configure="configure",e.Definition="definition",e.DefinitionFull="definition-full",e.DefinitionAndBoundSpan="definitionAndBoundSpan",e.DefinitionAndBoundSpanFull="definitionAndBoundSpan-full",e.Implementation="implementation",e.ImplementationFull="implementation-full",e.EmitOutput="emit-output",e.Exit="exit",e.FileReferences="fileReferences",e.FileReferencesFull="fileReferences-full",e.Format="format",e.Formatonkey="formatonkey",e.FormatFull="format-full",e.FormatonkeyFull="formatonkey-full",e.FormatRangeFull="formatRange-full",e.Geterr="geterr",e.GeterrForProject="geterrForProject",e.SemanticDiagnosticsSync="semanticDiagnosticsSync",e.SyntacticDiagnosticsSync="syntacticDiagnosticsSync",e.SuggestionDiagnosticsSync="suggestionDiagnosticsSync",e.NavBar="navbar",e.NavBarFull="navbar-full",e.Navto="navto",e.NavtoFull="navto-full",e.NavTree="navtree",e.NavTreeFull="navtree-full",e.DocumentHighlights="documentHighlights",e.DocumentHighlightsFull="documentHighlights-full",e.Open="open",e.Quickinfo="quickinfo",e.QuickinfoFull="quickinfo-full",e.References="references",e.ReferencesFull="references-full",e.Reload="reload",e.Rename="rename",e.RenameInfoFull="rename-full",e.RenameLocationsFull="renameLocations-full",e.Saveto="saveto",e.SignatureHelp="signatureHelp",e.SignatureHelpFull="signatureHelp-full",e.FindSourceDefinition="findSourceDefinition",e.Status="status",e.TypeDefinition="typeDefinition",e.ProjectInfo="projectInfo",e.ReloadProjects="reloadProjects",e.Unknown="unknown",e.OpenExternalProject="openExternalProject",e.OpenExternalProjects="openExternalProjects",e.CloseExternalProject="closeExternalProject",e.SynchronizeProjectList="synchronizeProjectList",e.ApplyChangedToOpenFiles="applyChangedToOpenFiles",e.UpdateOpen="updateOpen",e.EncodedSyntacticClassificationsFull="encodedSyntacticClassifications-full",e.EncodedSemanticClassificationsFull="encodedSemanticClassifications-full",e.Cleanup="cleanup",e.GetOutliningSpans="getOutliningSpans",e.GetOutliningSpansFull="outliningSpans",e.TodoComments="todoComments",e.Indentation="indentation",e.DocCommentTemplate="docCommentTemplate",e.CompilerOptionsDiagnosticsFull="compilerOptionsDiagnostics-full",e.NameOrDottedNameSpan="nameOrDottedNameSpan",e.BreakpointStatement="breakpointStatement",e.CompilerOptionsForInferredProjects="compilerOptionsForInferredProjects",e.GetCodeFixes="getCodeFixes",e.GetCodeFixesFull="getCodeFixes-full",e.GetCombinedCodeFix="getCombinedCodeFix",e.GetCombinedCodeFixFull="getCombinedCodeFix-full",e.ApplyCodeActionCommand="applyCodeActionCommand",e.GetSupportedCodeFixes="getSupportedCodeFixes",e.GetApplicableRefactors="getApplicableRefactors",e.GetEditsForRefactor="getEditsForRefactor",e.GetMoveToRefactoringFileSuggestions="getMoveToRefactoringFileSuggestions",e.GetPasteEdits="getPasteEdits",e.GetEditsForRefactorFull="getEditsForRefactor-full",e.OrganizeImports="organizeImports",e.OrganizeImportsFull="organizeImports-full",e.GetEditsForFileRename="getEditsForFileRename",e.GetEditsForFileRenameFull="getEditsForFileRename-full",e.ConfigurePlugin="configurePlugin",e.SelectionRange="selectionRange",e.SelectionRangeFull="selectionRange-full",e.ToggleLineComment="toggleLineComment",e.ToggleLineCommentFull="toggleLineComment-full",e.ToggleMultilineComment="toggleMultilineComment",e.ToggleMultilineCommentFull="toggleMultilineComment-full",e.CommentSelection="commentSelection",e.CommentSelectionFull="commentSelection-full",e.UncommentSelection="uncommentSelection",e.UncommentSelectionFull="uncommentSelection-full",e.PrepareCallHierarchy="prepareCallHierarchy",e.ProvideCallHierarchyIncomingCalls="provideCallHierarchyIncomingCalls",e.ProvideCallHierarchyOutgoingCalls="provideCallHierarchyOutgoingCalls",e.ProvideInlayHints="provideInlayHints",e.WatchChange="watchChange",e.MapCode="mapCode",e))(PJ||{}),xJ=(e=>(e.None="None",e.Block="Block",e.Smart="Smart",e))(xJ||{}),DJ=class{constructor(e,n,r){this.host=e,this.info=n,this.isOpen=!1,this.ownFileText=!1,this.pendingReloadFromDisk=!1,this.version=r||0}getVersion(){return this.svc?`SVC-${this.version}-${this.svc.getSnapshotVersion()}`:`Text-${this.version}`}hasScriptVersionCache_TestOnly(){return this.svc!==void 0}resetSourceMapInfo(){this.info.sourceFileLike=void 0,this.info.closeSourceMapFileWatcher(),this.info.sourceMapFilePath=void 0,this.info.declarationInfoPath=void 0,this.info.sourceInfos=void 0,this.info.documentPositionMapper=void 0}useText(e){this.svc=void 0,this.text=e,this.textSnapshot=void 0,this.lineMap=void 0,this.fileSize=void 0,this.resetSourceMapInfo(),this.version++}edit(e,n,r){this.switchToScriptVersionCache().edit(e,n-e,r),this.ownFileText=!1,this.text=void 0,this.textSnapshot=void 0,this.lineMap=void 0,this.fileSize=void 0,this.resetSourceMapInfo()}reload(e){return w.assert(e!==void 0),this.pendingReloadFromDisk=!1,!this.text&&this.svc&&(this.text=Sg(this.svc.getSnapshot())),this.text!==e?(this.useText(e),this.ownFileText=!1,!0):!1}reloadWithFileText(e){let{text:n,fileSize:r}=e||!this.info.isDynamicOrHasMixedContent()?this.getFileTextAndSize(e):{text:"",fileSize:void 0},s=this.reload(n);return this.fileSize=r,this.ownFileText=!e||e===this.info.fileName,this.ownFileText&&this.info.mTime===ba.getTime()&&(this.info.mTime=(this.host.getModifiedTime(this.info.fileName)||ba).getTime()),s}scheduleReloadIfNeeded(){return!this.pendingReloadFromDisk&&!this.ownFileText?this.pendingReloadFromDisk=!0:!1}delayReloadFromFileIntoText(){this.pendingReloadFromDisk=!0}getTelemetryFileSize(){return this.fileSize?this.fileSize:this.text?this.text.length:this.svc?this.svc.getSnapshot().getLength():this.getSnapshot().getLength()}getSnapshot(){return this.tryUseScriptVersionCache()?.getSnapshot()||(this.textSnapshot??(this.textSnapshot=s2.fromString(w.checkDefined(this.text))))}getAbsolutePositionAndLineText(e){let n=this.tryUseScriptVersionCache();if(n)return n.getAbsolutePositionAndLineText(e);let r=this.getLineMap();return e<=r.length?{absolutePosition:r[e-1],lineText:this.text.substring(r[e-1],r[e])}:{absolutePosition:this.text.length,lineText:void 0}}lineToTextSpan(e){let n=this.tryUseScriptVersionCache();if(n)return n.lineToTextSpan(e);let r=this.getLineMap(),s=r[e],a=e+1<r.length?r[e+1]:this.text.length;return Ml(s,a)}lineOffsetToPosition(e,n,r){let s=this.tryUseScriptVersionCache();return s?s.lineOffsetToPosition(e,n):M2(this.getLineMap(),e-1,n-1,this.text,r)}positionToLineOffset(e){let n=this.tryUseScriptVersionCache();if(n)return n.positionToLineOffset(e);let{line:r,character:s}=m0(this.getLineMap(),e);return{line:r+1,offset:s+1}}getFileTextAndSize(e){let n,r=e||this.info.fileName,s=()=>n===void 0?n=this.host.readFile(r)||"":n;if(!XD(this.info.fileName)){let a=this.host.getFileSize?this.host.getFileSize(r):s().length;if(a>Iw)return w.assert(!!this.info.containingProjects.length),this.info.containingProjects[0].projectService.logger.info(`Skipped loading contents of large file ${r} for info ${this.info.fileName}: fileSize: ${a}`),this.info.containingProjects[0].projectService.sendLargeFileReferencedEvent(r,a),{text:"",fileSize:a}}return{text:s()}}switchToScriptVersionCache(){return(!this.svc||this.pendingReloadFromDisk)&&(this.svc=Wx.fromString(this.getOrLoadText()),this.textSnapshot=void 0,this.version++),this.svc}tryUseScriptVersionCache(){return(!this.svc||this.pendingReloadFromDisk)&&this.getOrLoadText(),this.isOpen?(!this.svc&&!this.textSnapshot&&(this.svc=Wx.fromString(w.checkDefined(this.text)),this.textSnapshot=void 0),this.svc):this.svc}getOrLoadText(){return(this.text===void 0||this.pendingReloadFromDisk)&&(w.assert(!this.svc||this.pendingReloadFromDisk,"ScriptVersionCache should not be set when reloading from disk"),this.reloadWithFileText()),this.text}getLineMap(){return w.assert(!this.svc,"ScriptVersionCache should not be set"),this.lineMap||(this.lineMap=_0(w.checkDefined(this.text)))}getLineInfo(){let e=this.tryUseScriptVersionCache();if(e)return{getLineCount:()=>e.getLineCount(),getLineText:r=>e.getAbsolutePositionAndLineText(r+1).lineText};let n=this.getLineMap();return xE(this.text,n)}},EJ=class{constructor(e,n,r,s,a,l){this.host=e,this.fileName=n,this.scriptKind=r,this.hasMixedContent=s,this.path=a,this.containingProjects=[],this.textStorage=new DJ(e,this,l),(s||this.isDynamic)&&(this.realpath=this.path),this.scriptKind=r||1}isDynamicOrHasMixedContent(){return this.hasMixedContent||this.isDynamic}isScriptOpen(){return this.textStorage.isOpen}open(e){this.textStorage.isOpen=!0,e!==void 0&&this.textStorage.reload(e)&&this.markContainingProjectsAsDirty()}close(e=!0){this.textStorage.isOpen=!1,e&&this.textStorage.scheduleReloadIfNeeded()&&this.markContainingProjectsAsDirty()}getSnapshot(){return this.textStorage.getSnapshot()}incrementVersion(){this.textStorage.version++}ensureRealPath(){if(this.realpath===void 0&&(this.realpath=this.path,this.host.realpath)){w.assert(!!this.containingProjects.length);let e=this.containingProjects[0],n=this.host.realpath(this.path);n&&(this.realpath=e.toPath(n),this.realpath!==this.path&&e.projectService.realpathToScriptInfos.add(this.realpath,this))}}getRealpathIfDifferent(){return this.realpath&&this.realpath!==this.path?this.realpath:void 0}isSymlink(){return this.realpath&&this.realpath!==this.path}getFormatCodeSettings(){return this.formatSettings}attachToProject(e){let n=!this.isAttached(e);return n&&(this.containingProjects.push(e),this.ensureRealPath(),e.onFileAddedOrRemoved(this.isSymlink())),n}isAttached(e){switch(this.containingProjects.length){case 0:return!1;case 1:return this.containingProjects[0]===e;case 2:return this.containingProjects[0]===e||this.containingProjects[1]===e;default:return ki(this.containingProjects,e)}}detachFromProject(e){switch(this.containingProjects.length){case 0:return;case 1:this.containingProjects[0]===e&&(e.onFileAddedOrRemoved(this.isSymlink()),this.containingProjects.pop());break;case 2:this.containingProjects[0]===e?(e.onFileAddedOrRemoved(this.isSymlink()),this.containingProjects[0]=this.containingProjects.pop()):this.containingProjects[1]===e&&(e.onFileAddedOrRemoved(this.isSymlink()),this.containingProjects.pop());break;default:O2(this.containingProjects,e)&&e.onFileAddedOrRemoved(this.isSymlink());break}}detachAllProjects(){for(let e of this.containingProjects){id(e)&&e.getCachedDirectoryStructureHost().addOrDeleteFile(this.fileName,this.path,2);let n=e.getRootFilesMap().get(this.path);e.removeFile(this,!1,!1),e.onFileAddedOrRemoved(this.isSymlink()),n&&!x2(e)&&e.addMissingFileRoot(n.fileName)}Sh(this.containingProjects)}getDefaultProject(){switch(this.containingProjects.length){case 0:return mp.ThrowNoProject();default:return Nw(this.containingProjects[0])||D2(this.containingProjects[0])?mp.ThrowNoProject():this.containingProjects[0]}}registerFileUpdate(){for(let e of this.containingProjects)e.registerFileUpdate(this.path)}setOptions(){}getLatestVersion(){return this.textStorage.getSnapshot(),this.textStorage.getVersion()}saveTo(e){this.host.writeFile(e,Sg(this.textStorage.getSnapshot()))}delayReloadNonMixedContentFile(){w.assert(!this.isDynamicOrHasMixedContent()),this.textStorage.delayReloadFromFileIntoText(),this.markContainingProjectsAsDirty()}reloadFromFile(e){return this.textStorage.reloadWithFileText(e)?(this.markContainingProjectsAsDirty(),!0):!1}editContent(e,n,r){this.textStorage.edit(e,n,r),this.markContainingProjectsAsDirty()}getPreferences(){return this.preferences}markContainingProjectsAsDirty(){for(let e of this.containingProjects)e.markFileAsDirty(this.path)}isOrphan(){return this.deferredDelete||!Jt(this.containingProjects,e=>!e.isOrphan())}isContainedByBackgroundProject(){return kt(this.containingProjects,D2)}lineToTextSpan(e){return this.textStorage.lineToTextSpan(e)}lineOffsetToPosition(e,n,r){return this.textStorage.lineOffsetToPosition(e,n,r)}positionToLineOffset(e){Boe(e);let n=this.textStorage.positionToLineOffset(e);return Woe(n),n}closeSourceMapFileWatcher(){this.sourceMapFilePath&&!Li(this.sourceMapFilePath)&&(M_(this.sourceMapFilePath),this.sourceMapFilePath=void 0)}};function Boe(e){w.assert(typeof e=="number",`Expected position ${e} to be a number.`),w.assert(e>=0,"Expected position to be non-negative.")}function Woe(e){w.assert(typeof e.line=="number",`Expected line ${e.line} to be a number.`),w.assert(typeof e.offset=="number",`Expected offset ${e.offset} to be a number.`),w.assert(e.line>0,`Expected line to be non-${e.line===0?"zero":"negative"}`),w.assert(e.offset>0,`Expected offset to be non-${e.offset===0?"zero":"negative"}`)}function mb(e){return e[0]==="^"||(e.includes("walkThroughSnippet:/")||e.includes("untitled:/"))&&wc(e)[0]==="^"||e.includes(":^")&&!e.includes(As)}var hv=(e=>(e[e.Inferred=0]="Inferred",e[e.Configured=1]="Configured",e[e.External=2]="External",e[e.AutoImportProvider=3]="AutoImportProvider",e[e.Auxiliary=4]="Auxiliary",e))(hv||{}),Gk=class{constructor(e,n,r,s,a,l,u,d,_,y,h){this.projectKind=n,this.projectService=r,this.documentRegistry=s,this.compilerOptions=u,this.compileOnSaveEnabled=d,this.watchOptions=_,this.rootFilesMap=new Map,this.cachedUnresolvedImportsPerFile=new Map,this.hasAddedorRemovedFiles=!1,this.hasAddedOrRemovedSymlinks=!1,this.lastReportedVersion=0,this.projectProgramVersion=0,this.projectStateVersion=0,this.isInitialLoadPending=Lu,this.dirty=!1,this.typingFiles=rd,this.updateFromProjectInProgress=!1,this.projectName=e,this.currentDirectory=this.projectService.getNormalizedAbsolutePath(h),this.directoryStructureHost=y,this.getCanonicalFileName=this.projectService.toCanonicalFileName,this.jsDocParsingMode=this.projectService.jsDocParsingMode,this.cancellationToken=new QW(this.projectService.cancellationToken,this.projectService.throttleWaitMilliseconds);let v=this.projectService.host;this.realpath=mo(v,v.realpath),this.resolutionCache=sB(this,this.currentDirectory,!0);let b=this.fileHandler=Jv({getCurrentDirectory:this.getCurrentDirectory,fileExists:this.fileExists,readFile:this.readFile,getIncludeDirs:T=>this.program.getIncludeDirs(T),getCompilerOptions:()=>this.compilerOptions});this.languageService=HW(this,b,this.documentRegistry,this.projectService.serverMode),l&&this.disableLanguageService(l),this.markAsDirty(),D2(this)||(this.projectService.pendingEnsureProjectForOpenFiles=!0),this.projectService.onProjectCreation(this)}getResolvedProjectReferenceToRedirect(e){}resolveModuleNameLiterals(e,n,r,s,a,l){return this.resolutionCache.resolveModuleNameLiterals(e,n,r,s,a,l)}getModuleResolutionCache(){return this.resolutionCache.getModuleResolutionCache()}disableLanguageService(e){this.languageServiceEnabled&&(w.assert(this.projectService.serverMode!==2),this.languageService.cleanupSemanticCache(),this.languageServiceEnabled=!1,this.cleanupProgram(),this.lastFileExceededProgramSize=e,this.projectService.verifyDocumentRegistry(),this.projectService.onUpdateLanguageServiceStateForProject(this,!1))}fileIsOpen(e){return this.projectService.openFiles.has(e)}scheduleInvalidateResolutionsOfFailedLookupLocations(){this.projectService.throttledOperations.schedule(`${this.getProjectName()}FailedLookupInvalidation`,1e3,()=>{this.resolutionCache.invalidateResolutionsOfFailedLookupLocations()&&this.projectService.delayUpdateProjectGraphAndEnsureProjectStructureForOpenFiles(this)})}getIncludeDirs(){return this.compilerOptions?.libIncludeDirs||[]}onChangedAutomaticTypeDirectiveNames(){this.projectService.delayUpdateProjectGraphAndEnsureProjectStructureForOpenFiles(this)}getAllProjectErrors(){return this.projectErrors||rd}getConfigFilePath(){return this.getProjectName()}getCompilationSettings(){return this.compilerOptions}getCompilerOptions(){return this.getCompilationSettings()}getNewLine(){return`
`}getProjectVersion(){return this.projectStateVersion.toString()}getScriptInfo(e){return this.projectService.getScriptInfo(e)}getRootScriptInfos(){return as(zh(this.rootFilesMap.values(),e=>e.info))}getProjectReferences(){}getProjectName(){return this.projectName}markAutoImportProviderAsDirty(){console.debug("todo - markAutoImportProviderAsDirty")}watchTypeRootsDirectory(e,n,r){return this.projectService.watchFactory.watchDirectory(e,n,r,this.projectService.getWatchOptions(this),nd.TypeRoots,this)}watchDirectoryOfFailedLookupLocation(e,n,r){return this.projectService.watchFactory.watchDirectory(e,n,r,this.projectService.getWatchOptions(this),nd.FailedLookupLocations,this)}onAllFilesNeedReparse(e){this.writeLog(`Reparse ${e.length} files triggered for project: ${this.getProjectName()}`),e.forEach(n=>{this.getScriptInfo(n)?.incrementVersion()})}getScriptFileNames(){if(!this.rootFilesMap.size)return Oe;let e;return this.rootFilesMap.forEach(n=>{(this.languageServiceEnabled||n.info&&n.info.isScriptOpen())&&(e||(e=[])).push(n.fileName)}),Is(e,this.typingFiles)||Oe}isClosed(){return this.rootFilesMap===void 0}hasRoots(){return!!this.rootFilesMap?.size}getCurrentProgram(){return this.program}toPath(e){return Ra(e,this.currentDirectory,this.projectService.toCanonicalFileName)}markAsDirty(){this.dirty||(this.projectStateVersion++,this.dirty=!0)}setTypeAcquisition(e){}onInvalidatedResolution(){this.projectService.delayUpdateProjectGraphAndEnsureProjectStructureForOpenFiles(this)}enableLanguageService(){this.languageServiceEnabled||this.projectService.serverMode===2||(this.languageServiceEnabled=!0,this.lastFileExceededProgramSize=void 0,this.projectService.onUpdateLanguageServiceStateForProject(this,!0))}addRoot(e,n){w.assert(!this.isRoot(e)),this.rootFilesMap.set(e.path,{fileName:n||e.fileName,info:e}),e.attachToProject(this),this.markAsDirty()}getCachedExportInfoMap(){return this.exportMapCache||(this.exportMapCache=uw(this))}clearCachedExportInfoMap(){this.exportMapCache?.clear()}clearSourceMapperCache(){}getPackageJsonAutoImportProvider(){console.debug("todo - getPackageJsonAutoImportProvider")}getGlobalTypingsCacheLocation(){console.debug("todo - getGlobalTypingsCacheLocation")}getLanguageService(e=!0){return e&&Nl(this),this.languageService}getSourceMapper(){return this.getLanguageService().getSourceMapper()}setCompilerOptions(e){if(e){let n=this.compilerOptions;this.compilerOptions=e,this.cachedUnresolvedImportsPerFile.clear(),this.lastCachedUnresolvedImportsList=void 0,this.markAsDirty()}}setWatchOptions(e){this.watchOptions=e}getWatchOptions(){return this.watchOptions}watchAffectingFileLocation(e,n){return this.projectService.watchFactory.watchFile(e,n,2e3,this.projectService.getWatchOptions(this),nd.AffectingFileLocation,this)}hasConfigFile(e){if(this.program&&this.languageServiceEnabled){let n=this.program.getCompilerOptions().configFile;if(n&&e===n.fileName)return!0}return!1}getRootFiles(){return this.rootFilesMap&&as(zh(this.rootFilesMap.values(),e=>e.info?.fileName))}getFileNames(e,n){if(!this.program)return[];if(!this.languageServiceEnabled){let s=this.getRootFiles();return this.compilerOptions,s}let r=[];for(let s of this.program.getSourceFiles())r.push(s.fileName);if(!n){let s=this.program.getCompilerOptions().configFile;s&&r.push(s.fileName)}return r}getOrCreateScriptInfoAndAttachToProject(e){let n=this.projectService.getOrCreateScriptInfoNotOpenedByClient(e,this.currentDirectory,this.directoryStructureHost,!1);if(n){let r=this.rootFilesMap.get(n.path);r&&r.info!==n&&(r.info=n),n.attachToProject(this)}return n}getScriptKind(e){let n=this.projectService.getScriptInfoForPath(this.toPath(e));return n&&n.scriptKind}getScriptVersion(e){let n=this.projectService.getOrCreateScriptInfoNotOpenedByClient(e,this.currentDirectory,this.directoryStructureHost,!1);return n&&n.getLatestVersion()}getScriptSnapshot(e){let n=this.getOrCreateScriptInfoAndAttachToProject(e);if(n)return n.getSnapshot()}getCancellationToken(){return this.cancellationToken}getCurrentDirectory(){return this.currentDirectory}getDefaultLibFileName(){let e=li(di(this.projectService.getExecutingFilePath()));return W8(this.compilerOptions)}useCaseSensitiveFileNames(){return this.projectService.host.useCaseSensitiveFileNames}readDirectory(e,n,r,s,a){return this.directoryStructureHost.readDirectory(e,n,r,s,a)}readFile(e){return this.projectService.host.readFile(e)}writeFile(e,n){return this.projectService.host.writeFile(e,n)}fileExists(e){let n=this.toPath(e);return!this.isWatchedMissingFile(n)&&this.directoryStructureHost.fileExists(e)}getGlobalProjectErrors(){return Yr(this.projectErrors,e=>!e.file)||rd}setProjectErrors(e){this.projectErrors=e}isWatchedMissingFile(e){return!!this.missingFilesMap&&this.missingFilesMap.has(e)}invalidateResolutionsOfFailedLookupLocations(){this.clearInvalidateResolutionOfFailedLookupTimer()&&this.resolutionCache.invalidateResolutionsOfFailedLookupLocations()&&(this.markAsDirty(),this.projectService.delayEnsureProjectForOpenFiles())}clearInvalidateResolutionOfFailedLookupTimer(){return this.projectService.throttledOperations.cancel(`${this.getProjectName()}FailedLookupInvalidation`)}onFileAddedOrRemoved(e){this.hasAddedorRemovedFiles=!0,e&&(this.hasAddedOrRemovedSymlinks=!0)}getCachedDirectoryStructureHost(){}getRootFilesMap(){return this.rootFilesMap}isRoot(e){return this.rootFilesMap?.get(e.path)?.info===e}removeRoot(e){this.rootFilesMap.delete(e.path)}removeFile(e,n,r){this.isRoot(e)&&this.removeRoot(e),n?this.resolutionCache.removeResolutionsOfFile(e.path):this.resolutionCache.invalidateResolutionOfFile(e.path),this.cachedUnresolvedImportsPerFile.delete(e.path),r&&e.detachFromProject(this),this.markAsDirty()}addMissingFileRoot(e){let n=this.projectService.toPath(e);this.rootFilesMap.set(n,{fileName:e}),this.markAsDirty()}updateFromProject(){Nl(this)}getTypeAcquisition(){return this.typeAcquisition||{}}updateGraph(){Dt?.push(Dt.Phase.Session,"updateGraph",{name:this.projectName,kind:hv[this.projectKind]}),this.resolutionCache.startRecordingFilesWithChangedResolutions();let e=this.updateGraphWorker(),n=this.hasAddedorRemovedFiles;this.hasAddedorRemovedFiles=!1,this.hasAddedOrRemovedSymlinks=!1;let r=this.resolutionCache.finishRecordingFilesWithChangedResolutions()||rd;for(let a of r)this.cachedUnresolvedImportsPerFile.delete(a);this.languageServiceEnabled&&this.projectService.serverMode===0&&!this.isOrphan()?(e||r.length)&&(this.lastCachedUnresolvedImportsList=Joe(this.program,this.cachedUnresolvedImportsPerFile)):this.lastCachedUnresolvedImportsList=void 0;let s=this.projectProgramVersion===0&&e;return e&&this.projectProgramVersion++,n&&this.markAutoImportProviderAsDirty(),Dt?.pop(),!e}close(){this.cleanupProgram(),Jt(this.externalFiles,e=>this.detachScriptInfoIfNotRoot(e)),this.rootFilesMap.forEach(e=>e.info?.detachFromProject(this)),this.projectService.pendingEnsureProjectForOpenFiles=!0,this.rootFilesMap=void 0,this.externalFiles=void 0,this.program=void 0,this.resolutionCache.clear(),this.resolutionCache=void 0,this.cachedUnresolvedImportsPerFile=void 0,this.directoryStructureHost=void 0,this.exportMapCache=void 0,this.projectErrors=void 0,this.missingFilesMap&&(n0(this.missingFilesMap,$m),this.missingFilesMap=void 0),this.clearInvalidateResolutionOfFailedLookupTimer(),this.languageService.dispose(),this.languageService=void 0}forEachResolvedProjectReference(e){return this.getCurrentProgram()?.forEachResolvedProjectReference(e)}updateGraphWorker(){let e=this.languageService.getCurrentProgram();w.assert(e===this.program),w.assert(!this.isClosed(),"Called update graph worker of closed project"),this.writeLog(`Starting updateGraphWorker: Project: ${this.getProjectName()}`);let n=Zi(),{hasInvalidatedResolutions:r,hasInvalidatedLibResolutions:s}=this.resolutionCache.createHasInvalidatedResolutions(Lu,Lu);this.hasInvalidatedResolutions=r,this.hasInvalidatedLibResolutions=s,this.resolutionCache.startCachingPerDirectoryResolution(),this.dirty=!1,this.updateFromProjectInProgress=!0,this.program=this.languageService.getProgram(),this.updateFromProjectInProgress=!1,Dt?.push(Dt.Phase.Session,"finishCachingPerDirectoryResolution"),this.resolutionCache.finishCachingPerDirectoryResolution(this.program,e),Dt?.pop(),w.assert(e===void 0||this.program!==void 0);let a=!1;if(this.program&&(!e||this.program!==e&&this.program.structureIsReused!==2)){if(a=!0,e){for(let u of e.getSourceFiles()){let d=this.program.getSourceFileByPath(u.resolvedPath);(!d||u.resolvedPath===u.path&&d.resolvedPath!==u.path)&&this.detachScriptInfoFromProject(u.fileName,!!this.program.getSourceFileByPath(u.path),!0)}e.forEachResolvedProjectReference(u=>{this.program.getResolvedProjectReferenceByPath(u.sourceFile.path)||this.detachScriptInfoFromProject(u.sourceFile.fileName,void 0,!0)})}this.rootFilesMap.forEach((u,d)=>{let _=this.program.getSourceFileByPath(d),y=u.info;!_||u.info?.path===_.resolvedPath||(u.info=this.projectService.getScriptInfo(_.fileName),w.assert(u.info.isAttached(this)),y?.detachFromProject(this))}),dj(this.program,this.missingFilesMap||(this.missingFilesMap=new Map),(u,d)=>this.addMissingFileWatcher(u,d)),this.languageServiceEnabled&&this.projectService.serverMode}this.projectService.verifyProgram(this),this.exportMapCache&&!this.exportMapCache.isEmpty()&&(this.exportMapCache.releaseSymbols(),this.hasAddedorRemovedFiles||e&&!this.program.structureIsReused?this.exportMapCache.clear():this.changedFilesForExportMapCache&&e&&this.program&&o8(this.changedFilesForExportMapCache,u=>{let d=e.getSourceFileByPath(u),_=this.program.getSourceFileByPath(u);return!d||!_?(this.exportMapCache.clear(),!0):this.exportMapCache.onFileChanged(d,_,!!this.getTypeAcquisition().enable)})),this.changedFilesForExportMapCache&&this.changedFilesForExportMapCache.clear(),(this.hasAddedOrRemovedSymlinks||this.program&&!this.program.structureIsReused&&this.getCompilerOptions()?.preserveSymlinks)&&console.debug("todo - implement symlinks support");let l=Zi()-n;return this.sendPerformanceEvent("UpdateGraph",l),this.writeLog(`Finishing updateGraphWorker: Project: ${this.getProjectName()} projectStateVersion: ${this.projectStateVersion} projectProgramVersion: ${this.projectProgramVersion} structureChanged: ${a}${this.program?` structureIsReused:: ${uD[this.program.structureIsReused]}`:""} Elapsed: ${l}ms`),this.projectService.logger.isTestLogger?this.program!==e?this.print(!0,this.hasAddedorRemovedFiles,!0):this.writeLog("Same program as before"):this.hasAddedorRemovedFiles?this.print(!0,!0,!1):this.program!==e&&this.writeLog("Different program with same set of files"),this.projectService.verifyDocumentRegistry(),a}sendPerformanceEvent(e,n){this.projectService.sendPerformanceEvent(e,n)}addMissingFileWatcher(e,n){if(id(this)&&this.projectService.configFileExistenceInfoCache.get(e)?.config?.projects.has(this.canonicalConfigFilePath))return iv;let r=this.projectService.watchFactory.watchFile(Wi(n,this.currentDirectory),(s,a)=>{id(this)&&this.getCachedDirectoryStructureHost().addOrDeleteFile(s,e,a),a===0&&this.missingFilesMap.has(e)&&(this.missingFilesMap.delete(e),r.close(),this.projectService.delayUpdateProjectGraphAndEnsureProjectStructureForOpenFiles(this))},500,void 0,nd.MissingFile,this);return r}registerFileUpdate(e){(this.updatedFileNames||(this.updatedFileNames=new Set)).add(e)}markFileAsDirty(e){this.markAsDirty(),this.exportMapCache&&!this.exportMapCache.isEmpty()&&(this.changedFilesForExportMapCache||(this.changedFilesForExportMapCache=new Set)).add(e)}isOrphan(){return!1}containsScriptInfo(e){if(this.isRoot(e))return!0;if(!this.program)return!1;let n=this.program.getSourceFileByPath(e.path);return!!n&&n.resolvedPath===e.path}isSourceOfProjectReferenceRedirect(e){return!1}writeLog(e){this.projectService.logger.info(e)}filesToString(e){return this.filesToStringWorker(e,!0,!1)}filesToStringWorker(e,n,r){if(this.isInitialLoadPending())return`	Files (0) InitialLoadPending
`;if(!this.program)return`	Files (0) NoProgram
`;let s=this.program.getSourceFiles(),a=`	Files (${s.length})
`;if(e){for(let l of s)a+=`	${l.fileName}${r?` ${l.version} ${JSON.stringify(l.text)}`:""}
`;n&&(a+=`

`,cj(this.program,l=>a+=`	${l}
`))}return a}print(e,n,r){this.writeLog(`Project '${this.projectName}' (${hv[this.projectKind]})`),this.writeLog(this.filesToStringWorker(e&&this.projectService.logger.hasLevel(3),n&&this.projectService.logger.hasLevel(3),r&&this.projectService.logger.hasLevel(3))),this.writeLog("-----------------------------------------------")}detachScriptInfoIfNotRoot(e){let n=this.projectService.getScriptInfo(e);n&&!this.isRoot(n)&&n.detachFromProject(this)}detachScriptInfoFromProject(e,n,r){let s=this.projectService.getScriptInfo(e);s&&(s.detachFromProject(this),n||this.resolutionCache.removeResolutionsOfFile(s.path,r))}containsFile(e,n){let r=this.projectService.getScriptInfoForNormalizedPath(e);return r&&(r.isScriptOpen()||!n)?this.containsScriptInfo(r):!1}getScriptInfoForNormalizedPath(e){let n=this.projectService.getScriptInfoForPath(this.toPath(e));return n&&!n.isAttached(this)?mp.ThrowProjectDoesNotContainDocument(e,this):n}cleanupProgram(){if(this.program){for(let e of this.program.getSourceFiles())this.detachScriptInfoIfNotRoot(e.fileName);this.program.forEachResolvedProjectReference(e=>this.detachScriptInfoFromProject(e.sourceFile.fileName)),this.program=void 0}}},wJ=class extends Gk{constructor(e,n,r,s,a,l){super(e,1,r,s,!1,void 0,{},!1,void 0,a,li(e)),this.canonicalConfigFilePath=n,this.openFileWatchTriggered=new Map,this.canConfigFileJsonReportNoInputFiles=!1,this.isInitialLoadPending=Vx,this.pendingUpdateLevel=2,this.pendingUpdateReason=l}setCompilerHost(e){this.compilerHost=e}getProjectReferences(){return this.projectReferences}getAllProjectErrors(){return this.projectErrors||rd}updateGraph(){if(this.deferredClose)return!1;let e=this.dirty;this.isInitialLoadPending=Lu;let n=this.pendingUpdateLevel;this.pendingUpdateLevel=0;let r;switch(n){case 1:this.openFileWatchTriggered.clear(),r=this.projectService.reloadFileNamesOfConfiguredProject(this);break;case 2:this.openFileWatchTriggered.clear();let s=w.checkDefined(this.pendingUpdateReason);this.projectService.reloadConfiguredProject(this,s),r=!0;break;default:r=super.updateGraph()}return this.compilerHost=void 0,n===2||r&&(!e||!this.triggerFileForConfigFileDiag||this.getCurrentProgram().structureIsReused===2)?this.triggerFileForConfigFileDiag=void 0:this.triggerFileForConfigFileDiag||this.projectService.sendConfigFileDiagEvent(this,void 0,!1),r}getCachedDirectoryStructureHost(){return this.directoryStructureHost}updateErrorOnNoInputFiles(e){nM(e,this.getConfigFilePath(),this.getCompilerOptions().configFile.configFileSpecs,this.projectErrors,this.canConfigFileJsonReportNoInputFiles)}updateReferences(e){this.projectReferences=e,this.potentialProjectReferences=void 0}setPotentialProjectReference(e){w.assert(this.isInitialLoadPending()),(this.potentialProjectReferences||(this.potentialProjectReferences=new Set)).add(e)}isSolution(){return this.getRootFilesMap().size===0&&!this.canConfigFileJsonReportNoInputFiles}isOrphan(){return!!this.deferredClose}markAsDirty(){this.deferredClose||super.markAsDirty()}releaseParsedConfig(e){this.projectService.stopWatchingWildCards(e,this),this.projectService.releaseParsedConfig(e,this)}close(){this.projectService.configFileExistenceInfoCache.forEach((e,n)=>this.releaseParsedConfig(n)),this.projectErrors=void 0,this.openFileWatchTriggered.clear(),this.compilerHost=void 0,super.close()}getGlobalProjectErrors(){return Yr(this.projectErrors,e=>!e.file)||rd}setProjectErrors(e){this.projectErrors=e}};function id(e){return e.projectKind===1}function Nw(e){return id(e)&&!!e.deferredClose}function x2(e){return e.projectKind===0}function D2(e){return e.projectKind===3&&w.fail("not implemented"),e.projectKind===4}var Uoe=class extends Gk{constructor(e,n,r,s){super(e.newAuxiliaryProjectName(),4,e,n,!1,void 0,r,!1,void 0,e.host,s)}isOrphan(){return!0}scheduleInvalidateResolutionsOfFailedLookupLocations(){}},NJ=class extends Gk{constructor(e,n,r,s,a,l,u){super(e.newInferredProjectName(),0,e,n,void 0,void 0,r,!1,s,e.host,l),this.projectRootPath=a&&e.toCanonicalFileName(a),!a&&!e.useSingleInferredProject&&(this.canonicalCurrentDirectory=e.toCanonicalFileName(this.currentDirectory))}isProjectWithSingleRoot(){return!this.projectRootPath&&!this.projectService.useSingleInferredProject||this.getRootScriptInfos().length===1}isOrphan(){return!this.hasRoots()}addRoot(e){w.assert(e.isScriptOpen()),this.projectService.startWatchingConfigFilesForInferredProjectRoot(e),super.addRoot(e)}removeRoot(e){this.projectService.stopWatchingConfigFilesForScriptInfo(e),super.removeRoot(e)}close(){Jt(this.getRootScriptInfos(),e=>this.projectService.stopWatchingConfigFilesForScriptInfo(e)),super.close()}};function Joe(e,n){let r=e.getSourceFiles();Dt?.push(Dt.Phase.Session,"getUnresolvedImports",{count:r.length});let s=hy(ao(r,a=>zoe(e,a,n)));return Dt?.pop(),s}function zoe(e,n,r){return gy(r,n.path,()=>{let s;return e.forEachResolvedModule(({resolvedModule:a},l)=>{(!a||!N8(a.extension))&&!df(l)&&(s=ei(s,pM(l).packageName))},n),s||rd})}function IJ(e){return e.projectKind===2}var Voe=20*1024*1024,Iw=4*1024*1024,AJ="projectsUpdatedInBackground",qoe="projectLoadingStart",$oe="projectLoadingFinish",OJ="largeFileReferenced",LJ="configFileDiag",FJ="projectLanguageServiceState",Hoe="projectInfo",Goe="openFileInfo",RJ="createFileWatcher",MJ="createDirectoryWatcher",jJ="closeFileWatcher",Qoe="*ensureProjectForOpenFiles*",iP={close:ys},BJ=class{constructor(e){this.filenameToScriptInfo=new Map,this.pendingEnsureProjectForOpenFiles=!1,this.pendingProjectUpdates=new Map,this.sharedExtendedConfigFileWatchers=new Map,this.projectToSizeMap=new Map,this.configuredProjects=new Map,this.inferredProjects=[],this.configFileExistenceInfoCache=new Map,this.newInferredProjectName=EO($J),this.newAuxiliaryProjectName=EO(yJ),this.openFiles=new Map,this.configFileForOpenFiles=new Map,this.rootOfInferredProjects=new Set,this.filenameToScriptInfoVersion=new Map,this.openFilesWithNonRootedDiskPath=new Map,this.compilerOptionsForInferredProjectsPerProjectRoot=new Map,this.watchOptionsForInferredProjectsPerProjectRoot=new Map,this.typeAcquisitionForInferredProjectsPerProjectRoot=new Map,this.onProjectCreation=ys,this.verifyProgram=ys,this.verifyDocumentRegistry=ys,this.host=e.host,this.logger=e.logger,this.cancellationToken=e.cancellationToken,this.useSingleInferredProject=e.useSingleInferredProject,this.useInferredProjectPerProjectRoot=e.useInferredProjectPerProjectRoot,this.throttleWaitMilliseconds=e.throttleWaitMilliseconds,this.eventHandler=e.eventHandler,this.suppressDiagnosticEvents=e.suppressDiagnosticEvents,this.session=e.session,this.jsDocParsingMode=e.jsDocParsingMode,e.serverMode!==void 0?this.serverMode=e.serverMode:this.serverMode=0,this.host.realpath&&(this.realpathToScriptInfos=Rl()),this.currentDirectory=Ps(e.projectRootFolder||this.host.getCurrentDirectory()),this.toCanonicalFileName=ca(this.host.useCaseSensitiveFileNames),this.throttledOperations=new vJ(this.host,this.logger),this.hostConfiguration={formatCodeOptions:XW(this.host.newLine),preferences:Um,hostInfo:"Unknown host",extraFileExtensions:[]},this.documentRegistry=fw(this.host.useCaseSensitiveFileNames,this.currentDirectory,this.jsDocParsingMode,this);let n=this.logger.hasLevel(3)?2:this.logger.loggingEnabled()?1:0;this.watchFactory=this.serverMode!==0?{watchFile:e2,watchDirectory:e2}:hj(Zoe(this,e.canUseWatchEvents)||this.host,n,console.log,Xoe)}getExecutingFilePath(){return this.getNormalizedAbsolutePath(this.host.getExecutingFilePath())}getNormalizedAbsolutePath(e){return Wi(e,this.host.getCurrentDirectory())}setDocument(e,n,r){let s=w.checkDefined(this.getScriptInfoForPath(n));s.cacheSourceFile={key:e,sourceFile:r}}getDocument(e,n){let r=this.getScriptInfoForPath(n);return r&&r.cacheSourceFile&&r.cacheSourceFile.key===e?r.cacheSourceFile.sourceFile:void 0}sendLargeFileReferencedEvent(e,n){if(!this.eventHandler)return;let r={eventName:OJ,data:{file:e,fileSize:n,maxFileSize:Iw}};this.eventHandler(r)}getOrCreateScriptInfoNotOpenedByClientForNormalizedPath(e,n,r,s,a,l){if(sc(e)||mb(e))return this.getOrCreateScriptInfoWorker(e,n,!1,void 0,r,!!s,a,l);let u=this.openFilesWithNonRootedDiskPath.get(this.toCanonicalFileName(e));if(u)return u}fileExists(e){return!!this.getScriptInfoForNormalizedPath(e)||this.host.fileExists(e)}getScriptInfoEnsuringProjectsUptoDate(e){return this.ensureProjectStructuresUptoDate(),this.getScriptInfo(e)}getSymlinkedProjects(e){let n;if(this.realpathToScriptInfos){let s=e.getRealpathIfDifferent();s&&Jt(this.realpathToScriptInfos.get(s),r),Jt(this.realpathToScriptInfos.get(e.path),r)}return n;function r(s){if(s!==e)for(let a of s.containingProjects)a.languageServiceEnabled&&!a.isOrphan()&&!a.getCompilerOptions().preserveSymlinks&&!e.isAttached(a)&&(n?Qc(n,(l,u)=>u===s.path?!1:ki(l,a))||n.add(s.path,a):(n=Rl(),n.add(s.path,a)))}}getPreferences(e){let n=this.getScriptInfoForNormalizedPath(e);return{...this.hostConfiguration.preferences,...n&&n.getPreferences()}}loadAncestorProjectTree(e){e=e||ZO(this.configuredProjects,(r,s)=>s.isInitialLoadPending()?void 0:[r,!0]);let n=new Set;for(let r of as(this.configuredProjects.values()))zJ(r,s=>e.has(s))&&Nl(r),this.ensureProjectChildren(r,e,n)}ensureProjectChildren(e,n,r){if(!Im(r,e.canonicalConfigFilePath))return;let s=e.getCurrentProgram()?.getResolvedProjectReferences();if(s)for(let a of s){if(!a)continue;let l=jE(a.references,_=>n.has(_.sourceFile.path)?_:void 0);if(!l)continue;let u=Ps(a.sourceFile.fileName),d=this.findConfiguredProjectByProjectName(u)??this.createConfiguredProject(u,`Creating project referenced by : ${e.projectName} as it references project ${l.sourceFile.fileName}`);Nl(d),this.ensureProjectChildren(d,n,r)}}forEachProject(e){this.configuredProjects.forEach(e),this.inferredProjects.forEach(e)}forEachEnabledProject(e){this.forEachProject(n=>{!n.isOrphan()&&n.languageServiceEnabled&&e(n)})}getOriginalLocationEnsuringConfiguredProject(e,n){let r=e.isSourceOfProjectReferenceRedirect(n.fileName),s=r?n:e.getSourceMapper().tryGetSourcePosition(n);if(!s)return;let{fileName:a}=s,l=this.getScriptInfo(a);if(!l&&!this.host.fileExists(a))return;let u={fileName:Ps(a),path:this.toPath(a)},d=this.getConfigFileNameForFile(u,!1);if(!d)return;let _=this.findConfiguredProjectByProjectName(d);if(!_){if(e.getCompilerOptions().disableReferencedProjectLoad)return r?n:l?.containingProjects.length?s:n;_=this.createConfiguredProject(d,`Creating project for original file: ${u.fileName}${n!==s?" for location: "+n.fileName:""}`)}Nl(_);let y=b=>{let T=this.getScriptInfo(a);return T&&b.containsScriptInfo(T)&&!b.isSourceOfProjectReferenceRedirect(T.path)};if(_.isSolution()||!y(_)){if(_=VJ(_,a,b=>y(b)?b:void 0,1,`Creating project referenced in solution ${_.projectName} to find possible configured project for original file: ${u.fileName}${n!==s?" for location: "+n.fileName:""}`),!_)return;if(_===e)return s}v(_);let h=this.getScriptInfo(a);if(!h||!h.containingProjects.length)return;return h.containingProjects.forEach(b=>{id(b)&&v(b)}),s;function v(b){(e.originalConfiguredProjects??(e.originalConfiguredProjects=new Set)).add(b.canonicalConfigFilePath)}}getOrCreateScriptInfoWorker(e,n,r,s,a,l,u,d){w.assert(s===void 0||r,"ScriptInfo needs to be opened by client to be able to set its user defined content");let _=Th(e,n,this.toCanonicalFileName),y=this.filenameToScriptInfo.get(_);if(y){if(y.deferredDelete){if(w.assert(!y.isDynamic),!r&&!(u||this.host).fileExists(e))return d?y:void 0;y.deferredDelete=void 0}}else{let h=mb(e);if(w.assert(sc(e)||h||r,"",()=>`${JSON.stringify({fileName:e,currentDirectory:n,hostCurrentDirectory:this.currentDirectory,openKeys:as(this.openFilesWithNonRootedDiskPath.keys())})}
Script info with non-dynamic relative file name can only be open script info or in context of host currentDirectory`),w.assert(!sc(e)||this.currentDirectory===n||!this.openFilesWithNonRootedDiskPath.has(this.toCanonicalFileName(e)),"",()=>`${JSON.stringify({fileName:e,currentDirectory:n,hostCurrentDirectory:this.currentDirectory,openKeys:as(this.openFilesWithNonRootedDiskPath.keys())})}
Open script files with non rooted disk path opened with current directory context cannot have same canonical names`),w.assert(!h||this.currentDirectory===n||this.useInferredProjectPerProjectRoot,"",()=>`${JSON.stringify({fileName:e,currentDirectory:n,hostCurrentDirectory:this.currentDirectory,openKeys:as(this.openFilesWithNonRootedDiskPath.keys())})}
Dynamic files must always be opened with service's current directory or service should support inferred project per projectRootPath.`),!r&&!h&&!(u||this.host).fileExists(e))return;y=new EJ(this.host,e,a,l,_,this.filenameToScriptInfoVersion.get(_)),this.filenameToScriptInfo.set(y.path,y),this.filenameToScriptInfoVersion.delete(y.path),r?!sc(e)&&(!h||this.currentDirectory!==n)&&this.openFilesWithNonRootedDiskPath.set(this.toCanonicalFileName(e),y):this.watchClosedScriptInfo(y)}return r&&(this.stopWatchingScriptInfo(y),y.open(s),l&&y.registerFileUpdate()),y}stopWatchingWildCards(e,n){let r=this.configFileExistenceInfoCache.get(e);!r.config||!r.config.projects.get(n.canonicalConfigFilePath)||(r.config.projects.set(n.canonicalConfigFilePath,!1),!Qc(r.config.projects,Gi)&&(r.config.watchedDirectories&&(n0(r.config.watchedDirectories,M_),r.config.watchedDirectories=void 0),r.config.watchedDirectoriesStale=void 0))}releaseParsedConfig(e,n){let r=this.configFileExistenceInfoCache.get(e);r.config?.projects.delete(n.canonicalConfigFilePath)&&(r.config?.projects.size||(r.config=void 0,yj(e,this.sharedExtendedConfigFileWatchers),w.checkDefined(r.watcher),r.openFilesImpactedByConfigFile?.size?r.inferredProjectRoots?ux(pu(li(e)))||(r.watcher.close(),r.watcher=iP):(r.watcher.close(),r.watcher=void 0):(r.watcher.close(),this.configFileExistenceInfoCache.delete(e))))}stopWatchingScriptInfo(e){e.fileWatcher&&(e.fileWatcher.close(),e.fileWatcher=void 0)}watchClosedScriptInfo(e){if(w.assert(!e.fileWatcher),!e.isDynamicOrHasMixedContent()&&(!this.globalCacheLocationDirectoryPath||!no(e.path,this.globalCacheLocationDirectoryPath))){let n=e.fileName.indexOf("/node_modules/");!this.host.getModifiedTime||n===-1?e.fileWatcher=this.watchFactory.watchFile(e.fileName,(r,s)=>this.onSourceFileChanged(e,s),500,this.hostConfiguration.watchOptions,nd.ClosedScriptInfo):w.fail("not supported")}}delayUpdateProjectGraph(e){if(Nw(e))return;e.markAsDirty();let n=e.getProjectName();this.pendingProjectUpdates.set(n,e),this.throttledOperations.schedule(n,250,()=>{this.pendingProjectUpdates.delete(n)&&Nl(e)})}getWatchOptions(e){return this.getWatchOptionsFromProjectWatchOptions(e.getWatchOptions(),e.getCurrentDirectory())}getWatchOptionsFromProjectWatchOptions(e,n){let r=this.hostConfiguration.watchOptions;return e&&r?{...r,...e}:e||r}getScriptInfoForPath(e){let n=Th(Ps(e),void 0,this.toCanonicalFileName),r=this.filenameToScriptInfo.get(n);return!r||!r.deferredDelete?r:void 0}toPath(e){return Ra(e,this.currentDirectory,this.toCanonicalFileName)}getOrCreateScriptInfoNotOpenedByClient(e,n,r,s){return this.getOrCreateScriptInfoNotOpenedByClientForNormalizedPath(Ps(e),n,void 0,void 0,r,s)}delayEnsureProjectForOpenFiles(){this.openFiles.size&&(this.pendingEnsureProjectForOpenFiles=!0,this.throttledOperations.schedule(Qoe,2500,()=>{this.pendingProjectUpdates.size!==0?this.delayEnsureProjectForOpenFiles():this.pendingEnsureProjectForOpenFiles&&(this.ensureProjectForOpenFiles(),this.sendProjectsUpdatedInBackgroundEvent())}))}sendProjectsUpdatedInBackgroundEvent(){if(!this.eventHandler)return;let e={eventName:AJ,data:{openFiles:as(this.openFiles.keys(),n=>this.getScriptInfoForPath(n).fileName)}};this.eventHandler(e)}delayUpdateProjectGraphs(e,n){if(e.length){for(let r of e)n&&r.clearSourceMapperCache(),this.delayUpdateProjectGraph(r);this.delayEnsureProjectForOpenFiles()}}deleteScriptInfo(e){w.assert(!e.isScriptOpen()),this.filenameToScriptInfo.delete(e.path),this.filenameToScriptInfoVersion.set(e.path,e.textStorage.version),this.stopWatchingScriptInfo(e);let n=e.getRealpathIfDifferent();n&&this.realpathToScriptInfos.remove(n,e),e.closeSourceMapFileWatcher()}handleDeletedFile(e,n){w.assert(!e.isScriptOpen()),this.delayUpdateProjectGraphs(e.containingProjects,!1),this.handleSourceMapProjects(e),e.detachAllProjects(),n?(e.delayReloadNonMixedContentFile(),e.deferredDelete=!0):this.deleteScriptInfo(e)}getModifiedTime(e){return(this.host.getModifiedTime(e.fileName)||ba).getTime()}onSourceFileChanged(e,n){w.assert(!e.isScriptOpen()),n===2?this.handleDeletedFile(e,!0):(e.deferredDelete&&(e.deferredDelete=void 0),e.delayReloadNonMixedContentFile(),this.delayUpdateProjectGraphs(e.containingProjects,!1),this.handleSourceMapProjects(e))}handleSourceMapProjects(e){console.warn("todo - implement me - handleSourceMapProjects")}findAndOpenLpcConfig(e){return kJ(e,this.host.getAccessibleFileSystemEntries)}getScriptInfoOrConfig(e){let n=Ps(e),r=this.getScriptInfoForNormalizedPath(n);if(r)return r;let s=this.configuredProjects.get(this.toPath(e));return s&&s.getCompilerOptions().configFile}cleanupConfiguredProjects(e,n,r){this.getOrphanConfiguredProjects(e,r,n).forEach(s=>this.removeProject(s))}removeProject(e){switch(this.logger.info("`remove Project::"),e.print(!0,!0,!1),e.close(),w.shouldAssert(1)&&this.filenameToScriptInfo.forEach(n=>w.assert(!n.isAttached(e),"Found script Info still attached to project",()=>`${e.projectName}: ScriptInfos still attached: ${JSON.stringify(as(zh(this.filenameToScriptInfo.values(),r=>r.isAttached(e)?{fileName:r.fileName,projects:r.containingProjects.map(s=>s.projectName),hasMixedContent:r.hasMixedContent}:void 0)),void 0," ")}`)),this.pendingProjectUpdates.delete(e.getProjectName()),e.projectKind){case 2:console.debug("todo - implement me - removeProject - ProjectKind.External");break;case 1:this.configuredProjects.delete(e.canonicalConfigFilePath),this.projectToSizeMap.delete(e.canonicalConfigFilePath);break;case 0:vv(this.inferredProjects,e);break}}getOrphanConfiguredProjects(e,n,r){let s=new Set(this.configuredProjects.values()),a=_=>{_.originalConfiguredProjects&&(id(_)||!_.isOrphan())&&_.originalConfiguredProjects.forEach((y,h)=>{let v=this.getConfiguredProjectByCanonicalConfigFilePath(h);return v&&d(v)})};return e?.forEach(d),this.inferredProjects.forEach(a),this.openFiles.forEach((_,y)=>{if(n?.has(y))return;let h=this.getScriptInfoForPath(y);if(Zr(h.containingProjects,IJ))return;let v=this.tryFindDefaultConfiguredProjectAndLoadAncestorsForOpenScriptInfo(h,0);v?.defaultProject&&v?.seenProjects.forEach(d)}),this.configuredProjects.forEach(_=>{s.has(_)&&(u(_)||wO(_,l))&&d(_)}),s;function l(_){return!s.has(_)||u(_)}function u(_){return(_.deferredClose||_.projectService.hasPendingProjectUpdate(_))&&!!_.projectService.configFileExistenceInfoCache.get(_.canonicalConfigFilePath)?.openFilesImpactedByConfigFile?.size}function d(_){s.delete(_)&&(a(_),wO(_,d))}}hasPendingProjectUpdate(e){return this.pendingProjectUpdates.has(e.getProjectName())}cleanupProjectsAndScriptInfos(e,n,r){this.cleanupConfiguredProjects(e,r,n)}printProjects(){this.logger.hasLevel(1)&&(this.logger.startGroup(),this.configuredProjects.forEach(xO),this.inferredProjects.forEach(xO),this.logger.info("Open files: "),this.openFiles.forEach((e,n)=>{let r=this.getScriptInfoForPath(n);this.logger.info(`	FileName: ${r.fileName} ProjectRootPath: ${e}`),this.logger.info(`		Projects: ${r.containingProjects.map(s=>s.getProjectName())}`)}),this.logger.endGroup())}openClientFileWithNormalizedPath(e,n,r,s,a){let l=this.getOrCreateOpenScriptInfo(e,n,r,s,a),{retainProjects:u,...d}=this.assignProjectToOpenedScriptInfo(l);return this.cleanupProjectsAndScriptInfos(u,new Set([l.path]),void 0),this.printProjects(),d}sendPerformanceEvent(e,n){this.performanceEventHandler&&this.performanceEventHandler({kind:e,durationMs:n})}tryFindDefaultConfiguredProjectForOpenScriptInfo(e,n,r,s){let a=this.getConfigFileNameForFile(e,n===0);if(!a)return;let l=this.findCreateOrReloadConfiguredProject(a,n,PO(e),r,e.fileName,s);if(!l)return;let u=new Set,d=new Set(l.sentConfigFileDiag?[l.project]:void 0),_,y;return h(l.project),{defaultProject:_??y,sentConfigDiag:d,seenProjects:u};function h(T){return v(T)?_:void 0}function v(T){if(!Im(u,T))return;let E=T.containsScriptInfo(e);if(E&&!T.isSourceOfProjectReferenceRedirect(e.path))return _=T;y??(y=E?T:void 0)}function b(T){}}clearSemanticCache(e){e.originalConfiguredProjects=void 0,e.resolutionCache.clear(),e.getLanguageService(!1).cleanupSemanticCache(),e.cleanupProgram(),e.markAsDirty()}reloadConfiguredProjectClearingSemanticCache(e,n,r){return Im(r,e)?(this.clearSemanticCache(e),this.reloadConfiguredProject(e,sP(n)),!0):!1}reloadConfiguredProject(e,n){e.isInitialLoadPending=Lu,e.pendingUpdateReason=void 0,e.pendingUpdateLevel=0,e.getCachedDirectoryStructureHost().clearCache(),this.loadConfiguredProject(e,n),UJ(e,e.triggerFileForConfigFileDiag??e.getConfigFilePath(),!0)}loadConfiguredProject(e,n){Dt?.push(Dt.Phase.Session,"loadConfiguredProject",{configFilePath:e.canonicalConfigFilePath});let r=di(e.getConfigFilePath()),s=this.ensureParsedConfigUptoDate(r,e.canonicalConfigFilePath,this.configFileExistenceInfoCache.get(e.canonicalConfigFilePath),e),a=s.config.parsedCommandLine;w.assert(!!a.fileNames);let l=a.options;e.setProjectErrors(a.options.configFile.parseDiagnostics),e.updateReferences(a.projectReferences),e.setCompilerOptions(l),e.setWatchOptions(a.watchOptions),e.enableLanguageService(),this.watchWildcards(r,s,e);let u=a.fileNames;this.updateRootAndOptionsOfNonInferredProject(e,u,DO,l,a.typeAcquisition,a.compileOnSave,a.watchOptions),Dt?.pop()}updateRootAndOptionsOfNonInferredProject(e,n,r,s,a,l,u){e.setCompilerOptions(s),e.setWatchOptions(u),l!==void 0&&(e.compileOnSaveEnabled=l),this.addFilesToNonInferredProject(e,n,r,a)}addFilesToNonInferredProject(e,n,r,s){this.updateNonInferredProjectFiles(e,n,r),e.setTypeAcquisition(s),e.markAsDirty()}watchWildcards(e,{exists:n,config:r},s){if(r.projects.set(s.canonicalConfigFilePath,!0),n){if(r.watchedDirectories&&!r.watchedDirectoriesStale)return;r.watchedDirectoriesStale=!1,_j(r.watchedDirectories||(r.watchedDirectories=new Map),r.parsedCommandLine.wildcardDirectories,(a,l)=>this.watchWildcardDirectory(a,l,e,r))}else{if(r.watchedDirectoriesStale=!1,!r.watchedDirectories)return;n0(r.watchedDirectories,M_),r.watchedDirectories=void 0}}tryGetDefaultProjectForFile(e){let n=Li(e)?this.getScriptInfoForNormalizedPath(e):e;return n&&!n.isOrphan()?n.getDefaultProject():void 0}watchWildcardDirectory(e,n,r,s){let a=this.watchFactory.watchDirectory(e,u=>{let d=this.toPath(u),_=s.cachedDirectoryStructureHost.addOrDeleteFileOrDirectory(u,d);if(wc(d)==="package.json"&&(_&&_.fileExists||!_&&this.host.fileExists(u))){let h=this.getNormalizedAbsolutePath(u);this.logger.info(`Config: ${r} Detected new package.json: ${h}`)}let y=this.findConfiguredProjectByProjectName(r);mj({watchedDirPath:this.toPath(e),fileOrDirectory:u,fileOrDirectoryPath:d,configFileName:r,extraFileExtensions:this.hostConfiguration.extraFileExtensions,currentDirectory:this.currentDirectory,options:s.parsedCommandLine.options,program:y?.getCurrentProgram()||s.parsedCommandLine.fileNames,useCaseSensitiveFileNames:this.host.useCaseSensitiveFileNames,writeLog:h=>this.logger.info(h),toPath:h=>this.toPath(h),getScriptKind:y?h=>y.getScriptKind(h):void 0})||(s.updateLevel!==2&&(s.updateLevel=1),s.projects.forEach((h,v)=>{if(!h)return;let b=this.getConfiguredProjectByCanonicalConfigFilePath(v);if(!b)return;let T=y===b?1:0;if(!(b.pendingUpdateLevel>T))if(this.openFiles.has(d))if(w.checkDefined(this.getScriptInfoForPath(d)).isAttached(b)){let g=Math.max(T,b.openFileWatchTriggered.get(d)||0);b.openFileWatchTriggered.set(d,g)}else b.pendingUpdateLevel=T,this.delayUpdateProjectGraphAndEnsureProjectStructureForOpenFiles(b);else b.pendingUpdateLevel=T,this.delayUpdateProjectGraphAndEnsureProjectStructureForOpenFiles(b)}))},n,this.getWatchOptionsFromProjectWatchOptions(s.parsedCommandLine.watchOptions,li(r)),nd.WildcardDirectory,r),l={packageJsonWatches:void 0,close(){a&&(a.close(),a=void 0,l.packageJsonWatches?.forEach(u=>{u.projects.delete(l),u.close()}),l.packageJsonWatches=void 0)}};return l}onUpdateLanguageServiceStateForProject(e,n){if(!this.eventHandler)return;let r={eventName:FJ,data:{project:e,languageServiceEnabled:n}};this.eventHandler(r)}reloadFileNamesOfConfiguredProject(e){let n=this.reloadFileNamesOfParsedConfig(e.getConfigFilePath(),this.configFileExistenceInfoCache.get(e.canonicalConfigFilePath).config);return e.updateErrorOnNoInputFiles(n),this.updateNonInferredProjectFiles(e,n,DO),e.markAsDirty(),e.updateGraph()}ensureParsedConfigUptoDate(e,n,r,s){if(r.config){if(!r.config.updateLevel)return r;if(r.config.updateLevel===1)return this.reloadFileNamesOfParsedConfig(e,r.config),r}let a=r.config?.cachedDirectoryStructureHost||sx(this.host,this.host.getCurrentDirectory(),this.host.useCaseSensitiveFileNames),l=G8(e,v=>this.host.readFile(v)),u=dk(e,Li(l)?l:""),d=u.parseDiagnostics;Li(l)||d.push(l);let _=li(e),y=Q8(u,a,_,void 0,e,void 0,this.hostConfiguration?.extraFileExtensions);y.errors.length&&d.push(...y.errors),this.logger.info(`Config: ${e} : ${JSON.stringify({rootNames:y.fileNames?.length,options:y.options,watchOptions:y.watchOptions,projectReferences:y.projectReferences},void 0," ")}`);let h=r.config?.parsedCommandLine;return r.config?(r.config.parsedCommandLine=y,r.config.watchedDirectoriesStale=!0,r.config.updateLevel=void 0):r.config={parsedCommandLine:y,cachedDirectoryStructureHost:a,projects:new Map},!h&&!nk(this.getWatchOptionsFromProjectWatchOptions(void 0,_),this.getWatchOptionsFromProjectWatchOptions(y.watchOptions,_))&&(r.watcher?.close(),r.watcher=void 0),this.createConfigFileWatcherForParsedConfig(e,n,s),r}updateNonInferredProjectFiles(e,n,r){let s=e.getRootFilesMap(),a=new Map;for(let l of n){let u=r.getFileName(l),d=Ps(u),_=mb(d),y;if(!_&&!e.fileExists(u)){y=Th(d,this.currentDirectory,this.toCanonicalFileName);let h=s.get(y);h?(h.info?.path===y&&(e.removeFile(h.info,!1,!0),h.info=void 0),h.fileName=d):s.set(y,{fileName:d})}else{let h=r.getScriptKind(l,this.hostConfiguration.extraFileExtensions),v=r.hasMixedContent(l,this.hostConfiguration.extraFileExtensions),b=w.checkDefined(this.getOrCreateScriptInfoNotOpenedByClientForNormalizedPath(d,e.currentDirectory,h,v,e.directoryStructureHost,!1));y=b.path;let T=s.get(y);!T||T.info!==b?(e.addRoot(b,d),b.isScriptOpen()&&this.removeRootOfInferredProjectIfNowPartOfOtherProject(b)):T.fileName=d}a.set(y,!0)}s.size>a.size&&s.forEach((l,u)=>{a.has(u)||(l.info?e.removeFile(l.info,e.fileExists(l.info.fileName),!0):s.delete(u))})}removeRootOfInferredProjectIfNowPartOfOtherProject(e){w.assert(e.containingProjects.length>0);let n=e.containingProjects[0];!n.isOrphan()&&x2(n)&&n.isRoot(e)&&Jt(e.containingProjects,r=>r!==n&&!r.isOrphan())&&n.removeFile(e,!0,!0)}reloadFileNamesOfParsedConfig(e,n){if(n.updateLevel===void 0)return n.parsedCommandLine.fileNames;w.assert(n.updateLevel===1);let r=n.parsedCommandLine.options.configFile.configFileSpecs,s=_k(r,li(e),n.parsedCommandLine.options,n.cachedDirectoryStructureHost,this.hostConfiguration.extraFileExtensions);return n.parsedCommandLine={...n.parsedCommandLine,fileNames:s},s}findCreateOrReloadConfiguredProject(e,n,r,s,a,l,u,d){let _=this.findConfiguredProjectByProjectName(e,s),y=!1;switch(n){case 0:if(!_)return;break;case 1:_??(_=this.createConfiguredProject(e,r)),y=!u&&JJ(_,a);break;case 2:_??(_=this.createConfiguredProject(e,sP(r))),y=!d&&this.reloadConfiguredProjectClearingSemanticCache(_,r,l),d&&!d.has(_)&&!l.has(_)&&(_.pendingUpdateLevel=2,_.pendingUpdateReason=sP(r),d.add(_));break;default:w.assertNever(n)}return{project:_,sentConfigFileDiag:y}}tryFindDefaultConfiguredProjectAndLoadAncestorsForOpenScriptInfo(e,n,r,s){let a=n===0,l=this.tryFindDefaultConfiguredProjectForOpenScriptInfo(e,n,a,r);if(!l)return;let{defaultProject:u,seenProjects:d}=l;return l}assignProjectToOpenedScriptInfo(e){let n,r,a,l;if(this.serverMode===0){let u=this.tryFindDefaultConfiguredProjectAndLoadAncestorsForOpenScriptInfo(e,1);u&&(a=u.seenProjects,l=u.sentConfigDiag,u.defaultProject&&(n=u.defaultProject.getConfigFilePath(),r=u.defaultProject.getAllProjectErrors()))}return e.containingProjects.forEach(Nl),e.isOrphan()&&(a?.forEach(u=>{l.has(u)||this.sendConfigFileDiagEvent(u,e.fileName,!0)}),w.assert(this.openFiles.has(e.path)),this.assignOrphanScriptInfoToInferredProject(e,this.openFiles.get(e.path))),w.assert(!e.isOrphan()),{configFileName:n,configFileErrors:r,retainProjects:a}}assignOrphanScriptInfoToInferredProject(e,n){w.assert(e.isOrphan());let r=this.getOrCreateInferredProjectForProjectRootPathIfEnabled(e,n)||this.getOrCreateSingleInferredProjectIfEnabled()||this.getOrCreateSingleInferredWithoutProjectRoot(e.isDynamic?n||this.currentDirectory:li(sc(e.fileName)?e.fileName:Wi(e.fileName,n?this.getNormalizedAbsolutePath(n):this.currentDirectory)));if(r.addRoot(e),e.containingProjects[0]!==r&&(O2(e.containingProjects,r),e.containingProjects.unshift(r)),r.updateGraph(),!this.useSingleInferredProject&&!r.projectRootPath)for(let s of this.inferredProjects){if(s===r||s.isOrphan())continue;let a=s.getRootScriptInfos();w.assert(a.length===1||!!s.projectRootPath),a.length===1&&Jt(a[0].containingProjects,l=>l!==a[0].containingProjects[0]&&!l.isOrphan())&&s.removeFile(a[0],!0,!0)}return r}getOrCreateInferredProjectForProjectRootPathIfEnabled(e,n){if(!this.useInferredProjectPerProjectRoot||e.isDynamic&&n===void 0)return;if(n){let s=this.toCanonicalFileName(n);for(let a of this.inferredProjects)if(a.projectRootPath===s)return a;return this.createInferredProject(n,!1,n)}let r;for(let s of this.inferredProjects)s.projectRootPath&&ug(s.projectRootPath,e.path,this.host.getCurrentDirectory(),!this.host.useCaseSensitiveFileNames)&&(r&&r.projectRootPath.length>s.projectRootPath.length||(r=s));return r}getOrCreateSingleInferredProjectIfEnabled(){if(this.useSingleInferredProject)return this.inferredProjects.length>0&&this.inferredProjects[0].projectRootPath===void 0?this.inferredProjects[0]:this.createInferredProject("",!0)}getOrCreateSingleInferredWithoutProjectRoot(e){w.assert(!this.useSingleInferredProject);let n=this.toCanonicalFileName(this.getNormalizedAbsolutePath(e));for(let r of this.inferredProjects)if(!r.projectRootPath&&r.isOrphan()&&r.canonicalCurrentDirectory===n)return r;return this.createInferredProject(e)}setCompilerOptionsForInferredProjects(e,n){w.assert(n===void 0||this.useInferredProjectPerProjectRoot,"Setting compiler options per project root path is only supported when useInferredProjectPerProjectRoot is enabled");let r=QJ(e),s=YJ(e,n),a=ZJ(e);r.allowNonTsExtensions=!0;let l=n&&this.toCanonicalFileName(n);l?(this.compilerOptionsForInferredProjectsPerProjectRoot.set(l,r),this.watchOptionsForInferredProjectsPerProjectRoot.set(l,s||!1),this.typeAcquisitionForInferredProjectsPerProjectRoot.set(l,a)):(this.compilerOptionsForInferredProjects=r,this.watchOptionsForInferredProjects=s,this.typeAcquisitionForInferredProjects=a);for(let u of this.inferredProjects)(l?u.projectRootPath===l:!u.projectRootPath||!this.compilerOptionsForInferredProjectsPerProjectRoot.has(u.projectRootPath))&&(u.setCompilerOptions(r),u.setTypeAcquisition(a),u.setWatchOptions(s?.watchOptions),u.setProjectErrors(s?.errors),u.compileOnSaveEnabled=r.compileOnSave,u.markAsDirty(),this.delayUpdateProjectGraph(u));this.delayEnsureProjectForOpenFiles()}createInferredProject(e,n,r){let s=r&&this.compilerOptionsForInferredProjectsPerProjectRoot.get(r)||this.compilerOptionsForInferredProjects,a,l;r&&(a=this.watchOptionsForInferredProjectsPerProjectRoot.get(r),l=this.typeAcquisitionForInferredProjectsPerProjectRoot.get(r)),a===void 0&&(a=this.watchOptionsForInferredProjects),l===void 0&&(l=this.typeAcquisitionForInferredProjects),a=a||void 0;let u=new NJ(this,this.documentRegistry,s,a?.watchOptions,r,e,l);return u.setProjectErrors(a?.errors),n?this.inferredProjects.unshift(u):this.inferredProjects.push(u),u}getOrCreateOpenScriptInfo(e,n,r,s,a){let l=this.getOrCreateScriptInfoWorker(e,a?this.getNormalizedAbsolutePath(a):this.currentDirectory,!0,n,r,!!s,void 0,!0);return this.openFiles.set(l.path,a),l}sendConfigFileDiagEvent(e,n,r){if(!this.eventHandler||this.suppressDiagnosticEvents)return!1;let s=e.getLanguageService().getCompilerOptionsDiagnostics();return s.push(...e.getAllProjectErrors()),!r&&s.length===(e.configDiagDiagnosticsReported??0)?!1:(e.configDiagDiagnosticsReported=s.length,this.eventHandler({eventName:LJ,data:{configFileName:e.getConfigFilePath(),diagnostics:s,triggerFile:n??e.getConfigFilePath()}}),!0)}findConfiguredProjectByProjectName(e,n){let r=this.toCanonicalFileName(e),s=this.getConfiguredProjectByCanonicalConfigFilePath(r);return n?s:s?.deferredClose?void 0:s}getConfiguredProjectByCanonicalConfigFilePath(e){return this.configuredProjects.get(e)}findProject(e){if(e!==void 0)return this.findConfiguredProjectByProjectName(Ps(e))}getScriptInfoForNormalizedPath(e){return!sc(e)&&this.openFilesWithNonRootedDiskPath.get(this.toCanonicalFileName(e))||this.getScriptInfoForPath(Th(e,this.currentDirectory,this.toCanonicalFileName))}configFileExists(e,n,r){let s=this.configFileExistenceInfoCache.get(n),a;if(this.openFiles.has(r.path)&&!gb(r)&&(s?(s.openFilesImpactedByConfigFile??(s.openFilesImpactedByConfigFile=new Set)).add(r.path):(a=new Set).add(r.path)),s)return s.exists;let l=this.host.fileExists(e);return this.configFileExistenceInfoCache.set(n,{exists:l,openFilesImpactedByConfigFile:a}),l}getConfigFileNameForFile(e,n){let r=this.getConfigFileNameForFileFromCache(e,n);if(r!==void 0)return r||void 0;if(n)return;let s=this.forEachConfigFileLocation(e,(a,l)=>this.configFileExists(l,a,e));return this.logger.info(`getConfigFileNameForFile:: File: ${e.fileName} ProjectRootPath: ${this.openFiles.get(e.path)}:: Result: ${s}`),this.setConfigFileNameForFileInCache(e,s),s}getScriptInfo(e){return this.getScriptInfoForNormalizedPath(Ps(e))}tryGetDefaultProjectForEnsuringConfiguredProjectForFile(e){let n=Li(e)?this.getScriptInfoForNormalizedPath(e):e;if(n)return this.pendingOpenFileProjectUpdates?.delete(n.path)&&(this.tryFindDefaultConfiguredProjectAndLoadAncestorsForOpenScriptInfo(n,1),n.isOrphan()&&this.assignOrphanScriptInfoToInferredProject(n,this.openFiles.get(n.path))),this.tryGetDefaultProjectForFile(n)}ensureProjectStructuresUptoDate(){let e=this.pendingEnsureProjectForOpenFiles;this.pendingProjectUpdates.clear();let n=r=>{e=Nl(r)||e};this.configuredProjects.forEach(n),this.inferredProjects.forEach(n),e&&this.ensureProjectForOpenFiles()}ensureProjectForOpenFiles(){this.logger.info("Before ensureProjectForOpenFiles:"),this.printProjects();let e=this.pendingOpenFileProjectUpdates;this.pendingOpenFileProjectUpdates=void 0,e?.forEach((n,r)=>this.tryFindDefaultConfiguredProjectAndLoadAncestorsForOpenScriptInfo(this.getScriptInfoForPath(r),1)),this.openFiles.forEach((n,r)=>{let s=this.getScriptInfoForPath(r);s.isOrphan()?this.assignOrphanScriptInfoToInferredProject(s,n):this.removeRootOfInferredProjectIfNowPartOfOtherProject(s)}),this.pendingEnsureProjectForOpenFiles=!1,this.inferredProjects.forEach(Nl),this.logger.info("After ensureProjectForOpenFiles:"),this.printProjects()}doEnsureDefaultProjectForFile(e){this.ensureProjectStructuresUptoDate();let n=Li(e)?this.getScriptInfoForNormalizedPath(e):e;return n?n.getDefaultProject():(this.logErrorForScriptInfoNotFound(Li(e)?e:e.fileName),mp.ThrowNoProject())}logErrorForScriptInfoNotFound(e){let n=as(zh(this.filenameToScriptInfo.entries(),r=>r[1].deferredDelete?void 0:r),([r,s])=>({path:r,fileName:s.fileName}));this.logger.msg(`Could not find file ${JSON.stringify(e)}.
All files are: ${JSON.stringify(n)}`,"Err")}ensureDefaultProjectForFile(e){return this.tryGetDefaultProjectForEnsuringConfiguredProjectForFile(e)||this.doEnsureDefaultProjectForFile(e)}forEachConfigFileLocation(e,n){if(this.serverMode!==0)return;w.assert(!Yoe(e)||this.openFiles.has(e.path));let r=this.openFiles.get(e.path);if(w.checkDefined(this.getScriptInfo(e.path)).isDynamic)return;let a=li(e.fileName),l=()=>ug(r,a,this.currentDirectory,!this.host.useCaseSensitiveFileNames),u=!r||!l(),d=!gb(e);do{if(d){let y=Th(a,this.currentDirectory,this.toCanonicalFileName),h=ii(a,"lpc-config.json");if(n(ii(y,"lpc-config.json"),h))return h;if(Kb(y))break}let _=li(a);if(_===a)break;a=_,d=!0}while(u||l())}setConfigFileNameForFileInCache(e,n){this.openFiles.has(e.path)&&(gb(e)||this.configFileForOpenFiles.set(e.path,n||!1))}getConfigFileNameForFileFromCache(e,n){if(n){let r=CO(e,this.pendingOpenFileProjectUpdates);if(r!==void 0)return r}return CO(e,this.configFileForOpenFiles)}getFormatCodeOptions(e){let n=this.getScriptInfoForNormalizedPath(e);return n&&n.getFormatCodeSettings()||this.hostConfiguration.formatCodeOptions}createConfiguredProject(e,n){Dt?.instant(Dt.Phase.Session,"createConfiguredProject",{configFilePath:e}),this.logger.info(`Creating configuration project ${e}`);let r=this.toCanonicalFileName(e),s=this.configFileExistenceInfoCache.get(r);s?s.exists=!0:this.configFileExistenceInfoCache.set(r,s={exists:!0}),s.config||(s.config={cachedDirectoryStructureHost:sx(this.host,this.host.getCurrentDirectory(),this.host.useCaseSensitiveFileNames),projects:new Map,updateLevel:2});let a=new wJ(e,r,this,this.documentRegistry,s.config.cachedDirectoryStructureHost,n);return w.assert(!this.configuredProjects.has(r)),this.configuredProjects.set(r,a),this.createConfigFileWatcherForParsedConfig(e,r,a),a}createConfigFileWatcherForParsedConfig(e,n,r){let s=this.configFileExistenceInfoCache.get(n);(!s.watcher||s.watcher===iP)&&(s.watcher=this.watchFactory.watchFile(e,(l,u)=>this.onConfigFileChanged(e,n,u),2e3,this.getWatchOptionsFromProjectWatchOptions(s?.config?.parsedCommandLine?.watchOptions,li(e)),nd.ConfigFile,r));let a=s.config.projects;a.set(r.canonicalConfigFilePath,a.get(r.canonicalConfigFilePath)||!1)}onConfigFileChanged(e,n,r){let s=this.configFileExistenceInfoCache.get(n),a=this.getConfiguredProjectByCanonicalConfigFilePath(n),l=a?.deferredClose;r===2?(s.exists=!1,a&&(a.deferredClose=!0)):(s.exists=!0,l&&(a.deferredClose=void 0,a.markAsDirty())),this.delayUpdateProjectsFromParsedConfigOnConfigFileChange(n,"Change in config file detected");let u=new Set(a?[a]:void 0);this.openFiles.forEach((d,_)=>{let y=this.configFileForOpenFiles.get(_);if(!s.openFilesImpactedByConfigFile?.has(_))return;this.configFileForOpenFiles.delete(_);let h=this.getScriptInfoForPath(_),v=this.getConfigFileNameForFile(h,!1);if(!v)return;let b=this.findConfiguredProjectByProjectName(v)??this.createConfiguredProject(v,`Change in config file ${e} detected, ${PO(h)}`);this.pendingOpenFileProjectUpdates?.has(_)||(this.pendingOpenFileProjectUpdates??(this.pendingOpenFileProjectUpdates=new Map)).set(_,y),Im(u,b)&&b.isInitialLoadPending()&&this.delayUpdateProjectGraph(b)}),this.delayEnsureProjectForOpenFiles()}delayUpdateProjectsFromParsedConfigOnConfigFileChange(e,n){let r=this.configFileExistenceInfoCache.get(e);if(!r?.config)return!1;let s=!1;return r.config.updateLevel=2,r.config.projects.forEach((a,l)=>{let u=this.getConfiguredProjectByCanonicalConfigFilePath(l);if(u)if(s=!0,l===e){if(u.isInitialLoadPending())return;u.pendingUpdateLevel=2,u.pendingUpdateReason=n,this.delayUpdateProjectGraph(u),u.markAutoImportProviderAsDirty()}else{let d=this.toPath(e);u.resolutionCache.removeResolutionsFromProjectReferenceRedirects(d),this.delayUpdateProjectGraph(u),this.getHostPreferences().includeCompletionsForModuleExports&&Zr(u.getCurrentProgram()?.getResolvedProjectReferences(),_=>_?.sourceFile.path===d)&&u.markAutoImportProviderAsDirty()}}),s}getHostPreferences(){return this.hostConfiguration.preferences}closeClientFile(e,n){let r=this.getScriptInfoForNormalizedPath(Ps(e)),s=r?this.closeOpenFile(r,n):!1;return n||this.printProjects(),s}stopWatchingConfigFilesForScriptInfo(e){if(this.serverMode!==0)return;let n=this.rootOfInferredProjects.delete(e),r=e.isScriptOpen();r&&!n||this.forEachConfigFileLocation(e,s=>{let a=this.configFileExistenceInfoCache.get(s);if(a){if(r){if(!a?.openFilesImpactedByConfigFile?.has(e.path))return}else if(!a.openFilesImpactedByConfigFile?.delete(e.path))return;n&&(a.inferredProjectRoots--,a.watcher&&!a.config&&!a.inferredProjectRoots&&(a.watcher.close(),a.watcher=void 0)),!a.openFilesImpactedByConfigFile?.size&&!a.config&&(w.assert(!a.watcher),this.configFileExistenceInfoCache.delete(s))}})}startWatchingConfigFilesForInferredProjectRoot(e){this.serverMode===0&&(w.assert(e.isScriptOpen()),this.rootOfInferredProjects.add(e),this.forEachConfigFileLocation(e,(n,r)=>{let s=this.configFileExistenceInfoCache.get(n);s?s.inferredProjectRoots=(s.inferredProjectRoots??0)+1:(s={exists:this.host.fileExists(r),inferredProjectRoots:1},this.configFileExistenceInfoCache.set(n,s)),(s.openFilesImpactedByConfigFile??(s.openFilesImpactedByConfigFile=new Set)).add(e.path),s.watcher||(s.watcher=ux(pu(li(n)))?this.watchFactory.watchFile(r,(a,l)=>this.onConfigFileChanged(r,n,l),2e3,this.hostConfiguration.watchOptions,nd.ConfigFileForInferredRoot):iP)}))}closeOpenFile(e,n){let r=e.isDynamic?!1:this.host.fileExists(e.fileName);e.close(r),this.stopWatchingConfigFilesForScriptInfo(e);let s=this.toCanonicalFileName(e.fileName);this.openFilesWithNonRootedDiskPath.get(s)===e&&this.openFilesWithNonRootedDiskPath.delete(s);let a=!1;for(let l of e.containingProjects){if(id(l)){e.hasMixedContent&&e.registerFileUpdate();let u=l.openFileWatchTriggered.get(e.path);u!==void 0&&(l.openFileWatchTriggered.delete(e.path),l.pendingUpdateLevel<u&&(l.pendingUpdateLevel=u,l.markFileAsDirty(e.path)))}else x2(l)&&l.isRoot(e)&&(l.isProjectWithSingleRoot()&&(a=!0),l.removeFile(e,r,!0));l.languageServiceEnabled||l.markAsDirty()}return this.openFiles.delete(e.path),this.configFileForOpenFiles.delete(e.path),this.pendingOpenFileProjectUpdates?.delete(e.path),w.assert(!this.rootOfInferredProjects.has(e)),!n&&a&&this.assignOrphanScriptInfosToInferredProject(),r?this.watchClosedScriptInfo(e):this.handleDeletedFile(e,!1),a}applyChangesInOpenFiles(e,n,r){let s,a=!1;if(e)for(let u of e){let d=this.getOrCreateOpenScriptInfo(Ps(u.fileName),u.content,1,u.hasMixedContent,u.projectRootPath?Ps(u.projectRootPath):void 0);(s||(s=[])).push(d)}if(n)for(let u of n){let d=this.getScriptInfo(u.fileName);w.assert(!!d),this.applyChangesToFile(d,u.changes)}if(r)for(let u of r)a=this.closeClientFile(u,!0)||a;let l;s?.forEach(u=>this.assignProjectToOpenedScriptInfo(u).retainProjects?.forEach(d=>(l??(l=new Set)).add(d))),a&&this.assignOrphanScriptInfosToInferredProject(),s?(this.cleanupProjectsAndScriptInfos(l,new Set(s.map(u=>u.path)),void 0),this.printProjects()):Pr(r)&&this.printProjects()}applyChangesToFile(e,n){for(let r of n)e.editContent(r.span.start,r.span.start+r.span.length,r.newText)}assignOrphanScriptInfosToInferredProject(){this.openFiles.forEach((e,n)=>{this.getScriptInfoForPath(n).isOrphan()&&console.debug("todo - implement me - assignOrphanScriptInfosToInferredProject")})}delayUpdateProjectGraphAndEnsureProjectStructureForOpenFiles(e){this.delayUpdateProjectGraph(e),this.delayEnsureProjectForOpenFiles()}};function Nl(e){return e.invalidateResolutionsOfFailedLookupLocations(),e.dirty&&!e.updateGraph()}var WJ=(e=>(e[e.Find=0]="Find",e[e.Create=1]="Create",e[e.Reload=2]="Reload",e))(WJ||{});function gb(e){return!!e.configFileInfo}function CO(e,n){if(!(!n||gb(e)))return n.get(e.path)}function Yoe(e){return!!e.containingProjects}function PO(e){return`Creating possible configured project for ${e.fileName} to open`}function xO(e){e.print(!1,!1,!1)}function UJ(e,n,r){if(!r&&(e.invalidateResolutionsOfFailedLookupLocations(),!e.dirty))return!1;e.triggerFileForConfigFileDiag=n;let s=e.pendingUpdateLevel;if(e.updateGraph(),!e.triggerFileForConfigFileDiag&&!r)return s===2;let a=e.projectService.sendConfigFileDiagEvent(e,n,r);return e.triggerFileForConfigFileDiag=void 0,a}function JJ(e,n){if(n){if(UJ(e,n,!1))return!0}else Nl(e);return!1}function sP(e){return`User requested reload projects: ${e}`}var DO={getFileName:e=>e,getScriptKind:(e,n)=>{let r;if(n){let s=c0(e);s&&kt(n,a=>a.extension===s?(r=a.scriptKind,!0):!1)}return r},hasMixedContent:(e,n)=>kt(n,r=>r.isMixedContent&&el(e,r.extension))};function oP(){return{idToCallbacks:new Map,pathToId:new Map}}function Zoe(e,n){if(!n||!e.eventHandler||!e.session)return;let r=oP(),s=oP(),a=oP(),l=1;return console.debug("todo - tie watch chnage to service events"),{watchFile:u,watchDirectory:d,getCurrentDirectory:()=>e.host.getCurrentDirectory(),useCaseSensitiveFileNames:e.host.useCaseSensitiveFileNames};function u(T,E){return _(r,T,E,g=>({eventName:RJ,data:{id:g,path:T}}))}function d(T,E,g){return _(g?a:s,T,E,M=>({eventName:MJ,data:{id:M,path:T,recursive:!!g,ignoreUpdate:T.endsWith("/node_modules")?void 0:!0}}))}function _({pathToId:T,idToCallbacks:E},g,M,N){let z=e.toPath(g),X=T.get(z);X||T.set(z,X=l++);let j=E.get(X);return j||(E.set(X,j=new Set),e.eventHandler(N(X))),j.add(M),{close(){let Z=E.get(X);Z?.delete(M)&&(Z.size||(E.delete(X),T.delete(z),e.eventHandler({eventName:jJ,data:{id:X}})))}}}function y(T){Gr(T)?T.forEach(h):h(T)}function h({id:T,created:E,deleted:g,updated:M}){v(T,E,0),v(T,g,2),v(T,M,1)}function v(T,E,g){E?.length&&(b(r,T,E,(M,N)=>M(N,g)),b(s,T,E,(M,N)=>M(N)),b(a,T,E,(M,N)=>M(N)))}function b(T,E,g,M){T.idToCallbacks.get(E)?.forEach(N=>{g.forEach(z=>M(N,cc(z)))})}}function Xoe(e,n){return`${Li(n)?`Config: ${n} `:n?`Project: ${n.getProjectName()} `:""}WatchType: ${e}`}function zJ(e,n){return e.potentialProjectReferences&&o8(e.potentialProjectReferences,n)}function VJ(e,n,r,s,a,l,u,d){let _=e.getCurrentProgram()?.getResolvedProjectReferences();if(!_)return;let y=n?e.getResolvedProjectReferenceToRedirect(n):void 0;if(y){let b=Ps(y.sourceFile.fileName),T=e.projectService.findConfiguredProjectByProjectName(b,l);if(T){let E=v(T);if(E)return E}else if(s!==0){let E=Mx(_,e.getCompilerOptions(),(g,M)=>y===g?h(g,M):void 0,s,e.projectService);if(E)return E}}return Mx(_,e.getCompilerOptions(),(b,T)=>y!==b?h(b,T):void 0,s,e.projectService);function h(b,T){let E=e.projectService.findCreateOrReloadConfiguredProject(Ps(b.sourceFile.fileName),T,a,l,u,d);return E&&(T===s?r(E.project,E.sentConfigFileDiag):v(E.project))}function v(b){let T=!1;switch(s){case 1:T=JJ(b,u);break;case 2:T=b.projectService.reloadConfiguredProjectClearingSemanticCache(b,a,d);break;case 0:break;default:w.assertNever(s)}let E=r(b,T);if(E)return E}}function Mx(e,n,r,s,a,l){let u=n.disableReferencedProjectLoad?0:s;return Jt(e,d=>{if(!d)return;let _=Ps(d.sourceFile.fileName),y=a.toCanonicalFileName(_),h=l?.get(y);if(h!==void 0&&h>=u)return;let v=r(d,u);return v||((l||(l=new Map)).set(y,u),d.references&&Mx(d.references,d.commandLine.options,r,u,a,l))})}function qJ(e){let{lazyConfiguredProjectsFromExternalProject:n,...r}=e;return r}function EO(e){let n=1;return()=>e(n++)}function $J(e){return`/dev/null/inferredProject${e}*`}function wO(e,n){return Koe(e,r=>aP(e,n,r.sourceFile.path),r=>aP(e,n,e.toPath(sv(r))),r=>aP(e,n,r))}function Koe(e,n,r,s){return e.getCurrentProgram()?e.forEachResolvedProjectReference(n):e.isInitialLoadPending()?zJ(e,s):Jt(e.getProjectReferences(),r)}function aP(e,n,r){let s=r&&e.projectService.configuredProjects.get(r);return s&&n(s)}function HJ(e){switch(e){case"LPC":return 1;default:return 0}}function GJ(e){let n=new Map;for(let r of e)if(typeof r.type=="object"){let s=r.type;s.forEach(a=>{w.assert(typeof a=="number")}),n.set(r.name,s)}return n}var eae=GJ(gd),tae=GJ(rE),Vae=new Map(Object.entries({none:0,block:1,smart:2}));function QJ(e){return eae.forEach((n,r)=>{let s=e[r];Li(s)&&(e[r]=n.get(s.toLowerCase()))}),e}function YJ(e,n){let r,s;return rE.forEach(a=>{let l=e[a.name];if(l===void 0)return;let u=tae.get(a.name);(r||(r={}))[a.name]=u?Li(l)?u.get(l.toLowerCase()):l:fd(a,l,n||"",s||(s=[]))}),r&&{watchOptions:r,errors:s}}function ZJ(e){let n;return tM.forEach(r=>{let s=e[r.name];s!==void 0&&((n||(n={}))[r.name]=s)}),n}var nae={isCancellationRequested:()=>!1,setRequest:()=>{},resetRequest:()=>{}},rae=class XJ{constructor(n){this.changeSeq=0,this.regionDiagLineCountThreshold=500,this.handlers=new Map(Object.entries({change:l=>(this.change(l.arguments),this.notRequired()),close:l=>{let u=l.arguments;return this.closeClientFile(u.file),this.notRequired()},open:l=>(this.openClientFile(Ps(l.arguments.file),l.arguments.fileContent,HJ(l.arguments.scriptKindName),l.arguments.projectRootPath?Ps(l.arguments.projectRootPath):void 0),this.notRequired()),updateOpen:l=>{let u=this.updateOpenWorker(l.arguments);return this.requiredResponse(u)},geterr:l=>(this.errorCheck.startNew(u=>this.getDiagnostics(u,l.arguments.delay,l.arguments.files)),this.notRequired()),completionInfo:l=>this.requiredResponse(this.getCompletions(l.arguments,"completionInfo")),completionEntryDetails:l=>this.requiredResponse(this.getCompletionEntryDetails(l.arguments,!1)),definition:l=>this.requiredResponse(this.getDefinition(l.arguments,!0)),signatureHelp:l=>this.requiredResponse(this.getSignatureHelpItems(l.arguments,!0)),quickinfo:l=>this.requiredResponse(this.getQuickInfoWorker(l.arguments,!1)),"encodedSemanticClassifications-full":l=>this.requiredResponse(this.getEncodedSemanticClassifications(l.arguments)),projectInfo:l=>this.requiredResponse(this.getProjectInfo(l.arguments)),docCommentTemplate:l=>this.requiredResponse(this.getDocCommentTemplate(l.arguments)),references:l=>this.requiredResponse(this.getReferences(l.arguments,!0)),navtree:l=>this.requiredResponse(this.getNavigationTree(l.arguments,!0))})),this.host=n.host,this.cancellationToken=n.cancellationToken,this.byteLength=n.byteLength,this.hrtime=n.hrtime,this.logger=n.logger,this.canUseEvents=n.canUseEvents,this.suppressDiagnosticEvents=n.suppressDiagnosticEvents,this.noGetErrOnBackgroundUpdate=n.noGetErrOnBackgroundUpdate;let{throttleWaitMilliseconds:r}=n,s={executeWithRequestId:(l,u)=>this.executeWithRequestId(l,u),getCurrentRequestId:()=>this.currentRequestId,getServerHost:()=>this.host,logError:(l,u)=>this.logError(l,u),sendRequestCompletedEvent:l=>this.sendRequestCompletedEvent(l),isCancellationRequested:()=>this.cancellationToken.isCancellationRequested()};this.errorCheck=new aae(s);let a={host:this.host,logger:this.logger,cancellationToken:this.cancellationToken,useSingleInferredProject:n.useSingleInferredProject,useInferredProjectPerProjectRoot:n.useInferredProjectPerProjectRoot,globalPlugins:n.globalPlugins,pluginProbeLocations:n.pluginProbeLocations,allowLocalPluginLoads:n.allowLocalPluginLoads,typesMapLocation:n.typesMapLocation,throttleWaitMilliseconds:r,serverMode:n.serverMode,session:this,projectRootFolder:n.projectRootFolder};switch(this.projectService=new BJ(a),this.gcTimer=new SJ(this.host,7e3,this.logger),this.projectService.serverMode){case 0:break;case 1:oz.forEach(l=>this.handlers.set(l,u=>{throw new Error(`Request: ${u.command} not allowed in LanguageServiceMode.PartialSemantic`)}));break;case 2:Tae.forEach(l=>this.handlers.set(l,u=>{throw new Error(`Request: ${u.command} not allowed in LanguageServiceMode.Syntactic`)}));break;default:w.assertNever(this.projectService.serverMode)}}exit(){}send(n){if(n.type==="event"&&!this.canUseEvents){this.logger.hasLevel(3)&&this.logger.info(`Session does not support events: ignored event: ${dy(n)}`);return}this.writeMessage(n)}writeMessage(n){let r=ez(n,this.logger,this.byteLength,this.host.newLine);this.host.write(r)}event(n,r){this.send(KJ(r,n))}sendRequestCompletedEvent(n){this.event({request_seq:n},"requestCompleted")}setCurrentRequest(n){w.assert(this.currentRequestId===void 0),this.currentRequestId=n,this.cancellationToken.setRequest(n)}resetCurrentRequest(n){w.assert(this.currentRequestId===n),this.currentRequestId=void 0,this.cancellationToken.resetRequest(n)}executeWithRequestId(n,r){try{return this.setCurrentRequest(n),r()}finally{this.resetCurrentRequest(n)}}logError(n,r){this.logErrorWorker(n,r)}logErrorWorker(n,r,s){let a="Exception on executing command "+r;if(n.message&&(a+=`:
`+py(n.message),n.stack&&(a+=`
`+py(n.stack))),this.logger.hasLevel(3)){if(s)try{let{file:l,project:u}=this.getFileAndProject(s),d=u.getScriptInfoForNormalizedPath(l);if(d){let _=Sg(d.getSnapshot());a+=`

File text of ${s.file}:${py(_)}
`}}catch{}if(n.ProgramFiles){a+=`

Program files: ${JSON.stringify(n.ProgramFiles)}
`,a+=`

Projects::
`;let l=0,u=d=>{a+=`
Project '${d.projectName}' (${hv[d.projectKind]}) ${l}
`,a+=d.filesToString(!0),a+=`
-----------------------------------------------
`,l++};this.projectService.configuredProjects.forEach(u),this.projectService.inferredProjects.forEach(u)}}this.logger.msg(a,"Err")}getFileAndProject(n){return this.getFileAndProjectWorker(n.file,n.projectFileName)}getFileAndLanguageServiceForSyntacticOperation(n){let{file:r,project:s}=this.getFileAndProject(n);return{file:r,languageService:s.getLanguageService(!1)}}getProject(n){return n===void 0?void 0:this.projectService.findProject(n)}getFileAndProjectWorker(n,r){let s=Ps(n),a=this.getProject(r)||this.projectService.ensureDefaultProjectForFile(s);return{file:s,project:a}}getProjectInfo(n){return this.getProjectInfoWorker(n.file,n.projectFileName,n.needFileNameList,!1)}openClientFile(n,r,s,a){this.projectService.openClientFileWithNormalizedPath(n,r,s,!1,a)}openFile(n){return this.openClientFile(Ps(n.file),n.fileContent,1,n.projectRootPath?Ps(n.projectRootPath):void 0),n}getPosition(n,r){return n.position!==void 0?n.position:r.lineOffsetToPosition(n.line,n.offset)}mapDisplayParts(n,r){return n?n.map(s=>s):[]}updateOpenWorker(n){this.changeSeq++;let r=n.openFiles&&fP(n.openFiles,a=>({fileName:a.file,content:a.fileContent,projectRootPath:a.projectRootPath})),s=n.changedFiles&&fP(n.changedFiles,a=>({fileName:a.fileName,changes:zh($O(a.textChanges),l=>{let u=w.checkDefined(this.projectService.getScriptInfo(a.fileName)),d=u.lineOffsetToPosition(l.start.line,l.start.offset),_=u.lineOffsetToPosition(l.end.line,l.end.offset);return d>=0?{span:{start:d,length:_-d},newText:l.newText}:void 0})}));return this.projectService.applyChangesInOpenFiles(r,s,n.closedFiles),!0}closeClientFile(n){if(!n)return;let r=di(n);this.projectService.closeClientFile(r)}change(n){let r=this.projectService.getScriptInfo(n.file);w.assert(!!r),r.textStorage.switchToScriptVersionCache();let s=r.lineOffsetToPosition(n.line,n.offset),a=r.lineOffsetToPosition(n.endLine,n.endOffset);if(r.registerFileUpdate(),s>=0&&(this.changeSeq++,this.projectService.applyChangesToFile(r,sL({span:{start:s,length:a-s},newText:n.insertString})),r.fileName.endsWith(".h"))){let l=0;r.containingProjects.forEach(u=>{u.resolutionCache.resolvedFileToResolution.get(r.path)?.forEach(_=>{_.files.forEach(y=>{this.projectService.getScriptInfoForPath(y)?.incrementVersion(),l++})})})}}getDiagnostics(n,r,s){this.suppressDiagnosticEvents||s.length>0&&this.updateErrorCheck(n,s,r)}toPendingErrorCheck(n){let r=Ps(n),s=this.projectService.tryGetDefaultProjectForFile(r);return s&&{fileName:r,project:s}}setCompilerOptionsForInferredProjects(n){this.projectService.setCompilerOptionsForInferredProjects(n.options,n.projectRootPath)}updateErrorCheck(n,r,s,a=!0){w.assert(!this.suppressDiagnosticEvents);let l=this.changeSeq,u=Math.min(s,200),d=0,_=()=>{d++,r.length>d&&n.delay("checkOne",u,y)},y=()=>{if(this.changeSeq!==l)return;let h=r[d];if(Li(h)&&(h=this.toPendingErrorCheck(h),!h)){_();return}let{fileName:v,project:b}=h,T=[];if(Nl(b),!b.containsFile(v,a))return;let E=this.syntacticCheck(v,b);if(T.push(...E),this.changeSeq!==l){this.sendAllDiagnostics(T,v,b);return}if(b.projectService.serverMode!==0){this.sendAllDiagnostics(T,v,b),_();return}n.immediate("semanticCheck",()=>{let g=this.semanticCheck(v,b);if(b.getCompilerOptions()?.diagnostics&&T.push(...g),this.changeSeq!==l){this.sendAllDiagnostics(T,v,b);return}if(this.getPreferences(v).disableSuggestions){this.sendAllDiagnostics(T,v,b),_();return}n.immediate("suggestionCheck",()=>{b.getCompilerOptions()?.diagnostics&&T.push(...this.suggestionCheck(v,b)),n.immediate("sendAllDiags",()=>{this.sendAllDiagnostics(T,v,b),_()})})})};r.length>d&&this.changeSeq===l&&n.delay("checkOne",s,y)}sendAllDiagnostics(n,r,s){this.sendDiagnosticsEvent(r,s,n,"allDiag")}semanticCheck(n,r){Dt?.push(Dt.Phase.Session,"semanticCheck",{file:n,configFilePath:r.canonicalConfigFilePath});let s=r.getLanguageService().getSemanticDiagnostics(n).filter(a=>!!a.file);return this.sendDiagnosticsEvent(n,r,s,"semanticDiag"),Dt?.pop(),s}syntacticCheck(n,r){Dt?.push(Dt.Phase.Session,"syntacticCheck",{file:n,configFilePath:r.canonicalConfigFilePath});let s=r.getLanguageService().getSyntacticDiagnostics(n);return this.sendDiagnosticsEvent(n,r,s,"syntaxDiag"),Dt?.pop(),s}suggestionCheck(n,r){Dt?.push(Dt.Phase.Session,"suggestionCheck",{file:n,configFilePath:r.canonicalConfigFilePath});let s=r.getLanguageService().getSuggestionDiagnostics(n);return this.sendDiagnosticsEvent(n,r,s,"suggestionDiag"),Dt?.pop(),s}getConfigFileAndProject(n){let r=this.getProject(n.projectFileName),s=Ps(n.file);return{configFile:r&&r.hasConfigFile(s)?s:void 0,project:r}}getConfigFileDiagnostics(n,r,s){let a=r.getAllProjectErrors(),l=r.getLanguageService().getCompilerOptionsDiagnostics(),u=Yr(ri(a,l),d=>!!d.file&&d.file.fileName===n);return s?this.convertToDiagnosticsWithLinePositionFromDiagnosticFile(u):Xt(u,d=>tz(d,!1))}convertToDiagnosticsWithLinePositionFromDiagnosticFile(n){return n.map(r=>({message:Uu(r.messageText,this.host.newLine),start:r.start,length:r.length,category:od(r),code:r.code,source:r.source,startLocation:r.file&&p0($s(r.file,r.start)),endLocation:r.file&&p0($s(r.file,r.start+r.length)),reportsUnnecessary:r.reportsUnnecessary,reportsDeprecated:r.reportsDeprecated,relatedInformation:Xt(r.relatedInformation,E2)}))}getFormatOptions(n){return this.projectService.getFormatCodeOptions(n)}getDocCommentTemplate(n){let{file:r,languageService:s}=this.getFileAndLanguageServiceForSyntacticOperation(n),a=this.getPositionInFile(n,r);return s.getDocCommentTemplateAtPosition(r,a,this.getPreferences(r),this.getFormatOptions(r))}getSemanticDiagnosticsSync(n){let{configFile:r,project:s}=this.getConfigFileAndProject(n);return r?this.getConfigFileDiagnostics(r,s,!!n.includeLinePosition):this.getDiagnosticsWorker(n,!0,(a,l)=>a.getLanguageService().getSemanticDiagnostics(l).filter(u=>!!u.file),!!n.includeLinePosition)}getDiagnosticsWorker(n,r,s,a){let{project:l,file:u}=this.getFileAndProject(n),d=l.getScriptInfoForNormalizedPath(u),_=s(l,u);return a?this.convertToDiagnosticsWithLinePosition(_,d):_.map(y=>IO(u,l,y))}convertToDiagnosticsWithLinePosition(n,r){return n.map(s=>({message:Uu(s.messageText,this.host.newLine),start:s.start,length:s.length,category:od(s),code:s.code,source:s.source,startLocation:r&&r.positionToLineOffset(s.start),endLocation:r&&r.positionToLineOffset(s.start+s.length),reportsUnnecessary:s.reportsUnnecessary,reportsDeprecated:s.reportsDeprecated,relatedInformation:Xt(s.relatedInformation,E2)}))}sendDiagnosticsEvent(n,r,s,a){try{this.event({file:n,diagnostics:s.map(l=>IO(n,r,l))},a)}catch(l){this.logError(l,a)}}getDiagnosticsForFiles(n){this.errorCheck.startNew(r=>this.getDiagnostics(r,n.delay,n.files))}getDiagnosticsForProject(n){this.errorCheck.startNew(r=>this.getDiagnosticsForProjectWorker(r,n.delay,n.file))}getEncodedSemanticClassifications(n){let{file:r,project:s}=this.getFileAndProject(n);if(s.getCurrentProgram())return s.getLanguageService().getEncodedSemanticClassifications(r,n)}getSignatureHelpItems(n,r){let{file:s,project:a}=this.getFileAndProject(n),l=this.projectService.getScriptInfoForNormalizedPath(s),u=this.getPosition(n,l),d=a.getLanguageService().getSignatureHelpItems(s,u,n),_=!!this.getPreferences(s).displayPartsForJSDoc;if(d&&r){let y=d.applicableSpan;return{...d,applicableSpan:{start:l.positionToLineOffset(y.start),end:l.positionToLineOffset(y.start+y.length)},items:this.mapSignatureHelpItems(d.items,a,_)}}else return _||!d?d:{...d,items:d.items.map(y=>({...y,tags:this.mapJSDocTagInfo(y.tags,a,!1)}))}}mapSignatureHelpItems(n,r,s){return n.map(a=>({...a,documentation:this.mapDisplayParts(a.documentation,r),parameters:a.parameters.map(l=>({...l,documentation:this.mapDisplayParts(l.documentation,r)})),tags:this.mapJSDocTagInfo(a.tags,r,s)}))}getQuickInfoWorker(n,r){let{file:s,project:a}=this.getFileAndProject(n),l=this.projectService.getScriptInfoForNormalizedPath(s),u=a.getLanguageService().getQuickInfoAtPosition(s,this.getPosition(n,l));if(!u)return;let d=!1;if(r){let _=pb(u.displayParts);return{kind:u.kind,kindModifiers:u.kindModifiers,start:l.positionToLineOffset(u.textSpan.start),end:l.positionToLineOffset(Fu(u.textSpan)),displayString:_,documentation:d?this.mapDisplayParts(u.documentation,a):pb(u.documentation),tags:this.mapJSDocTagInfo(u.tags,a,d)}}else return d?u:{...u,tags:this.mapJSDocTagInfo(u.tags,a,!1)}}getProjectInfoWorker(n,r,s,a){let{project:l}=this.getFileAndProjectWorker(n,r);Nl(l);let d=l.getCompilerOptions()?.driverType==1?"FluffOS":"LDMud";return{configFileName:l.getProjectName(),languageServiceDisabled:!l.languageServiceEnabled,fileNames:s?l.getFileNames(!1,a):void 0,driverType:d}}getDiagnosticsForProjectWorker(n,r,s){if(this.suppressDiagnosticEvents)return;let{fileNames:a,languageServiceDisabled:l}=this.getProjectInfoWorker(s,void 0,!0,!0);if(l)return;let u=a.filter(g=>!g.includes("lib.d.ts"));if(u.length===0)return;let d=[],_=[],y=[],h=[],v=Ps(s),b=this.projectService.ensureDefaultProjectForFile(v);for(let g of u)this.getCanonicalFileName(g)===this.getCanonicalFileName(s)?d.push(g):this.projectService.getScriptInfo(g).isScriptOpen()?_.push(g):i0(g)?h.push(g):y.push(g);let E=[...d,..._,...y,...h].map(g=>({fileName:g,project:b}));this.updateErrorCheck(n,E,r,!1)}getCanonicalFileName(n){let r=this.host.useCaseSensitiveFileNames?n:eg(n);return di(r)}mapJSDocTagInfo(n,r,s){return n?n.map(a=>({...a,text:s?this.mapDisplayParts(a.text,r):a.text?.map(l=>l.text).join("")})):[]}getPositionInFile(n,r){let s=this.projectService.getScriptInfoForNormalizedPath(r);return this.getPosition(n,s)}mapDefinitionInfoLocations(n,r){return n.map(s=>{let a=lae(s,r);return a?{...a,containerKind:s.containerKind,containerName:s.containerName,kind:s.kind,name:s.name,failedAliasResolution:s.failedAliasResolution,...s.unverified&&{unverified:s.unverified}}:s})}toFileSpan(n,r,s){let a=s.getLanguageService(),l=a.toLineColumnOffset(n,r.start),u=a.toLineColumnOffset(n,Fu(r));return{file:n,start:{line:l.line+1,offset:l.character+1},end:{line:u.line+1,offset:u.character+1}}}toFileSpanWithContext(n,r,s,a){let l=this.toFileSpan(n,r,a),u=s&&this.toFileSpan(n,s,a);return u?{...l,contextStart:u.start,contextEnd:u.end}:l}mapDefinitionInfo(n,r){return n.map(s=>({...this.toFileSpanWithContext(s.fileName,s.textSpan,s.contextSpan,r),...s.unverified&&{unverified:s.unverified}}))}getDefinition(n,r){let{file:s,project:a}=this.getFileAndProject(n),l=this.getPositionInFile(n,s),u=this.mapDefinitionInfoLocations(a.getLanguageService().getDefinitionAtPosition(s,l)||Oe,a);return r?this.mapDefinitionInfo(u,a):u.map(XJ.mapToOriginalLocation)}toLocationNavigationTree(n,r){return{text:n.text,kind:n.kind,kindModifiers:n.kindModifiers,spans:n.spans.map(s=>wm(s,r)),nameSpan:n.nameSpan&&wm(n.nameSpan,r),childItems:Xt(n.childItems,s=>this.toLocationNavigationTree(s,r))}}getNavigationTree(n,r){let{file:s,languageService:a}=this.getFileAndLanguageServiceForSyntacticOperation(n),l=a.getNavigationTree(s);return l?r?this.toLocationNavigationTree(l,this.projectService.getScriptInfoForNormalizedPath(s)):l:void 0}static mapToOriginalLocation(n){return n.originalFileName?(w.assert(n.originalTextSpan!==void 0,"originalTextSpan should be present if originalFileName is"),{...n,fileName:n.originalFileName,textSpan:n.originalTextSpan,targetFileName:n.fileName,targetTextSpan:n.textSpan,contextSpan:n.originalContextSpan,targetContextSpan:n.contextSpan}):n}getRenameLocations(n,r){let s=Ps(n.file),a=this.getPositionInFile(n,s),l=this.getProjects(n),u=this.getDefaultProject(n),d=this.getPreferences(s),_=this.mapRenameInfo(u.getLanguageService().getRenameInfo(s,a,d),w.checkDefined(this.projectService.getScriptInfo(s)));if(!_.canRename)return r?{info:_,locs:[]}:[];let y=hae(l,u,{fileName:n.file,pos:a},!!n.findInStrings,!!n.findInComments,d,this.host.useCaseSensitiveFileNames);return r?{info:_,locs:this.toSpanGroups(y)}:y}mapRenameInfo(n,r){if(n.canRename){let{canRename:s,fileToRename:a,displayName:l,fullDisplayName:u,kind:d,kindModifiers:_,triggerSpan:y}=n;return{canRename:s,fileToRename:a,displayName:l,fullDisplayName:u,kind:d,kindModifiers:_,triggerSpan:wm(y,r)}}else return n}toSpanGroups(n){let r=new Map;for(let{fileName:s,textSpan:a,contextSpan:l,originalContextSpan:u,originalTextSpan:d,originalFileName:_,...y}of n){let h=r.get(s);h||r.set(s,h={file:s,locs:[]});let v=w.checkDefined(this.projectService.getScriptInfo(s));h.locs.push({...iz(a,l,v),...y})}return as(r.values())}getProjects(n,r,s){let a,l;if(n.projectFileName){let u=this.getProject(n.projectFileName);u&&(a=[u])}else{let u=r?this.projectService.getScriptInfoEnsuringProjectsUptoDate(n.file):this.projectService.getScriptInfo(n.file);if(u)r||this.projectService.ensureDefaultProjectForFile(u);else return s?Oe:(this.projectService.logErrorForScriptInfoNotFound(n.file),mp.ThrowNoProject());a=u.containingProjects,l=this.projectService.getSymlinkedProjects(u)}return a=Yr(a,u=>u.languageServiceEnabled&&!u.isOrphan()),!s&&(!a||!a.length)&&!l?(this.projectService.logErrorForScriptInfoNotFound(n.file??n.projectFileName),mp.ThrowNoProject()):l?{projects:a,symLinkedProjects:l}:a}getDefaultProject(n){if(n.projectFileName){let s=this.getProject(n.projectFileName);if(s)return s;if(!n.file)return mp.ThrowNoProject()}return this.projectService.getScriptInfo(n.file).getDefaultProject()}getReferences(n,r){let s=Ps(n.file),a=this.getProjects(n),l=this.getPositionInFile(n,s),u=dae(a,this.getDefaultProject(n),{fileName:n.file,pos:l},this.host.useCaseSensitiveFileNames,this.logger);if(!r)return u;let d=this.getPreferences(s),_=this.getDefaultProject(n),y=_.getScriptInfoForNormalizedPath(s),h=_.getLanguageService().getQuickInfoAtPosition(s,l),v=h?pb(h.displayParts):"",b=h&&h.textSpan,T=b?y.positionToLineOffset(b.start).offset:0,E=b?y.getSnapshot().getText(b.start,Fu(b)):"";return{refs:ao(u,M=>M.references.map(N=>mae(this.projectService,N,d))),symbolName:E,symbolStartOffset:T,symbolDisplayString:v}}getPreferences(n){return this.projectService.getPreferences(n)}getCompletions(n,r){let{file:s,project:a}=this.getFileAndProject(n),l=this.projectService.getScriptInfoForNormalizedPath(s),u=this.getPosition(n,l),d=a.getLanguageService().getCompletionsAtPosition(s,u,{...qJ(this.getPreferences(s)),triggerCharacter:n.triggerCharacter,triggerKind:n.triggerKind,includeExternalModuleExports:n.includeExternalModuleExports,includeInsertTextCompletions:n.includeInsertTextCompletions},a.projectService.getFormatCodeOptions(s));if(d===void 0)return;if(r==="completions-full")return d;let _=n.prefix||"",y=Vi(d.entries,v=>{if(d.isMemberCompletion||v.name&&no(v.name.toLowerCase(),_.toLowerCase())){let{name:b,kind:T,kindModifiers:E,sortText:g,insertText:M,filterText:N,replacementSpan:z,hasAction:X,source:j,sourceDisplay:Z,labelDetails:le,isSnippet:de,isRecommended:se,isPackageJsonImport:ye,isImportStatementCompletion:he,data:oe}=v,ie=z?wm(z,l):void 0;return{name:b,kind:T,kindModifiers:E,sortText:g,insertText:M,filterText:N,replacementSpan:ie,isSnippet:de,hasAction:X||void 0,source:j,sourceDisplay:Z,labelDetails:le,isRecommended:se,isPackageJsonImport:ye,isImportStatementCompletion:he,data:oe}}});return r==="completions"?(d.metadata&&(y.metadata=d.metadata),y):{...d,optionalReplacementSpan:d.optionalReplacementSpan&&wm(d.optionalReplacementSpan,l),entries:y}}getCompletionEntryDetails(n,r){let{file:s,project:a}=this.getFileAndProject(n),l=this.projectService.getScriptInfoForNormalizedPath(s),u=this.getPosition(n,l),d=a.projectService.getFormatCodeOptions(s),_=!!this.getPreferences(s).displayPartsForJSDoc,y=Vi(n.entryNames,h=>{let{name:v,source:b,data:T}=typeof h=="string"?{name:h,source:void 0,data:void 0}:h;return a.getLanguageService().getCompletionEntryDetails(s,u,v,d,b,this.getPreferences(s),T?aa(T,yae):void 0)});return r?_?y:y.map(h=>({...h,tags:this.mapJSDocTagInfo(h.tags,a,!1)})):y.map(h=>({...h,codeActions:Xt(h.codeActions,v=>this.mapCodeAction(v)),documentation:this.mapDisplayParts(h.documentation,a),tags:this.mapJSDocTagInfo(h.tags,a,_)}))}mapCodeAction({description:n,changes:r,commands:s}){return{description:n,changes:this.mapTextChangesToCodeEdits(r),commands:s}}mapTextChangesToCodeEdits(n){return n.map(r=>this.mapTextChangeToCodeEdit(r))}mapTextChangeToCodeEdit(n){let r=this.projectService.getScriptInfoOrConfig(n.fileName);return!!n.isNewFile==!!r&&(r||this.projectService.logErrorForScriptInfoNotFound(n.fileName),w.fail("Expected isNewFile for (only) new files. "+JSON.stringify({isNewFile:!!n.isNewFile,hasScriptInfo:!!r}))),r?{fileName:n.fileName,textChanges:n.textChanges.map(s=>iae(s,r))}:oae(n)}convertTextChangeToCodeEdit(n,r){return{start:r.positionToLineOffset(n.span.start),end:r.positionToLineOffset(n.span.start+n.span.length),newText:n.newText?n.newText:""}}requiredResponse(n){return{response:n,responseRequired:!0}}notRequired(){return{responseRequired:!1}}executeCommand(n){let r=this.handlers.get(n.command);return r?this.executeWithRequestId(n.seq,()=>r(n)):(this.logger.msg(`Unrecognized JSON command:${dy(n)}`,"Err"),{responseRequired:!1})}toStringMessage(n){return n}onMessage(n){this.gcTimer.scheduleCollect(),this.performanceData=void 0;let r;this.logger.hasLevel(2)&&(r=this.hrtime(),this.logger.hasLevel(3)&&this.logger.info(`request:${dy(n)}`));let s;try{s=n.arguments&&n.arguments.file?n.arguments:void 0,Dt?.instant(Dt.Phase.Session,"request",{seq:n.seq,command:n.command}),h_?.logStartCommand(""+n.command,JSON.stringify(n).substring(0,100)),Dt?.push(Dt.Phase.Session,"executeCommand",{seq:n.seq,command:n.command},!0);let{response:a,responseRequired:l}=this.executeCommand(n);if(Dt?.pop(),this.logger.hasLevel(2)){let u=vae(this.hrtime(r)).toFixed(4);l?this.logger.perftrc(`${n.seq}::${n.command}: elapsed time (in milliseconds) ${u}`):this.logger.perftrc(`${n.seq}::${n.command}: async elapsed time (in milliseconds) ${u}`)}if(h_?.logStopCommand(""+n.command,"Success"),Dt?.instant(Dt.Phase.Session,"response",{seq:n.seq,command:n.command,success:!!a}),a)return a;if(l)return}catch(a){if(Dt?.popAll(),a instanceof Sv){h_?.logStopCommand(""+(n&&n.command),"Canceled: "+a),Dt?.instant(Dt.Phase.Session,"commandCanceled",{seq:n?.seq,command:n?.command});return}this.logErrorWorker(a,JSON.stringify(n),s),h_?.logStopCommand(""+(n&&n.command),"Error: "+a),Dt?.instant(Dt.Phase.Session,"commandError",{seq:n?.seq,command:n?.command,message:a.message});return}}};function iae(e,n){return{start:NO(n,e.span.start),end:NO(n,Fu(e.span)),newText:e.newText}}function NO(e,n){return sz(e)?sae(e.getLineAndCharacterOfPosition(n)):e.positionToLineOffset(n)}function sae(e){return{line:e.line+1,offset:e.character+1}}function oae(e){w.assert(e.textChanges.length===1);let n=qs(e.textChanges);return w.assert(n.span.start===0&&n.span.length===0),{fileName:e.fileName,textChanges:[{start:{line:0,offset:0},end:{line:0,offset:0},newText:n.newText}]}}var aae=class{constructor(e){this.operationHost=e}startNew(e){this.complete(),this.requestId=this.operationHost.getCurrentRequestId(),this.executeAction(e)}complete(){this.requestId!==void 0&&(this.operationHost.sendRequestCompletedEvent(this.requestId),this.requestId=void 0),this.setTimerHandle(void 0),this.setImmediateId(void 0)}immediate(e,n){let r=this.requestId;w.assert(r===this.operationHost.getCurrentRequestId(),"immediate: incorrect request id"),this.setImmediateId(this.operationHost.getServerHost().setImmediate(()=>{this.immediateId=void 0,this.operationHost.executeWithRequestId(r,()=>this.executeAction(n))},e))}delay(e,n,r){let s=this.requestId;w.assert(s===this.operationHost.getCurrentRequestId(),"delay: incorrect request id"),this.setTimerHandle(this.operationHost.getServerHost().setTimeout(()=>{this.timerHandle=void 0,this.operationHost.executeWithRequestId(s,()=>this.executeAction(r))},n,e))}executeAction(e){let n=!1;try{this.operationHost.isCancellationRequested()?(n=!0,Dt?.instant(Dt.Phase.Session,"stepCanceled",{seq:this.requestId,early:!0})):(Dt?.push(Dt.Phase.Session,"stepAction",{seq:this.requestId}),e(this),Dt?.pop())}catch(r){Dt?.popAll(),n=!0,r instanceof Sv?Dt?.instant(Dt.Phase.Session,"stepCanceled",{seq:this.requestId}):(Dt?.instant(Dt.Phase.Session,"stepError",{seq:this.requestId,message:r.message}),this.operationHost.logError(r,`delayed processing of request ${this.requestId}`))}(n||!this.hasPendingWork())&&this.complete()}setTimerHandle(e){this.timerHandle!==void 0&&this.operationHost.getServerHost().clearTimeout(this.timerHandle),this.timerHandle=e}setImmediateId(e){this.immediateId!==void 0&&this.operationHost.getServerHost().clearImmediate(this.immediateId),this.immediateId=e}hasPendingWork(){return!!this.timerHandle||!!this.immediateId}};function KJ(e,n){return{seq:0,type:"event",event:e,body:n}}function ez(e,n,r,s){let a=n.hasLevel(3),l=JSON.stringify(e);return a&&n.info(`${e.type}:${dy(e)}`),`Content-Length: ${1+r(l,"utf8")}\r
\r
${l}${s}`}function IO(e,n,r){let s=n.getScriptInfoForNormalizedPath(e);return{start:s.positionToLineOffset(r.start),end:s.positionToLineOffset(r.start+r.length),text:Uu(r.messageText,`
`),code:r.code,category:od(r),reportsUnnecessary:r.reportsUnnecessary,reportsDeprecated:r.reportsDeprecated,source:r.source,relatedInformation:Xt(r.relatedInformation,E2)}}function E2(e){return e.file?{span:{start:p0($s(e.file,e.start)),end:p0($s(e.file,e.start+e.length)),file:e.file.fileName},message:Uu(e.messageText,`
`),category:od(e),code:e.code}:{message:Uu(e.messageText,`
`),category:od(e),code:e.code}}function p0(e){return{line:e.line+1,offset:e.character+1}}function tz(e,n){let r=e.file&&p0($s(e.file,e.start)),s=e.file&&p0($s(e.file,e.start+e.length)),a=Uu(e.messageText,`
`),{code:l,source:u}=e,d=od(e),_={start:r,end:s,text:a,code:l,category:d,reportsUnnecessary:e.reportsUnnecessary,reportsDeprecated:e.reportsDeprecated,source:u,relatedInformation:Xt(e.relatedInformation,E2)};return n?{..._,fileName:e.file&&e.file.fileName}:_}function cae(e){return id(e)?e.canonicalConfigFilePath:e.getProjectName()}function Eh({fileName:e,textSpan:n}){return{fileName:e,pos:n.start}}function jx(e,n){return f0(e,n.getSourceMapper(),r=>n.projectService.fileExists(r))}function lae(e,n){return l2(e,n.getSourceMapper(),r=>n.projectService.fileExists(r))}function uae(e,n){return YE(e,n.getSourceMapper(),r=>n.projectService.fileExists(r))}function wm(e,n){return{start:n.positionToLineOffset(e.start),end:n.positionToLineOffset(Fu(e))}}function fae(e,n,r){for(let s of Gr(e)?e:e.projects)r(s,n);!Gr(e)&&e.symLinkedProjects&&e.symLinkedProjects.forEach((s,a)=>{for(let l of s)r(l,a)})}function pae(e,n,r){let s=e.getLanguageService().getDefinitionAtPosition(n.fileName,n.pos,!1,r),a=s&&Fa(s);return a&&!a.isLocal?{fileName:a.fileName,pos:a.textSpan.start}:void 0}function nz(e,n){if(!n)return!1;let r=e.getLanguageService().getProgram();if(!r)return!1;let s=r.getSourceFile(n.fileName);return!!s&&s.resolvedPath!==s.path&&s.resolvedPath!==e.toPath(n.fileName)}function rz(e,n,r,s,a,l){let u=new Map,d=YO();d.enqueue({project:n,location:r}),fae(e,r.fileName,(g,M)=>{let N={fileName:M,pos:r.pos};d.enqueue({project:g,location:N})});let _=n.projectService,y=n.getCancellationToken(),h=pae(n,r,s),v=Fl(()=>n.isSourceOfProjectReferenceRedirect(h.fileName)?h:n.getLanguageService().getSourceMapper().tryGetGeneratedPosition(h)),b=Fl(()=>n.isSourceOfProjectReferenceRedirect(h.fileName)?h:n.getLanguageService().getSourceMapper().tryGetSourcePosition(h)),T=new Set;e:for(;!d.isEmpty();){for(;!d.isEmpty();){if(y.isCancellationRequested())break e;let{project:g,location:M}=d.dequeue();if(u.has(g)||nz(g,M)||(Nl(g),!g.containsFile(Ps(M.fileName))))continue;let N=E(g,M);u.set(g,N??Oe),T.add(cae(g))}h&&(_.loadAncestorProjectTree(T),_.forEachEnabledProject(g=>{if(y.isCancellationRequested()||u.has(g))return;let M=gae(h,g,v,b);M&&d.enqueue({project:g,location:M})}))}if(u.size===1)return XO(u.values());return u;function E(g,M){let N=a(g,M);if(N){for(let z of N)l(z,X=>{let j=_.getOriginalLocationEnsuringConfiguredProject(g,X);if(!j)return;let Z=_.getScriptInfo(j.fileName);for(let de of Z.containingProjects)!de.isOrphan()&&!u.has(de)&&d.enqueue({project:de,location:j});let le=_.getSymlinkedProjects(Z);le&&le.forEach((de,se)=>{for(let ye of de)!ye.isOrphan()&&!u.has(ye)&&d.enqueue({project:ye,location:{fileName:se,pos:j.pos}})})});return N}}}function dae(e,n,r,s,a){let l=rz(e,n,r,!1,(y,h)=>(a.info(`Finding references to ${h.fileName} position ${h.pos} in project ${y.getProjectName()}`),y.getLanguageService().findReferences(h.fileName,h.pos)),(y,h)=>{h(Eh(y.definition));for(let v of y.references)h(Eh(v))});if(Gr(l))return l;let u=l.get(n);if(u?.[0]?.references[0]?.isDefinition===void 0)l.forEach(y=>{for(let h of y)for(let v of h.references)delete v.isDefinition});else{let y=Bx(s);for(let v of u)for(let b of v.references)if(b.isDefinition){y.add(b);break}let h=new Set;for(;;){let v=!1;if(l.forEach((b,T)=>{if(h.has(T))return;T.getLanguageService().updateIsDefinitionOfReferencedSymbols(b,y)&&(h.add(T),v=!0)}),!v)break}l.forEach((v,b)=>{if(!h.has(b))for(let T of v)for(let E of T.references)E.isDefinition=!1})}let d=[],_=Bx(s);return l.forEach((y,h)=>{for(let v of y){let b=jx(Eh(v.definition),h),T=b===void 0?v.definition:{...v.definition,textSpan:Ju(b.pos,v.definition.textSpan.length),fileName:b.fileName,contextSpan:uae(v.definition,h)},E=Zr(d,g=>XE(g.definition,T,s));E||(E={definition:T,references:[]},d.push(E));for(let g of v.references)!_.has(g)&&!jx(Eh(g),h)&&(_.add(g),E.references.push(g))}}),d.filter(y=>y.references.length!==0)}function iz(e,n,r){let s=wm(e,r),a=n&&wm(n,r);return a?{...s,contextStart:a.start,contextEnd:a.end}:s}function _ae(e,n){let r=e.lineToTextSpan(n.start.line-1);return e.getSnapshot().getText(r.start,Fu(r)).replace(/\r|\n/g,"")}function mae(e,{fileName:n,textSpan:r,contextSpan:s,isWriteAccess:a,isDefinition:l},{disableLineTextInReferences:u}){let d=w.checkDefined(e.getScriptInfo(n)),_=iz(r,s,d),y=u?void 0:_ae(d,_);return{file:n,..._,lineText:y,isWriteAccess:a,isDefinition:l}}function gae(e,n,r,s){if(n.containsFile(Ps(e.fileName))&&!nz(n,e))return e;let a=r();if(a&&n.containsFile(Ps(a.fileName)))return a;let l=s();return l&&n.containsFile(Ps(l.fileName))?l:void 0}function Bx(e){return KO(({textSpan:n})=>n.start+100003*n.length,LB(e))}function hae(e,n,r,s,a,l,u){let d=rz(e,n,r,!0,(h,v)=>h.getLanguageService().findRenameLocations(v.fileName,v.pos,s,a,l),(h,v)=>v(Eh(h)));if(Gr(d))return d;let _=[],y=Bx(u);return d.forEach((h,v)=>{for(let b of h)!y.has(b)&&!jx(Eh(b),v)&&(_.push(b),y.add(b))}),_}function yae(e){return e===void 0||e&&typeof e=="object"&&typeof e.exportName=="string"&&(e.fileName===void 0||typeof e.fileName=="string")&&(e.ambientModuleName===void 0||typeof e.ambientModuleName=="string"&&(e.isPackageJsonImport===void 0||typeof e.isPackageJsonImport=="boolean"))}function sz(e){return e.kind!==void 0}function vae(e){let n=e[0],r=e[1];return(1e9*n+r)/1e6}var oz=["openExternalProject","openExternalProjects","closeExternalProject","synchronizeProjectList","emit-output","compileOnSaveAffectedFileList","compileOnSaveEmitFile","compilerOptionsDiagnostics-full","encodedSemanticClassifications-full","semanticDiagnosticsSync","suggestionDiagnosticsSync","geterrForProject","reload","reloadProjects","getCodeFixes","getCodeFixes-full","getCombinedCodeFix","getCombinedCodeFix-full","applyCodeActionCommand","getSupportedCodeFixes","getApplicableRefactors","getMoveToRefactoringFileSuggestions","getEditsForRefactor","getEditsForRefactor-full","organizeImports","organizeImports-full","getEditsForFileRename","getEditsForFileRename-full","prepareCallHierarchy","provideCallHierarchyIncomingCalls","provideCallHierarchyOutgoingCalls","getPasteEdits"],Tae=[...oz,"definition","definition-full","definitionAndBoundSpan","definitionAndBoundSpan-full","typeDefinition","implementation","implementation-full","references","references-full","rename","renameLocations-full","rename-full","quickinfo","quickinfo-full","completionInfo","completions","completions-full","completionEntryDetails","completionEntryDetails-full","signatureHelp","signatureHelp-full","navto","navto-full","documentHighlights","documentHighlights-full"],m_=4,az=(e=>(e[e.PreStart=0]="PreStart",e[e.Start=1]="Start",e[e.Entire=2]="Entire",e[e.Mid=3]="Mid",e[e.End=4]="End",e[e.PostEnd=5]="PostEnd",e))(az||{}),Sae=class{constructor(){this.goSubtree=!0,this.lineIndex=new yv,this.endBranch=[],this.state=2,this.initialText="",this.trailingText="",this.lineIndex.root=new Km,this.startPath=[this.lineIndex.root],this.stack=[this.lineIndex.root]}get done(){return!1}insertLines(e,n){n&&(this.trailingText=""),e?e=this.initialText+e+this.trailingText:e=this.initialText+this.trailingText;let s=yv.linesFromText(e).lines;s.length>1&&s[s.length-1]===""&&s.pop();let a,l;for(let d=this.endBranch.length-1;d>=0;d--)this.endBranch[d].updateCounts(),this.endBranch[d].charCount()===0&&(l=this.endBranch[d],d>0?a=this.endBranch[d-1]:a=this.branchNode);l&&a.remove(l);let u=this.startPath[this.startPath.length-1];if(s.length>0)if(u.text=s[0],s.length>1){let d=new Array(s.length-1),_=u;for(let v=1;v<s.length;v++)d[v-1]=new w2(s[v]);let y=this.startPath.length-2;for(;y>=0;){let v=this.startPath[y];d=v.insertAt(_,d),y--,_=v}let h=d.length;for(;h>0;){let v=new Km;v.add(this.lineIndex.root),d=v.insertAt(this.lineIndex.root,d),h=d.length,this.lineIndex.root=v}this.lineIndex.root.updateCounts()}else for(let d=this.startPath.length-2;d>=0;d--)this.startPath[d].updateCounts();else{this.startPath[this.startPath.length-2].remove(u);for(let _=this.startPath.length-2;_>=0;_--)this.startPath[_].updateCounts()}return this.lineIndex}post(e,n,r){r===this.lineCollectionAtBranch&&(this.state=4),this.stack.pop()}pre(e,n,r,s,a){let l=this.stack[this.stack.length-1];this.state===2&&a===1&&(this.state=1,this.branchNode=l,this.lineCollectionAtBranch=r);let u;function d(_){return _.isLeaf()?new w2(""):new Km}switch(a){case 0:this.goSubtree=!1,this.state!==4&&l.add(r);break;case 1:this.state===4?this.goSubtree=!1:(u=d(r),l.add(u),this.startPath.push(u));break;case 2:this.state!==4?(u=d(r),l.add(u),this.startPath.push(u)):r.isLeaf()||(u=d(r),l.add(u),this.endBranch.push(u));break;case 3:this.goSubtree=!1;break;case 4:this.state!==4?this.goSubtree=!1:r.isLeaf()||(u=d(r),l.add(u),this.endBranch.push(u));break;case 5:this.goSubtree=!1,this.state!==1&&l.add(r);break}this.goSubtree&&this.stack.push(u)}leaf(e,n,r){this.state===1?this.initialText=r.text.substring(0,e):this.state===2?(this.initialText=r.text.substring(0,e),this.trailingText=r.text.substring(e+n)):this.trailingText=r.text.substring(e+n)}},bae=class{constructor(e,n,r){this.pos=e,this.deleteLen=n,this.insertedText=r}getTextChangeRange(){return V2(Ju(this.pos,this.deleteLen),this.insertedText?this.insertedText.length:0)}},Qk=class Yf{constructor(){this.changes=[],this.versions=new Array(Yf.maxVersions),this.minVersion=0,this.currentVersion=0}versionToIndex(n){if(!(n<this.minVersion||n>this.currentVersion))return n%Yf.maxVersions}currentVersionToIndex(){return this.currentVersion%Yf.maxVersions}edit(n,r,s){this.changes.push(new bae(n,r,s)),(this.changes.length>Yf.changeNumberThreshold||r>Yf.changeLengthThreshold||s&&s.length>Yf.changeLengthThreshold)&&this.getSnapshot()}getSnapshot(){return this._getSnapshot()}_getSnapshot(){let n=this.versions[this.currentVersionToIndex()];if(this.changes.length>0){let r=n.index;for(let s of this.changes)r=r.edit(s.pos,s.deleteLen,s.insertedText);n=new AO(this.currentVersion+1,this,r,this.changes),this.currentVersion=n.version,this.versions[this.currentVersionToIndex()]=n,this.changes=[],this.currentVersion-this.minVersion>=Yf.maxVersions&&(this.minVersion=this.currentVersion-Yf.maxVersions+1)}return n}getSnapshotVersion(){return this._getSnapshot().version}getAbsolutePositionAndLineText(n){return this._getSnapshot().index.lineNumberToInfo(n)}lineOffsetToPosition(n,r){return this._getSnapshot().index.absolutePositionOfStartOfLine(n)+(r-1)}positionToLineOffset(n){return this._getSnapshot().index.positionToLineOffset(n)}lineToTextSpan(n){let r=this._getSnapshot().index,{lineText:s,absolutePosition:a}=r.lineNumberToInfo(n+1),l=s!==void 0?s.length:r.absolutePositionOfStartOfLine(n+2)-a;return Ju(a,l)}getTextChangesBetweenVersions(n,r){if(n<r)if(n>=this.minVersion){let s=[];for(let a=n+1;a<=r;a++){let l=this.versions[this.versionToIndex(a)];for(let u of l.changesSincePreviousVersion)s.push(u.getTextChangeRange())}return E7(s)}else return;else return q2}getLineCount(){return this._getSnapshot().index.getLineCount()}static fromString(n){let r=new Yf,s=new AO(0,r,new yv);r.versions[r.currentVersion]=s;let a=yv.linesFromText(n);return s.index.load(a.lines),r}};Qk.changeNumberThreshold=8;Qk.changeLengthThreshold=256;Qk.maxVersions=8;var Wx=Qk,AO=class cz{constructor(n,r,s,a=rd){this.version=n,this.cache=r,this.index=s,this.changesSincePreviousVersion=a}getText(n,r){return this.index.getText(n,r-n)}getLength(){return this.index.getLength()}getChangeRange(n){if(n instanceof cz&&this.cache===n.cache)return this.version<=n.version?q2:this.cache.getTextChangesBetweenVersions(n.version,this.version)}},yv=class Ux{constructor(){this.checkEdits=!1}absolutePositionOfStartOfLine(n){return this.lineNumberToInfo(n).absolutePosition}positionToLineOffset(n){let{oneBasedLine:r,zeroBasedColumn:s}=this.root.charOffsetToLineInfo(1,n);return{line:r,offset:s+1}}positionToColumnAndLineText(n){return this.root.charOffsetToLineInfo(1,n)}getLineCount(){return this.root.lineCount()}lineNumberToInfo(n){let r=this.getLineCount();if(n<=r){let{position:s,leaf:a}=this.root.lineNumberToInfo(n,0);return{absolutePosition:s,lineText:a&&a.text}}else return{absolutePosition:this.root.charCount(),lineText:void 0}}load(n){if(n.length>0){let r=[];for(let s=0;s<n.length;s++)r[s]=new w2(n[s]);this.root=Ux.buildTreeFromBottom(r)}else this.root=new Km}walk(n,r,s){this.root.walk(n,r,s)}getText(n,r){let s="";return r>0&&n<this.root.charCount()&&this.walk(n,r,{goSubtree:!0,done:!1,leaf:(a,l,u)=>{s=s.concat(u.text.substring(a,a+l))}}),s}getLength(){return this.root.charCount()}every(n,r,s){s||(s=this.root.charCount());let a={goSubtree:!0,done:!1,leaf(l,u,d){n(d,l,u)||(this.done=!0)}};return this.walk(r,s-r,a),!a.done}edit(n,r,s){if(this.root.charCount()===0)return w.assert(r===0),s!==void 0?(this.load(Ux.linesFromText(s).lines),this):void 0;{let a;if(this.checkEdits){let d=this.getText(0,this.root.charCount());a=d.slice(0,n)+s+d.slice(n+r)}let l=new Sae,u=!1;if(n>=this.root.charCount()){n=this.root.charCount()-1;let d=this.getText(n,1);s?s=d+s:s=d,r=0,u=!0}else if(r>0){let d=n+r,{zeroBasedColumn:_,lineText:y}=this.positionToColumnAndLineText(d);_===0&&(r+=y.length,s=s?s+y:y)}if(this.root.walk(n,r,l),l.insertLines(s,u),this.checkEdits){let d=l.lineIndex.getText(0,l.lineIndex.getLength());w.assert(a===d,"buffer edit mismatch")}return l.lineIndex}}static buildTreeFromBottom(n){if(n.length<m_)return new Km(n);let r=new Array(Math.ceil(n.length/m_)),s=0;for(let a=0;a<r.length;a++){let l=Math.min(s+m_,n.length);r[a]=new Km(n.slice(s,l)),s=l}return this.buildTreeFromBottom(r)}static linesFromText(n){let r=_0(n);if(r.length===0)return{lines:[],lineMap:r};let s=new Array(r.length),a=r.length-1;for(let u=0;u<a;u++)s[u]=n.substring(r[u],r[u+1]);let l=n.substring(r[a]);return l.length>0?s[a]=l:s.pop(),{lines:s,lineMap:r}}},Km=class Jx{constructor(n=[]){this.children=n,this.totalChars=0,this.totalLines=0,n.length&&this.updateCounts()}isLeaf(){return!1}updateCounts(){this.totalChars=0,this.totalLines=0;for(let n of this.children)this.totalChars+=n.charCount(),this.totalLines+=n.lineCount()}execWalk(n,r,s,a,l){return s.pre&&s.pre(n,r,this.children[a],this,l),s.goSubtree?(this.children[a].walk(n,r,s),s.post&&s.post(n,r,this.children[a],this,l)):s.goSubtree=!0,s.done}skipChild(n,r,s,a,l){a.pre&&!a.done&&(a.pre(n,r,this.children[s],this,l),a.goSubtree=!0)}walk(n,r,s){let a=0,l=this.children[a].charCount(),u=n;for(;u>=l;)this.skipChild(u,r,a,s,0),u-=l,a++,l=this.children[a].charCount();if(u+r<=l){if(this.execWalk(u,r,s,a,2))return}else{if(this.execWalk(u,l-u,s,a,1))return;let d=r-(l-u);a++;let _=this.children[a];for(w.assertIsDefined(_),l=_.charCount();d>l;){if(this.execWalk(0,l,s,a,3))return;d-=l,a++,l=this.children[a].charCount()}if(d>0&&this.execWalk(0,d,s,a,4))return}if(s.pre){let d=this.children.length;if(a<d-1)for(let _=a+1;_<d;_++)this.skipChild(0,0,_,s,5)}}charOffsetToLineInfo(n,r){if(this.children.length===0)return{oneBasedLine:n,zeroBasedColumn:r,lineText:void 0};for(let l of this.children){if(l.charCount()>r)return l.isLeaf()?{oneBasedLine:n,zeroBasedColumn:r,lineText:l.text}:l.charOffsetToLineInfo(n,r);r-=l.charCount(),n+=l.lineCount()}let s=this.lineCount();if(s===0)return{oneBasedLine:1,zeroBasedColumn:0,lineText:void 0};let a=w.checkDefined(this.lineNumberToInfo(s,0).leaf);return{oneBasedLine:s,zeroBasedColumn:a.charCount(),lineText:void 0}}lineNumberToInfo(n,r){for(let s of this.children){let a=s.lineCount();if(a>=n)return s.isLeaf()?{position:r,leaf:s}:s.lineNumberToInfo(n,r);n-=a,r+=s.charCount()}return{position:r,leaf:void 0}}splitAfter(n){let r,s=this.children.length;n++;let a=n;if(n<s){for(r=new Jx;n<s;)r.add(this.children[n]),n++;r.updateCounts()}return this.children.length=a,r}remove(n){let r=this.findChildIndex(n),s=this.children.length;if(r<s-1)for(let a=r;a<s-1;a++)this.children[a]=this.children[a+1];this.children.pop()}findChildIndex(n){let r=this.children.indexOf(n);return w.assert(r!==-1),r}insertAt(n,r){let s=this.findChildIndex(n),a=this.children.length,l=r.length;if(a<m_&&s===a-1&&l===1)return this.add(r[0]),this.updateCounts(),[];{let u=this.splitAfter(s),d=0;for(s++;s<m_&&d<l;)this.children[s]=r[d],s++,d++;let _=[],y=0;if(d<l){y=Math.ceil((l-d)/m_),_=new Array(y);let h=0;for(let b=0;b<y;b++)_[b]=new Jx;let v=_[0];for(;d<l;)v.add(r[d]),d++,v.children.length===m_&&(h++,v=_[h]);for(let b=_.length-1;b>=0;b--)_[b].children.length===0&&_.pop()}u&&_.push(u),this.updateCounts();for(let h=0;h<y;h++)_[h].updateCounts();return _}}add(n){this.children.push(n),w.assert(this.children.length<=m_)}charCount(){return this.totalChars}lineCount(){return this.totalLines}},w2=class{constructor(e){this.text=e}isLeaf(){return!0}walk(e,n,r){r.leaf(e,n,this)}charCount(){return this.text.length}lineCount(){return 1}},lz={};lc(lz,{AuxiliaryProject:()=>Uoe,CharRangeSection:()=>az,CloseFileWatcherEvent:()=>jJ,ConfigFileDiagEvent:()=>LJ,ConfiguredProject:()=>wJ,ConfiguredProjectLoadKind:()=>WJ,CreateDirectoryWatcherEvent:()=>MJ,CreateFileWatcherEvent:()=>RJ,Errors:()=>mp,GcTimer:()=>SJ,InferredProject:()=>NJ,LargeFileReferencedEvent:()=>OJ,LineIndex:()=>yv,LineLeaf:()=>w2,LineNode:()=>Km,LogLevel:()=>gJ,Msg:()=>hJ,OpenFileInfoTelemetryEvent:()=>Goe,Project:()=>Gk,ProjectInfoTelemetryEvent:()=>Hoe,ProjectKind:()=>hv,ProjectLanguageServiceStateEvent:()=>FJ,ProjectLoadingFinishEvent:()=>$oe,ProjectLoadingStartEvent:()=>qoe,ProjectService:()=>BJ,ProjectsUpdatedInBackgroundEvent:()=>AJ,ScriptInfo:()=>EJ,ScriptVersionCache:()=>Wx,Session:()=>rae,TextStorage:()=>DJ,ThrottledOperations:()=>vJ,asNormalizedPath:()=>Moe,convertCompilerOptions:()=>QJ,convertScriptKindName:()=>HJ,convertTypeAcquisition:()=>ZJ,convertUserPreferences:()=>qJ,convertWatchOptions:()=>YJ,emptyArray:()=>rd,findLpcConfig:()=>kJ,forEachResolvedProjectReferenceProject:()=>VJ,formatDiagnosticToProtocol:()=>tz,formatMessage:()=>ez,indent:()=>py,isBackgroundProject:()=>D2,isConfigFile:()=>sz,isConfiguredProject:()=>id,isDynamicFileName:()=>mb,isExternalProject:()=>IJ,isInferredProject:()=>x2,isProjectDeferredClose:()=>Nw,makeAuxiliaryProjectName:()=>yJ,makeInferredProjectName:()=>$J,maxFileSize:()=>Iw,maxProgramSizeForNonTsFiles:()=>Voe,normalizedPathToPath:()=>Th,nowString:()=>joe,nullCancellationToken:()=>nae,protocol:()=>CJ,stringifyIndented:()=>dy,toEvent:()=>KJ,toNormalizedPath:()=>Ps,updateProjectIfDirty:()=>Nl});typeof console<"u"&&(w.loggingHost={log(e,n){switch(e){case 1:return console.error(n);case 2:return console.warn(n);case 3:return console.log(n);case 4:return console.log(n)}}});});var _z=H3(require("path")),jl=H3(fz());function pz(e,n){let r=n.indexOf(e);return r>=0&&r<n.length-1?n[r+1]:void 0}function dz(e,n){let r=pz(e,n);return r?_z.resolve(r):void 0}function mz(e){let n=dz("--project",e)??process.cwd(),r=dz("--file",e);console.info("Project folder: "+n),console.info("File name: "+r);let s=jl.findConfigFile(n,jl.sys.fileExists,"lpc-config.json"),a=jl.parseJsonText(s,jl.sys.readFile(s)),l=jl.parseLpcSourceFileConfigFileContent(a,jl.sys,n,void 0,s),u=l.options,_={host:jl.createCompilerHost(u),rootNames:l.fileNames,options:u},y=jl.createProgram(_);y.getRootFileNames().forEach(v=>{if(v==r){let b=y.getSourceFile(v);kae(b)}})}function kae(e){console.info("AST for file: "+e.fileName),console.info(JSON.stringify(e,void 0,2))}mz(process.argv.slice(2));
/*! Bundled license information:

@lpc-lang/core/src/lpc.js:
  (*!some(node.name.elements, not(isOmittedExpression)); *)
  (*!!declaration && hasSyntacticModifier(declaration, ModifierFlags.Abstract); *)
  (*!isInJsonFile(node); *)
  (*!isExpandoDeclaration(d)); *)
  (*!!parent.typeArguments && parent.typeArguments.pos === list.pos; *)
  (*!this.hostConfiguration.beforeSubstitution ? this.hostConfiguration.watchOptions :
  handleWatchOptionsConfigDirTemplateSubstitution(
      this.hostConfiguration.beforeSubstitution,
      basePath,
  );*)
  (*!!this.getPreferences(file).displayPartsForJSDoc; *)
*/
//# sourceMappingURL=data:application/json;base64,
